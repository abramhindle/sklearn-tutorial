@relation large.json
@attribute id integer
@attribute owner string
@attribute content string
@data
17645,'zzak','Minor English fixes in docs [ci skip]\n'
17620,'chancancode','Build fix when running in isolation\n`Computer` class needs to be require\r\n\r\nSee #17217 for more details'
17571,'sgrif',"ActiveRecord 4.2 boolean in string column behavior change\nThe behavior of `true` and `false` in string columns has changed from ActiveRecord 4.1 to 4.2. Previously, the booleans `true` and `false` would be stored as `t` and `f`, but now they are stored as `1` and `0`. Is this an intended change? I don't see it mentioned in the changelog.\r\n\r\nHere is a gist which passes using ActiveRecord 4.1.7 but fails with 4.2.0.beta4: https://gist.github.com/dnrce/fd069844ea1b135bcd37"
17526,'zzak','Update docs 6\n1. Added example of squish!\r\n2. Added example of remove\r\n3. Added example of remove!\r\n4. Added test case for removal of multiple occurrences of pattern.'
17517,'sgrif','Performance regression in ActiveRecord model instance creation\nCurrent AR master became significantly slower than 4.1.x for creating AR objects.\r\n\r\nHere\'s a quick benchmark I did:\r\n```\r\n# create a model with 10 attributes (7 + id + timestamps)\r\n% rails g model user attribute1 attribute2 attribute3 attribute4 attribute5 attribute6 attribute7 \r\n\r\n# insert 1000 records via seeds\r\n1000.times do\r\n  User.create! attribute1: \'foo\', attribute2: \'foo\', attribute3: \'foo\', attribute4: \'foo\', attribute5: \'foo\', attribute6: \'foo\', attribute7: \'foo\'\r\nend\r\n\r\n# and benchmark\r\nBenchmark.ips do |x|\r\n  x.report do\r\n    User.all.to_a\r\n  end\r\nend\r\n\r\n```\r\n\r\nResults:\r\n```\r\n"4.2.0.beta4"\r\nCalculating -------------------------------------\r\n                             2 i/100ms\r\n-------------------------------------------------\r\n                           30.4 (±13.2%) i/s -        150 in   5.025648s\r\n\r\n\r\n"4.1.7"\r\nCalculating -------------------------------------\r\n                             5 i/100ms\r\n-------------------------------------------------\r\n                           57.5 (±10.4%) i/s -        285 in   5.018658s\r\n```\r\n\r\nHere are top 30 ruby method calls inside `User.all.to_a`.\r\n```ruby\r\nrequire \'pp\'\r\n\r\np Rails.version\r\ncalls = []\r\ntrace = TracePoint.new(:call) do |tp|\r\n  calls << [tp.defined_class, tp.method_id, tp.lineno]\r\nend\r\ntrace.enable\r\nUser.all.to_a\r\ntrace.disable\r\npp calls.group_by(&:itself).map {|k, v| {k => v.length}}.sort_by {|h| -h.values.first}.take(30)\r\n```\r\n\r\nResults:\r\n```\r\n"4.2.0.beta4"\r\n[{[ActiveRecord::Attribute, :initialize, 25]=>10000},\r\n {[#<Class:ActiveRecord::Attribute>, :from_database, 4]=>10000},\r\n {[ActiveSupport::Callbacks, :_run_callbacks, 86]=>2001},\r\n {[ActiveSupport::Callbacks::CallbackChain, :empty?, 488]=>2001},\r\n {[ActiveRecord::AttributeMethods::ClassMethods, :define_attribute_methods, 79]=>2000},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :inheritance_column, 186]=>2000},\r\n {[ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods, :primary_key, 72]=>1010},\r\n {[Object, :present?, 23]=>1001},\r\n {[ActiveRecord::Base, :_run_find_callbacks, 733]=>1000},\r\n {[ActiveRecord::Core, :init_with, 297]=>1000},\r\n {[#<Class:ActiveRecord::Base>, :_initialize_callbacks, 86]=>1000},\r\n {[ActiveRecord::Base, :_run_initialize_callbacks, 733]=>1000},\r\n {[ActiveRecord::Base, :_initialize_callbacks, 106]=>1000},\r\n {[ActiveRecord::AttributeSet::Builder, :build_attributes_from_values, 18]=> 1000},\r\n {[ActiveRecord::AttributeSet::Builder, :build_from_database, 10]=>1000},\r\n {[ActiveRecord::Core, :init_internals, 538]=>1000},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :attributes_builder, 233]=>1000},\r\n {[ActiveRecord::Persistence::ClassMethods, :discriminate_class_for_record, 78]=>1000},\r\n {[ActiveRecord::AttributeSet, :ensure_initialized, 61]=>1000},\r\n {[#<Class:ActiveRecord::Base>, :_find_callbacks, 86]=>1000},\r\n {[ActiveRecord::Base, :_find_callbacks, 106]=>1000},\r\n {[ActiveRecord::AttributeSet, :initialize, 7]=>1000},\r\n {[NilClass, :blank?, 54]=>1000},\r\n {[ActiveRecord::AttributeSet::Builder, :add_uninitialized_attributes, 25]=> 1000},\r\n {[ActiveRecord::AttributeSet, :[], 11]=>1000},\r\n {[ActiveRecord::Core::ClassMethods, :allocate, 113]=>1000},\r\n {[ActiveRecord::Attribute, :initialized?, 65]=>1000},\r\n {[ActiveRecord::Inheritance::ClassMethods, :discriminate_class_for_record, 167]=>1000},\r\n {[ActiveRecord::Inheritance::ClassMethods, :using_single_table_inheritance?, 175]=>1000},\r\n {[ActiveRecord::Persistence::ClassMethods, :instantiate, 66]=>1000}]\r\n\r\n"4.1.7"\r\n[{[ActiveSupport::Callbacks, :run_callbacks, 79]=>2001},\r\n {[ActiveSupport::Callbacks::CallbackChain, :empty?, 485]=>2001},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :inheritance_column, 165]=>2000},\r\n {[ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods, :primary_key, 71]=>1020},\r\n {[Object, :present?, 23]=>1001},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :decorate_columns, 230]=>1001},\r\n {[#<Class:ActiveRecord::Base>, :_initialize_callbacks, 86]=>1000},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :initialize_attributes, 318]=> 1000},\r\n {[ActiveRecord::ModelSchema::ClassMethods, :column_types, 226]=>1000},\r\n {[ActiveRecord::Core, :init_with, 214]=>1000},\r\n {[ActiveRecord::Base, :_initialize_callbacks, 106]=>1000},\r\n {[#<Class:ActiveRecord::Base>, :_find_callbacks, 86]=>1000},\r\n {[ActiveRecord::Persistence::ClassMethods, :discriminate_class_for_record, 61]=>1000},\r\n {[NilClass, :blank?, 54]=>1000},\r\n {[ActiveRecord::Inheritance::ClassMethods, :using_single_table_inheritance?, 150]=>1000},\r\n {[ActiveRecord::Inheritance::ClassMethods, :discriminate_class_for_record, 142]=>1000},\r\n {[ActiveRecord::AttributeMethods::ClassMethods, :define_attribute_methods, 70]=>1000},\r\n {[ActiveRecord::Persistence::ClassMethods, :instantiate, 49]=>1000},\r\n {[ActiveRecord::Base, :_find_callbacks, 106]=>1000},\r\n {[ActiveRecord::Core, :init_internals, 431]=>1000},\r\n {[ActiveModel::AttributeMethods::ClassMethods, :generated_attribute_methods, 331]=>181},\r\n {[#<Class:ActiveRecord::DynamicMatchers::Method>, :pattern, 41]=>180},\r\n {[ActiveModel::AttributeMethods::ClassMethods, :instance_method_already_implemented?, 338]=>90},\r\n {[ActiveRecord::AttributeMethods::ClassMethods, :method_defined_within?, 126]=>90},\r\n {[ActiveRecord::DynamicMatchers, :respond_to?, 8]=>90},\r\n {[ActiveRecord::AttributeMethods::ClassMethods, :dangerous_attribute_method?, 122]=>90},\r\n {[ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher, :method_name, 410]=>90},\r\n {[ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods, :dangerous_attribute_method?, 64]=>90},\r\n {[ActiveRecord::AttributeMethods::ClassMethods, :instance_method_already_implemented?, 104]=>90},\r\n {[#<Class:ActiveRecord::DynamicMatchers::Method>, :match, 36]=>90}]\r\n```\r\n\r\nYou see, so many method calls are happening inside newly introduced active_record/attribute.rb. It seems like creating 10 * 1000 AR::Attribute objects here causes not a little impact on the performance.\r\n\r\nI believe this issue should be fixed before 4.2.0 release.'
17476,'robin850',"Add a section about job testing\nHello,\r\n\r\nThis pull request is just a follow up to #16921 addressing the different comments. This part makes the distinction between normal job testing and asserting that a job get enqueued/performed inside other components like models.\r\n\r\nAlso it makes the assumption that `ActiveJob::TestHelper`'s methods are available directly from `ActiveSupport::TestCase` as it should normally be the case (c.f. #17475).\r\n\r\nCross-refs #16576.\r\n\r\nHave a nice day."
17472,'tenderlove',"Rspec tests run slower after Rails upgrade from 4.2.0.beta2 to 4.2.0.beta4?\nRspec tests appear to run slower ( + 33% ) after upgrading from 4.2.0.beta2 to 4.2.0.beta4 \r\n\r\nBefore/ After updating Rails version in gemfile, we ran the test suite:\r\n\r\nBefore change: Finished in 3 minutes 8.3 seconds (files took 56.22 seconds to load)\r\nAfter change: Finished in 4 minutes 12.8 seconds (files took 42.6 seconds to load)\r\n\r\nThe tests have been running consistently at around 3 minutes for some time, so this slump in performance is slightly concerning, although could be due to any number of reasons. \r\n\r\nUsing:\r\ngem 'rspec-rails', '~> 3.1.0'\r\ngem 'rspec', '~> 3.1.0'"
17466,'sgrif','autosave on has_many relation doesn\'t save updated collection objects all the time\nI am using Rails 3.2.17\r\n\r\nWhen the objects in a collection are updated and the parent object is saved it works when the objects in the relationship are updated via the relationship. If the children objects are retrieved using the find methods and then updated and assigned back to the relation, the parent doesn’t save the updated children.\r\n\r\n\r\ne.g.\r\n We have a customer object which is the parent and it has many orders.\r\n\r\nhas_many   :orders, :autosave => true\r\n\r\nThis scenario works\r\n customer = Customer.find(some_id)\r\n customer.orders.each do |o|\r\n    o.status = “completed"\r\n end\r\n customer.save!\r\n\r\n\r\nBut if we build the orders by fetching the records individually using the find AR methods and update them\r\nthen set the collection to the new update collection, by saving the parent the children don\'t get updated.\r\n\r\ne.g.\r\n  customer = Customer.find(some_id)\r\n  orders = Orders.find_all_by_customer_id(customer.id)\r\n  orders.each do |o|\r\n    o.status = “completed"\r\n  end\r\n  customer.orders = orders\r\n  customer.save!\r\n'
17463,'sgrif',"Remove redundant substitute index when constructing bind values\nWe end up re-ordering them either way when we construct the Arel AST (in order\r\nto deal with rewhere, etc), so we shouldn't bother giving it a number in the\r\nfirst place beforehand."
17458,'sgrif',"ActiveRecord default_attributes\nWould it make sense to make the default_attributes method added in commit 9e368a503072 private e.g. _default_attributes ?\r\nI used to have default_attributes method defined on various classes which would return a hash of default values for this model. They now all blow up with:\r\n\r\n```\r\nundefined method `ensure_initialized' for { ... }:Hash\r\n```\r\n"
17380,'sgrif','In PostgreSQL, `find_by(\'9999999999999999999999999999999\')` raises an error instead of returning `nil`\nReproduction steps: https://gist.github.com/chancancode/f909d105ba70ab7f4779\r\n\r\nThis bug actually is present in 4.1 as well (but it only affected the first `find` test case), and what is shown here is just an example of a bigger issue.\r\n\r\nThe problem is that on 4.1 we switched to use parameterized queries with the `find` call, and in 4.2 more of those calls followed (I noticed it in `find_by`, but there might be more). However, besides the safety and efficiency factors, there is one semantic difference between the "straight up SQL" and "parameterized" queries.\r\n\r\n@matthewd can explain that in more details than I could... and he has some thoughts about a plausible fix, so I\'ll let him add those details later :smile:'
17348,'jeremy','simplify rake test vs rake test:all\nRemove rake test:all and replace rake test with former definition of rake test:all.  Also rename rake test:all:db to rake test:db'
17345,'sgrif','Activerecord does not convert field values to strings automatically when the target field is of varchar type\nIn the database I have the next fields:\r\n\r\n```\r\n#  parent_id      :string(64)\r\n#  parent_type    :string(32)\r\n```\r\n\r\nAnd the next association:\r\n\r\n```ruby\r\nhas_many :_relationships, :class_name => "::Relationship", :as => :dependent\r\nhas_many :_sources, :through => :_relationships, :source => :source\r\n```\r\n\r\nYou can see `parent_id` and `parent_type` both are of string type. This is the responsible code from AR:\r\n\r\n```ruby\r\ndef exec_queries\r\n  @records = eager_loading? ? find_with_associations : @klass.find_by_sql(arel, bind_values)\r\n  # ...\r\n```\r\n\r\nThe binding values look like this:\r\n\r\n```ruby\r\n[[#<ActiveRecord::ConnectionAdapters::Mysql2Adapter::Column:0x007fecc35b37d8\r\n   @coder=nil,\r\n   @collation="utf8_unicode_ci",\r\n   @default=nil,\r\n   @default_function=nil,\r\n   @extra="",\r\n   @limit=64,\r\n   @name="parent_id",\r\n   @null=true,\r\n   @precision=nil,\r\n   @primary=nil,\r\n   @scale=nil,\r\n   @sql_type="varchar(64)",\r\n   @strict=true,\r\n   @type=:string>,\r\n  2],\r\n [#<ActiveRecord::ConnectionAdapters::Mysql2Adapter::Column:0x007fecc35b20b8\r\n   @coder=nil,\r\n   @collation="utf8_unicode_ci",\r\n   @default=nil,\r\n   @default_function=nil,\r\n   @extra="",\r\n   @limit=32,\r\n   @name="parent_type",\r\n   @null=true,\r\n   @precision=nil,\r\n   @primary=nil,\r\n   @scale=nil,\r\n   @sql_type="varchar(32)",\r\n   @strict=true,\r\n   @type=:string>,\r\n  "Site"]]\r\n```\r\n\r\nAnd the generated sql looks like this:\r\n\r\n```sql\r\nSELECT COUNT(*) FROM `sources` INNER JOIN `relationships` ON `sources`.`id` = `relationships`.`source_id` WHERE `relationships`.`dependent_id` = 2 AND `relationships`.`dependent_type` = \'Site\'\r\n```\r\n\r\nThis causes some problems with mysql that doesn\'t want to use index because of type mismatch. In particular because in the query we have `2` when it should be `\'2\'`.'
17327,'vijaydev','[ci skip] original description before rails 4.2.0beta was much better\n'
17287,'sgrif','Postgresql append operator on column type array with defaults don\'t save\nIn case when you\'re trying to use append(<<)on array, which was originally initialized by AR (from pgsql column type array). It seems to AR doesn\'t register changes in array and then AR doesn\'t save the record... I wrote an example test:\r\nhttps://github.com/Strnadj/rails/commit/246e5911f3756b09cc8c814e1fdf88e3a311b734\r\n<pre>\r\n  1) Failure:\r\nPostgresqlArrayTest#test_mutate_array_with_defaults [test/cases/adapters/postgresql/array_test.rb:236]:\r\nExpected: ["one", "two"]\r\n  Actual: []\r\n\r\n\r\n  2) Failure:\r\nPostgresqlArrayTest#test_mutate_array_with_default_values [test/cases/adapters/postgresql/array_test.rb:250]:\r\nExpected: ["three", "two", "one"]\r\n  Actual: ["three"]\r\n</pre>'
17284,'zzak',"Add a note about mail headers overwriting\nSince some headers can appear multiple times in an email it's required\r\nto set it to nil first when you want to overwrite an existing one.\r\n\r\nThis commit add some information about this process.\r\n\r\nFix #15912\r\n\r\n[ci skip]"
17212,'pixeltrix',"Journey scanner fails to recognise sub-delims pchars\nThe scanner in Journey fails to recognise routes that use literals from the sub-delims section of [RFC 3986][1]\r\n\r\n``` ruby\r\n# config/routes.rb\r\nget '/boom!', to: 'boom#bang' as: :boom_bang\r\n\r\n# app/controllers/boom_controller.rb\r\nclass BoomController < ApplicationController\r\n  def bang; render text: 'bang!'; end\r\nend\r\n```\r\n\r\n``` irb\r\n>> app.get('/boom!')\r\n=> 404\r\n```\r\n\r\nThe simple solution is to add the additional chars to the regexp in the scanner but there's the issue that `:` and `()` are in the sub-delims so we should probably allow their use via escaping and to do that I think we need to change the behaviour of a `:LITERAL` node.\r\n\r\n@tenderlove any comments/suggestions?\r\n\r\n[1]: http://tools.ietf.org/html/rfc3986#page-13"
17196,'rafaelfranca',"--skip-gems doesn't skip gems placed in development group\nI tried using the `--skip-gems` and notice that some gems aren't skipped.\r\n\r\n```\r\n$ rails new foo --skip-test-unit --skip-javascript --skip-bundle --skip-gems jbuilder sdoc byebug web-console spring\r\n```\r\n\r\nRight now, only jbuilder and sdoc are skipped; byebug web-console and spring are still present.\r\n\r\nHere's the generated Gemfile:\r\n\r\n```ruby\r\nsource 'https://rubygems.org'\r\n\r\n\r\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\r\ngem 'rails', '4.2.0.beta2'\r\n# Use sqlite3 as the database for Active Record\r\ngem 'sqlite3'\r\n# Use SCSS for stylesheets\r\ngem 'sass-rails', '~> 5.0.0.beta1'\r\n# Use Uglifier as compressor for JavaScript assets\r\ngem 'uglifier', '>= 1.3.0'\r\n# Use ActiveModel has_secure_password\r\n# gem 'bcrypt', '~> 3.1.7'\r\n\r\n# Use Unicorn as the app server\r\n# gem 'unicorn'\r\n\r\n# Use Capistrano for deployment\r\n# gem 'capistrano-rails', group: :development\r\n\r\ngroup :development, :test do\r\n  # Call 'debugger' anywhere in the code to stop execution and get a debugger console\r\n  gem 'byebug'\r\n\r\n  # Access an IRB console on exception pages or by using <%= console %> in views\r\n  gem 'web-console', '~> 2.0.0.beta4'\r\n\r\n  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\r\n  gem 'spring'\r\nend\r\n```\r\n\r\nThe expected behavior would be omitting the group entirely, since all gems from that group have been specified. And even spring having its own flag `--skip-spring`, it should respect the `--skip-gems`.\r\n\r\nTested version: Rails 4.2.0.beta2"
17106,'tenderlove',"Rails 4.2.0.beta2 LOAD_PATH no longer includes lib in config/application.rb boot\nThis may be an intentional or expected change in Rails 4.2, but I hadn't seen it mentioned anywhere, so am reporting it. \r\n\r\nIn Rails 4.1.6, at the point your `< Rails::Application` class is loaded, the ruby `$LOAD_PATH` has already been set to include the local application's `./lib` directory. \r\n\r\nIn Rails 4.2.0.beta2, it has not been. \r\n\r\nMy use case is that I have a custom LogFormatter in my application's `./lib`.  I want to set it in my `./config/application.rb`, using `config.log_formatter =`. \r\n\r\n~~~ruby\r\n# ./config/application.rb\r\nrequire File.expand_path('../boot', __FILE__)\r\nrequire 'rails/all'\r\n\r\n# Require the gems listed in Gemfile, including any gems\r\n# you've limited to :test, :development, or :production.\r\nBundler.require(*Rails.groups)\r\n\r\nmodule MyApp\r\n  class Application < Rails::Application\r\n\r\n    require 'my_custom_log_formatter'\r\n    config.log_formatter = MyCustomLogFormatter.new\r\n\r\n    #.....\r\n  end\r\nend\r\n~~~\r\n\r\nWhere the log formatter lives in `./lib/my_custom_log_formatter.rb`. \r\n\r\nIn Rails 4.1.6, no problem. In Rails 4.2.0.beta2, `config/application.rb:12:in 'require': cannot load such file -- my_custom_log_formatter (LoadError)`\r\n\r\nExploring the `$LOAD_PATH` at this point in program execution, I confirm that in rails 4.1.6, the `$LOAD_PATH` included my application's local `./lib` at this point, in Rails 4.2.0.beta2 it does not. \r\n\r\nThere are a variety of workarounds, including adding it to the `$LOAD_PATH` myself, or setting the log_formatter at some other point in the startup process (but if you do it too late, I believe it has no effect, is why I was doing it in `./config/application.rb` after confirming that's not too late). \r\n\r\nReporting in case it's not intentional and is considered a regression. "
16974,'senny','ActionMailer: mark mail as called after instead of before processing it\n#16163 introduced raising an exception when mail attachments get added after the method `mail` was called since it seems to produce problems with the email body. The change checks if `@_mail_was_called` is true which gets set on one of the first lines in `mail`. I suggest that we move it to the end of the method.\r\n\r\nThe background why I request this change is that we add inline attachments as the mail view gets rendered by overwriting the `image_tag` view helper. \r\n\r\n```\r\n  def image_tag(path, options={})\r\n    if URI.parse(path).relative?\r\n      controller.attachments.inline[path] ||= File.read("#{Rails.root}/app/assets/images/#{path}")\r\n      path = attachments[path].url\r\n    end\r\n    super(path, options)\r\n  end\r\n```\r\n\r\nThis way all the images we use get attached transparently. Very convenient.\r\n\r\nThe above change raises because `@_mail_was_called` the time the view is rendered. The big question is, if my change would reintroduce the problem or support both requirements. Maybe @joakimk or @senny can help with that?'
16945,'sgrif',"belongs_to and accept_nested_attributes_for bug\nGood day everyone! \r\n\r\nI've encountered weird bug in ActiveRecord and nested attributes. \r\n\r\nThe test code is here: https://gist.github.com/Kukunin/a57ecea9d40e65a2de07. It is very short, and self-documented I guess. \r\n\r\nAlso, here is the test Rails application with this bug too: https://github.com/Kukunin/rails_belongs_to_nested_form_bug\r\n\r\nThe error is following: \r\n```\r\nActiveModel::MissingAttributeError: can't write unknown attribute `property_id'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/attribute_methods/write.rb:93:in `write_attribute_with_type_cast'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/attribute_methods/write.rb:58:in `write_attribute'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/attribute_methods/dirty.rb:68:in `write_attribute'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/attribute_methods.rb:392:in `[]='\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/autosave_association.rb:395:in `save_has_one_association'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/autosave_association.rb:191:in `block in add_autosave_association_callbacks'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:424:in `block in make_lambda'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:221:in `call'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:221:in `block in halting_and_conditional'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:86:in `call'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:86:in `run_callbacks'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/callbacks.rb:306:in `_create_record'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/timestamp.rb:57:in `_create_record'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/persistence.rb:482:in `create_or_update'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activerecord-4.1.4/lib/active_record/callbacks.rb:302:in `block in create_or_update'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/callbacks.rb:82:in `run_callbacks'\r\n... 36 levels...\r\n    from /usr/lib/ruby/gems/2.1.0/gems/railties-4.1.4/lib/rails/commands/console.rb:9:in `start'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/railties-4.1.4/lib/rails/commands/commands_tasks.rb:69:in `console'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/railties-4.1.4/lib/rails/commands/commands_tasks.rb:40:in `run_command!'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/railties-4.1.4/lib/rails/commands.rb:17:in `<top (required)>'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:247:in `require'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:247:in `block in require'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:232:in `load_dependency'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:247:in `require'\r\n    from /tmp/bug/bin/rails:8:in `<top (required)>'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:241:in `load'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:241:in `block in load'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:232:in `load_dependency'\r\n    from /usr/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/dependencies.rb:241:in `load'\r\n    from /usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n    from /usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n```\r\n\r\nIt seems, that it doesn't take the foreign_key from my association, but builds it itself. The foreign_key should be policy_id, not property_id. "
16921,'robin850','Addition of activejob testing guide to testing.md [ci skip]\n'
16884,'chancancode','Rails 4.2 find_by with association objects does not bind values correctly\nhttps://gist.github.com/chancancode/61eb76aab57ce5f319fd#file-bug-rb-L64'
16839,'chancancode',"Default to sorting user's test cases for now\nGoals:\r\n\r\n1. Default to :random for newly generated applications\r\n2. Default to :sorted for existing applications with a warning\r\n3. Only show the warning once\r\n4. Only show the warning if the app actually uses AS::TestCase\r\n\r\nFixes #16769"
16838,'arthurnn',"fix fixtures not loading if a belongs_to association is defined with a :foreign_key option that's a symbol\nThis regressed somewhere between 4.1 and 4.2 but making it backwards compatible requires only a tiny fix.  Instead of calling to_s again, we should reuse the fk_name already determined."
16826,'rafaelfranca',"Asset logical path has no extension\nHi,\r\nI'm playing around with Rails 4.2beta1 and I get this error when trying to precompile assets on my production environment:\r\n\r\n    Sprockets::ArgumentError: Asset logical path has no extension: theme/_cards\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/asset.rb:36:in `initialize'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/bundled_asset.rb:14:in `initialize'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/base.rb:377:in `new'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/base.rb:377:in `build_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/index.rb:94:in `block in build_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/caching.rb:58:in `cache_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/index.rb:93:in `build_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/base.rb:287:in `find_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/index.rb:61:in `find_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:211:in `block in find_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:257:in `benchmark'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:210:in `find_asset'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:119:in `block in compile'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:118:in `each'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/sprockets/manifest.rb:118:in `compile'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-rails-3.0.0.beta1/lib/sprockets/rails/task.rb:70:in `block (3 levels) in define'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-2.12.1/lib/rake/sprocketstask.rb:146:in `with_logger'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/gems/sprockets-rails-3.0.0.beta1/lib/sprockets/rails/task.rb:69:in `block (2 levels) in define'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/bundler/gems/rails-381f9931ec53/activesupport/lib/active_support/dependencies.rb:242:in `load'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/bundler/gems/rails-381f9931ec53/activesupport/lib/active_support/dependencies.rb:242:in `block in load'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/bundler/gems/rails-381f9931ec53/activesupport/lib/active_support/dependencies.rb:233:in `load_dependency'\r\n    /Users/ricardogarciavega/.rvm/gems/ruby-2.1.2@rails_and_react/bundler/gems/rails-381f9931ec53/activesupport/lib/active_support/dependencies.rb:242:in `load'\r\n\r\nThis is how my ```theme.sass``` looks like:\r\n\r\n    @import layout\r\n    @import cards\r\n    @import avatars\r\n\r\nThose imports have only the ```.sass``` extension... but if I add them the ```.css.sass``` one, then it works ok.\r\n\r\nThis doesn't happens in a Rails 4.0.2 project I'm also developing.\r\n\r\nHope this helps."
16792,'chancancode',"ActiveRecord::Enum can ruin people's anniversaries\nActiveRecord::Enum is a pretty swell thing. But in certain circumstances, it can ruin an anniversary. The following enum was what finally allowed me to go to bed that night:\r\n\r\n~~~\r\n  # This code is GOOD.\r\n  enum event_type: {\r\n    et_birth:     0,\r\n    et_death:     1,\r\n    et_wedding:   2,\r\n    et_milestone: 3,\r\n    et_post:      4,\r\n    et_pic:       5,\r\n    et_movie:     6,\r\n    et_parent:    7,\r\n  }\r\n~~~\r\n\r\nOn the other hand, what I originally had caused a stack overflow when creating an object:\r\n\r\n~~~\r\n  # This code is BAD.\r\n  enum event_type: {\r\n    birth:     0,\r\n    death:     1,\r\n    wedding:   2,\r\n    milestone: 3,\r\n    post:      4,\r\n    pic:       5,\r\n    movie:     6,\r\n    parent:    7,\r\n  }\r\n~~~\r\n\r\nThe problem is that last one, `:parent`. (This took me a ridiculously long time to figure out!) Please have ActiveRecord::Enum fail on a value of `:parent`, just like it does on a value of `:public` or `:private`. Or really, fail on any value that will cause problems. Further, the documentation ( http://api.rubyonrails.org/v4.1.0/classes/ActiveRecord/Enum.html ) could be improved to warn about collisions."
16790,'zzak','Explain ERB space removal.\nThe current phrase about space removal is misleading, and too hard to understand without an example. I propose that we either:\r\n\r\n- explain it better\r\n- remove it completely and let people look up erubis docs now that we linked to them at https://github.com/rails/rails/pull/16774\r\n\r\nIt is misleading because:\r\n\r\n- spaces are only removed if the entire line contains only whitespaces\r\n- `-%>` is not interchangeable with `%>` when using the equals sign `<%= %>`.\r\n\r\nIf you think the new explanation is too long, we can consider removing everything after "The line is not removed when" as that use case is less common: at least the new information won\'t be ambiguous and will have a clarifying example.\r\n'
16788,'tenderlove','Skip StatementCache for eager loaded associations\n(Fixes #16761)\r\n\r\nEagerly loaded singular and collection associations are ignored by the StatementCache, which causes errors when the queries they generate reference columns that were not eagerly loaded.\r\n\r\nThis commit skips the creation of the StatementCache as a fix for these scenarios.'
16760,'pixeltrix','Fix Time#change when used with :usec and offset times\nThis is a follow-up of #16758 and the branch is based on it.\r\n\r\nFixes #16759.'
16758,'pixeltrix','Add support for :nsec option to Time#change\nThis is a follow-up of https://github.com/rails/rails/pull/16765 and is based on that branch.\r\n\r\nCloses #16392.'
16757,'senny',"Reestablish AR connection after loading current schemas\nAs of 4.2b1, when doing a `rake db:setup`, schemas are loaded for each environment. Out of the box, this loads schemas for development and test, but it leaves the connection in place for the test environment. This means that the proceeding call to `rake db:seed` will populate the test database instead of development.\r\n\r\nI could overwrite this in to ensure the connection `db/seeds.rb`, but it felt incorrect that schemas would be loaded and not return one's previous environment connection.\r\n\r\nLooking at 4.1.6, the [load_schema](https://github.com/rails/rails/blob/v4.1.6.rc1/activerecord/lib/active_record/tasks/database_tasks.rb#L159) method that was previously used didn't actually establish connections, so this wasn't an issue.\r\n\r\nPinging @senny as the original author of this code."
16756,'arunagw',"Dont mess with default order engines load (4.1.6.rc1 regression)\nWhen copying migrations some engines might depend on schema from other\r\nengine so we can't blindly reverse all railties collection as that would\r\naffect the order they were originally loaded. This patch helps to only\r\napply the order from engines specified in `railties_order`\r\n\r\nrelated https://github.com/rails/rails/issues/16614 and https://github.com/rails/rails/pull/15269\r\n\r\nI tried to fix this without changing what gets returned by `ordered_railties` but it's was getting too complicated and `ordered_railties` is private api only used by `railties_initializers`, afaik, so I think it's fine? Returning the original specified railties + all other railties in a single array key makes it easier to reverse only where we really need to. Please let me know if that doesn't make any sense.\r\n\r\nMotivation here was to fix the spree builds, there we have an api engine with migrations that depend on the core engine so it's important that rails copies the core migrations first.\r\n\r\napologize for the lack of specs here, was trying to reproduce it via a test but failed miserably, will give another try later today or tomorrow."
16755,'tenderlove','Allow polymorphic routes with nil when a route can still be drawn\nSuppose you have two resources routed in the following manner:\r\n\r\n```ruby\r\nresources :blogs do\r\n  resources :posts\r\nend\r\n\r\nresources :posts\r\n```\r\n\r\nWhen using polymorphic resource routing like `url_for([@blog, @post])`, and `@blog` is `nil` Rails should still try to match the route to the top-level posts resource.\r\n\r\nFixes #16754'
16754,'tenderlove',"Rails 4.2.0.beta1: Nil location provided. Can't build URI.\nSuppose you have two routes:\r\n\r\n```ruby\r\nresources :parent_resources do \r\n  resources :sometimes_child_resources\r\nend\r\n\r\nresources :sometimes_child_resources\r\n```\r\n\r\nFurthermore, suppose you have a view with this form:\r\n\r\n`<%= form_for([@parent_resource, @sometimes_child_resource]) ... %>`\r\n\r\nOne great thing _before_ Rails 4.2 was that this form worked with either of the routes. Now, it gives the error `Nil location provided. Can't build URI.` if `@parent_resource` is `nil`\r\n\r\nPrior to this, it fell back to the un-nested resource.\r\n\r\nIs there a proposed workaround, or is this a bug?\r\n\r\nA common use case: you have an app like where app admins can manage users who might be members of several accounts. But the account owners can also manage users under their own accounts. So it might look like:\r\n\r\n```ruby\r\nresources :users # for app admins\r\nresources :accounts do\r\n  resources :users # for account admins\r\nend\r\n```\r\n\r\nFor what it's worth, I think the right thing to do is to actually check to see if it can build a URI with all of the elements in the array, not die on the first nil, since it definitely can still generate an appropriate route."
16748,'tenderlove','After rack 1.6.0, by default, the rack will also out put the log which is not intent in rails.\nSuch change will also resolve the quiet_assets [#36](https://github.com/evrone/quiet_assets/issues/36)'
16747,'chancancode','Clarify that /console is an optional feature\nWhen I installed 4.2.0.beta1, I thought (based on this comment) that I could run `rails server` then go to `http://localhost:3000/console` to play with the console. Totally reasonable that you have to do more configuration, but it would be nice for the comment to indicate that.'
16731,'tenderlove','Rails is great! Thank you.\nI wanted to take a minute to say that I appreciate all the hard work that goes into making Rails a successful project that so many of us rely on.\r\n\r\nYou are great. You are doing a fantastic job.\r\n\r\nHere is my heartfelt thank you note to all of you!\r\n\r\n:heart: :heart: :heart: '
16724,'jeremy','[ActiveJob] TestCase\n@dhh @rafaelfranca @cristianbica '
16709,'senny',"Can't pass 'require: false' in the template\nI'm running rails new my_app -m tempalte42.rb\r\n\r\nHere are a couple of lines from the gems.rb file that is used in the said tempalte\r\n\r\n````ruby\r\n  gem 'rb-fsevent', require: false \r\n  gem 'whenever', require: false\r\n````\r\nThese two lines throw the same error:\r\n````ruby\r\n    /root/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/railties- 4.2.0.beta1/lib/rails/generators/actions.rb:272:in `quote': undefined method `include?' for false:FalseClass (NoMethodError)\r\n````\r\n\r\nIf I remove require: false - template is working fine. Also this same tempalte worked in in rails 3.2 and rails 4.1 "
16701,'sgrif','Serialized binary column changes hash never empty\nI think this is a regression of the changes from #15674. After loading a record with a serialized binary column, the changes hash is always filled:\r\n\r\n```ruby\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n    t.binary :data\r\n  end\r\nend\r\nclass Post < ActiveRecord::Base\r\n  serialize :data\r\nend\r\nPost.create! data: \'foo\'\r\npost = Post.first\r\npost.changes\r\n=> {"data"=>["foo", "foo"]}\r\n```\r\n\r\nTo reproduce use [this testcase gist](https://gist.github.com/46ec569c67626e0f00f4).'
16699,'dhh',"Active Job partial refactor\nThis (hopefully) cleans up a little the AJ: there were places where we passed job class, arguments, queue name, job id and I've converted everything to pass a job instance. Everything is backwards compatible and also I've added some syntax sugar :)\r\n```ruby\r\n# you can do the current way\r\nMyJob.enqueue 'cristian'\r\n\r\n#or\r\njob = MyJob.new('cristian')\r\n# do stuff with job\r\njob.enqueue\r\njob.enqueue in: 5.minutes\r\n```\r\nThe other reason I've done this is to be able to enqueue the same job (class) to different queues:\r\n```ruby\r\njob = MyJob.new('cristian')\r\njob.queue = :high_priority\r\njob.enqueue\r\n```\r\nTo be more clear in the job definition I would also change `queue_as` to `default_queue_as` although this brings a backward incompatibility.\r\n\r\nWe could also allow to pass the queue name in the instance method `.enqueue` and when you rescue from some error you could reschedule on another queue:\r\n```ruby\r\nclass SiteScrapperJob\r\n  queue_as :default\r\n  rescue_from(MyException) do\r\n    retry_now queue: :low_priority\r\n  end\r\n  def perform(website)\r\n    #raises MyException if cannot load the site\r\n  end\r\nend\r\n```\r\n\r\nIf this is accepted I would like it to be merged after the integration tests are merged.\r\n\r\n/cc @rafaelfranca @matthewd @dhh @seuros\r\n\r\n"
16679,'rafaelfranca','Missing partial routes/_route\nRegression on master.  Worked prior to the sprockets-rails 3.0.0.beta1 / web-console 2.0.0.beta2 commits.\r\n\r\nReproduction instructions:\r\n\r\n    rails new app\r\n    cd app\r\n    rails server\r\n    curl http://localhost:3000/rails/info/routes\r\n\r\nYou can see the results in http://intertwingly.net/projects/AWDwR4/checkdepot/section-15.1.html (search for `Template is missing`).\r\n'
16677,'chancancode',"ActiveRecord 4.2.0.beta1 uses code from ActiveSupport Core Extensions, but does not require it\nAt least the following files need to require core extensions for string, due to calling strip_heredoc:\r\n\r\nhttps://github.com/rails/rails/blob/v4.2.0.beta1/activerecord/lib/active_record/attribute_methods/read.rb\r\n\r\nhttps://github.com/rails/rails/blob/v4.2.0.beta1/activerecord/lib/active_record/connection_adapters/abstract/schema_creation.rb\r\n\r\nhttps://github.com/rails/rails/blob/v4.2.0.beta1/activerecord/lib/active_record/attribute_methods/serialization.rb\r\n\r\nhttps://github.com/rails/rails/blob/v4.2.0.beta1/activerecord/lib/active_record/associations/has_many_through_association.rb\r\n\r\nOr, of course, you might `require 'active_support/core_ext'` in https://github.com/rails/rails/blob/v4.2.0.beta1/activerecord/lib/active_record.rb in case there are other similar instances."
16541,'dhh','ActiveJob Integration Tests\nAll AJ integration tests are passing.'
16535,'rafaelfranca','Allow fallback to LegacyKeyGenerator when secret_key_base is not set but secrets.secret_token is\nLet devs upgrading from older Rails take advantage of the LegacyKeyGenerator without needing a monkeypatch to use a blank secret_key_base\r\n\r\nThis behavior may have been removed by accident.  See https://github.com/rails/rails/commit/484ff7d29e7a27216219cf5460bf675c38abf522\r\n\r\n\r\ne.g.\r\n\r\n```ruby\r\nRails::Application.class_eval do\r\n  # the key_generator will then use ActiveSupport::LegacyKeyGenerator.new(config.secret_token)\r\n  fail "I\'m sorry, Dave, there\'s no :validate_secret_key_config!" unless instance_method(:validate_secret_key_config!)\r\n  def validate_secret_key_config! #:nodoc:\r\n    config.secret_token = secrets.secret_token\r\n    if config.secret_token.blank?\r\n      raise "Missing `secret_token` for \'#{Rails.env}\' environment, set this value in `config/secrets.yml`"\r\n    end \r\n  end \r\nend\r\n```'
16520,'chancancode',"#as_json aren't being used for cookie jar serialization\ncc @rafaelfranca "
16492,'fxn',"Circular dependency error with lib classes\nI came across this issue today while loading some classes from `lib/`. Our application interacts with a number of APIs that have some shared features, and some API specific features. We have standard interfaces to these under `lib/<api_name>/`.\r\n\r\nWhen trying to use a const that doesn't exist, Ruby raises an exception:\r\n\r\n```\r\n> NonExistantConst\r\nNameError: uninitialized constant NonExistantConst\r\n```\r\n\r\nWe wanted to use this to check whether a feature is supported by an API. However, when using a const that doesn't exist from an API we get:\r\n\r\n```\r\n> Api::NonExistantConst\r\nRuntimeError Circular dependency detected while autoloading constant NonExistantConst\r\n```\r\n\r\nTesting in plain Ruby confirmed this works as expected, so I thought it was an issue with ActiveSupport. Adding debugging showed it loaded the expected filename from another API where the feature is supported before throwing this error.\r\n\r\nI created a standalone test, just using ActiveSupport ([repo](https://github.com/lucaspiller/activesupport-error-standalone-test)), however that worked as expected:\r\n\r\n```\r\n$ ruby test.rb\r\nLoading ApiOne::FeatureOne, expecting ApiOne::FeatureOne\r\n=> ApiOne::FeatureOne\r\n\r\nLoading ApiOne::FeatureTwo, expecting ApiOne::FeatureTwo\r\n=> ApiOne::FeatureTwo\r\n\r\nLoading ApiTwo::FeatureOne, expecting ApiTwo::FeatureOne\r\n=> ApiTwo::FeatureOne\r\n\r\nLoading ApiTwo::FeatureTwo, expecting NameError\r\nNameError uninitialized constant ApiTwo::FeatureTwo\r\n```\r\n\r\nWhen testing it with the whole of Rails ([repo](https://github.com/lucaspiller/activesupport-error-rails-test)), it throws the exception:\r\n\r\n```\r\n$ rails runner test.rb\r\nLoading ApiOne::FeatureOne, expecting ApiOne::FeatureOne\r\n=> ApiOne::FeatureOne\r\n\r\nLoading ApiOne::FeatureTwo, expecting ApiOne::FeatureTwo\r\n=> ApiOne::FeatureTwo\r\n\r\nLoading ApiTwo::FeatureOne, expecting ApiTwo::FeatureOne\r\n=> ApiTwo::FeatureOne\r\n\r\nLoading ApiTwo::FeatureTwo, expecting NameError\r\nRuntimeError Circular dependency detected while autoloading constant FeatureTwo\r\n```"
16484,'chancancode','Remove redundant NullSerializer\nUse one from ActiveSupport::MessageEncryptor module.\r\n\r\n/cc @tamird @chancancode'
16467,'chancancode','Cookies digest config option (pt. 2)\nAnother take on https://github.com/rails/rails/pull/16434\r\n\r\nNow with comma, support for encrypted jar plus better test for verifier and new ugly test encryptor.\r\n\r\n/cc @tamird @chancancode'
16458,'chancancode','Fixed issue w/custom accessors + reserved name + inheritance\nFixed an issue where custom accessor methods (such as those generated by\r\n`enum`) with the same name as a global method are incorrectly overridden\r\nwhen subclassing.\r\n\r\nThis was partially fixed in 4155431 then broken again by e5f15a8.\r\n\r\nFixes #16288.'
16450,'senny','Do not swallow exception on NameError within constant.\nFixes https://github.com/rails/rails/issues/9933.'
16435,'chancancode','Fix regression on after_commit in nested transactions. (master)\nrelated to #16432 .\r\n\r\n[fixes #16425]\r\n\r\nThis is practically a backport of that fix, plus 1 commit to make it work.\r\n\r\nThis is to ensure the same behaviour as 3.2'
16432,'chancancode','Fix regression on after_commit in nested transactions.\nafter_commit should not run in nested transactions, however they should\r\nrun once the outermost transaction gets committed. This patch fixes the\r\nproblem copying the records from the `Savepoint` to its parent. So the\r\n`RealTransaction` will have all records that needs to run callbacks on it.\r\n\r\n[fixes #16425]\r\n\r\nreview @rafaelfranca @chancancode\r\nthis should be applied on 4-0-stable too.\r\nI will work on a different fix for master, as the code is different. '
16425,'arthurnn','after_commit hook does not fire from nested transaction\nUpgrading from rails 3.2, after_commit no longer works when in nested transactions. The following works on 3.2.19 and fails on 4.0.8 and 4.1.4.\r\n\r\n````\r\nclass Post < ActiveRecord::Base\r\n  after_commit :do_something\r\n  def do_something\r\n    logger.warn "*** IN COMMIT ***"\r\n  end\r\nend\r\n\r\nActiveRecord::Base.transaction do\r\n  ActiveRecord::Base.transaction(requires_new: true) do\r\n    Post.create\r\n  end\r\nend\r\n````'
16413,'rafaelfranca','ActiveRecord incorrect update query when using custom primary key\nI have a legacy table `programs` where the primary key is not `id`.\r\n\r\n    class Program < ActiveRecord::Base\r\n      self.primary_key = \'vendor_id\'\r\n    end\r\n\r\nWhen I need to update a row in this table and change the `vendor_id` column, ActiveRecord generates incorrect SQL and, though the save completes without error, the value doesn\'t change in the database.\r\n\r\n    UPDATE "programs" SET "vendor_id" = ?\r\n    WHERE "programs"."vendor_id" = 2  [["vendor_id", 2]]\r\n\r\nThis should be:\r\n\r\n    UPDATE "programs" SET "vendor_id" = ?\r\n    WHERE "programs"."vendor_id" = 1  [["vendor_id", 2]]\r\n\r\nI\'ve created a stand-alone [gist](https://gist.github.com/claptimes5/51f567b2a4f0b5856f31) that fails. '
16392,'pixeltrix',"Time.change doesn't support changing nanoseconds\nI previously encountered an issue in my tests where I would be comparing a Ruby date with a date returned by ActiveRecord and the comparison would fail because the date returned from the database would lose its nanosecond precision.\r\n\r\nMy workaround was to use Timecop and the Rails #change method to freeze to a given time with truncated nanoseconds, using this small monkey patch:\r\n\r\n```ruby\r\nclass Timecop\r\n  def self.freeze_without_nanoseconds(time = Time.now, &block)\r\n    freeze(time.change(nsec: 0), &block)\r\n  end\r\nend\r\n```\r\n\r\nThis worked in Rails 3 and no longer works in Rails 4. On further investigation, it appears that Time#change doesn't actually support the `nsec` key (hence this issue) - my fix only worked by accident because Time#change truncated nanoseconds.\r\n\r\nThis was reported as https://github.com/rails/rails/issues/9591 and fixed in Rails 4, so Time#change now preserves nanoseconds but there is still no support for changing the nanoseconds."
16300,'chancancode','Mention changes to `nil` handling in serialized attributes\nThe change to `nil` handling for serialized attributes using default coder was introduced in https://github.com/rails/rails/commit/39cb1bedb82814d7bf9de6834f88c31e4df27278.'
16288,'chancancode','Unexpected behavior of AR::Enum with inherited models\nFor example we have following models:\r\n```\r\nclass Transaction < ActiveRecord::Base\r\n  enum system: [:cash, :credit_card, :paypal]\r\nend\r\nclass Admin::Transaction < Transaction\r\nend\r\n```\r\nThen in Rails 4.1.4:\r\n```\r\nLoading development environment (Rails 4.1.4)\r\nirb(main):001:0> Transaction.first.system\r\n  Transaction Load (0.2ms)  SELECT  "transactions".* FROM "transactions"   ORDER BY "transactions"."id" ASC LIMIT 1\r\n=> "paypal"\r\nirb(main):002:0> Admin::Transaction.first.system\r\n  Admin::Transaction Load (0.7ms)  SELECT  "transactions".* FROM "transactions"   ORDER BY "transactions"."id" ASC LIMIT 1\r\n=> 2\r\n```\r\nIn Rails 4.1.0:\r\n```\r\nLoading development environment (Rails 4.1.0)\r\nirb(main):001:0> t = Admin::Transaction.last\r\n  Admin::Transaction Load (20.4ms)  SELECT  `transactions`.* FROM `transactions`   ORDER BY `transactions`.`id` DESC LIMIT 1\r\n=> #<Admin::Transaction id: 2, system: 2, amount: #<BigDecimal:7fbf64732e38,\'0.12E3\',9(18)>, created_at: "2014-07-25 09:56:23", updated_at: "2014-07-25 10:01:08">\r\nirb(main):002:0> t.system\r\n=> "paypal"\r\nirb(main):003:0> t.amount\r\n=> #<BigDecimal:7fbf64732e38,\'0.12E3\',9(18)>\r\nirb(main):004:0> t.system\r\n=> 2\r\nirb(main):005:0> t.system_before_type_cast\r\n=> "paypal"\r\n```\r\nMethod `system` later on returns fixnums after calling some other method, but previously it was a string. There was a bug? Still in Rails 4.1.4 enum works not as expected with namespaced models. In addition _before_type_cast in both cases always returns string value. All this is very confusing.'
16220,'senny','Add support for Postgresql JSONB\nThis is the updated version of #15195 and #15950 by @pcreux and @chris-teague.\r\n\r\nIt is tested against postgresql-9.4beta.\r\n\r\nTest cases shared between json and jsonb are extracted to a module called `PostgresqlJSONSharedTestCases`. I made my best to minimise the amount of lines impacted by this extraction.'
16203,'rafaelfranca','There is no reason why `ActiveModel::Dirty#reset_attribute!` needs to be private.\nMaking this private means that one needs to do ugly things like\r\n\r\n```\r\nattributes_to_reset.each do |attr|\r\n  changed_model.send "reset_#{attr}!"\r\nend\r\n```\r\n\r\ninstead of a more concise, more readable, more correct, and faster\r\n\r\n```\r\nattributes_to_reset.each do |attr|\r\n  changed_model.reset_attribute!(attr)\r\nend\r\n```\r\n\r\nSimilar reasoning can be applied to the other magic handlers in `ActiveModel::Dirty`'
16189,'chancancode','Implement `_was` and `changes` for in-place mutations of AR attributes\n'
16172,'rafaelfranca',"has_many :through with dynamic condition merging\nFixes #16128.\r\n\r\nThis bug was introduced in rails@c35e438 so it's present in versions 4.1.2-rc1 and later.\r\n\r\nrails@c35e438 adds handling for scope merging in `has_many :through` relations, but does *not* take into account the case where the scope is passed with an argument (ie. the current record).\r\n\r\nTo reproduce see https://gist.github.com/Agis-/5f1f0d664d2cd08dfb9b"
16163,'senny','ActionMailer: calling "attachments[]=" after "mail" leads to unexpected behavior\nWhen calling `attachments[]=` after `mail` the email that is generated is different than if you do it the other way around.\r\n\r\nThe only difference visible in tests is that the body ends up in `mail.body` instead of `mail.text_part.body` so it\'s easy to miss.\r\n\r\nThe generated email is not correct.\r\n\r\nWe saw this issue in an app running rails 4.1.3.'
16162,'chancancode',"Fixed JSON coder when loading NULL from DB\nThis fixes an edge case with the new JSON coder introduced in #16059.\r\n\r\n```irb\r\n>> JSON.load(nil)\r\n# => nil\r\n>> ActiveRecord::Coders::JSON.load(nil)\r\nTypeError: no implicit conversion of nil into String\r\n\tfrom /Users/godfrey/.rvm/gems/ruby-2.0.0-p353/gems/json-1.8.1/lib/json/common.rb:155:in `initialize'\r\n\tfrom /Users/godfrey/.rvm/gems/ruby-2.0.0-p353/gems/json-1.8.1/lib/json/common.rb:155:in `new'\r\n\tfrom /Users/godfrey/.rvm/gems/ruby-2.0.0-p353/gems/json-1.8.1/lib/json/common.rb:155:in `parse'\r\n\tfrom /Users/godfrey/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.2/lib/active_support/json/decoding.rb:26:in `decode'\r\n\tfrom /Users/godfrey/Projects/oss/rails-chancancode/activerecord/lib/active_record/coders/json.rb:9:in `load'\r\n\tfrom (irb):4\r\n\tfrom /Users/godfrey/.rvm/rubies/ruby-2.0.0-p353/bin/irb:12:in `<main>'\r\n```\r\n\r\nThis patch ensures `ActiveRecord::Coders::JSON.load(nil)` doesn't blow up and matches the 4.0 behavior. Perhaps there are better ways to write the test case, so I'd like to get a review from others. (cc @sgrif @matthewd)\r\n\r\nWe can also consider just changing that in `ActiveSupport::JSON.decode` directly, but I think that would open up a bigger can of worms. (It's hard to say what's the behaviour on that in 4.0, because it uses MultiJson and so it depends on which adapter and version you are using. The latest JSON gem adapter seems to blow up on `nil` values as well, which I consider the correct behaviour.) (cc @jeremy)"
16148,'chancancode',"Fix json autoload\nWhen requiring the json core_ext, we are relying on AS's autoload to load the `json/encoding` file to avoid a circular dependency. Here we are incorrectly referencing the delegated config which is not yet available until we load `json/encoding`.\r\n\r\nThe fix is pretty straight forward, but adding a regression test for this is tricky. @jeremy wdyt about the test I added here? It [works](https://travis-ci.org/rails/rails/jobs/29762777), but have some doubts about it. Do you have better suggestions?\r\n\r\nFixes #16131"
16131,'chancancode','ActiveSupport(4.1 or above) raise error when creating JSON data with MultiJson and Oj.\nI\'ve met following symptoms.\r\n\r\n[NG Case]\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\n# activesupport = 4.0.8 : OK\r\n# activesupport = 4.1.4 : NG\r\n\r\nrequire \'oj\'\r\nrequire \'multi_json\'\r\nrequire "active_support/core_ext/object"\r\n\r\np MultiJson.dump({ time: Time.now })\r\n```\r\n\r\n```bash\r\n$ ruby -v\r\nruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]\r\n\r\n$ gem list oj multi_json activesupport\r\n\r\n*** LOCAL GEMS ***\r\n\r\noj (2.9.9)\r\n\r\n*** LOCAL GEMS ***\r\n\r\nmulti_json (1.10.1)\r\n\r\n*** LOCAL GEMS ***\r\n\r\nactivesupport (4.1.4)\r\n\r\n$ ruby ng_case.rb\r\n/usr/local/rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/activesupport-4.1.4/lib/active_support/core_ext/object/json.rb:165:in `as_json\': undefined method `use_standard_json_time_format\' for ActiveSupport:Module (NoMethodError)\r\n        from /usr/local/rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/multi_json-1.10.1/lib/multi_json/adapters/oj.rb:21:in `dump\'\r\n        from /usr/local/rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/multi_json-1.10.1/lib/multi_json/adapters/oj.rb:21:in `dump\'\r\n        from /usr/local/rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/multi_json-1.10.1/lib/multi_json/adapter.rb:24:in `dump\'\r\n        from /usr/local/rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/multi_json-1.10.1/lib/multi_json.rb:136:in `dump\'\r\n        from ng_case.rb:10:in `<main>\'\r\n```\r\n\r\n\r\nFollowings are all OK.\r\n\r\n[OK Case1]\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\n# OK\r\n\r\nrequire \'oj\'\r\nrequire \'multi_json\'\r\n\r\np MultiJson.dump({ time: Time.now })\r\n```\r\n\r\n[OK Case2]\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\n# activesupport = 4.0.8 : OK\r\n# activesupport = 4.1.4 : OK\r\n\r\nrequire \'multi_json\'\r\nrequire "active_support/core_ext/object" \r\n\r\np MultiJson.dump({ time: Time.now })\r\n```\r\n\r\n[OK Case3]\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\n# activesupport = 4.0.8 : OK\r\n# activesupport = 4.1.4 : OK\r\n\r\nrequire \'oj\'\r\nrequire "active_support/core_ext/object" \r\n\r\np Oj.dump({ time: Time.now })\r\n```\r\n\r\nI\'ve confirmed this symptom in following environment.\r\n\r\n```\r\n% ruby -v\r\nruby 2.0.0p247 (2013-06-27) [i386-mingw32]\r\n\r\n$ ruby -v\r\nruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]\r\n```\r\n'
16128,'eileencodes',"Error on has_many :through with dynamic conditions\n#### Summary\r\n\r\nI ran into this bug today. It occurs on 4.1.4 as well as on master. The basic idea is — if you use `has_many :foos, -> foo { where(field: foo.field) }` (with dynamic condition), and then `has_many :bars, through: :foos` you get something like this:\r\n\r\n```\r\nArgumentError: wrong number of arguments (0 for 1)\r\n    bug.rb:41:in `block in <class:Seed>'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/relation/spawn_methods.rb:41:in `instance_exec'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/relation/spawn_methods.rb:41:in `merge!'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/through_association.rb:18:in `block in target_scope'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/through_association.rb:16:in `each'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/through_association.rb:16:in `target_scope'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/association.rb:86:in `scope'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/collection_association.rb:399:in `scope'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/collection_proxy.rb:36:in `initialize'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/relation/delegation.rb:106:in `new'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/relation/delegation.rb:106:in `create'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/collection_association.rb:36:in `reader'\r\n    /Users/max/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/bundler/gems/rails-6e76031e8f1f/activerecord/lib/active_record/associations/builder/association.rb:115:in `red_flowers'\r\n    bug.rb:64:in `test_hmt_with_conditions'\r\n```\r\n\r\n#### Gist to reproduce\r\n\r\nI wrote a minimal (yet slightly contrived) gist to reproduce the issue. It's kinda hard to come up with real life things that map to this setup, so hope you're into gardening.\r\n\r\nhttps://gist.github.com/maxim/71dbf787f6260bd819dc"
16123,'pixeltrix','Force encoding of US-ASCII to UTF-8 in unescape_uri.\nBecause URI paths may contain non US-ASCII characters we need to force\r\nthe encoding of any unescaped URIs to UTF-8 if they are US-ASCII.\r\nThis essentially replicates the functionality of the monkey patch to\r\nURI.parser.unescape in active_support/core_ext/uri.rb.\r\n\r\nFixes #16104.'
16112,'chancancode',"SystemStackError: stack level too deep in as_json\nSince upgrade to rails 4.1 (tried 4.1.0, 4.1.1, 4.1.4) I'm having a stack overflow upon calling Model.find in some controller actions. At first, I thought this is of course my mistake, but after tracing method calls and returns, I found the cycle is happening in calls to as_json (defined in activesupport - lib/active_support/core_ext/object/json.rb).\r\n\r\nI found this issue https://github.com/rails/rails/issues/11460 , which discusses problems with circular reference detection. One of the conditions by which this error is triggered is setting custom table_name in the model, which I'm doing, since the app builds upon a legacy db. Of course I could imagine there are circular references between the models, since there are some two-way associations, but I've specified inverse_of everywhere, where I had to use foreign_key or class_name options.\r\n\r\nThis is how one of the problematic models looks like:\r\n```ruby\r\nclass Canteen < Company (abstract class, only adds some common validations, happens also when subclassing AR::Base directly)\r\n  self.table_name = 'jidelna'\r\n\r\n  has_many :meals, inverse_of: :canteen, foreign_key: 'jidelna_key'\r\n\r\n  has_many :chain_relations, inverse_of: :canteen,\r\n    class_name: ChainCanteen, foreign_key: 'jidelna_key'\r\n  has_many :chains, through: :chain_relations\r\n\r\n  has_many :client_relations, inverse_of: :canteen,\r\n    class_name: ClientCanteen, foreign_key: 'jidelna_key'\r\n  has_many :consumers, through: :client_relations, source: :client\r\nend\r\n```\r\nThe controller action only calls Canteen.find(params[:id]). I don't even know, why it should want to JSONify the record (or anything else on that matter).\r\n\r\nThe strange thing is that this doesn't happen every time and it doesn't happen when running tests or calling find in console.\r\n\r\nI've pasted the call trace here:\r\nhttps://gist.github.com/Incanus3/056e46a5a2f6aa37e223\r\nThe log is of course very long, but I've marged line 5106, where the cycle imho begins. I tried to add logging of self to the as_json method, but this just clutters the call trace so much (maybe there's a good way to do this).\r\n\r\nI can of course provide more info, just tell me what's relevant."
16111,'sgrif','Schema dumper does not correctly dump UUID primary keys (when using pgcrypto extension)\nIn continue of #10451.\r\n\r\nI\'m now migrating to **PostgreSQL 9.4 beta 1** (OS X, installed from Homebrew) and want to use UUIDs as primary keys. But `uuid-ossp` extension isn\'t available in this beta! [Official documentation][uuid-ossp] discourages its usage, and there are [talks in mailing lists][pghtalks] to throw it away or may be [replace implementation][uuidimpl].\r\n\r\nSo I\'ve decided to switch to [pgcrypto] extension, and use `gen_random_uuid()` method from it to generate identifiers.\r\n\r\nBut schema dumper dumps this (we\'re lost the primary key constraint on schema load):\r\n\r\n```ruby\r\ncreate_table "pg_uuids", id: false, force: true do |t|\r\n  t.uuid   "id",         default: "gen_random_uuid()", null: false\r\n  t.string "name"\r\n  t.uuid   "other_uuid", default: "gen_random_uuid()"\r\nend\r\n```\r\n\r\nInstead of this:\r\n\r\n```ruby\r\ncreate_table "pg_uuids", id: :uuid, default: "gen_random_uuid()", force: true do |t|\r\n  t.string "name"\r\n  t.uuid   "other_uuid", default: "gen_random_uuid()"\r\nend\r\n```\r\n\r\nSee self-contained gist to test that: https://gist.github.com/Envek/0580865d6fea8df7374b\r\n\r\nThis issue present in both master and 4.1-stable.\r\n\r\nReason\r\n------\r\n\r\n`ActiveRecord::Base.connection.pk_and_sequence_for(table_name)` doesn\'t return primary key column name, when default value is the function other than `nextval` or `uuid_generate_*`, see  [`activerecord/lib/active_record/schema_dumper.rb` at line 123](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_dumper.rb#L121)\r\n\r\n\r\nPossible solutions\r\n------------------\r\n\r\n  1. Modify `pk_and_sequence_for` method in [`activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb:362`](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb#L362)\r\n\r\n     ```ruby\r\n     if (result.nil? or result.empty?) and respond_to?(:primary_key)\r\n       return [primary_key(table), nil]\r\n     end\r\n     ```\r\n\r\n     This will fix it, but in #10451 it have been said, that "it appears to be intended to return nil if the primary key is not associated with a sequence". But there is `[pk, nil]` returning somewhere, so don\'t know.\r\n\r\n     I think it\'s best solution.\r\n\r\n  2. Modify the same file and method, but on [line 358](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb#L358) add the `gen_random_uuid` part to regexp in SQL query. This will fix only this particular scenario. Dislike it.\r\n\r\n  3. Modify [`activerecord/lib/active_record/schema_dumper.rb` at line 121](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_dumper.rb#L121), replace following:\r\n\r\n     ```ruby\r\n     if @connection.respond_to?(:pk_and_sequence_for)\r\n       pk, _ = @connection.pk_and_sequence_for(table)\r\n     elsif @connection.respond_to?(:primary_key)\r\n       pk = @connection.primary_key(table)\r\n     end\r\n     ```\r\n\r\n  with something like this:\r\n\r\n     ```ruby\r\n     if @connection.respond_to?(:pk_and_sequence_for)\r\n       pk, _ = @connection.pk_and_sequence_for(table)\r\n     if !pk && @connection.respond_to?(:primary_key)\r\n       pk = @connection.primary_key(table)\r\n     end\r\n     ```\r\n\r\n  This will fix only schema dumper.\r\n\r\nI can implement one of these solutions and open a pull request.\r\n\r\n[pgcrypto]: http://www.postgresql.org/docs/9.4/static/pgcrypto.html\r\n[uuid-ossp]: http://www.postgresql.org/docs/9.4/static/uuid-ossp.html\r\n[pghtalks]: http://www.postgresql.org/message-id/9285.1400387306@sss.pgh.pa.us\r\n[uuidimpl]: http://www.postgresql.org/message-id/53843FF6.9030803@beccati.com\r\n'
16059,'chancancode','Fixed issue with ActiveRecord serialize object as JSON\nWith 4.1.x `serialize` started returning a string when `JSON` was passed as the second attribute. It will now return a hash as per previous versions (prior to 4.1.x)\r\n\r\nExample: An ActiveRecord model named `Post` with a `comment` column that uses the serialize method to convert a `Comment` object to `JSON`.\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\nserialize :comment, JSON\r\nend\r\n\r\nclass Comment\r\n  include ActiveModel::Model\r\n  attr_accessor :category, :text\r\nend\r\n\r\npost = Post.create!\r\npost.comment = Comment.new(category: "Animals", text: "This is a comment about squirrels.")\r\npost.save!\r\n\r\n# This will now return a hash\r\npost.comment\r\n```\r\n    \r\nWhen `JSON` is used with `serialize`, ActiveRecord will use the new `ActiveRecord::Coders::JSON` coder which delegates `ActiveRecord::Coders::JSON.dump/load` to `ActiveSupport::JSON.encode/decode`. \r\n\r\nFixes #15594'
16025,'chancancode','Only automatically include validations when they are enabled on `has_secure_password`\nThis is a follow up to #16024.'
16001,'chancancode','DateTime#to_f preserves fractional seconds\nIn Issue GH#15994, @xjlu points out that the to_f method strips the fractional seconds from the DateTime and always returns .0. [https://github.com/rails/rails/issues/15994]\r\n\r\nSince @jeremy asked for a pull request with tests, here is the fix with tests.\r\n\r\nI am wondering about a flag to preserve the current behavior. It would seem weird someone would count on the fractional value always being .0, but could do something like\r\n\r\nto_f(preserve_usec=false) and then switch the implementation, but that seems like overkill to me'
15998,'rafaelfranca','ArgumentError: prepare called on a closed database -- on master\nhttps://github.com/rails/rails/commit/4dc6b64c542f82270958976335e468d70246265c causes AWDwR to [fail](http://intertwingly.net/projects/AWDwR4/checkdepot/): [minimal test case](http://intertwingly.net/stories/2014/06/27/product.html).  [development.log](http://intertwingly.net/stories/2014/06/27/development.log)'
15990,'sgrif',"Rails Dirty module ignores timezones in _field_changed? check \nWhen I post an update to some controller, and among the fields there's a (non blank) text field which is to be parsed to a time attribute using a timezone different from the DB's one, Rails Dirty module falsely detects a change in this attribute, although in the changes hash it'll look like the old and new values are equal.\r\n\r\nIt happens because its `_field_changed?` method is using `fast_string_to_time(string)` (which ignores timezones) to determine if the old and new dates are equal. \r\n\r\nNote that the actual time to be updated in the DB will be the correct timezone based one."
15968,'sgrif','PostgreSQL bigserial primary key type is lost in schema.rb\nI\'m confused with the #10410 fix as it doesn\'t seem to provide a complete end-to-end solution.\r\n\r\nAccording to ActiveRecord v4.1.2 release notes, the primary key can again be defined as `bigserial` as follows:\r\n\r\n```ruby\r\nclass CreateTestTable < ActiveRecord::Migration\r\n  def change\r\n    create_table :test_tables, id: :bigserial do |t|\r\n      t.uuid :uuid\r\n      t.index :uuid, unique: true\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nAfter migration, the DB table is created normally and visible in pgAdmin:\r\n\r\n```sql\r\nCREATE TABLE test_tables\r\n(\r\n  id bigserial NOT NULL,\r\n  uuid uuid,\r\n  CONSTRAINT test_tables_pkey PRIMARY KEY (id)\r\n)\r\nWITH (\r\n  OIDS=FALSE\r\n);\r\nALTER TABLE test_tables\r\n  OWNER TO testappuser;\r\n\r\nCREATE UNIQUE INDEX index_test_tables_on_uuid\r\n  ON test_tables\r\n  USING btree\r\n  (uuid);\r\n```\r\n\r\nHowever, `schema.rb` **lacks to mention** the `bigserial` as primary key type:\r\n\r\n```ruby\r\n  create_table "test_tables", force: true do |t|  # wat?\r\n    t.uuid "uuid"\r\n  end\r\n\r\n  add_index "test_tables", ["uuid"], name: "index_test_tables_on_uuid", unique: true, using: :btree\r\n```\r\n\r\nRunning `rake db:schema:load` on a new DB will create a `serial` primary key, since that\'s the default type.\r\n\r\nThoughts?\r\n'
15906,'sgrif','Overriding method_missing in ActiveRecord::Base children results in unexpected behavior.\nThe following code works in Rails 3.2.18 within an ActiveRecord::Base child class.\r\n\r\n    def method_missing(meth, *args, &block)\r\n      if self.survey\r\n        conjured_event = "#{self.survey.data_export_identifier.underscore}_#{meth}".to_sym\r\n   \r\n        if self.aasm.events.include? conjured_event.to_s.sub("!","").to_sym\r\n          eval("self.#{conjured_event}")\r\n        else\r\n          super\r\n        end\r\n      else\r\n        super\r\n      end\r\n    end\r\n\r\nIn Rails 4.1.1 this results in error `SystemStackError: stack level too deep` when attempting to access attributes.\r\n\r\nRelated issues can be found from other users on StackOverflow as well.\r\n\r\nhttp://stackoverflow.com/questions/18287707/model-with-method-missing-behaves-differently-in-rails-4-than-rails-3-can-cau\r\n\r\nhttp://stackoverflow.com/questions/16088392/defining-method-missing-on-active-record-in-rails-4-throws-systemstackerror-sta\r\n\r\nI have changed the method to the following \r\n\r\n    def method_missing(meth, *args, &block)\r\n      return super if self.respond_to? meth\r\n  \r\n      unless self.respond_to?(meth)\r\n        if self.survey\r\n          conjured_event = "#{self.survey.data_export_identifier.underscore}_#{meth}".to_sym\r\n  \r\n          if self.aasm.events.include? conjured_event.to_s.sub("!","").to_sym\r\n            eval("self.#{conjured_event}")\r\n          end\r\n        end\r\n      end\r\n    end\r\n\r\nThis updated version works as expected; but notice the first call to super is returning immediately.  If any code is run instead it results in unexpected behavior.  The first access to an attribute on the object will result in nil, but subsequent calls or a reload will return the appropriate values.'
15890,'chancancode',"Add Time#in_milliseconds\nThis method is implemented on the [Numeric's time extension](https://github.com/rails/rails/blob/f1eddea1e3f6faf93581c43651348f48b2b7d8bb/activesupport/lib/active_support/core_ext/numeric/time.rb), I believe that it should be available on `Time` as well.\r\n"
15877,'sgrif',"ActiveRecord::AttributeMethods#column_for_attribute doesn't work with alias_attribute and behaves strangely with nonexistent attribute\nWhen model.column_for_attribute is called for aliased or nonexistent attribute name, it returns an instance of ActiveRecord::ConnectionAdapters::NullColumn. For nonexistent attribute this is ok, but column.name shouldn't return the nonexistent name - the caller needs to know the column doesn't exist. For aliased column, this should return real ActiveRecord::ConnectionAdapters::Column with the right column name, type, etc.\r\n\r\nI've stumbled upon this when creating a form using simple_form, which autodetects input types to use by calling column_for_attribute on the object.\r\n\r\nIn rails 4.0 column_for_attribute returns nil in these cases, which also breaks the autodetection for aliased attributes, but at least you notice it when calling .type on it.\r\n\r\nI've created a standard test for this:\r\nhttps://gist.github.com/Incanus3/3210403c996c5de2b297\r\n\r\nThis is also mentioned in this old, closed issue:\r\nhttps://github.com/rails/rails/issues/6177"
15783,'pixeltrix','deeply nested shallow routes broken from 4.1.2 fix\nThis commit https://github.com/rails/rails/commit/e10f26f9e90f2fe6c4cd18f70c1e559f2250da56 breaks deeply nested routes. Specifically the deeply nested still requires the top most id for index/create\r\n\r\ne.g. \r\n\r\n```ruby\r\nnamespace :asdf do\r\n    resources :foo do\r\n      resources :bar, shallow: true do\r\n          resources :baz\r\n      end\r\n    end\r\nend\r\n```\r\n\r\nproduces:\r\n![image](https://cloud.githubusercontent.com/assets/595639/3307130/c88bb78c-f668-11e3-9551-abbc48e580e0.png)\r\n\r\nthe baz create and index path requires `:foo_id`'
15718,'tenderlove',"Fixed a regression introduced in 84cf156\n84cf156 (PR #15694) introduced a subtle regression. There are actually three\r\ndistinct entry points to creating an AR object – via .new (i.e. #initialize),\r\nvia #init_with (e.g. from YAML or database queries) and via .allocate.\r\n\r\nWith the patch in 84cf156, attribute methods and respond_to? will not work\r\ncorrectly when objects are allocated directly, without going through either\r\n\r\nThe reason this test case didn't catch the regression was that the `Topic`\r\nclass is shared between test cases, so by the time this test case is ran the\r\nattribute methods are very likely to be defined.\r\n\r\nSwitching to use a fresh anonymous class in the test to ensure we surface this\r\nproblem in the future."
15663,'sgrif',"ActiveRecord HABTM Preload Performance Regression\nI found that some requests in our application started timing out after upgrading to Rails 4.1.1. It turns out this was because preloading HABTM queries is extremely slow for some reason. I created a minimal benchmark based on the ActiveRecord bug template to demonstrate the issue: https://gist.github.com/vikhyat/768c4fe883de83a799a4\r\n\r\nThese are the results of the benchmark:\r\n\r\n```\r\n       user     system      total        real\r\nPreload: 20  0.060000   0.000000   0.060000 (  0.063410)\r\nPreload: 40  0.200000   0.000000   0.200000 (  0.198193)\r\nPreload: 60  0.420000   0.000000   0.420000 (  0.424104)\r\nPreload: 80  0.710000   0.000000   0.710000 (  0.705614)\r\nPreload: 100  1.100000   0.000000   1.100000 (  1.101897)\r\nPreload: 120  1.580000   0.000000   1.580000 (  1.576200)\r\nPreload: 140  2.140000   0.000000   2.140000 (  2.142106)\r\nPreload: 160  2.790000   0.000000   2.790000 (  2.794206)\r\nPreload: 180  3.530000   0.000000   3.530000 (  3.526480)\r\nPreload: 200  4.330000   0.000000   4.330000 (  4.336192)\r\nPreload: 220  5.290000   0.010000   5.300000 (  5.292490)\r\nPreload: 240  6.280000   0.000000   6.280000 (  6.276606)\r\nPreload: 260  7.300000   0.000000   7.300000 (  7.301626)\r\nPreload: 280  8.590000   0.000000   8.590000 (  8.589534)\r\nPreload: 300  9.690000   0.000000   9.690000 (  9.696744)\r\nPreload: 320 11.120000   0.010000  11.130000 ( 11.120075)\r\nPreload: 340 12.470000   0.000000  12.470000 ( 12.475323)\r\nPreload: 360 14.040000   0.010000  14.050000 ( 14.049947)\r\nPreload: 380 15.570000   0.000000  15.570000 ( 15.570407)\r\nPreload: 400 17.300000   0.000000  17.300000 ( 17.303420)\r\nPreload: 420 19.090000   0.010000  19.100000 ( 19.091995)\r\nPreload: 440 20.950000   0.000000  20.950000 ( 20.948938)\r\nPreload: 460 22.960000   0.010000  22.970000 ( 22.967456)\r\nPreload: 480 24.940000   0.000000  24.940000 ( 24.950712)\r\nPreload: 500 27.150000   0.010000  27.160000 ( 27.148344)\r\n```\r\n\r\nDefinitely doesn't look like linear time complexity, which I would've expected here. It is so bad that it ends up being faster to just let an n+1 query happen.\r\n\r\n```\r\n       user     system      total        real\r\nn+1:     20  0.050000   0.000000   0.050000 (  0.054664)\r\nn+1:     40  0.100000   0.000000   0.100000 (  0.091517)\r\nn+1:     60  0.130000   0.000000   0.130000 (  0.132433)\r\nn+1:     80  0.170000   0.000000   0.170000 (  0.173936)\r\nn+1:     100  0.220000   0.000000   0.220000 (  0.218220)\r\nn+1:     120  0.260000   0.000000   0.260000 (  0.259074)\r\nn+1:     140  0.300000   0.000000   0.300000 (  0.303388)\r\nn+1:     160  0.350000   0.000000   0.350000 (  0.345752)\r\nn+1:     180  0.390000   0.000000   0.390000 (  0.390691)\r\nn+1:     200  0.430000   0.000000   0.430000 (  0.435159)\r\nn+1:     220  0.480000   0.000000   0.480000 (  0.479689)\r\nn+1:     240  0.530000   0.000000   0.530000 (  0.523980)\r\nn+1:     260  0.560000   0.000000   0.560000 (  0.561001)\r\nn+1:     280  0.610000   0.010000   0.620000 (  0.615086)\r\nn+1:     300  0.660000   0.000000   0.660000 (  0.658709)\r\nn+1:     320  0.690000   0.000000   0.690000 (  0.696682)\r\nn+1:     340  0.740000   0.000000   0.740000 (  0.733654)\r\nn+1:     360  0.770000   0.000000   0.770000 (  0.774647)\r\nn+1:     380  0.830000   0.000000   0.830000 (  0.828438)\r\nn+1:     400  0.870000   0.000000   0.870000 (  0.876504)\r\nn+1:     420  0.930000   0.000000   0.930000 (  0.926957)\r\nn+1:     440  0.980000   0.010000   0.990000 (  0.979548)\r\nn+1:     460  0.990000   0.000000   0.990000 (  0.989413)\r\nn+1:     480  1.030000   0.000000   1.030000 (  1.034881)\r\nn+1:     500  1.120000   0.000000   1.120000 (  1.118535)\r\n```\r\n\r\nI tried to figure out what was going on using StackProf and I think the cause of this problem is that the join table does not have any primary key, because these are the results:\r\n\r\n```\r\n==================================\r\n  Mode: cpu(1000)\r\n  Samples: 4573 (0.00% miss rate)\r\n  GC: 202 (4.42%)\r\n==================================\r\n     TOTAL    (pct)     SAMPLES    (pct)     FRAME\r\n      1754  (38.4%)        1754  (38.4%)     ActiveRecord::Core#update_attributes_from_transaction_state\r\n      1722  (37.7%)        1722  (37.7%)     block (2 levels) in ActiveRecord::AttributeMethods::Read#read_attribute\r\n       343   (7.5%)         343   (7.5%)     ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods#primary_key\r\n      4114  (90.0%)         248   (5.4%)     ActiveRecord::AttributeMethods::PrimaryKey#id\r\n      4229  (92.5%)         124   (2.7%)     ActiveRecord::Core#==\r\n      1762  (38.5%)          39   (0.9%)     block in ActiveRecord::AttributeMethods::Read#read_attribute\r\n```\r\n\r\nI'm guessing the cause of this is that HABTM relations are now treated as has_many through internally?\r\n\r\nAdding `def id; nil; end` to the model returned by through_model [here](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/builder/has_and_belongs_to_many.rb#L50-L78) results in a drastic improvement:\r\n\r\n```\r\n       user     system      total        real\r\nPreload: 20  0.020000   0.000000   0.020000 (  0.028965)\r\nPreload: 40  0.070000   0.000000   0.070000 (  0.067398)\r\nPreload: 60  0.130000   0.000000   0.130000 (  0.132211)\r\nPreload: 80  0.230000   0.000000   0.230000 (  0.225846)\r\nPreload: 100  0.330000   0.010000   0.340000 (  0.336442)\r\nPreload: 120  0.470000   0.000000   0.470000 (  0.464461)\r\nPreload: 140  0.610000   0.000000   0.610000 (  0.617623)\r\nPreload: 160  0.800000   0.000000   0.800000 (  0.800362)\r\nPreload: 180  1.000000   0.000000   1.000000 (  1.000626)\r\nPreload: 200  1.250000   0.000000   1.250000 (  1.250085)\r\nPreload: 220  1.490000   0.000000   1.490000 (  1.486242)\r\nPreload: 240  1.770000   0.000000   1.770000 (  1.767213)\r\nPreload: 260  2.060000   0.000000   2.060000 (  2.067684)\r\nPreload: 280  2.390000   0.000000   2.390000 (  2.384439)\r\nPreload: 300  2.760000   0.000000   2.760000 (  2.763481)\r\nPreload: 320  3.120000   0.000000   3.120000 (  3.125184)\r\nPreload: 340  3.570000   0.010000   3.580000 (  3.570069)\r\nPreload: 360  3.920000   0.000000   3.920000 (  3.923540)\r\nPreload: 380  4.440000   0.000000   4.440000 (  4.437941)\r\nPreload: 400  4.820000   0.000000   4.820000 (  4.823900)\r\nPreload: 420  5.390000   0.000000   5.390000 (  5.393981)\r\nPreload: 440  5.820000   0.010000   5.830000 (  5.821057)\r\nPreload: 460  6.370000   0.000000   6.370000 (  6.366625)\r\nPreload: 480  7.080000   0.000000   7.080000 (  7.083520)\r\nPreload: 500  7.530000   0.000000   7.530000 (  7.531730)\r\n```\r\n\r\nStill not as good as the n+1 query version, though.\r\n"
15658,'rafaelfranca','Move object test files under object\n'
15649,'sgrif','Unexpected behavior when plucking from joins (nil colunms in resulting arrays)\nWhen plucking from a join using SQL fragments, the pluck method will mess with any fields that have the same name but are in different tables, unless you set an SQL alias for one of them.\r\n\r\n```ruby\r\n2.1.1 :001 > Person.joins(:pets).where("pets.species = ?", "Cat").order("people.name ASC, pets.name ASC").pluck("people.name", "pets.name as pet_name")\r\n   (1.1ms)  SELECT people.name, pets.name as pet_name FROM "people" INNER JOIN "pets" ON "pets"."person_id" = "people"."id" WHERE (pets.species = \'Cat\')  ORDER BY people.name ASC, pets.name ASC\r\n => [["Peter", "Garfield"], ["Sally", "Juliet"], ["Sally", "Romeo"]] \r\n2.1.1 :002 > Person.joins(:pets).where("pets.species = ?", "Cat").order("people.name ASC, pets.name ASC").pluck("people.name", "pets.name")\r\n   (0.5ms)  SELECT people.name, pets.name FROM "people" INNER JOIN "pets" ON "pets"."person_id" = "people"."id" WHERE (pets.species = \'Cat\')  ORDER BY people.name ASC, pets.name ASC\r\n => [["Garfield", nil], ["Juliet", nil], ["Romeo", nil]] \r\n```\r\nWorth noting that the generated SQL itself is fine, and returns the expected result when executed in SQLite console:\r\n\r\n```SQL\r\nsqlite> SELECT people.name, pets.name FROM "people" INNER JOIN "pets" ON "pets"."person_id" = "people"."id" WHERE (pets.species = \'Cat\')  ORDER BY people.name ASC, pets.name ASC;\r\nPeter|Garfield\r\nSally|Juliet\r\nSally|Romeo\r\nsqlite> \r\n```\r\n\r\nGist with test:\r\nhttps://gist.github.com/danielgracia/7fc63f39f7c8068ca12a'
15594,'chancancode','ActiveRecord serialize Object as JSON is broken in Rails 4.1.x\nThe following test fails with ActiveRecord 4.1.1, but works in 4.0.x: \r\n\r\nhttps://gist.github.com/dugsmith/b0cc43830b0279e94e7a\r\n\r\nUse-case: an ActiveRecord model with a column that uses the serialize method to convert an ```Object``` to JSON, like:\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  serialize :comment, JSON\r\nend\r\n\r\nclass Comment\r\n  include ActiveModel::Model\r\n  attr_accessor :category, :text\r\nend\r\n```\r\n\r\nThe problem appears to be introduced by the ```to_json_with_active_support_encoder``` method on ```active_support/lib/active_support/core_ext/object/json.rb```:\r\n\r\nhttps://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/object/json.rb#L31\r\n\r\nMy temporary workaround is to add a class like this to my Rails project:\r\n\r\n```ruby\r\nclass ActiveSupportJsonProxy\r\n\r\n  def self.dump(object)\r\n    ActiveSupport::JSON.encode(object) unless object.nil?\r\n  end\r\n\r\n  def self.load(string)\r\n    ActiveSupport::JSON.decode(string) if string.present?\r\n  end\r\n\r\nend\r\n```\r\n\r\nThen, reference it instead of the built-in JSON class like we used to do:\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  serialize :comment, ActiveSupportJsonProxy\r\nend\r\n```'
15480,'laurocaetano',"Eager loading association based on SQL query rather than existing column fails on 4.1.2.rc1\nThe following test case shows the issue:\r\n\r\n```ruby\r\ndiff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb\r\nindex 991b0a8..d95cb46 100644\r\n--- a/activerecord/test/cases/associations/eager_test.rb\r\n+++ b/activerecord/test/cases/associations/eager_test.rb\r\n@@ -1248,4 +1248,8 @@ class EagerAssociationTest < ActiveRecord::TestCase\r\n       assert_equal 2, author.posts.size\r\n     }\r\n   end\r\n+\r\n+  def test_including_association_based_on_sql_condition_and_no_database_column\r\n+    assert_equal pets(:parrot), Owner.including_last_pet.first.last_pet\r\n+  end\r\n end\r\ndiff --git a/activerecord/test/models/owner.rb b/activerecord/test/models/owner.rb\r\nindex cf24502..2e3a9a3 100644\r\n--- a/activerecord/test/models/owner.rb\r\n+++ b/activerecord/test/models/owner.rb\r\n@@ -3,6 +3,18 @@ class Owner < ActiveRecord::Base\r\n   has_many :pets, -> { order 'pets.name desc' }\r\n   has_many :toys, :through => :pets\r\n\r\n+  belongs_to :last_pet, class_name: 'Pet'\r\n+  scope :including_last_pet, -> {\r\n+    select(%q[\r\n+      owners.*, (\r\n+        select p.pet_id from pets p\r\n+        where p.owner_id = owners.owner_id\r\n+        order by p.name desc\r\n+        limit 1\r\n+      ) as last_pet_id\r\n+    ]).includes(:last_pet)\r\n+  }\r\n```\r\n\r\nThe following error is raised:\r\n\r\n````\r\nEagerAssociationTest#test_including_association_based_on_sql_condition_and_no_database_column:\r\nNoMethodError: undefined method `type' for nil:NilClass\r\n    \r\n    ./activerecord/lib/active_record/associations/preloader/association.rb:111:in `owner_key_type'\r\n    ./activerecord/lib/active_record/associations/preloader/association.rb:103:in `key_conversion_required?'\r\n    ./activerecord/lib/active_record/associations/preloader/association.rb:60:in `owners_by_key'\r\n    ./activerecord/lib/active_record/associations/preloader/association.rb:78:in `associated_records_by_owner'\r\n    ./activerecord/lib/active_record/associations/preloader/singular_association.rb:9:in `preload'\r\n    ./activerecord/lib/active_record/associations/preloader/association.rb:20:in `run'\r\n```\r\n\r\nThe issue has been introduced in #14855 to fix #14734. Version 4.1.1 works fine."
15394,'senny','ActiveRecord::Migration.maintain_test_schema! doesn\'t work with structure.sql\nIntroduced in rails 4.1.\r\nChecked using sqlite3 and postgres.\r\n\r\nAt the end of calling `ActiveRecord::Migration.maintain_test_schema!` this method is called: https://github.com/rails/rails/blob/99873ca1ea98d73c73f8be60dfce0a54224f4ea8/activerecord/lib/active_record/tasks/database_tasks.rb#L159 which later, after choosing database adapter calls method, in example on sqlite3 adapter: https://github.com/rails/rails/blob/99873ca1ea98d73c73f8be60dfce0a54224f4ea8/activerecord/lib/active_record/tasks/sqlite_database_tasks.rb#L35\r\n\r\nSo at the very end it runs: `sqlite3 db/test.sqlite3 < db/structure.sql`\r\n\r\nThis however can result in error like:\r\n\r\n```\r\nError: near line 1: table "schema_migrations" already exists\r\nError: near line 2: index unique_schema_migrations already exists\r\nError: near line 3: table "users" already exists\r\nError: near line 4: UNIQUE constraint failed: schema_migrations.version\r\n```\r\n\r\nThis error can happen when we created migration to add column to existing table.\r\n\r\nIt looks like it\'s necessary to always purge database before loading sql file and adding:\r\n\r\n```\r\npurge(current_config)\r\ncreate(current_config)\r\n```\r\n\r\nbefore line https://github.com/rails/rails/blob/99873ca1ea98d73c73f8be60dfce0a54224f4ea8/activerecord/lib/active_record/tasks/database_tasks.rb#L168 fixes the issue.\r\nI\'m not sure if that is the best place however.\r\n\r\nSimilar issue was noted in https://github.com/rails/rails/pull/13528#issuecomment-40718912 by @kevintyll\r\n\r\nPlease, let me know if the issue is unclear, I can submit example app then.\r\nIf you think that\'s the correct way of fixing it, I can prepare a PR.\r\n\r\nAddressing to @jonleighton as he is the author of this feature.'
15369,'senny','Duplicating hstore columns returns nil since Rails 4.1\nTest case: https://gist.github.com/stormsilver/c9e557144bb7eda66099\r\n\r\nIn Rails 4.0.5, duping a model with an hstore column and a `store_accessor` correctly copies the hash. In Rails 4.1.1, it does not. It is somehow related to 5ac2341fab689344991b2a4817bd2bc8b3edac9d although I\'m not sure exactly what the issue is.\r\n\r\nRails 4.0.5:\r\n```ruby\r\no = Post.new :title => \'Foo\'\r\no.data_before_type_cast # {"title" => "Foo"}\r\n```\r\n\r\nRails 4.1.1:\r\n```ruby\r\no = Post.new :title => \'Foo\'\r\no.data_before_type_cast # ""\r\n```'
15266,'chancancode','If a counter_cache exists, use it for #empty?\nWhen a counter_cache is available, also use it when checking if the collection is empty or not, removing a (redundant) query for both `#empty?` and `#any?`.'
15240,'chancancode','Fixed serialization for records with an attribute named `format`.\n```irb\r\n>> book.method(:format)\r\n=> #<Method: BookFormat(Kernel)#format>\r\n>> skip_backtrace { book.send(:format) }\r\n=> "#<ArgumentError: too few arguments>"\r\n>> book.format\r\n=> "paperback"\r\n>> book.method(:format)\r\n=> #<Method: BookFormat(#<Module:0x007fe16d195a90>)#__temp__66f627d61647>\r\n>> skip_backtrace { book.send(:format) }\r\n=> "paperback"\r\n```\r\n\r\n* * *\r\n\r\nThis bug can be triggered when serializing record `R` (the instance) of type `C` (the class), provided that the following conditions are met:\r\n\r\n1. The name of one or more columns/attributes on `C`/`R` matches an existing private method on C (e.g. those defined by `Kernel`, such as `format`).\r\n\r\n2. The attribute methods have not yet been generated on `C`.\r\n\r\nIn this case, the matching private methods will be called by the serialization code (with no arguments) and their return values will be serialized instead. If the method requires one or more arguments, it will result in an `ArgumentError`.\r\n\r\nThis regression is introduced in d1316bb.\r\n\r\n* * *\r\n\r\nAttribute methods (e.g. `#name` and `#format`, assuming the class has columns named `name` and `format` in its database table) are lazily defined. Instead of defining them when a the class is defined (e.g. in [the `inherited` hook](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods.rb#L55-L58) on `ActiveRecord::Base`), this operation is deferred until they are first accessed.\r\n\r\nThe reason behind this is that is defining those methods requires knowing what columns are defined on the database table, which usually requires a round-trip to the database. Deferring their definition until the last-possible moment helps reducing unnecessary work, especially in development mode where classes are redefined and throw away between requests.\r\n\r\nTypically, when an attribute is first accessed (e.g. `a_book.format`), it will fire the [`method_missing` hook](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods.rb#L195) on the class, which triggers the definition of the attribute methods. This even works for methods like `format`, because calling a private method with an explicit receiver will also trigger that hook.\r\n\r\nUnfortunately, `read_attribute_for_serialization` is simply [an alias to `send`](https://github.com/rails/rails/blob/master/activemodel/lib/active_model/serialization.rb#L141), which does not respect method visibility. As a result, when serializing a record with those conflicting attributes, the `method_missing` is not fired, and as a result the attribute methods are not defined one would expect.\r\n\r\nBefore d1316bb, this is negated by the fact that calling the `run_callbacks` method will also trigger a call to `respond_to?`, which is [another trigger point](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods.rb#L228) for the class to define its attribute methods. Therefore, when Active Record [tries to run the `after_find`](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/core.rb#L289) callbacks, it will also define all the attribute methods thus masking the problem.\r\n\r\n* * *\r\n\r\nThe proper fix for this problem is probably to restrict `read_attribute_for_serialization` to call public methods only (i.e. alias `read_attribute_for_serialization` to `public_send` instead of `send`). This however would be quite risky to change in a patch release and would probably require a full deprecation cycle.\r\n\r\nAnother approach would be to override `read_attribute_for_serialization` inside Active Record to force the definition of attribute methods:\r\n\r\n```ruby\r\n   def read_attribute_for_serialization(attribute)\r\n     self.class.define_attribute_methods\r\n     send(attribute)\r\n   end\r\n```\r\n\r\nUnfortunately, this is quite likely going to cause a performance degradation.\r\n\r\nThis patch therefore restores the behaviour from the 4-0-stable branch by explicitly forcing the class to define its attribute methods in a similar spot (when records are initialized). This should not cause any extra roundtrips to the database because the `@columns` should already be cached on the class.\r\n\r\nFixes #15188.\r\n\r\n* * *\r\n\r\nFor the record, I *hate* this patch, so if you have better ideas I\'d love to hear them.'
15226,'chancancode','ActiveSupport::JSON.encode can\'t encode "\\xFF" in rails 4.1\nwe try to upgrade our app from Rails 4.0 to 4.1, and one page completely broken. after a little dig, we find in Rails 4.0 ActiveSupport::JSON.encode can handle string "\\xFF" correctly, but not in 4.1 \r\n\r\n```\r\n# 4.0\r\n2.0.0-p353 :001 > ActiveSupport::JSON.encode "\\xFF"\r\n => "\\"\\xFF\\""\r\n```\r\n\r\n```\r\n# 4.1\r\n2.0.0-p353 :005 >   ActiveSupport::JSON.encode "\\xFF"\r\nArgumentError: invalid byte sequence in UTF-8\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.1/lib/active_support/json/encoding.rb:56:in `gsub\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.1/lib/active_support/json/encoding.rb:56:in `to_json\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/json-1.8.1/lib/json/common.rb:223:in `generate\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/json-1.8.1/lib/json/common.rb:223:in `generate\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.1/lib/active_support/json/encoding.rb:96:in `stringify\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.1/lib/active_support/json/encoding.rb:34:in `encode\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/activesupport-4.1.1/lib/active_support/json/encoding.rb:21:in `encode\'\r\n\tfrom (irb):5\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.1.1/lib/rails/commands/console.rb:90:in `start\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.1.1/lib/rails/commands/console.rb:9:in `start\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:69:in `console\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.1.1/lib/rails/commands/commands_tasks.rb:40:in `run_command!\'\r\n\tfrom /Users/william/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.1.1/lib/rails/commands.rb:17:in `<top (required)>\'\r\n\tfrom bin/rails:4:in `require\'\r\n\tfrom bin/rails:4:in `<main>\'\r\n2.0.0-p353 :006 >\r\n```\r\n'
15182,'senny','Un-define :to_json for Customer class after stubbing.\nEven though Mocha calls `unstub` for every test in teardown, we still need to explicitly undefine `:to_json` for the Customer model to prevent state changes.\r\n\r\ncc @senny '
15170,'senny','Refactor PostgreSQL to use the general `TypeMap` for OIDs\nPart of #15134, dependent on #15165. See last commit for correct diff. /cc @senny'
15165,'senny','Delegate `Column#type_cast` to the injected type object.\nPart of #15134. Dependent on #15158 . See last commit for diff with previous PR applied. /cc @senny'
15158,'senny','Delegate `Column#type` to the injected type object\nThe decision to wrap type registrations in a proc was made for two\r\nreasons.\r\n\r\n1. Some cases need to make an additional decision based on the type\r\n  (e.g. a `Decimal` with a 0 scale)\r\n2. Aliased types are automatically updated if the type they point to is\r\n  updated later. If a user or another adapter decides to change the\r\n  object used for `decimal` columns, `numeric`, and `number` will\r\n  automatically point to the new type, without having to track what\r\n  types are aliased explicitly.\r\n\r\nEverything else here should be pretty straightforward. PostgreSQL ranges\r\nhad to change slightly, since the `simplified_type` method is gone.'
15156,'senny',"PostgreSQL timestamps should always be datetimes\nThe current behavior is that they are treated as `datetime` normally,\r\nbut if they are part of an array, they are treated as `timestamp`. The\r\nonly place that seems to be impacted by this is schema dumping, which\r\nshouldn't matter since `t.datetime` and `t.timestamp` are equivalent in\r\nthe `PostgreSQL` adapter, anyway."
15151,'senny','Add a type object to Column constructor\nPart of #15134. In order to perform typecasting polymorphically, we need\r\nto add another argument to the constructor. The order was chosen to\r\nmatch the `oid_type` on `PostgreSQLColumn`.'
15083,'senny','Use with_translation helper to clean up I18n stored translations.\n@senny please review. Thanks.'
15082,'senny','Clean up deliveries after each test.\nWhenever `DeliveryMailer.welcome.deliver` is called, `DeliveryMailer.deliveries` should be cleaned up afterwards to prevent state leaks from one test to another.\r\n\r\n@senny please review.'
15061,'matthewd','Remove unnecessary include for integration tests.\n'
14983,'tenderlove','Cannot redefine HABTM inside inherited class in Rails 4.1\nWe have a class that repeats a parent HABTM definition due to some customization required (details ignored here). However, upgrading to Rails 4.1 breaks this - we can no longer save any child class objects as the foreign key on the join table is no longer assigned.\r\n\r\nReproducible code:\r\n```\r\n# Activate the gem you are reporting the issue against.\r\ngem \'activerecord\', \'4.1.0\'\r\nrequire \'active_record\'\r\nrequire \'minitest/autorun\'\r\nrequire \'logger\'\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \'sqlite3\', database: \':memory:\')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :parents, force: true\r\n  create_table :comments, force: true\r\n  create_table :comments_parents, id: false, force: true do |t|\r\n    t.integer "parent_id"\r\n    t.integer "comment_id"\r\n  end\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\nend\r\n\r\nclass Parent < ActiveRecord::Base\r\n  has_and_belongs_to_many :comments, -> { uniq }, join_table: \'comments_parents\', class_name: \'Comment\', foreign_key: \'parent_id\'\r\nend\r\n\r\nclass Child < Parent\r\n  has_and_belongs_to_many :comments, -> { uniq }, join_table: \'comments_parents\', class_name: \'Comment\', foreign_key: \'parent_id\'\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    child = Child.new\r\n    child.comments << Comment.new\r\n\r\n    assert_equal true, child.save\r\n  end\r\nend\r\n```\r\n\r\n`active_record` 4.0.4 output:\r\n```\r\nD, [2014-05-05T17:13:16.050481 #36769] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2014-05-05T17:13:16.053998 #36769] DEBUG -- :   SQL (0.1ms)  INSERT INTO "parents" DEFAULT VALUES\r\nD, [2014-05-05T17:13:16.054934 #36769] DEBUG -- :   SQL (0.0ms)  INSERT INTO "comments" DEFAULT VALUES\r\nD, [2014-05-05T17:13:16.057548 #36769] DEBUG -- :    (0.1ms)  INSERT INTO "comments_parents" ("parent_id", "comment_id") VALUES (1, 1)\r\nD, [2014-05-05T17:13:16.057734 #36769] DEBUG -- :    (0.0ms)  commit transaction\r\n.\r\n```\r\n\r\n`active_record` 4.1.0 output:\r\n```\r\nD, [2014-05-05T17:18:27.812791 #41289] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2014-05-05T17:18:27.815476 #41289] DEBUG -- :   SQL (0.1ms)  INSERT INTO "parents" DEFAULT VALUES\r\nD, [2014-05-05T17:18:27.815950 #41289] DEBUG -- :   SQL (0.0ms)  INSERT INTO "comments" DEFAULT VALUES\r\nD, [2014-05-05T17:18:27.818071 #41289] DEBUG -- :   SQL (0.1ms)  INSERT INTO "comments_parents" ("comment_id") VALUES (?)  [["comment_id", 1]]\r\nD, [2014-05-05T17:18:27.818985 #41289] DEBUG -- :   SQL (0.2ms)  UPDATE "comments_parents" SET "parent_id" = ? WHERE "comments_parents"."" IS NULL  [["parent_id", 1]]\r\nE, [2014-05-05T17:18:27.819024 #41289] ERROR -- : SQLite3::SQLException: no such column: comments_parents.: UPDATE "comments_parents" SET "parent_id" = ? WHERE "comments_parents"."" IS NULL\r\nD, [2014-05-05T17:18:27.819220 #41289] DEBUG -- :    (0.1ms)  rollback transaction\r\nE\r\n```'
14965,'matthewd',"Fixed the inferred table name of a HABTM auxiliar\ntable inside a schema.\r\n\r\nFixes #14824.\r\n\r\nThis PR relies on https://github.com/rails/rails/pull/14871 being merged in to run.\r\n\r\nI would gladly appreciate any feedback on how to properly create a schema for a test case because I don't think what I did follows protocol."
14964,'senny','WIP: Make ActionMailer tests order-independent.\n'
14951,'carlosantoniodasilva','Add support for module-level table_suffix in models\nThis makes table_name_suffix work the same as table_name_prefix when\r\nusing namespaced models. Pretty much the same as 67d1cec.\r\n\r\n![fwoomp](https://cloud.githubusercontent.com/assets/172474/2867252/abaf1ae0-d233-11e3-833f-5085e905b4ab.gif)\r\n'
14886,'chancancode',"LOCALHOST definition should match any 127.0.0.0/8 address\n(I saw the PR for https://github.com/rails/rails/pull/14743 hadn't been updated in two weeks,\r\nso I added a couple test cases. ) \r\n\r\nThe entire 127.0.0.0/8 range is assigned to the loopback address, not\r\nonly 127.0.0.0/24. This patch allows ActionDispatch::Request::LOCALHOST\r\nto match any IPv4 127.0.0.0/8 loopback address.\r\n\r\nThe only place that the #local? method was previously under test was\r\nin the show_expectations_test.rb file. I don't particularly like that\r\nthat's implicitly where this code is under test, and I feel like I\r\nshould move some of that testing code into the\r\ntest/dispatch/request_test.rb file, but I wanted some feedback first.\r\n\r\nCredit goes to @sriedel for discovering the issue and adding the\r\npatch."
14883,'chancancode',"Removed the single space character for Safari\n~~I'm still cleaning up the tests, but I want to get this out so people can help me test it~~\r\n\r\nOnce upon a time, a single space character was added to `render nothing: true` (https://github.com/rails/rails/commit/cb0f8fda9652c4d24d04693bdb82cecd3b067e5c, https://github.com/rails/rails/commit/807df4fcf021fc4d15972aa1c17ba7398d43ab0d) to fix a bug in [Safari](https://bugs.webkit.org/show_bug.cgi?id=5924). (Thank you @matthewd for hunting this down.)\r\n\r\nSince this bug has been fixed in Safari itself a long time ago (based on the timestamps it should be fixed in Safari 2.x or perhaps 1.x in ~2005), it's probably a good time to remove this.\r\n\r\nI wrote a simplified version of the [webkit test case](https://github.com/WebKit/webkit/blob/master/LayoutTests/http/tests/xmlhttprequest/zero-length-response.html) which you can access here:\r\n\r\n- xhr async version: http://lit-anchorage-8910.herokuapp.com/async ([source](https://github.com/chancancode/zero-length/blob/master/app/views/blank/async.html))\r\n- xhr sync version: http://lit-anchorage-8910.herokuapp.com/sync ([source](https://github.com/chancancode/zero-length/blob/master/app/views/blank/sync.html))\r\n\r\n(The controller doesn't actually use `render nothing`, but it should have the [same effect](https://github.com/chancancode/zero-length/blob/master/app/controllers/blank_controller.rb#L10))\r\n\r\nI tested this on a variety of browsers on [browser stack(http://www.browserstack.com/)], including Safari 4.0 and Firefox 3.0 and it seems to work fine.\r\n\r\nIdeally, I'd like to see this test case fail on an older version of safari (you might need safari 2.0 or even 1.0). **If you have access to one of those super old browser, please help run the test case and let me know what happens** :smile:\r\n\r\nOtherwise, I am fairly confident that this should be okay.\r\n\r\ncc @dhh @jeremy @sikachu @matthewd\r\n\r\nFixes #14336"
14882,'rafaelfranca','Handle offset on update_all.\nHandle the `offset` on `update_all`.\r\n\r\nNote that it will not work for MySQL, because it does not support the offset clause and subselect (which is the approach for the other adapters) on update.\r\n\r\nFixes #10849.\r\n\r\nDependent on this PR on Arel: https://github.com/rails/arel/pull/262.'
14855,'senny','Fix polymorphic eager load with foreign_key as String.\nThe foreign_key could be `String` and just doing `owners_map[owner_key]`\r\ncould return `nil`. \r\nTo fix this bug, we should `to_s` the keys if their type are different.\r\n\r\n@seanlinsley Thanks for the test case.\r\n\r\ncc @jeremy \r\n\r\nFixes #14734.\r\n'
14853,'senny','Fix to use custom join table in habtm\nWhen used a custom `join_table` name on a `habtm`, rails was not saving it on Reflections. This causes a problem when rails loads fixtures, because it [uses the reflections](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/fixtures.rb#L652) to set database with fixtures.'
14824,'matthewd','Wrong inferred name for a HABTM auxiliar table inside a schema\nIn PgSQL, when two models in a schema are associated through a has_and_belongs_to_many association, the name infered for the auxiliar table is wrong.\r\n\r\nFor instance:\r\n\r\n```ruby\r\nclass Music::Song < ActiveRecord::Base\r\n  self.table_name = "music.songs"\r\n  has_and_belongs_to_many :albums\r\nend\r\n\r\nclass Music::Album < ActiveRecord::Base\r\n  self.table_name = "music.albums"\r\n  has_and_belongs_to_many :songs\r\nend\r\n```\r\n\r\n```ruby\r\nMusic::Song.includes(:albums).first\r\n```\r\n\r\n```sql\r\nSELECT DISTINCT "music"."songs"."id", "music"."songs"."id" AS alias_0\r\nFROM "music"."songs"\r\n  LEFT OUTER JOIN "music"."albums_music" ON "music"."albums_music"."song_id" = "music"."songs"."id"\r\n  LEFT OUTER JOIN "music"."albums" ON "music"."albums"."id" = "music"."albums_music"."album_id"\r\nORDER BY "music"."songs"."id" ASC\r\nLIMIT 1\r\n```\r\n\r\nHere **"music"."albums_music"** should have been **"music"."albums_songs"**, but somehow ActiveRecord is using the name of the first table plus the name schema.\r\n\r\nIt can be fixed adding **join_table: "music.albums_songs"** in the models, but I\'m guessing it shouldn\'t be needed.'
14749,'matthewd','Changed change_column in PG schema_statements.rb to make sure that the u...\n...uid_generate function was not being quoted\r\n\r\nThis is a bug fix for https://github.com/rails/rails/issues/14604\r\n\r\nI messed up the rebasing so I closed the previous pull request https://github.com/rails/rails/pull/14723\r\nSorry!\r\n\r\n'
14734,'senny',"Polymorphic eager loading fails when using a string foreign key\nThe below fails with an exception on Rails master and 4.1, but works fine on 4.0 and 3.2.\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n  File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', github: 'rails/rails'\r\n    gem 'sqlite3'\r\n  GEMFILE\r\n\r\n  system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users\r\n  create_table :things\r\n\r\n  create_table :comments do |t|\r\n    t.references :author, polymorphic: true\r\n    t.string :resource_id,   null: false\r\n    t.string :resource_type, null: false\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :author,   polymorphic: true\r\n  belongs_to :resource, polymorphic: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    c = Comment.new\r\n    c.author   = User.create!\r\n    c.resource = Thing.create!\r\n    c.save!\r\n  end\r\n\r\n  def test_polymorphic_includes_with_numeric_id\r\n    assert_equal Comment.all.to_a,\r\n                 Comment.includes(:author).to_a\r\n  end\r\n\r\n  def test_polymorphic_includes_with_string_id\r\n    assert_equal Comment.all.to_a,\r\n                 Comment.includes(:resource).to_a\r\n  end\r\nend\r\n```\r\n\r\n```\r\nFinished in 0.020612s, 97.0309 runs/s, 48.5154 assertions/s.\r\n\r\n  1) Error:\r\nBugTest#test_polymorphic_includes_with_string_id:\r\nNoMethodError: undefined method `each' for nil:NilClass\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:87:in `block in associated_records_by_owner'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:86:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:86:in `associated_records_by_owner'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/singular_association.rb:9:in `preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:20:in `run'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:136:in `block (2 levels) in preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `block in preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `flat_map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:106:in `preloaders_on'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:94:in `block in preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `flat_map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:610:in `block in exec_queries'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:609:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:609:in `exec_queries'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:486:in `load'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:231:in `to_a'\r\n    polymorphic-includes-test.rb:58:in `test_polymorphic_includes_with_string_id'\r\n\r\n2 runs, 1 assertions, 0 failures, 1 errors, 0 skips\r\n```"
14731,'sgrif','changed? method returns false if attribute number has not changed, but attribute_before_type_cast has. \nExample: model `Model` has an integer column `number`, with `numericality: { only_integer: true }` validation on it. let `model` be persisted record of `Model` class with number value equal 5. If the user tries to change it to `5foo`, `model.changed?` will return false, as after type cast the value has not changed. If this is the only change, save will never trigger validations, and this input is accepted as valid.\r\n\r\nThe problem occurs in Rails 4.0.1, it is not occurring in rails 3.2.13.'
14721,'matthewd','Inconsistence in calculations through ActiveRecord::Associations::CollectionProxy\nGiving the following models:\r\n```ruby\r\nclass Product < ActiveRecord::Base\r\n  has_many :product_items\r\nend\r\n \r\nclass ProductItem < ActiveRecord::Base\r\n  belongs_to :product\r\n  belongs_to :store\r\n \r\n  scope :stock, -> {group(:product_id).count}\r\nend\r\n \r\nclass Store < ActiveRecord::Base\r\n  has_many :product_items\r\nend\r\n```\r\n\r\nIf we create an instance of store and call product_items.stock, it will return 0:\r\n```ruby\r\nstore = Store.new\r\nstore.product_items.stock # It will return 0\r\n```\r\n\r\nBut if we save the instance and call again to product_items.stock, it will return {}:\r\n```ruby\r\nstore.save\r\nstore.product_items.stock # It will return {}\r\n```\r\n\r\nYou can find the script in the following gist: https://gist.github.com/heragu/10549005'
14684,'pixeltrix','Add a failing test for a URL helper that was broken by a6b9ea2.\nBetween Rails 4.0.3 and 4.0.4 (and into 4.1.0), the routes in this test stopped producing the URL helper `comment_path` -- it became `blog_comment_path` instead. This was fixed in a6b9ea2 but the patch breaks the expected `new_blog_post_comment_path` helper, which was working until that patch landed.'
14682,'arthurnn',"Are has_and_belongs_to_many reflections gone in Rails 4.1.0?\nI don't understand why this behavior changed so heavily and how to get the old results back. Some of my abstract code depends on the `reflections` method.\r\n\r\nIn 4.0.4 this code returned something you would expect:\r\n\r\n    User.reflections.each_pair { |a, x| puts [a, x.macro].join(' => ') }\r\n    \r\n    games => has_many\r\n    posts => has_many\r\n    players => has_many\r\n    teams => has_and_belongs_to_many\r\n    roles => has_and_belongs_to_many\r\n\r\n\r\nIn 4.1.0 the same database and model returns this:\r\n\r\n\r\n    User.reflections.each_pair { |a, x| puts [a, x.macro].join(' => ') }\r\n    \r\n    games => has_many\r\n    posts => has_many\r\n    players => has_many\r\n    users_teams => has_many\r\n    teams => has_many\r\n    users_roles => has_many\r\n    roles => has_many\r\n\r\nUser model:\r\n\r\n    class User < ActiveRecord::Base\r\n      acts_as_authentic\r\n      \r\n      has_many :games\r\n      has_many :posts\r\n      has_many :players\r\n      has_and_belongs_to_many :teams\r\n      has_and_belongs_to_many :roles\r\n      \r\n    end  "
14672,'matthewd',"stored_attributes incorrect for STI tables\nFailing test case:\r\nhttps://github.com/bradleyjucsc/rails/commit/7e0e062b04f326029140c3fcb88cfadaf324d067\r\n\r\nWhen two grandchildren of ActiveRecord use `store` functionality, the `stored_attributes` variable winds up (incorrectly) returning the superset of their attributes, because the variable is stored in the parent class.\r\n\r\nThe above test case is arguably the wrong behavior as well, because the subclasses should return the superclass's stored attributes as well as it's own. "
14645,'tenderlove','Prepared statement eat lots of memories\n**The problem**\r\n\r\nSummary :\r\nIn certain cases, Rails4 generates prepared statements where certain variables are not bound but hardcoded in the query instead. \r\n1. This seems to defeat the purpose of prepared statements, by generating an infinite number of "single usage" prepared statements \r\n2. The immediate consequence is that this bloats the database server prepared statements cache very fast, with thousands of unique prepared statements, ending up with an OUT OF MEMORY exception. \r\n\r\nSolution : \r\nEither bind all variables (preferred), or do not use prepared statements for queries where certain variables cannot be bound.\r\n\r\n\r\n\r\nExample :\r\n\r\nThe model :\r\n\r\n```ruby\r\nClass User\r\n  has_many :addresses, -> where(current:true)\r\nend\r\na_user.addresses\r\n```\r\ngenerates the following query : \r\n\r\n```sql\r\nSELECT "addresses".* FROM "addresses" WHERE "addresses"."user_id" = $1 AND "addresses"."current" = \'t\'  [["user_id", 1]]\r\n```\r\n\r\nThis statement is executed as a prepared statement, but column "current" is not treated as a bound variable. \r\nThis is ok when current is a boolean, a most two prepared statements will be used. But when it is a timestamp, a different prepared statement will be used (and saved into postgresql) for each request. \r\n\r\nMore generally, only a few columns can be bound variables. This leads to lots of useless prepared statement into database, especially, if you have conditions on timestamp or subquery.  \r\n\r\nFuthermore, the limit size of StatementPool is 1000. With postgresql this is very high due to the fact that prepared statements are not shared between connections : the prepared statement cache is per connection / backend. This leads quite fast to a very high memory usage on the postgresql side. \r\n\r\n\r\n\r\nHow did we find this :\r\nOur application used to work well  with Rails 3.1 and 3.2. After upgrading to Rails 4, we experienced a memory leak on the db side : after about 1 hour of running, where we could observe the db memory grow and grow, the database ended up by returning OUT OF MEMORY errors. We finally figured out it was the number of prepared statements that exploded and was bloating the backend prepared statements cache. It seems to come from the fact that Rails 4 makes a wider use of prepared statements. While this is a great idea (thanks @tenderlove to bring that is Rails), it can very be problematic if there is no way to bind variables all variables properly.\r\n\r\nIf you have timestamp into some queries and if by no chance those queries are big, memory consumption of postgresql server increases drastically as well. In our case, we have 30 postgresql connections, with Rails 4, due to prepared statements, the memory used by the database server moves from 500 KB to more than 3 GB in about 1 hour, leading to out of memory errors.\r\nHere is a stackoverflow post where we explain the symptoms http://bit.ly/1hcG1ba\r\n\r\nThanks for reading, hope it helps.\r\n'
14638,'rafaelfranca','Assets:precompile will not change asset hash when image has changed\nI have a project where I reference an image from my Sass. On precompile, a hash is added to the image, and referenced in the CSS.\r\n\r\nHowever, when I change the image, the new intelligent compilation process will detect that the Sass has not changed, and hence not recompile it. So, with my image changed, the old hash/image will appear and still be there.\r\n\r\nAs a workaround, I add a phony CSS class to force recompilation.'
14637,'robin850',"Rails 4.0.4 DateTime#to_i conversion is incorrect under JRuby for some dates\nUnder Rails 4.0.4 with JRuby 1.7.8, the Rails DateTime#to_i method returns values that are one day later than the input date, for datetimes that aren't at midnight and aren't in GMT. \r\n\r\nThis test case demonstrates the bug: https://gist.github.com/ctweney/10047985  \r\n\r\nAll 6 assertions should pass. 3 of them -- all of the Pacific Daylight Time dates not at midnight -- actually fail. \r\n\r\nThe bug does not manifest in Rails 4.0.4 under MRI. I have reproduced it in JRuby 1.7.8. \r\n\r\nThe bug does not manifest in Rails 3.2.17 under either JRuby or MRI. \r\n\r\n"
14620,'rafaelfranca','Rails.root nil for config.before_configuration in Rails 4.1 RC2\nIn Rails 4.1RC2, the value of Rails.root is nil in the config.before_configuration block.  This breaks some gems such as the following:\r\nhttps://github.com/reidmorrison/symmetric-encryption/issues/35\r\nhttps://github.com/Shopify/shopify_app/pull/71'
14616,'matthewd','With a DATABASE_URL, establish_connection :any_symbol will succeed\nPer 43d096ee7bfa73a9f082f218c2b87f5fff310520, this is new and desirable behaviour.\r\n\r\nBut I worry:\r\n\r\n```\r\n---\r\nsome_other_database:\r\n  url: ...\r\n```\r\n\r\n```\r\nSpecialModel.establish_connection(:some_other_databaes) # uh oh\r\n```\r\n\r\nInstead of allowing every-possible-symbol to mean "use DATABASE_URL", perhaps in the presence of a `database.yml` (or maybe even when it\'s absent?) we should only automagically handle the default name-of-current-environment option?\r\n\r\n@tenderlove @jeremy @schneems ?\r\n\r\n----\r\n\r\nCreating an issue to ask a simple question is a bit of a dick move, but it occurs to me that if we release with this behaviour, it\'ll be painful to make go away. :worried: '
14544,'tenderlove',"Fixes Issue #13466.\nChanged the call to a scope block to be evaluated with instance_eval.\r\nThe result is that ScopeRegistry can use the actual class instead of base_class when\r\ncaching scopes so queries made by classes with a common ancestor won't leak scopes."
14510,'senny',"Dirty test failure when run in random order.\nUsing mysql\r\nRun options: --seed=45304\r\n\r\n  2) Failure:\r\nDirtyTest#test_partial_update_with_optimistic_locking [/vagrant/rails/activerecord/test/cases/dirty_test.rb:367]:\r\n3 instead of 2 queries were executed.\r\nQueries:\r\nINSERT INTO `people` (`best_friend_id`, `best_friend_of_id`, `comments`, `created_at`, `first_name`, `followers_count`, `friends_too_count`, `gender`, `insures`, `lock_version`, `number1_fan_id`, `primary_contact_id`, `updated_at`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\nSHOW VARIABLES WHERE Variable_name = 'character_set_client'\r\nUPDATE `people` SET `id` = 139, `first_name` = 'foo', `primary_contact_id` = NULL, `gender` = NULL, `number1_fan_id` = NULL, `lock_version` = 1, `comments` = NULL, `followers_count` = 0, `best_friend_id` = NULL, `best_friend_of_id` = NULL, `insures` = 0, `created_at` = '2014-03-28 07:30:13', `updated_at` = '2014-03-28 07:30:13' WHERE (`people`.`id` = 139 AND `people`.`lock_version` = 0).\r\nExpected: 2\r\n  Actual: 3"
14492,'tenderlove',"Fixes Issue #13466.\nChanged the call to a scope block to be evaluated with instance_eval.\r\nThe result is that ScopeRegistry can use the actual class instead of base_class when\r\ncaching scopes so queries made by classes with a common ancestor won't leak scopes."
14486,'chancancode',"Active Record joins with default_scope leads to duplicated sql #14351.\nA default scope that generates different sql on each call will\r\ngenerate almost duplicate SQL in the resulting query. For example:\r\n\r\n    def self.default_scope\r\n        where('active_at <= :now AND inactive_at > :now',\r\n            now: Time.zone.now)\r\n    end\r\n\r\nGenerates\r\n\r\n    ...\r\n    (active_at <= '2014-03-11 03:36:13.994068'\r\n    AND inactive_at > '2014-03-11 03:36:13.994068')\r\n    AND (active_at <= '2014-03-11 03:36:13.967550'\r\n    AND inactive_at > '2014-03-11 03:36:13.967550')\r\n\r\nIt only happens when the user defines their own class method for\r\ndefault_scope, not when using the default_scope method with a block."
14480,'rafaelfranca',"Create indexes inline in CREATE TABLE for MySQL\nWhen using `mysql` or `mysql2` adapters, fold index creation into `CREATE TABLE` statements. This has a few benefits:\r\n- requires fewer SQL statements to create a table\r\n- can reverse a table-creating migration with a single `DROP TABLE` statement, instead of unnecessarily removing all indexes and then dropping (big performance penalty for large tables)\r\n- requires having only `CREATE` permissions on a database, instead of `CREATE` + `INDEX` permissions\r\n- prevents early committing of transactions when adding indexes to temporary tables\r\n\r\nThis is intended as a replacement for @ccutrer's #13787. It fixes some bugs and test failures with that PR and updates tests.\r\n\r\nI am happy to squash the commits together, however I left as-is to avoid crushing @ccutrer's authorship."
14478,'carlosantoniodasilva','Huge performance hit when defaulting enforce_available_locales = true\nSee metrics in my comment on this issue:\r\nhttps://github.com/svenfuchs/i18n/issues/230#issuecomment-38574589'
14426,'strzalek','Template digestor does not use the proper variant for nested dependencies\nNested dependencies are looked up without the variant. So imagine app/views/messages/show.html+phone.erb:\r\n\r\n```ruby\r\n<%= render "comments/comments" %>\r\n```\r\n\r\nThis will lookup app/views/comments/_comments.html.erb instead of app/views/comments/_comments.html+phone.erb.'
14409,'guilleiguaran','Inconsistent hash access with hashes stored in the FlashHash between flash.now and flash.type\nI noticed when moving from Rails 3.2.17 to Rails 4.1 RC1 that hashes stored in the FlashHash get inconsistent access, symbol vs. string, depending on whether or not you use the `now` method. Here\'s an example:\r\n\r\nThis uses string access: `flash.alert = { title: \'Foobar\', content: \'Lorem ipsum." }`\r\nso `flash.alert[\'title\']` == \'Foobar\', but `flash.alert[:title]` == `nil`\r\n\r\nThis uses symbol access:\r\n`flash.now.alert = { title: \'Foobar\', content: \'Lorem ipsum." }`\r\nso `flash.alert[:title]` == \'Foobar\', but `flash.alert[\'title\']` == `nil`\r\n\r\nPreviously (3.2.17) both examples above used symbol access.\r\n'
14400,'senny','Drop custom tables after each test.\nThis is a step to prevent side effects when running tests. This will allow us to run them in random order.'
14384,'rafaelfranca',"AC::Parameters doesn't inherit from Hash\nInheriting from HashWithIndifferentAccess allowed programmers to call enumerable methods over `AC::Parameters`, losing `@permitted` state, and rendering Strong Parameters a barebones Hash. This changeset reduces `AC::Parameters` interface, disallowing such operations."
14383,'tenderlove','Regression with HABTM and validade: false\nReported by @tanelj.\r\n\r\n----------------------\r\n\r\nIt seems that there are still some issues with HABTM.\r\n\r\nIn Rail 4.1.0.rc1 (and in current 4.1 master) HABTM does not respect `validate: false`: \r\n\r\n```ruby\r\nhas_and_belongs_to_many :languages, validate: false\r\n```\r\nCurrently validation is always called for associated objects.\r\n\r\nFor example this code is calling validation (`on: :create`) for language object even when `validate: false`:\r\n\r\n```ruby\r\nevent = Event.new\r\nevent.languages << Language.first\r\nevent.valid?\r\n```\r\n\r\nHere is minitest about the issue: https://gist.github.com/tanelj/9517608\r\n\r\nIt works fine in Rails 4.0.3.\r\n\r\ncc @tenderlove '
14352,'tenderlove','ActionController::Live is broken in Rails 4.1 and Rails 4.2\nSymptoms:\r\n\r\n    ActionDispatch::IllegalStateError: header already sent\r\n\r\nReproduction instructions:\r\n\r\n  * `rails generate scaffold product title`\r\n  * `rake db:migrate`\r\n  * add `include ActionController::Live` to `app/controllers/products_controller.rb`\r\n  * `rake test`\r\n'
14351,'chancancode','Active Record joins with default_scope leads to duplicated sql\n```ruby\r\nclass Property < ActiveRecord::Base\r\n  has_many :units\r\n\r\n  def self.default_scope\r\n    where(\'active_at <= :now AND inactive_at > :now\', now: Time.zone.now)\r\n  end\r\nend\r\n\r\nclass Unit < ActiveRecord::Base\r\n  belongs_to :property\r\n\r\n  def self.with_active_properties\r\n   joins(:property)\r\n  end\r\nend\r\n```\r\n\r\nI\'m trying to use Rails 4.0.3 default_scope with a join, but when I call Unit.with_active_properties, I get the following duplicated SQL according to Unit.with_active_properties.to_sql:\r\n\r\n```sql\r\nSELECT "units".* FROM "units" INNER JOIN "properties" ON "properties"."id" = "units"."property_id" AND (active_at <= \'2014-03-11 03:36:13.994068\' AND inactive_at > \'2014-03-11 03:36:13.994068\') AND (active_at <= \'2014-03-11 03:36:13.967550\' AND inactive_at > \'2014-03-11 03:36:13.967550\')\r\n```\r\n\r\nWhy do the active/inactive conditions repeat?\r\n'
14332,'senny','Delete instances of Parrot after each test.\nGiven that ```Parrot``` instances has been created\r\nWhen the test has been run\r\nThen all instances of ```Parrot``` should be deleted'
14329,'rafaelfranca',"Ensure LookupContext in Digestor selects correct variant\nRelated to: #14242, #14243 & #14293\r\n\r\nVariants passed to `LookupContext#find()` seem to be ignored, so I used a setter instead: `finder.variants = [ variant ]` which seems to fix the problem.\r\n\r\nI've also added some more test cases for variants. Hopefully this time passing tests will mean it actually works.\r\n\r\n/cc @strzalek @dhh @jeremy"
14323,'rafaelfranca',"4.1.0.rc1 broke AR-JDBC (won't work with JRuby when config[:url] specified)\nwould it be please possible to do something about it before the final 4.1.0 release ?\r\n\r\nAR-JDBC has been using `config[:url]` ever since to allow specifying **jdbc:** connection URLs ... [since 4.1.0.rc1](https://github.com/rails/rails/blob/78ba185fb91d7066ae5c396ca97034c13054236c/activerecord/lib/active_record/connection_adapters/connection_specification.rb#L240) you seem to have decided to start parsing it and without monkey-patching there's no way to make this AR-JDBC compliant.\r\n\r\n... maybe at least ignore the **url** if it starts with *jdbc:* and do not delete it from `config` (for now)\r\nsome details at https://github.com/jruby/activerecord-jdbc-adapter/issues/534"
14315,'senny','Run ActiveModel test suites in random order.\nThis gets the whole ActiveModel test suites working even if\r\n`self.i_suck_and_my_tests_are_order_dependent!` is disabled\r\nin `ActiveSupport::TestCase`.\r\n\r\n`BCrypt::Engine.cost` needs to be reset to nil or default,\r\notherwise changes to cost made in other tests will be carried\r\nover and result in failure when expecting `Bcrypt::Engine::DEFAULT`.'
14293,'strzalek','Digestor: pass the missing "keys" param to LookupContext\nRelated to #14243 & #14242\r\n\r\nTook me a while to debug this. The problem was that Digestor didn\'t pass the `keys` param to `LookupContext` (actually passing `options` as `keys`), so variants were lost in between.\r\n\r\nI don\'t consider it ready, because I haven\'t figured out a way to test it properly.\r\n\r\nAlso, there\'s one catch: if `show.html+phone.erb` exists, it will be rendered, but if doesn\'t, lookup will fall back to `show.html.erb`. I\'m not sure if that\'s a desirable behavior.\r\n\r\n/cc @dhh @strzalek @jeremy'
14286,'tenderlove','Do note remove `Content-Type` when `render :body`\n`render :body` should just not set the `Content-Type` header. By\r\nremoving the header, it breaks the compatibility with other parts.\r\n\r\nAfter this commit, `render :body` will returns `text/html` content type,\r\nsets by default from `ActionDispatch::Response`, and it will preserve\r\nthe overridden content type if you override it.\r\n\r\nFixes #14197, #14238\r\n\r\nThis partially reverts commit 3047376870d4a7adc7ff15c3cb4852e073c8f1da.\r\n\r\n---\r\n\r\nThis is for 4-1-stable.'
14285,'tenderlove','Do note remove `Content-Type` when `render :body`\n`render :body` should just not set the `Content-Type` header. By\r\nremoving the header, it breaks the compatibility with other parts.\r\n\r\nAfter this commit, `render :body` will returns `text/html` content type,\r\nsets by default from `ActionDispatch::Response`, and it will preserve\r\nthe overridden content type if you override it.\r\n\r\nFixes #14197, #14238\r\n\r\nThis partially reverts commit 3047376870d4a7adc7ff15c3cb4852e073c8f1da.'
14282,'jeremy','Update CollectionAssociation.ids_writer to update changed_attributes\nCurrently, ActiveRecord implements partial support for dirty attributes. \r\n\r\n```ruby\r\npost = Post.new(title: "Test Post")\r\npost.changed_attributes # => {"title" => nil }\r\n```\r\n\r\nThis works great for everything except the common use case of collection lookups.\r\n\r\nFor example, suppose our app allowed the user to pick from a list of tags. We could use a multi-select or a checkbox array, but the end result would be something like this:\r\n\r\n```ruby\r\npost = Post.new(title: "New Post", tag_ids: [\'1\',\'2\',\'3\'])\r\npost.changed_attributes # => {"title" => nil }\r\n```\r\n\r\nWith this pull request, you\'d get:\r\n\r\n```ruby\r\npost = Post.new(title: "New Post", tag_ids: [\'1\',\'2\',\'3\'])\r\npost.changed_attributes # => {"title" => nil, "tag_ids" => [] }\r\n```\r\n\r\nThis isn\'t intended to be a be-all-end-all implementation of changed_attributes for associations, just one that covers the common use case of has_many associations that are only associations from a normalization standpoint and thus exclusively make use of the `ids_writer` method to update via the owner.\r\n\r\n'
14243,'strzalek','Variants in ActionView::Digestor\nTake variants into account when calculating template digests in ActionView::Digestor\r\n\r\nFixes #14242'
14242,'strzalek',"ActionView::Digestor doesn't account for variants\nWe forgot to deal with variants in regards to the ActionView::Digestor. Needs to be considered just like format."
14241,'pixeltrix',"Shallow routes do not follow the path option of namespace or scope\nI have Rails 4.1.0.rc1 and I have the following in my config/routes.rb\r\n\r\n```\r\n  namespace :admin, :path => 'sample' do\r\n    resources :posts do\r\n      resources :comments, :shallow => true\r\n    end\r\n  end\r\n```\r\n\r\nHere is the generated routes for the shallow resource\r\n```\r\n                Prefix Verb   URI Pattern                                  Controller#Action\r\n   admin_post_comments GET    /admin/posts/:post_id/comments(.:format)     admin/comments#index\r\n                       POST   /admin/posts/:post_id/comments(.:format)     admin/comments#create\r\nnew_admin_post_comment GET    /admin/posts/:post_id/comments/new(.:format) admin/comments#new\r\n    edit_admin_comment GET    /admin/comments/:id/edit(.:format)           admin/comments#edit\r\n         admin_comment GET    /admin/comments/:id(.:format)                admin/comments#show\r\n                       PATCH  /admin/comments/:id(.:format)                admin/comments#update\r\n                       PUT    /admin/comments/:id(.:format)                admin/comments#update\r\n                       DELETE /admin/comments/:id(.:format)                admin/comments#destroy\r\n```\r\n\r\nIt doesn't work even with scopes.\r\n```\r\n  scope :module => :admin, :as => :admin, :path => 'sample' do\r\n    resources :posts do\r\n      resources :comments, :shallow => true\r\n    end\r\n  end\r\n```\r\n\r\nAnd the result is still the same with the generated routes above.\r\n\r\nAlso, tried it with Rails 4.0.3. Using the exact namespace routes above, here is the generated routes\r\n```\r\n                Prefix Verb   URI Pattern                                   Controller#Action\r\n   admin_post_comments GET    /sample/posts/:post_id/comments(.:format)     admin/comments#index\r\n                       POST   /sample/posts/:post_id/comments(.:format)     admin/comments#create\r\nnew_admin_post_comment GET    /sample/posts/:post_id/comments/new(.:format) admin/comments#new\r\n    edit_admin_comment GET    /admin/comments/:id/edit(.:format)            admin/comments#edit\r\n         admin_comment GET    /admin/comments/:id(.:format)                 admin/comments#show\r\n                       PATCH  /admin/comments/:id(.:format)                 admin/comments#update\r\n                       PUT    /admin/comments/:id(.:format)                 admin/comments#update\r\n                       DELETE /admin/comments/:id(.:format)                 admin/comments#destroy\r\n```\r\n\r\nIt seems to have correctly built the collection routes however the member routes are still not what I expect them to be."
14238,'sikachu','render :body shouldn\'t always remove the content-type\nCalling `render :body` probably shouldn\'t always remove the content type like it does now.  Here is a test to demonstrate the issue:\r\n\r\n```diff\r\ndiff --git a/actionpack/test/controller/new_base/render_body_test.rb b/actionpack/test/controller/new_base/render_body_test.rb\r\nindex a7e4f87..f123544 100644\r\n--- a/actionpack/test/controller/new_base/render_body_test.rb\r\n+++ b/actionpack/test/controller/new_base/render_body_test.rb\r\n@@ -65,6 +65,11 @@ module RenderBody\r\n       render body: "hello world", layout: "greetings"\r\n     end\r\n \r\n+    def with_custom_content_type\r\n+      response.headers[\'Content-Type\'] = \'application/json\'\r\n+      render body: \'["troll","face"]\'\r\n+    end\r\n+\r\n     def with_ivar_in_layout\r\n       @ivar = "hello world"\r\n       render body: "hello world", layout: "ivar"\r\n@@ -141,6 +146,13 @@ module RenderBody\r\n       assert_status 200\r\n     end\r\n \r\n+    test "specified content type should not be removed" do\r\n+      get "/render_body/with_layout/with_custom_content_type"\r\n+\r\n+      assert_equal %w{ troll face }, JSON.parse(response.body)\r\n+      assert_equal \'application/json\', response.headers[\'Content-Type\']\r\n+    end\r\n+\r\n     test "rendering body with layout: false" do\r\n       get "/render_body/with_layout/with_layout_false"\r\n \r\n```'
14229,'guilleiguaran',"200 rather than 401 for failed Basic Auth under JRuby\nWhen using `ActionController::Live` in a controller under JRuby, failed Basic Authentication returns a 200 status code rather than 401, even though Rails logs a 401 status code.\r\n\r\nThe issue is intermittent under JRuby (95% failure rate) but does not seem to occur under MRI. I've observed the behavior in Rails 4.0.3 and Edge Rails (544c78a4e964b1971c2409f4dc805f2d4161990e as of writing).\r\n\r\n~~I created a minimal Rails application to demonstrate the issue at:~~\r\n\r\n~~https://github.com/laserlemon/rails_issue_14229~~\r\n\r\nPlease let me know what else I can do to help!"
14226,'tenderlove','`includes` uses SQL parsing when String joins are involved.\nCloses #14109\r\n\r\nThis is a partial revert of 22b3481ba2aa55fad1f9a5db94072312b345fb55.\r\nThe current implementation of `references_eager_loaded_tables?` needs to know\r\nevery table involved in the query. With the current API this is not possible\r\nwithout SQL parsing.\r\n\r\nWhile a2dab46cae35a06fd5c5500037177492a047c252 deprecated SQL parsing for `includes`.\r\nIt did not issue deprecation warnings when String joins are involved. This resulted\r\nin a breaking change after the deprecated behavior was removed (22b3481ba2aa55fad1f9a5db94072312b345fb55).\r\n\r\nWe will need to rethink the usage of `includes`, `preload` and `eager_load` but for now,\r\nthis brings back the old *working* behavior.'
14224,'pixeltrix',"Regression in 4.1.rc1 with scopes and shallow routes\nI have the following routes setup:\r\n\r\n```\r\n  scope shallow_path: 'projects', shallow_prefix: 'project' do\r\n    resources :projects do\r\n      resources :files, controller: 'project_files', shallow: true\r\n    end\r\n  end\r\n```\r\n\r\nIn beta1 this produced:\r\n\r\n```\r\n             Prefix Verb   URI Pattern                               Controller#Action\r\n    project_files GET    /projects/:project_id/files(.:format)     project_files#index\r\n                  POST   /projects/:project_id/files(.:format)     project_files#create\r\n new_project_file GET    /projects/:project_id/files/new(.:format) project_files#new\r\nedit_project_file GET    /projects/files/:id/edit(.:format)        project_files#edit\r\n     project_file GET    /projects/files/:id(.:format)             project_files#show\r\n                  PATCH  /projects/files/:id(.:format)             project_files#update\r\n                  PUT    /projects/files/:id(.:format)             project_files#update\r\n                  DELETE /projects/files/:id(.:format)             project_files#destroy\r\n         projects GET    /projects(.:format)                       projects#index\r\n                  POST   /projects(.:format)                       projects#create\r\n      new_project GET    /projects/new(.:format)                   projects#new\r\n     edit_project GET    /projects/:id/edit(.:format)              projects#edit\r\n          project GET    /projects/:id(.:format)                   projects#show\r\n                  PATCH  /projects/:id(.:format)                   projects#update\r\n                  PUT    /projects/:id(.:format)                   projects#update\r\n                  DELETE /projects/:id(.:format)                   projects#destroy\r\n```\r\n\r\nbut in rc1 it produces (notice the double prefixes on the project files routes)\r\n\r\n```\r\n                  Prefix Verb   URI Pattern                                        Controller#Action\r\n   project_project_files GET    /projects/projects/:project_id/files(.:format)     project_files#index\r\n                         POST   /projects/projects/:project_id/files(.:format)     project_files#create\r\nnew_project_project_file GET    /projects/projects/:project_id/files/new(.:format) project_files#new\r\n       edit_project_file GET    /projects/files/:id/edit(.:format)                 project_files#edit\r\n            project_file GET    /projects/files/:id(.:format)                      project_files#show\r\n                         PATCH  /projects/files/:id(.:format)                      project_files#update\r\n                         PUT    /projects/files/:id(.:format)                      project_files#update\r\n                         DELETE /projects/files/:id(.:format)                      project_files#destroy\r\n                projects GET    /projects(.:format)                                projects#index\r\n                         POST   /projects(.:format)                                projects#create\r\n             new_project GET    /projects/new(.:format)                            projects#new\r\n            edit_project GET    /projects/:id/edit(.:format)                       projects#edit\r\n                 project GET    /projects/:id(.:format)                            projects#show\r\n                         PATCH  /projects/:id(.:format)                            projects#update\r\n                         PUT    /projects/:id(.:format)                            projects#update\r\n                         DELETE /projects/:id(.:format)                            projects#destroy\r\n```\r\n"
14197,'sikachu','Live streaming doesn\'t play nice with "render body" in Rails 4.1.0.rc1\nSee sample application here: https://github.com/rosenfeld/render_body_live_streaming_bug'
14150,'fxn','broken  4.0.3 ActiveModel::AttributeMethods::ClassMethods help page\n\r\nhttp://api.rubyonrails.org/v4.0.2/classes/ActiveModel/AttributeMethods/ClassMethods.html\r\nhttp://api.rubyonrails.org/v4.0.3/classes/ActiveModel/AttributeMethods/ClassMethods.html\r\n'
14146,'fxn','Fix underscore inflector handling of namespaced and adjacent acronyms\nThe underscore inflector regular expression was not working correctly\r\nfor namespaced acronyms that were not entirely uppercased\r\n(e.g. HTTP::RESTful) or adjacent acronyms (e.g. APIRESTful).\r\n\r\nI suspect that positive lookbehind would have been used in the\r\noriginal implementation had it been available in supported Ruby\r\nversions at the time. Now that Rails requires Ruby 1.9.2 or above,\r\nthis is no longer an issue.\r\n\r\nThanks to Pawel Kozlowski (khozlov) for highlighting the namespace\r\nissue in #8571.'
14144,'tenderlove',"habtm doesn't run before_add callbacks\n```has_and_belongs_to_many``` association doesn't run ```before_add``` callbacks in ```4.1.0.rc1``` and ```4.1.0.beta1```. Doesn't seem to affect after_add.\r\n\r\nThis works in ```4.0.2```.\r\n\r\nGist showing the issue: https://gist.github.com/cristibalan/9137307"
14135,'matthewd','Support for mysql datatype \'double\' in rails 4\nI add a float field with ":limit => 53" in my migration for a mysql database: \r\n<code>t.float :number, :limit => 53</code>\r\n\r\nRails properly creates a column with mysql datatype "double", after running rake.\r\n\r\n<b>But</b> in the schema.rb there is just the following: \r\n<code>t.float    "number"</code>, \r\nwhere ":limit => 53" is missing.\r\n\r\nThis would fail to create a mysql "double" column when e.g. "db:setup" is executed for \r\nproduction on another machine.\r\n\r\nI suggest either:\r\n<ul>\r\n<li>supply a different way for creating the mysql datatype double, e.g. a rails datatype double which is supported by most databases</li>\r\n<li>fix the ":limit" option to be handled consistently and included in the schema.rb</li>\r\n</ul>\r\n\r\nThis issue might affect other database adapters as well. \r\nDue to the possible loss of data while inserting into a field which should be double and is only float, I consider this issue <b>important</b>. Fully support of doubles is highly wanted!\r\n'
14132,'carlosantoniodasilva','Fix for external generators extend Erb::Generators\nHAML and probably other generators extend this class and invoke filename_with_extensions with the old signature (without format). This makes the second argument optional and defaults it to the #format method which could be overridden as well.'
14114,'senny',"Passing through unadulterated log levels to third party loggers breaks some third party loggers\nSince https://github.com/rails/rails/commit/e0a521cfcd13e4d1f0ae8ab96004289e1c020f71, `config.log_level` is passed through to `Rails.logger.level` without converting to a numeric value unless it's using the stdlib `Logger`.\r\n\r\nThis fixed some third party loggers, but broke others that do quack like the stdlib `Logger`, most specifically https://github.com/sparklemotion/sysloglogger, causing an error like:\r\n\r\n```ruby\r\ncomparison of Symbol with 1 failed\r\nsysloglogger-dacf8ef846d7/lib/syslog/logger.rb:189:in `<='\r\nsysloglogger-dacf8ef846d7/lib/syslog/logger.rb:189:in `add'\r\nsysloglogger-dacf8ef846d7/lib/syslog/logger.rb:102:in `info'\r\n```\r\nsysloglogger is easily patched ala https://github.com/noahhl/sysloglogger/commit/b29bf08a6216364524a866a44ac5254975766880,  so perhaps the fix should be there (though I'd argue it's trying to be a good citizen and act like the stdlib logger), but there's definitely a change in behavior here that impacts some loggers.\r\n\r\ncc/ @dhh"
14088,'sgrif','renames the primary key constraint on renaming table\nRelated to issue https://github.com/rails/rails/issues/12856\r\n\r\nCloses #12856'
14074,'pixeltrix','[4.1.0.beta1] get "/:something" no longer matches "/something/" (with trailing slash)\nHey guys,\r\n\r\nRunning into a problem with [teaspoon](https://github.com/modeset/teaspoon) on Rails 4.1.0.beta1. My app has some issue with current master so I cannot verified if this has been fixed yet.\r\n\r\nEssentially all test suites return `No route matches [GET] "/teaspoon/default/"`. This is the URL that these test cases run on:\r\n\r\n`http://localhost:3000/default/?file=<path_to_some_file>`\r\n\r\nFrom the gem you can see that the [route file](https://github.com/modeset/teaspoon/blob/master/config/routes.rb) is declared as follows:\r\n\r\n```\r\nTeaspoon::Engine.routes.draw do\r\n  get "/fixtures/*filename", to: "spec#fixtures"\r\n  get "/:suite", to: "spec#runner", defaults: { suite: "default" }\r\n  post "/:suite/hooks(/:group)", to: "spec#hooks", defaults: { suite: "default", group: "default" }\r\n  root to: "spec#suites"\r\nend\r\n```\r\n\r\nSo it seems like `get "/:suite"` no longer maps `http://localhost:3000/default/`? I tried running the test suites through `http://localhost:3000/default` (without trailing slash) and they work.\r\n'
14062,'sikachu',"Introduce `:plain`, `:html`, and `:body` render options.\nThis is a continuation from #12374, with slight modification since the discussion went a bit off-topic.\r\n\r\n-----\r\n\r\nPer discussion, `render :text` misdirect people to think that it would render content with `text/plain` MIME type. However, `render :text` actually sets the response body directly, and inherits the default response MIME type, which is `text/html`.\r\n\r\nIn order to reduce confusion, we're introducing 3 more render format to `render`:\r\n\r\n```ruby\r\nrender html: '<strong>HTML String</strong>'.html_safe # render with `text/html` MIME type.\r\n\r\nrender plain: 'plain text' # render with `text/plain` MIME type.\r\n\r\nrender body: 'raw body' # render raw content, does not set content type.\r\n```\r\n\r\nWe want to phrase out the usage of `render :text`, to reduce the confusion in the future. There were some discussion about deprecate `render :text`, but we haven't come into a conclusion yet. So, we'll consider doing that before the next major release.\r\n\r\nFixes #12374"
14056,'senny','SQLite3Adapter now checks for views in table_exists? fixes: 14041\nAdded check for database views in `table_exists?` in SQLite3Adapter\r\n\r\nFixes #14041'
14049,'rafaelfranca','Changing Relation#from now resets #select as well\nRails 4.1.0.beta1:\r\n\r\n```ruby\r\nirb(main):001:0> SignalId::User.all.from("signal_users").to_sql\r\n=> "SELECT `signal_users`.* FROM signal_users"\r\nirb(main):002:0> SignalId::User.all.to_sql\r\n=> "SELECT `signal_users`.* FROM `signal_users`"\r\n```\r\n\r\nrails/master:\r\n\r\n```ruby\r\nirb(main):005:0> SignalId::User.all.from("signal_users").to_sql\r\n=> "SELECT * FROM signal_users"\r\nirb(main):006:0> SignalId::User.all.to_sql\r\n=> "SELECT `signal_users`.* FROM `signal_users`"\r\n```\r\n\r\nAny reason for this change? Doesn\'t seem like changing #from should force a change in #select?\r\n\r\nOur use case is that we\'ve added this module:\r\n\r\n```ruby\r\nmodule UseIndex\r\n  extend ActiveSupport::Concern\r\n\r\n  module ClassMethods\r\n    def use_index(name)\r\n      from "#{quoted_table_name} USE INDEX (#{name})"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nSo calling #use_index on anything now resets the #select, which gives us very different query results.\r\n\r\n/cc @tenderlove @jonleighton '
14043,'strzalek','Variant negotiation\nAllow setting `request.variant` as an array - an order in which they will be rendered.\r\n\r\nFor example:\r\n\r\n```ruby\r\nrequest.variant = [:tablet, :phone]\r\n\r\nrespond_to do |format|\r\n  format.html.none\r\n  format.html.phone # this gets rendered\r\nend\r\n```\r\n\r\n/cc @dhh @jeremy'
14029,'guilleiguaran',"do not crash when `config/secrets.yml` is blank.\nWhile working on an application I was facing the following issue:\r\n\r\nOur setup script touches a blank `config/secrets.yml` and then executes tasks that load the environment to populate it. In an initializer there is a condition on the existence of a secret. This currently crashes as the loading process expects the file to be populated:\r\n\r\n```\r\n/home/travis/build/4teamwork/geschaeftsverzeichnis/vendor/bundle/ruby/2.0.0/gems/railties-4.1.0.beta1/lib/rails/application.rb:310:in `secrets': undefined method `[]' for false:FalseClass (NoMethodError)\r\n```\r\n\r\nThe use-case presented above is certainly esoteric and could probably be solved otherwise. However I think we should not crash on a blank `config/secrets.yml` with this cryptic error.\r\n\r\nCurrently a blank `config/database.yml` yields:\r\n\r\n```\r\n/Users/senny/Projects/rails/activerecord/lib/active_record/connection_adapters/connection_specification.rb:231:in `resolve_env_connection': 'development' database is not configured. Available configuration: {} (ActiveRecord::AdapterNotSpecified)\r\n```\r\n\r\nAfter this patch a blank `config/secrets.yml` will result in:\r\n\r\n```\r\n[2014-02-12 17:10:16] ERROR RuntimeError: Missing `secret_key_base` for 'development' environment, set this value in `config/secrets.yml`\r\n```"
14010,'matthewd',"No longer map PostgreSQL ranges to Ruby ranges. Introduce a new PGRange type.\nThis is a follow up to #13793.\r\n\r\nWe currently [map all PostgreSQL ranges directly to Ruby ranges](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql/oid.rb#L157). Because the Ruby range is inferior to the PostgreSQL range we can not make an exact conversion. This leads to the following issues:\r\n* Ruby ranges to not support exclusive lower bounds. We have some magic that tries to deal with that but it's not accurate and not complete: See [here](https://github.com/rails/rails/blob/a2fa06aa5d205a742cf2036261b99da0c343119f/activerecord/lib/active_record/connection_adapters/postgresql/oid.rb#L150-L151), [here](https://github.com/rails/rails/blob/a2fa06aa5d205a742cf2036261b99da0c343119f/activerecord/lib/active_record/connection_adapters/postgresql/oid.rb#L139-L140) and [here](https://github.com/rails/rails/blob/a2fa06aa5d205a742cf2036261b99da0c343119f/activerecord/lib/active_record/connection_adapters/postgresql/oid.rb#L144)\r\n* Ruby ranges do not support unbound beginnings or ends. We are trying to simulate this using `X::Infinity` values. However those infinity values do not exist for every possible range type. See #12694 for an example.\r\n\r\nThe solution is to introduce a new type called `PGRange`. The `PostgresqlAdapter` will no longer map to Ruby ranges but to this new type. We can model that type to easily support unbound ranges and exclusive beginnings and endings. The `PGRange` type should act mostly like a Ruby range. For cases where you are dependent on an actual Ruby range and for backwards compatibility we add a method to convert a `PGRange` to a Ruby range: `to_range`."
14006,'rafaelfranca','Sungularize ActionController::UnpermittedParameters error in case when only 1 parameter is unpermitted.\nOld behaviour of Strong params had grammar error in case single attribute was unpermitted:\r\n\r\n`ActionController::UnpermittedParameters (found unpermitted parameters: cellphone)`\r\n\r\nThis pull-request fixed it, so new error will have singular form:\r\n\r\n`ActionController::UnpermittedParameters (found unpermitted parameter: cellphone)`\r\n\r\nOf course, if there are 2 or more unpermitted parameter then error will be pluralized:\r\n\r\n`ActionController::UnpermittedParameters (found unpermitted parameters: cellphone, town)`'
13945,'chancancode','Cookies serializer improvements\n- [x] Since the option actually changes how encrypted cookies are serialized, we should name it properly and include the signed cookie jar as well.\r\n- [x] Better tests. Right now the test coverage is pretty sparse. Need to better test the existing cookie features and make sure they work with both of the built-in serializers.\r\n- [x] Fix flash. (#13910, #13944)\r\n- [ ] Find out what else is broken by swapping the default serializers, then fix those.\r\n- [x] Add `HybridSerializer` (need a better name): subclass `JsonSerializer` to transparently migrate existing marshalled cookies into JSON cookies (we can detect the marshal signiture "\\x04\\x08" and branch accordingly).\r\n- [x] Update docs, guides, changelogs to reflect this. Also mention the restrictions on what can be reliably stored in the serialized jars.\r\n- [x] Upgrade guides on migrating existing cookies.'
13923,'senny','has_and_belongs_to_many autosave: true, dont save child records\nGuys,\r\n\r\nI [was working on shoulda-matchers](https://github.com/thoughtbot/shoulda-matchers/pull/434) to make his works with the rails 4.1.0.beta1. I guess the `has_and_belongs_to_many` with `autosave: true` is broken.\r\n\r\nI show some code. First the [models](https://github.com/maurogeorge/shoulda-matchers/blob/rails4.1/spec/shoulda/matchers/active_record/association_matcher_spec.rb#L776-L781)\r\n\r\n```ruby\r\nclass Person < ActiveRecord::Base\r\n  has_and_belongs_to_many :relatives, :autosave => true\r\nend\r\n\r\nclass Relative < ActiveRecord::Base\r\nend\r\n\r\nclass PeopleRelative  < ActiveRecord::Base\r\nend\r\n```\r\n\r\nIn rails 3.2:\r\n\r\n```rbcon\r\n> p = Person.create!\r\n=> #<Person id: 1, name: nil, created_at: "2014-02-02 14:01:07", updated_at: "2014-02-02 14:01:07">\r\n> r = Relative.create!\r\n=> #<Relative id: 1, adopted: nil, created_at: "2014-02-02 14:01:07", updated_at: "2014-02-02 14:01:07">\r\n> p.relatives << r\r\n=> [#<Relative id: 1, adopted: nil, created_at: "2014-02-02 14:01:07", updated_at: "2014-02-02 14:01:07">]\r\n> p.name = \'John Doe\'\r\n=> "John Doe"\r\n> r.adopted = false\r\n=> false\r\n> p.save!\r\n=> true\r\n> p.reload\r\n=> #<Person id: 1, name: "John Doe", created_at: "2014-02-02 14:01:07", updated_at: "2014-02-02 14:01:07">\r\n> r.reload\r\n=> #<Relative id: 1, adopted: false, created_at: "2014-02-02 14:01:07", updated_at: "2014-02-02 14:01:07">\r\n```\r\nWorks as expected on rails 3.2, when I save `Person`, its saves the `Relative`, the `adopted` change from nil to false.\r\n\r\nIn Rails 4.1.0.beta1\r\n\r\n```rbcon\r\n> p = Person.create!\r\n=> #<Person id: 1, name: nil, created_at: "2014-02-02 14:02:04", updated_at: "2014-02-02 14:02:04">\r\n> r = Relative.create!\r\n=> #<Relative id: 1, adopted: nil, created_at: "2014-02-02 14:02:04", updated_at: "2014-02-02 14:02:04">\r\n> p.relatives << r\r\n=> [#<Relative id: 1, adopted: nil, created_at: "2014-02-02 14:02:04", updated_at: "2014-02-02 14:02:04">]\r\n> p.name = \'John Doe\'\r\n=> "John Doe"\r\n> r.adopted = false\r\n=> false\r\n> p.save!\r\n=> true\r\n> p.reload\r\n=> #<Person id: 1, name: "John Doe", created_at: "2014-02-02 14:02:04", updated_at: "2014-02-02 14:02:04">\r\n> r.reload\r\n=> #<Relative id: 1, adopted: nil, created_at: "2014-02-02 14:02:04", updated_at: "2014-02-02 14:02:04">\r\n```\r\nOn rails 4.1.0.beta1, when I save `Person`, its dont save the `Relative`, the `adopted` keeps nil.\r\n\r\n'
13884,'rafaelfranca',"Add `travel_back` to remove stubs from `travel` and `travel_to` and remove auto-rollback after each test case\nThis is a alternative implementation of https://github.com/rails/rails/pull/12966.\r\n\r\nThe reason is the same plus, I'm removing the auto-rollback after each test case. The reason is this auto-rollback will only work with minitest out of the box and it may confuse the users.\r\n\r\nCloses #12966"
13878,'rafaelfranca','find_in_batches should not mutate its argument\nIn case this needs justification: http://blog.marc-andre.ca/2009/03/02/leave-my-options-alone/'
13875,'rafaelfranca',"Default scope is not overridden with scope for same attributes\nHere is the failing test for this \r\n\r\n```diff\r\ndiff --git a/activerecord/test/cases/scoping/default_scoping_test.rb b/activerecord/test/cases/scoping/default_scoping_test.rb\r\nindex 71754cf..2cf13c2 100644\r\n--- a/activerecord/test/cases/scoping/default_scoping_test.rb\r\n+++ b/activerecord/test/cases/scoping/default_scoping_test.rb\r\n@@ -11,6 +11,11 @@ class DefaultScopingTest < ActiveRecord::TestCase\r\n     assert_equal expected, received\r\n   end\r\n\r\n+  def test_scope_overrides_default_scope_for_same_attributes\r\n+    assert_equal DeveloperCalledJamis.where(name: 'David'), DeveloperCalledJamis.unscoped.where(name: 'David')\r\n+    assert_equal DeveloperCalledJamis.david, DeveloperCalledJamis.unscoped.david\r\n+  end\r\n+\r\n   def test_default_scope_as_class_method\r\n     assert_equal [developers(:david).becomes(ClassMethodDeveloperCalledDavid)], ClassMethodDeveloperCalledDavid.all\r\n   end\r\ndiff --git a/activerecord/test/models/developer.rb b/activerecord/test/models/developer.rb\r\nindex 2e2d8a0..ae9c8e8 100644\r\n--- a/activerecord/test/models/developer.rb\r\n+++ b/activerecord/test/models/developer.rb\r\n@@ -165,6 +165,7 @@ class DeveloperCalledJamis < ActiveRecord::Base\r\n\r\n   default_scope { where(:name => 'Jamis') }\r\n   scope :poor, -> { where('salary < 150000') }\r\n+  scope :david, -> { where(:name => 'David') }\r\n end\r\n\r\n```\r\n\r\nI found that this commit has broken this feature.https://github.com/rails/rails/commit/94924dc32baf78f13e289172534c2e71c9c8cade\r\n\r\nbefore this commit these tests are working fine.\r\n\r\nIssue linked #13870"
13859,'rafaelfranca','Let `unscope` ignore non Arel scope.where_values\nIt looks like `unscope` could be less agressive? So we could do thinks such as:\r\n\r\n```ruby\r\nUser.where(name: \'Jamis\').where("created_at > ?", 1.year.ago).unscope(where: [:name])\r\n```\r\n\r\nwithout raising an exception?'
13776,'rafaelfranca','Implement the Dirty API with the Enum feature correctly.\n## Problem\r\n\r\nWhen using the Dirty API, the enum feature was returning the raw value of the attribute. This make some behavior weird like the following:\r\n\r\n```ruby\r\nconversation.status = :active\r\nconversation.status = :archived\r\nconversation.status_was # => 0\r\n```\r\n\r\n## Solution\r\n\r\nIn #13489 was proposed to override `read_attribute` method but this would be too dangerous since the attribute accessor would always return the string representation of the enum value what make difficult to get the integer value. Also `read_attribute` was made to represent the value read from the database, type casted to its column type.\r\n\r\nWhat we want to solve is the Dirty feature methods and these methods use an internal storage of the values. To fix our problem, instead of changing the way the attribute is represented in all the Active Record features we can only change the way the enum values are written in the internal store of the Dirty feature.\r\n\r\nTo make this fix possible I extracted a new hook in `ActiveRecord::Dirty` to make possible to we override only the change attribute feature without overriding the whole `write_attribute` method.\r\n\r\ncc @chancancode @dhh @tenderlove \r\n\r\nCloses #13489.'
13772,'chancancode','Refactored validations rules for has_secure_password\nIt primarily fixes #13753, but also addresses a few other issues I encountered along the way:\r\n\r\n1. When validation is enabled, and a model is saved without a password with `user.save(validate: false)`, a runtime error is raised\r\n\r\n2. It is not possible to clear the password with `user.password = nil`, even though the docs on that method seems to suggest otherwise. (When you don\'t have validations on, it makes sense that you should be allowed to clear the password, and I think it\'s better to stick with `password=` for that rather than encourage users to mess with with `password_digest=` directly)\r\n\r\n3. When validation is enabled, it is possible to save a record without a password(_digest) (bug number 2 makes this not very plausible now, but if that\'s fixe, you\'ll be able to do `user.update!(password: nil)`)\r\n\r\nReason for these bugs\r\n================\r\n\r\nI traced the git history, and I think in multiple attempts to fix the validation messages, the intention of the [original validations](https://github.com/rails/rails/commit/bcf4e4f2b02157cecc1f1727a95cdf5bfa471771#diff-a6f9af64a6d420eb1103e16c0a0a8f04R38) were lost in translation.\r\n\r\nIf I am reading the history right, I think the original intention of the validation rules is to make sure your user model will **always** have a password.\r\n\r\nIn that regard, the original rules are actually spot on. It covers the case when you create a new model (when you set `password=`, it\'ll generate a `password_digest` at the same time, so it passes) and updating an existing model (when you fetch an existing record from the DB, it\'ll have `password_digest` set, even though the virtual attribute `password` is `nil`).\r\n\r\nThe only problem with that rule is that the error message will becomes "password digest can\'t be blank" which is obviously not what you want to show the users. When trying to fix this problem (#6185, #6215; cc @erichmenge @josevalim) we misinterpreted the intention of the rule and ended up adding an unnecessary `before_create` callback and missed the update case (bug 3). (It\'s unnecessary because if `password=` is working correctly `password_digest` will always be non-empty on create.)\r\n\r\nSo I rewrote the tests to spell out all the possible cases and refactored the rules. The end-result also passes all but two (invalid) test cases in the old test suite.\r\n\r\nThe only thing that changed (besides the bugs were fixed) is that having a non-empty `password` but an empty `password_confirmation` now gives "Password confirmation does not match Password" instead of "Password confirmation can\'t be blank". This seems fine to me. That rule was added in #10694 (cc @steveklabnik), and it seems like the primary driver of that PR is just to cover the "create a new user with validation and a blank password confirmation" scenario which is covered here. If the original message is desirable, I can easily add it back.\r\n\r\nI\'m not too sure about the extra-verbose tests, but that\'s what I used to give me safety during my refactor, so I left them there.\r\n\r\n~~Marked as [WIP] because I need to go through all the commits again to make sure I didn\'t unfix any old bugs by accident.~~\r\n\r\ncc @carlosantoniodasilva'
13761,'rafaelfranca',"Refactored object rendering in RenderingHelper#render into it's own method\nProblem\r\n-----------\r\n\r\nIn many projects I've needed to render a json snippet into a html page (usually when I'm using a client side js-framework that needs a json representation of a server-side object). To do this I render my object to json and embed it in a script tag, which makes it available on page load without needing a separate request for data.\r\n\r\nHowever, to do this at present requires something like this:\r\n\r\n```ruby\r\nrender partial: @something.to_partial_path, object: @something, formats: :json\r\n```\r\n\r\nThis is because although it's easy to render an object in the same format as the parent template (ie. `render @something`), it is not possible to pass any rendering options unless you use the (more verbose) hash syntax for render. The same issue exists if you'd like to render an object on the page using a layout. This seems unnecessarily difficult and verbose, for something that (to me) seems like a fairly common problem.\r\n\r\nSolution\r\n-----------\r\n\r\nIn this pull request I've refactored the code in RenderingHelper that's responsible for rending an object out into it's own method, which can be called directly, so that the code above becomes:\r\n\r\n```ruby\r\nrender_object @something, formats: :json\r\n```\r\n\r\nThis makes it far easier to pass rendering options when rendering an object. It is fully backwards compatible. It also makes the code cleaner (imho) because it separates out the two different code paths in render and makes it more obvious what each is doing (i.e. rendering an object vs rendering some kind of template)."
13731,'rafaelfranca',"[Issue7538] undefined method reverse\nThis is a diff pull request to bug https://github.com/rails/rails/issues/7538#issuecomment-31633609\r\n\r\nProblem:\r\nI want to test the `to_sql` method with binds nil or [], but I can't seem to mock the arel parameter correctly, here is an excerpt:\r\n```\r\ndef test_to_sql_should_not_raise_exception_for_nil_binds_param\r\n    class_mock = MiniTest::Mock.new\r\n    class_mock.expect(:name, MiniTest::Mock, [])\r\n    statement_mock = MiniTest::Mock.new\r\n    statement_mock.expect(:to_matcher, nil, [])\r\n    statement_mock.expect(:class, class_mock, [])\r\n    arel_mock = MiniTest::Mock.new\r\n    arel_mock.expect(:ast, statement_mock, [])\r\n    @connection.to_sql(arel_mock)\r\n  end\r\n```\r\nLaunching the test produces:\r\n```\r\n  1) Error:\r\nDatabaseStatementsTest#test_to_sql_should_not_raise_exception_for_nil_binds_param:\r\nMockExpectationError: No more expects available for :class: []\r\n    /home/vagrant/.rvm/gems/ruby-2.0.0-p353/gems/arel-5.0.0/lib/arel/visitors/visitor.rb:24:in `rescue in visit'\r\n```"
13694,'rafaelfranca','Rails 3-2: assert_template with the options :parital and :locals can cause an unexpected exception\nIf you use ```assert_template``` with the options ```:locals``` and ```partials``` and you supply the wrong template name you will get the exception: "undefined method `[]\' for nil:NilClass".\r\n\r\nHere is a unit test to show the issue:\r\n\r\n```ruby\r\nclass RenderTemplateTest < ActionView::TestCase\r\n  # ...\r\n  test "supports specifying locals (failing with wrong template name)" do\r\n    controller.controller_path = "test"\r\n    render(:template => "test/calling_partial_with_layout")\r\n    assert_raise ActiveSupport::TestCase::Assertion,\r\n            /expecting partial <_adrian_has_monkey_balls> but action rendered <_partial_for_use_in_layout>/ do\r\n      assert_template :partial => "_adrian_has_monkey_balls", :locals => { :name => "Somebody Else" }\r\n    end\r\n  end\r\nend\r\n```'
13691,'rafaelfranca','Fixes #12423 - Additional select columns are removed when using includes\nCloses #12423'
13667,'pixeltrix','DateTime ranges can be iterated\nA change made in #11474 / ffc8abd41b420c2eac58fe92fb03e494e690e43f prevented `DateTime` ranges being iterated over - check needs to be `is_a?(Time)` to make it work again.'
13655,'rafaelfranca',"Implement an internal stub method to make time travel not dependent on mocha\nBefore this patch time travel feature depends on mocha's stub feature.\r\nSince mocha is not a Rails dependency we can't depend on this specific\r\nlibrary.\r\n\r\nWe choose to use our own implementation to avoid adding one more\r\ndependency to Rails.\r\n\r\nFixes #13380.\r\n\r\nI'm wondering if we should include these internal stubs method only in Date and Time classes or if we should move this feature to another file to make it available to our users.\r\n\r\ncc @dhh @senny @tenderlove "
13650,'chancancode',"enum typecast issue\nI am trying to use AR::Enum and when I submit the form I am getting a `'0' is not a valid type` exception. As far as I understand the problem is the value is not typecasted to integer. I am using an integer column though but I guess Enum uses the raw value from the params not the value of the model attribute. \r\nIs this the expected behavior and I should handle the typecasting myself?"
13648,'rafaelfranca','Aggregate methods (empty?, any?, count) generate invalid SQL\nNOTE the two tests above are similar. Only tThe assertions order is different.\r\nOne is probably passing only because it has fetched the data on the `rel` while the other needs to use SQL `COUNT` to return the result for `#empty?`.\r\n\r\nIt could be related to #12405.\r\n\r\n```ruby\r\ngem \'activerecord\', \'4.1.0.beta1\'\r\nrequire \'active_record\'\r\nrequire \'minitest/autorun\'\r\nrequire \'logger\'\r\n\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Base.establish_connection(\r\n  :adapter  => \'postgresql\',\r\n  :database => \'x\'\r\n)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :blogs, :force => true do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Blog < ActiveRecord::Base\r\nend\r\n\r\nclass TestMe < MiniTest::Unit::TestCase\r\n  def test_empty_then_to_a\r\n    rel = Blog.select("blogs.*, 1234 as more")\r\n    assert_equal rel.empty?, true # this fails\r\n    assert_equal rel.to_a, []\r\n  end\r\n\r\n  def test_to_a_then_empty\r\n    rel = Blog.select("blogs.*, 1234 as more")\r\n    assert_equal rel.to_a, []\r\n    assert_equal rel.empty?, true\r\n  end\r\nend\r\n```\r\n\r\n\r\nThis fails with:\r\n\r\n```\r\n-- create_table(:blogs, {:force=>true})\r\nD, [2014-01-09T17:10:07.364506 #21686] DEBUG -- :    (1.5ms)  DROP TABLE "blogs"\r\nD, [2014-01-09T17:10:07.366782 #21686] DEBUG -- :    (2.1ms)  CREATE TABLE "blogs" ("id" serial primary key, "name" character varying(255)) \r\n   -> 0.0171s\r\nMiniTest::Unit::TestCase is now Minitest::Test. From tmp/test-eager.rb:21:in `<main>\'\r\nRun options: --seed 22020\r\n\r\n# Running:\r\n\r\nD, [2014-01-09T17:10:07.438523 #21686] DEBUG -- :    (0.2ms)  SELECT COUNT(blogs.*, 1234 as more) FROM "blogs"\r\nE, [2014-01-09T17:10:07.438591 #21686] ERROR -- : PG::SyntaxError: ERROR:  syntax error at or near "as"\r\nLINE 1: SELECT COUNT(blogs.*, 1234 as more) FROM "blogs"\r\n                                   ^\r\n: SELECT COUNT(blogs.*, 1234 as more) FROM "blogs"\r\nED, [2014-01-09T17:10:07.439088 #21686] DEBUG -- :   Blog Load (0.2ms)  SELECT blogs.*, 1234 as more FROM "blogs"\r\n.\r\n\r\nFinished in 0.006772s, 295.3337 runs/s, 295.3337 assertions/s.\r\n\r\n  1) Error:\r\nTestMe#test_empty_then_to_a:\r\nActiveRecord::StatementInvalid: PG::SyntaxError: ERROR:  syntax error at or near "as"\r\nLINE 1: SELECT COUNT(blogs.*, 1234 as more) FROM "blogs"\r\n                                   ^\r\n: SELECT COUNT(blogs.*, 1234 as more) FROM "blogs"\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/postgresql_adapter.rb:798:in `exec\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/postgresql_adapter.rb:798:in `block in exec_no_cache\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/abstract_adapter.rb:359:in `block in log\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activesupport-4.1.0.beta1/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/abstract_adapter.rb:353:in `log\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/postgresql_adapter.rb:798:in `exec_no_cache\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/postgresql/database_statements.rb:137:in `exec_query\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/postgresql_adapter.rb:920:in `select\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/abstract/database_statements.rb:23:in `select_all\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/connection_adapters/abstract/query_cache.rb:69:in `select_all\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/relation/calculations.rb:254:in `execute_simple_calculation\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/relation/calculations.rb:216:in `perform_calculation\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/relation/calculations.rb:111:in `calculate\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/relation/calculations.rb:26:in `count\'\r\n    /Users/dnagir/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-4.1.0.beta1/lib/active_record/relation.rb:251:in `empty?\'\r\n    tmp/test-eager.rb:24:in `test_empty_then_to_a\'\r\n\r\n2 runs, 2 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n\r\n'
13646,'chancancode','Clarify behavior of json_escape\nThe behavior of json_escape was fixed in 2f1c578, but the doc\r\nchanges and example in that commit incorrectly indicated that the\r\nreturn value would be html-safe. Since quotation marks are\r\npreserved, the raw value is not safe to use in other contexts\r\n(specifically HTML attributes).'
13645,'pixeltrix',"routes.url_helpers module is not fully working with ruby 2.1.0\nIt works if `url_helpers` module was included into module or class but not works as expected if was included into singleton class of an object (at least, it doesn't define `default_url_options` attribute). [Here](https://github.com/saks/rails/commit/ab34eb14ba6b3b901a64f64dd57b97e177f738e5) is the test that shows this problems, but only with ruby 2.1.0. It works for 1.9.3 and 2.0.0."
13640,'rafaelfranca','SQLite3: Always close statements.\nSQLite3 adapter must make sure to close statements after queries.\r\n\r\nFixes: #13631'
13622,'pixeltrix',"Previewing emails does not call interceptors\nI'm the maintainer of [premailer-rails](/fphilipe/premailer-rails). My gem registers an interceptor for outgoing emails and inlines the CSS.\r\n\r\nA user noticed that previewing emails would not invoke my gem and opened fphilipe/premailer-rails#100. Obviously the `delivering_email` hook is never called, thus my gem won't have a chance to modify the message before it is rendered.\r\n\r\nI do think that third parties should have the chance to hook into the preview process, thus I'm opening this issue. I can think of two possible solutions:\r\n\r\n-   Add another hook to `ActionMailer::Base`. The problem with this is that it merely forwards the hook registration to `Mail`, which has no notion of previewing.\r\n\r\n-   Add a hook to `ActionMailer::Preview`.\r\n\r\nI think the latter makes more sense.\r\n\r\nIn either case, a hook `#previewing_email` should get called on the registered object. This would give gems and other code a chance to make the preview match the delivered email.\r\n\r\nI would tackle this issue if you agree that this makes sense."
13620,'pixeltrix','ActionMailer::Preview not working\nHi, \r\n\r\nI\'m trying the new feature MailingPreview with rails 4.1.beta1.\r\nI\'ve \r\n````\r\nclass UserMailerPreview < ActionMailer::Preview\r\n  def welcome\r\n    user = User.last\r\n    UserMailer.welcome(user)\r\n  end\r\nend\r\n```\r\nInto test/mailers/previews/user_mailer_preview.rb\r\n\r\nWhen I try to get http://localhost:3000/rails/mailers. \r\nConsole say : Processing by Rails::MailersController#index as HTML\r\nAfter several minutes, I get an error :   \r\n\r\nNo such file to load -- /lib/tm/htmloutput\r\n\r\nBacktrace : https://gist.github.com/kaluznyo/8296751\r\n\r\nI try with ou without :\r\n\r\n```\r\nconfig.action_mailer.preview_path = "#{Rails.root}/test/mailers/previews"\r\n```\r\n in my dev.rb.\r\n\r\nDon\'t know if it\'s interesting but in console if I do : ActionMailer::Base.preview_path I get nil.\r\n\r\nDon\'t know if it\'s a bug or if I doing wrong...\r\n'
13597,'rafaelfranca','Make change_table use object of current database adapter\n- Earlier, change_table was creating database-agnostic object.\r\n- After this change, it will create correct object based on current database adapter.\r\n- This will ensure that create_table and change_table will get same objects.\r\n- Fixes #13577 and #13503\r\n'
13592,'pixeltrix','Error message for optimized url helper is different from the normal helper\nWhen generating a path using the optimized helper the error message doesn\'t show the controller and action from the route making it harder to diagnose the problem, e.g:\r\n\r\n``` irb\r\n>> app.post_path(nil)\r\nActionController::UrlGenerationError: No route matches {:id=>nil} missing required keys: [:id]\r\n```\r\n\r\nversus:\r\n\r\n``` irb\r\n>> app.post_path(:id => nil)\r\nActionController::UrlGenerationError: No route matches {:action=>"show", :controller=>"posts", :id=>nil} missing required keys: [:id]\r\n```'
13583,'guilleiguaran','mem_cache_store requires dalli, so only accept dalli/client\n`:mem_cache_store` require `Dalli`, rescue `Dalli` exceptions, and follow `Dalli` API.\r\nMemcached gem, for instance, doesnt work anymore, as the API are different.\r\n\r\nAs we already require one client, we should make sure that client works, and not accept others, and if someone wants to use another memcache client they can write their own store adapter.\r\n\r\nreview @rafaelfranca @carlosantoniodasilva\r\n\r\nThat might need a Changelog entry, or/and throw an error if not a `Dalli::Client` given.. let me know, I can add both.'
13582,'rafaelfranca','Ensure Active Record connection consistency\nCurrently Active Record can be configured via the environment variable `DATABASE_URL` or by manually injecting a hash of values which is what Rails does, reading in `database.yml` and setting Active Record appropriately. Active Record expects to be able to use `DATABASE_URL` without the use of Rails, and we cannot rip out this functionality without deprecating. This presents a problem though when both config is set, and a `DATABASE_URL` is present. Currently the `DATABASE_URL` should "win" and none of the values in `database.yml` are used. This is somewhat unexpected to me if I were to set values such as `pool` in the `production:` group of `database.yml` they are ignored.\r\n\r\nThere are many ways that active record initiates a connection today:\r\n\r\n- Stand Alone (without rails)\r\n  - `rake db:<tasks>`\r\n  - `ActiveRecord.establish_connection`\r\n \r\n- With Rails\r\n  - `rake db:<tasks>`\r\n  - `rails <server> | <console>`\r\n  - `rails dbconsole`\r\n\r\n\r\nWe should make all of these behave exactly the same way. The best way to do this is to put all of this logic in one place so it is guaranteed to be used.\r\n\r\nHere is my prosed matrix of how this behavior should work:\r\n\r\n```\r\nNo database.yml\r\nNo DATABASE_URL\r\n=> Error\r\n```\r\n\r\n```\r\ndatabase.yml present\r\nNo DATABASE_URL\r\n=> Use database.yml configuration\r\n```\r\n\r\n```\r\nNo database.yml\r\nDATABASE_URL present\r\n=> use DATABASE_URL configuration\r\n```\r\n\r\n```\r\ndatabase.yml present\r\nDATABASE_URL present\r\n=> Merged into `url` sub key. If both specify `url` sub key, the `database.yml` `url`\r\n   sub key "wins". If other paramaters `adapter` or `database` are specified in YAML,\r\n   they are discarded as the `url` sub key "wins".\r\n```\r\n\r\n### Implementation\r\n\r\nCurrent implementation uses `ActiveRecord::Base.configurations` to resolve and merge all connection information before returning. This is achieved through a utility class: `ActiveRecord::ConnectionHandling::MergeAndResolveDefaultUrlConfig`.\r\n\r\nTo understand the exact behavior of this class, it is best to review the behavior in activerecord/test/cases/connection_adapters/connection_handler_test.rb though it should match the above proposal.'
13575,'rafaelfranca',"Fixing ActiveRecord::Store YAML coder for nil values\nCloses #13570\r\n\r\nPretty much that's it. If there's anything to improve, I'll be happy do it! :D"
13571,'fxn',"A pass over the Getting Started guide sections 1, 2, and 3 [ci skip]\n* Add note about managing Ruby environments\r\n* Point to curated lists of Ruby learning resources\r\n* Expound on DRY and Convention over Configuration\r\n* Remove note on superuser--thankfuly coders new to Rails don't have to sudo anymore :)\r\n* Installation/verification instructions for SQLite3, since it's a dependency"
13553,'pixeltrix',"TZInfo-related Exceptions errors when trying to use  Rails 4.1 on Windows\nFor whatever reason, Rails 4.1 on Windows for me thus far has been unusable with `TZInfo::InvalidTimezoneIdentifier` errors when trying to start the Rails server (screenshot provided) or trying to use any `rails g` commands. \r\n\r\nAccording to various sources, `gem 'tzinfo-data', platforms: [:mingw, :mswin]` inside the gemfile should have ensured functionality related to TZInfo should be working.\r\n\r\nFor me it hasn't; I've provided a screenshot of my vim file verifying its existence. \r\n\r\n## Environment Information \r\nI am running the 32-bit version of Ruby, version ` 2.0.0p247`,  on Windows 8.1. \r\n\r\nI utilize cmdr, gitbash, or console32 whenever I use Rails 4. The previous version of Rails 4 I was using was `4.0.2`; I didn't have any issues with that version of Rails 4 and uninstalled all previous versions of Rails 4 in an attempt to isolate the problem to no avail. \r\n\r\n \r\n## Screenshots \r\n\r\n![screenshot 4322](https://f.cloud.github.com/assets/1223224/1826779/9ec8caf0-720d-11e3-9321-d870b5f37c31.png)\r\n![screenshot 4323](https://f.cloud.github.com/assets/1223224/1826780/9ec9b33e-720d-11e3-9393-c0ff0cfc33be.png)\r\n "
13521,'pixeltrix','Collection Routing for Rails\nAs part of Google Summer of Code 2013, I worked on implementing a collection routing api for Rails under the mentorship of @pixeltrix.\r\nMajority of the work is over with enough stability to be considered for merging. I would like to open up the discussion on the api. The documentation still remains but this is on purpose considering the community might vote for changes.\r\n### Features\r\n#### Generate collection routes by including a collection option.\r\n```ruby\r\nresources :posts, collection: true\r\n# rake routes\r\n#     Prefix Verb   URI Pattern                Controller#Action\r\n#      posts GET    /posts(/:ids)(.:format)    posts#index {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            POST   /posts(.:format)           posts#create {:collection=>true}\r\n#            PUT    /posts/:ids(.:format)      posts#replace {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            PATCH  /posts/:ids(.:format)      posts#update_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            DELETE /posts/:ids(.:format)      posts#destroy_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n# edit_posts GET    /posts/:ids/edit(.:format) posts#edit_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#   new_post GET    /posts/new(.:format)       posts#new\r\n#  edit_post GET    /posts/:id/edit(.:format)  posts#edit\r\n#       post GET    /posts/:id(.:format)       posts#show\r\n#            PATCH  /posts/:id(.:format)       posts#update\r\n#            PUT    /posts/:id(.:format)       posts#update\r\n#            DELETE /posts/:id(.:format)       posts#destroy\r\n```\r\n\r\n#### Pass ranges as parameters and filter them using the Strong Parameters API\r\nRanges can now be passed as url parameters. Following are some examples :-\r\n```\r\nhttp://example.com/posts/1..10,17,45...89 => 1 to 10, 17 and 45 to 88\r\nhttp://example.com/posts/1..10,7 => 1 to 10\r\nhttp://example.com/posts/1,5,9 => 1, 5 and 9\r\n```\r\n\r\n```ruby\r\nfiltered_params = params.permit ids: 1...768\r\nfiltered_params = params.permit ids: 69..420\r\n```\r\n\r\n#### Generate collection routing enabled controllers using scaffolds\r\n`rails generate scaffold Posts --collection`\r\n```ruby\r\nclass PostsController < ApplicationController\r\n  before_action :set_post, only: [:show, :edit, :update, :destroy]\r\n  \r\n  # GET /posts/1..10,17\r\n  def index\r\n    @posts = post_ids ? Post.find(post_ids) : Post.all\r\n  end\r\n\r\n  # Post ids\r\n  def post_ids\r\n    @posts_ids ||= params.permit(ids: 1..2**32-1)\r\n  end\r\n\r\n  # GET /posts/1\r\n  def show\r\n  end\r\n\r\n  # GET /posts/new\r\n  def new\r\n    @post = Post.new\r\n  end\r\n\r\n  # GET /posts/1/edit\r\n  def edit\r\n  end\r\n\r\n  # POST /posts\r\n  def create\r\n    posts_params ? create_many : create_one\r\n  end\r\n\r\n  def create_many\r\n    @posts = Post.create(posts_params)\r\n    redirect_to posts_url(@posts), notice: \'Posts were successfully updated.\'\r\n  end\r\n\r\n  def create_one\r\n    @post = Post.create(post_params)\r\n    redirect_to post_url(@post), notice: \'Post was successfully updated.\'\r\n  end\r\n\r\n  # PATCH/PUT /posts/1\r\n  def update\r\n    if @post.update(post_params)\r\n      redirect_to @post, notice: \'Post was successfully updated.\'\r\n    else\r\n      render action: \'edit\'\r\n    end\r\n  end\r\n\r\n  # DELETE /posts/1\r\n  def destroy\r\n    @post.destroy\r\n    redirect_to posts_url, notice: \'Post was successfully destroyed.\'\r\n  end\r\n  \r\n  # Collection routes\r\n  # PATCH /posts/1..10\r\n  def update_many\r\n    Post.find(post_ids).each do |post|\r\n      post.update(params[:posts][:"#{post.id}"])\r\n    end\r\n    redirect_to @post, notice: \'Posts were successfully updated.\'\r\n  end\r\n\r\n  # PUT /posts/1..10\r\n  def replace\r\n    Post.destroy_all\r\n    create\r\n  end\r\n\r\n  # DELETE /users/1..10\r\n  def destroy_many\r\n    @posts = Post.destroy(posts_ids)\r\n  end\r\n  \r\n  private\r\n    # Use callbacks to share common setup or constraints between actions.\r\n    def set_post\r\n      @post = Post.find(params[:id])\r\n    end\r\n\r\n    # Only allow a trusted parameter "white list" through.\r\n    def post_params\r\n      params[:post]\r\n    end\r\n    \r\n    # Only allow a trusted collection parameter "white list" through.\r\n    def posts_params\r\n      params[:posts]\r\n    end\r\nend\r\n```\r\nScaffold generators of dependencies like JBuilder need to be updated to incorporate collection routing.\r\nFuture work will include reducing `replace` and `update_many` to single line atomic database operations using ActiveRecord.'
13518,'pixeltrix',"Encoding::CompatibilityError when utf8 project dir and utf8 url\nI name the rails project dir with non-ASCII chars.\r\nIt works with any ascii URL.\r\nWhen URL contains non-ASCII chars,\r\nthrow this following CompatibilityError.\r\nIt appears both utf8 rails dir name and utf8 url.\r\n\r\n<code>[2013-12-28 22:25:07] ERROR Encoding::CompatibilityError: incompatible character encodings: UTF-8 and ASCII-8BIT\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/actionpack-4.0.0/lib/action_dispatch/middleware/static.rb:17:in `join'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/actionpack-4.0.0/lib/action_dispatch/middleware/static.rb:17:in `match?'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/actionpack-4.0.0/lib/action_dispatch/middleware/static.rb:59:in `call'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/railties-4.0.0/lib/rails/engine.rb:512:in `call'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/railties-4.0.0/lib/rails/application.rb:98:in `call'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/rack-1.5.2/lib/rack/lock.rb:18:in `call'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/rack-1.5.2/lib/rack/content_length.rb:15:in `call'\r\n\t/usr/local/lib/ruby/gems/2.1.0/gems/rack-1.5.2/lib/rack/handler/webrick.rb:61:in `service'\r\n\t/usr/local/lib/ruby/2.1.0/webrick/httpserver.rb:139:in `service'\r\n\t/usr/local/lib/ruby/2.1.0/webrick/httpserver.rb:95:in `run'\r\n\t/usr/local/lib/ruby/2.1.0/webrick/server.rb:296:in `block in start_thread'\r\n\r\n</code>"
13512,'rafaelfranca','Hstore arrays fix (follow up for #11444)\nI took #11444, rebased it to the current master and addressed @senny comments.\r\n\r\nI\'m getting the following error locally, and I\'m not currently sure if its happening because of the changes:\r\n\r\n```\r\n  1) Error:\r\nTimestampTest#test_bc_timestamp:\r\nActiveRecord::StatementInvalid: PG::DatetimeFieldOverflow: ERROR:  date/time field value out of range: "0000-01-01 07:52:57.000000 BC"\r\n: INSERT INTO "developers" ("created_at", "created_on", "name", "updated_at", "updated_on") VALUES ($1, $2, $3, $4, $5) RETURNING "id"\r\n    /vagrant/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:818:in `get_last_result\'\r\n   ...\r\n```\r\n\r\nUsing this as a test bed to see if it also fails on Travis :)'
13489,'rafaelfranca','make changed_attributes work with new enum feature\nChanged per the discussion in PR https://github.com/rails/rails/pull/13267.'
13470,'strzalek','Add any/all support for variants\nLike `format.any`, you can do the same with variants now.\r\n\r\nIt works for both inline:\r\n\r\n```ruby\r\nrespond_to do |format|\r\n  format.html.any   { render text: "any"   }\r\n  format.html.phone { render text: "phone" }\r\nend\r\n```\r\n\r\nand block syntax:\r\n\r\n```ruby\r\nrespond_to do |format|\r\n  format.html do |variant|\r\n    variant.any(:tablet, :phablet){ render text: "any" }\r\n    variant.phone { render text: "phone" }\r\n  end\r\nend\r\n```\r\n\r\nRegarding implementation, `VariantFilter` was removed and `VariantCollector` is used for both inline and block syntax. This is needed, as now we don\'t know what variant should be rendered until we collect all of them (`any` complicates this).\r\n\r\nIn the end, I think this is even better. Implementation is cleaner and more consistent because we don\'t have 2 different things - filter and collector - but only one, which takes care of everything.\r\n\r\n/cc @dhh '
13457,'strzalek',"Add missing av/railtie require\nThis breaks plugins and some apps after upgrading to 4.1 beta. We shouldn't require users to do this, this should be included by default.\r\n\r\nRef: #13384"
13421,'senny',"Rails 4.0.2 initializer_logger forces use of Logger\nIf I have configured Rails.logger/config.logger with a custom logger (log4r in my case), the :initialize_logger initializer sets the logger level to a constant defined by ActiveSupport::Logger (which inherits it from Ruby's Logger), thereby forcing one to use Logger.  While Log4r has log levels, the values are different, so setting Rails.logger.level to Logger::INFO (1) actually tells Log4r to log at DEBUG level\r\n\r\nhttps://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L56\r\n"
13389,'chancancode','`scope` and `enum` should raise an error if the generated methods conflict with an existing one\nIt should cover these four categories:\r\n\r\nCase 1 (class method conflicts):\r\n\r\n```ruby\r\nclass Lol < ActiveRecord::Base\r\n  enum state_a: [:new]\r\nend\r\n\r\n>> Lol.new\r\n  Lol Load (1.1ms)  SELECT "lols".* FROM "lols"  WHERE "lols"."state_a" = 0\r\n```\r\n\r\nCase 2 (conflict between enums):\r\n\r\n```ruby\r\nclass Model < ActiveRecord::Base\r\n  enum state_a: [:conflict, :something]\r\n  enum state_b: [:conflict, :else]\r\nend\r\n```\r\n\r\nCase 3 (conflict with AR methods):\r\n\r\n```ruby\r\nclass Lol < ActiveRecord::Base\r\n  enum state_a: [:valid]\r\nend\r\n\r\n>> Lol.new.save!\r\n   (0.1ms)  begin transaction\r\n   (0.0ms)  rollback transaction\r\nArgumentError: wrong number of arguments (1 for 0)\r\n```\r\n\r\nCase 4 (dynamic AR methods):\r\n\r\n```ruby\r\n>> o = Order.first\r\n  Order Load (0.2ms)  SELECT  "orders".* FROM "orders"   ORDER BY "orders"."id" ASC LIMIT 1\r\n=> #<Order id: 1, shipping_address: nil, state: nil, created_at: "2013-12-19 00:14:45", updated_at: "2013-12-19 00:14:45">\r\n>> o.shipping_address = "123 Some St"\r\n=> "123 Some St"\r\n>> o.shipping_address_changed?\r\n=> false\r\n```\r\n\r\n\r\n\r\nAs part of this, this should be disallowed as well:\r\n\r\n```ruby\r\nclass Model < ActiveRecord::Base\r\n  scope :new, ->{ .... }\r\n  scope :allocate, ->{ ... }\r\n  scope :all, ->{ ... }\r\n  scope :none, -> { ... }\r\n\r\n  ...\r\nend\r\n```'
13384,'strzalek',"[4.1.0.beta1] Method missing `action_view`\nJust created a 4.0.2 application a few days ago and attempting to upgrade. I have not run `bundle exec spring binstub --all`, and I'm receiving this error any time I attempt to run a rake task.\r\n\r\n```bash\r\n$ bin/rake secret --trace\r\nrake aborted!\r\nundefined method `action_view' for #<Rails::Railtie::Configuration:0x007fd8531b0bd8>\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/railtie/configuration.rb:95:in `method_missing'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/jquery-rails-3.0.4/lib/jquery/rails/railtie.rb:7:in `block in <class:Railtie>'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/activesupport-4.1.0.beta1/lib/active_support/lazy_load_hooks.rb:36:in `call'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/activesupport-4.1.0.beta1/lib/active_support/lazy_load_hooks.rb:36:in `execute_hook'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/activesupport-4.1.0.beta1/lib/active_support/lazy_load_hooks.rb:45:in `block in run_load_hooks'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/activesupport-4.1.0.beta1/lib/active_support/lazy_load_hooks.rb:44:in `each'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/activesupport-4.1.0.beta1/lib/active_support/lazy_load_hooks.rb:44:in `run_load_hooks'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/application.rb:121:in `initialize'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/railtie.rb:171:in `new'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/railtie.rb:171:in `instance'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/application.rb:90:in `inherited'\r\n/Users/mbridges/code/github.com/mattdbridges/devday/config/application.rb:15:in `<module:Devday>'\r\n/Users/mbridges/code/github.com/mattdbridges/devday/config/application.rb:14:in `<top (required)>'\r\n/Users/mbridges/code/github.com/mattdbridges/devday/Rakefile:4:in `require'\r\n/Users/mbridges/code/github.com/mattdbridges/devday/Rakefile:4:in `<top (required)>'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/rake_module.rb:25:in `load'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/rake_module.rb:25:in `load_rakefile'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:637:in `raw_load_rakefile'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:94:in `block in load_rakefile'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:165:in `standard_exception_handling'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:93:in `load_rakefile'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:77:in `block in run'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:165:in `standard_exception_handling'\r\n/Users/mbridges/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/rake-10.1.0/lib/rake/application.rb:75:in `run'\r\nbin/rake:4:in `<main>'\r\n```\r\n\r\nAnd I updated my Rakefile to be consistent with a new 4.1.0 app:\r\n\r\n```ruby\r\n# Add your own tasks in files placed in lib/tasks ending in .rake,\r\n# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.\r\n\r\nrequire File.expand_path('../config/application', __FILE__)\r\n\r\nRails.application.load_tasks\r\n```"
13381,'jonleighton',"[4.1.0.beta1]  Generator calling `generate` hangs\nWhen I send an INT here's the trace:\r\n\r\n\r\n```\r\n    generate  blacklight:assets\r\n^C/Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/run.rb:74:in `gets': Interrupt\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/run.rb:74:in `run_command'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/run.rb:24:in `call'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/command.rb:7:in `call'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/rails.rb:23:in `call'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client/command.rb:7:in `call'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/lib/spring/client.rb:23:in `run'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/spring-1.0.0/bin/spring:31:in `<top (required)>'\r\n\tfrom bin/rails:9:in `load'\r\n\tfrom bin/rails:9:in `<main>'\r\n/Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:252:in `system': Interrupt\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:252:in `run'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:264:in `run_ruby_script'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/generators/actions.rb:193:in `block in generate'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:192:in `block in in_root'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:182:in `block in inside'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/2.0.0/fileutils.rb:125:in `chdir'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/2.0.0/fileutils.rb:125:in `cd'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:182:in `inside'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/actions.rb:192:in `in_root'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/railties-4.1.0.beta1/lib/rails/generators/actions.rb:193:in `generate'\r\n\tfrom /Users/justin/.rbenv/versions/2.0.0-p353/lib/ruby/gems/2.0.0/gems/blacklight-4.5.0/lib/generators/blacklight/blacklight_generator.rb:42:in `copy_public_assets'\r\n```\r\n\r\nHere's the code: https://github.com/projectblacklight/blacklight/blob/v4.5.0/lib/generators/blacklight/blacklight_generator.rb#L42\r\n"
13380,'rafaelfranca','[4.1.0.beta1] Time travel helpers don\'t work "out of the box"\nIntroduced by #12824 \r\n\r\nI expect `travel` and `travel_to` to work on a fresh Rails application. Currently they depend on `mocha`, which is not a dependency for `rails`. We can:\r\n\r\n1. make it a dependency\r\n1. make it an optional dependency, warn when it\'s not there and show instructions on how to activate it.\r\n1. ship a custom mocking implementation not built on top of mocha\r\n1. depend on Timecop'
13372,'pixeltrix','[4.1.0.beta1] ActionMailer configs not recognized\nI have feature specs that work fine in Rails-4.0.0, but break when upgrading to Rails-4.1.0.beta1. The specs that fail hit controller actions that do some email sending.\r\n\r\nHere are the errors I get:\r\n  1. ActionView::Template::Error:\r\nMissing host to link to! Please provide the :host parameter, set default_url_options[:host], or set :only_path to true\r\n\r\n  2. ArgumentError:\r\nMissing host to link to! Please provide the :host parameter, set default_url_options[:host], or set :only_path to true\r\n\r\nBoth of the above errors have to do with ActionMailer\'s config and I already have them set up in config/environments/test.rb:\r\n```ruby\r\nconfig.action_mailer.delivery_method = :test\r\nconfig.action_mailer.default_url_options = { host: "www.example.com" }\r\n```'
13369,'pixeltrix','[4.1.0.beta1] Router regression with trailing slash and query string\nWhile upgrading to `4.1.0.beta1` I noticed a regression with URLs that have a trailing slash and a query string. This used to work with `4.0.2`. Following is an excerpt from my reproduction script:\r\n\r\n```ruby\r\n  routes.draw do\r\n    get \'/\' => \'test#index\'\r\n    resources :streams do\r\n    end\r\n  end\r\n\r\n  def test_returns_success\r\n    get \'/streams\'\r\n    assert last_response.ok? # passes\r\n \r\n    get \'/?author=senny\'\r\n    assert last_response.ok? # passes\r\n \r\n    get \'/streams/?author=senny\'\r\n    assert last_response.ok? # fails\r\n  end\r\n```\r\n\r\nThe resulting error is:\r\n\r\n```\r\nActionController::RoutingError (No route matches [GET] "/streams/"):\r\n```\r\n\r\nThe full test-case to reproduce the problem can be found here: https://gist.github.com/senny/8019086\r\n'
13355,'rafaelfranca','activerecord: Initialize Migration with version from MigrationProxy.\n## Problem\r\n\r\nWhen running migrations with `rake db:migrate`, notice how the output to standard output looks like the following.\r\n\r\n```\r\n==  CreateUserTable: migrating ================================================\r\n==  CreateUserTable: migrated (0.0000s) =======================================\r\n```\r\n\r\nThis output is done through Migration#announce, delegated from MigrationProxy, as follows\r\n\r\nFrom \r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/migration.rb#L596\r\n```ruby\r\n    def announce(message)\r\n      text = "#{version} #{name}: #{message}"\r\n      length = [0, 75 - text.length].max\r\n      write "== %s %s" % [text, "=" * length]\r\n    end\r\n```\r\n\r\nThe output is supposed to include a version, but the version is always `nil` within the migration.  The MigrationProxy has the version, but initializes the Migration with the default parameters (i.e. `version = nil`)\r\n\r\nThis missing version can also be a problem when trying to use the version within a migration.  Our use case for doing this is to update a schema_migrations table on each shard, so a migration that succeeds on one shard, then fails on another, can be retried only on the shards it still needs to run on.\r\n\r\n## Solution\r\n\r\nInitialize the Migration loaded from a MigrationProxy with the version.\r\n\r\n## Backport\r\n\r\nThis can be cherry-picked without conflict onto the 4-0-stable or 3-2-stable branch.'
13349,'pixeltrix','Routes + scope + multiple params with similar matching = problems on replacing params values\nI\'m in Rails 4.0.2\r\n\r\nIf I define this route:\r\n\r\n    scope "/:family/:family_kind" do\r\n      resources :users, :only => [:show], :as => :user_by_family\r\n    end\r\n\r\nI get this route built:\r\n\r\n    user_by_family GET    /:family/:family_kind/users/:id(.:format) users#show\r\n\r\nWhich is right.\r\n\r\nBut if I try to build a path using this:\r\n\r\n    user_by_family_path("FAMILY_ID", "FAMILY_KIND", @user)\r\n\r\nI get: \r\n\r\n    /FAMILY_ID/FAMILY_ID_kind/users/1\r\n\r\nBe aware how the first value has been used to replace both params in the `scope`, ignoring the `_kind` part of the second scope param.\r\n\r\nIt works properly if I use the _explicit_ version:\r\n\r\n    user_by_family_path(:family => "FAMILY_ID", :family_kind => "FAMILY_KIND", :id => @user)'
13346,'chancancode',"Release notes fixes\nA series of fixes for the 4.1 release notes\r\n\r\nTodo: \r\n* [x] Add Action Mailer previews to the release notes\r\n* [x] Add secrets.yml to the release notes\r\n* [x] Add concerning\r\n\r\nI can squash and add [ci skips] after this has been reviewed, there are a few things I'm not too sure about (variants -> Action Pack request variant) so keeping them isolated makes it easier to revert those if needed."
13319,'pixeltrix',"JBuilder overrides Rails scaffold generators\n\\cc @pixeltrix\r\nI am right now giving finishing touches to my Google Summer of Code 2013 project of [Collection routing for Rails](http://github.com/ujjwalt/rails/tree/collection-routing)\r\n\r\nThe problem is that the Scaffold Controller is not being generated as JBuilder hijacks the process by changing Thor's source root to point to it's own generators. What should I do about this?"
13263,'senny',"FloatDomainError: Infinity when updating PostgreSQL range with infinity (ActiveRecord 4.0.x) and PostgreSQL (9.2)\n[These tests](https://github.com/rails/rails/blob/4-0-stable/activerecord/test/cases/adapters/postgresql/datatype_test.rb#L243) indicate that ActiveRecord 4.0 supports [PostgreSQL Range Types](http://www.postgresql.org/docs/9.2/static/rangetypes.html).\r\n\r\nThis includes *Infinite (Unbounded) Ranges*, via `Float::INFINITY`.\r\n\r\n***\r\n\r\nUnfortunately these do not behave as expected when updating a range, under certain conditions. For repro of the following and the resulting stack, see [this gist](https://gist.github.com/dukedave/7903686).\r\n\r\nIf you get an object (`_range` in the gist) which contains a range attribute with an unbounded component, and attempt to update it with another range which also contains an unbounded component, you get `FloatDomainError: Infinity`.\r\n\r\nOther combinations of ranges (bounded to bounded, bounded to unbounded, unbounded to bounded) all seem to be okay. As does unbounded to unbounded *only if you update the originally created object* (`range`) in the repro.\r\n\r\n***\r\n\r\nI'm guessing that `to_r` should not be called, since `Float::INFINITY.to_r` also causes `FloatDomainError: Infinity`."
13255,'strzalek','Bump up builder\n3.2.x comes with ruby 2.0 compatibility changes\r\n\r\n:ship: '
13253,'strzalek','Variants inline syntax v2\nPrevious solution was reverted after David discovered few issues (https://github.com/rails/rails/pull/13235). This version is different approach, less naive, with better test coverage for real world use cases.\r\n\r\n/cc @dhh @jeremy'
13244,'senny','Add Enum type to postgresql adapter\'s oids to prevent unknown OID warnings\nCurrently whenever ActiveRecord retrieves a row from postgres which has an enum column, a warning is printed, e.g.\r\n\r\n```\r\nunknown OID: enum(75561) (SELECT  "postgresql_enums".* FROM "postgresql_enums"  WHERE "postgresql_enums"."id" = $1 LIMIT 1)\r\n```\r\n\r\nThis patch adds an Enum type for postgres and registers enums in the type map, preventing the warnings.\r\nThe patch also changes the return values from enums to symbols from strings., which I think would be the proper way to do it. Though I recognise this might break existing apps using enums and expecting strings being returned, so it might be better to just let it be strings?\r\n\r\nRelated to #7814'
13235,'strzalek','Inline syntax for variants\nIn most cases, when setting variant specific code, you\'re not sharing any code within format.\r\n\r\nInline syntax can vastly simplify defining variants in those situations:\r\n\r\n```ruby\r\n  respond_to do |format|\r\n    format.js { render "trash" }\r\n    format.html do |variant|\r\n      variant.phone { redirect_to progress_path }\r\n      variant.none  { render "trash" }\r\n    end\r\n  end\r\n```\r\n\r\nBecomes:\r\n\r\n```ruby\r\n  respond_to do |format|\r\n    format.js         { render "trash" }\r\n    format.html.phone { redirect_to progress_path }\r\n    format.html.none  { render "trash" }\r\n  end\r\n```\r\n\r\n:tropical_drink: '
13189,'strzalek',"Retain ActionPack dependency on ActionView\nSplitting out AV from AP (#11396) brought us few problems with backwards compatibility and most importantly we've noticed regressions.\r\n\r\nThis PR is quick attempt to fix problems we faced, brining back AV dependency and including AV modules directly in AC::Base instead of injecting them in AV railtie.\r\n\r\n/ref #12979\r\n/cc @jeremy @josevalim @carlosantoniodasilva\r\n"
13175,'strzalek','Deprecate `ActionController::RecordIdentifier`.\nThis module was moved on the `ActionView` extraction, but 3rd party gems [like webrat](https://github.com/brynary/webrat/blob/master/lib/webrat/adapters/rails.rb#L2-L6) are including the `RecordIdentifier` module on its own and they will break on the 4.0 -> 4.1 upgrade. \r\n\r\nThere might be more modules out there that might be worth adding the deprecation too - let me know and we can deprecate everything under the same commit/PR.\r\n\r\n/cc @strzalek @carlosantoniodasilva @rafaelfranca'
13128,'senny','Support PostgreSQL materialized views\nThe change is pretty minimal, the query used in `#table_exists?` has been expanded to include materialized views in the kinds of relations it includes in its search.\r\n\r\nIn order to share the existing view tests, I made the previous test class into a concern that is then included into separate `ViewTest` and `MaterializedViewTest` classes, the latter only if PostgreSQL is at least version 9.3. ~~The test class then uses the name of the test to determine the type of view to create and test against.~~'
13122,'rafaelfranca',"Fix the merge of a label class defined inside the block\nIn the `collection_check_boxes` and `collection_radio_buttons`, if we try to define a class inside a block to a `label` tag, it won't be applied.\r\n\r\nFor example:\r\n\r\n```erb\r\n<%= form_for @form do |f| %>\r\n  <% collection = [[1, true, { class: 'foo' }]] %>\r\n  <%= f.collection_check_boxes :options, collection, :second, :first do |b| %>\r\n    <%= b.label(class: 'my_custom_class') %>\r\n  <% end %>\r\n<% end %>\r\n```\r\nthe class `my_custom_class` won't be applied to the label.\r\n\r\nAlso, following the @rafaelfranca suggestion I created a whitelist of which input attributes modifies the label `for` attribute."
13110,'pixeltrix',"Redirect routes escape path parameters wrongly\nUsing a redirect route like this:\r\n\r\n```\r\nget '/user/:display_name/edits', :to => redirect('/user/%{display_name}/history')\r\n```\r\n\r\ncauses a path where `:display_name` contains a space to be redirected to a path where query string escaping has been applied and the space has been replaced with a plus sign.\r\n\r\nThis is wrong - spaces in the path should be % escaped and using a plus sign will cause the subsequent fetch to fail.\r\n\r\nThe problem is here:\r\n\r\nhttps://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/redirection.rb#L73\r\n\r\nwhich is using `Rack::Utils.escape` and changing it to `URI.escape` works although I guess it really needs to figure out if the value is being substituted in the query string or the path."
13033,'guilleiguaran','RAILS_GROUPS no longer honored on Rails 4 line\nIt appears that the change made in the commit that removed the assets group from bundle load also had the unintended consequence of cutting out handling of the RAILS_GROUPS environmental variable:\r\n\r\nhttps://github.com/rails/rails/commit/e2df5d08383ca7229c7504fbde7051592d3c8442\r\n\r\nI believe line 16 should read:\r\n\r\nBundler.require(*Rails.groups)\r\n\r\nUse case:\r\n\r\nWe use multiple > test environments to QA our code before deployment. The QA and Staging environments are mirrors of production, and therefore do not include the testing gems that exist in the development and test bundler groups. As a result, we have instructed our QA team to run the integration suite with the following command:\r\n\r\nRAILS_ENV=qa RAILS_GROUPS=test bundle exec rspec\r\n\r\nThis loads the test gems even though the QA rails environment does not include them. in its current state, this command lo longer works with the Rails 4 code base.\r\n\r\nShould I submit a pull request for this fix? Does a test exist for these environmental variables? Should it?'
13002,'senny','Add underscore to "Missing partial <path>" error message\nI had a silly bug where I named a partial "mail.css.erb" instead of "_mail.css.erb". When called using `render "mail.css"` inside another template this then raised an exception with the following message:\r\n\r\n> Missing partial mails/mail.css, application/mail.css with {:locale=>[:en], :formats=>[:html], :handlers=>[:erb, :builder, :raw, :ruby, :coffee, :haml, :hamlc]}\r\n\r\nCompounded by the fact that I was using the render in a non-standard way (I first thought that it had something to do with formats) and that the file `mails/mail.css` did exist, it took me ten minutes of headbanging until I figured out that *of course* I forgot the underscore (how embarassing :flushed:).\r\n\r\nSo I put forward that it would be helpful if the exception message would include that underscore which is required for partials to prevent such mistakes, like such:\r\n\r\n> Missing partial mails/\\_mail.css, application/\\_mail.css with {:locale=>[:en], :formats=>[:html], :handlers=>[:erb, :builder, :raw, :ruby, :coffee, :haml, :hamlc]}\r\n\r\nIf this is acceptable I\'m up for updating the code and tests.'
12979,'strzalek',"undefined method `view_paths='\nThis is affecting the **master** branch only.\r\n\r\nI am upgrading [Discourse](https://github.com/discourse/discourse) to run on master so I can run some benchmarks on it. One error that I encountered when upgrading is this:\r\n\r\n`undefined method `view_paths=' for CustomRenderer:Class`\r\n\r\nThe [offending file](https://github.com/discourse/discourse/blob/master/lib/custom_renderer.rb) subclasses `AbstractController::Base`, includes `AbstractController::Rendering` and then sets `self.view_paths = `.\r\n\r\n`AbstractController::Rendering` [used to include `AbstractController::ViewPaths` here](https://github.com/rails/rails/blob/4-0-stable/actionpack/lib/abstract_controller/rendering.rb#L34) so that worked, but it no longer does that in master since `ActionView` has been extracted, which causes the error.\r\n\r\nTo fix it, I had to manually include `ActionView::ViewPaths`.\r\n\r\nIt looks like the function of the `AbstractController::Rendering` has changed as part of the `AV` extraction. I'm unsure if there are other parts of AV that I need to include here to maintain the 4.0 behaviour. If `AbstractController::Rendering` is public then we might need to fix this. Ideally, it should behave exactly the same as 4.0 but emit warnings about what parts should be included manually in the future, and how to opt-out.\r\n\r\ncc @rafaelfranca @strzalek @SamSaffron"
12977,'strzalek',"Action Pack Variants\nBy default, variants in the templates will be picked up if a variant is set and\r\nthere's a match. The format will be:\r\n\r\n```\r\n  app/views/projects/show.html.erb\r\n  app/views/projects/show.html+tablet.erb\r\n  app/views/projects/show.html+phone.erb\r\n```\r\n\r\nIf `request.variant = :tablet` is set, we'll automatically be rendering the html+tablet template.\r\n\r\nIn the controller, we can also tailer to the variants with this syntax:\r\n\r\n```ruby\r\n  class ProjectsController < ActionController::Base\r\n    def show\r\n      respond_to do |format|\r\n        format.html do |html|\r\n          @stars = @project.stars\r\n\r\n          html.tablet { @notifications = @project.notifications }\r\n          html.phone  { @chat_heads    = @project.chat_heads }\r\n        end\r\n\r\n        format.js\r\n        format.atom\r\n      end\r\n    end\r\n  end\r\n```\r\n\r\nThe variant itself is nil by default, but can be set in before filters, like so:\r\n\r\n```ruby\r\n  class ApplicationController < ActionController::Base\r\n    before_action do\r\n      if request.user_agent =~ /iPad/\r\n        request.variant = :tablet\r\n      end\r\n    end\r\n  end\r\n```\r\n\r\nThis is modeled loosely on custom mime types, but it's specifically not intended\r\nto be used together. If you're going to make a custom mime type, you don't need\r\na variant. Variants are for variations on a single mime types.\r\n\r\n/cc @dhh @josevalim"
12967,'dhh','providing user to pass options to `AR::Base.to_param` method\nThis allow user to pass options to `AR::Base.to_param` so that s/he can truncate the length accordingly, e.g. \r\n    `to_param :name, length: 50` # => this will truncate the name(word by word) after 50 characters'
12966,'rafaelfranca',"`end_travel` to remove stubs from `travel` and `travel_to`\nThis is a follow up to #12824.\r\n\r\nThis patch introduces a new method called `end_travel` to remove the stubs from `Time.now` and `Date.today`. This is useful to set your tim in `setup` hooks and return to the original state in `teardown`.\r\n\r\nTo illustrate I updated a test within AR that used some custom stubbing logic.\r\n\r\nI'm opening the PR to discuss and find the best name for the method `end_travel`. While brainstorming we thought about `untravel`, `return`, `go_back`, `back` and settled for `end_travel`."
12955,'senny',"Postgres schema: Constrain sequence search classid\nThe pk_an_sequence_for query previously joined against pg_class's oid\r\nfor rows in pg_depend, but pg_depend's objid may point to other system\r\ntables, such as pg_attrdef.  If a row in one of those other tables\r\ncoincidentally has the same oid as an (unrelated) sequence, that\r\nsequence name may be returned instead of the real one.\r\n\r\nThis ensures that only the pg_depend entries pointing to pg_class are\r\nconsidered."
12908,'chancancode','handled Infinite recurssion case\n1. `ActiveSupport::Cache.expand_cache_key` may raise `SystemStackError: stack level too deep` exception if key respond_to `to_a` and result itself contains key.'
12873,'rafaelfranca','Better support for AR:B.where(belongs_to_assoc: val) which previously generated invalid SQL\nUsing the name of an association in `where` previously worked only\r\nif the value was a single `ActiveRecrd::Base` object. e.g.\r\n                                                                                  \r\n    Post.where(author: Author.first)\r\n                                                                                  \r\nAny other values, including `nil`, would cause invalid SQL to be\r\ngenerated. This change supports arguments in the `where` query\r\nconditions where the key is a `belongs_to` association name and the\r\nvalue is `nil`, an `Array` of `ActiveRecord::Base` objects, or an\r\n`ActiveRecord::Relation` object.\r\n                                                                                  \r\n    # Given the Post model\r\n    class Post < ActiveRecord::Base\r\n      belongs_to :author\r\n    end\r\n                                                                                  \r\n    # nil value finds records where the association is not set\r\n    Post.where(author: nil)\r\n    # SELECT "posts".* FROM "posts" WHERE "posts"."author_id" IS NULL\r\n                                                                                  \r\n    # Array values find records where the association foreign key\r\n    # matches the ids of the passed ActiveRecord models, resulting\r\n    # in the same query as Post.where(author_id: [1,2])\r\n    authors_array = [Author.find(1), Author.find(2)]\r\n    Post.where(author: authors_array)\r\n                                                                                  \r\n    # ActiveRecord::Relation values find records using the same\r\n    # query as Post.where(author_id: Author.where(last_name: "Emde"))\r\n    Post.where(author: Author.where(last_name: "Emde"))\r\n                                                                                  \r\nPolymorphic `belongs_to` associations will continue to be handled\r\nappropriately, with the polymorphic `association_type` field added\r\nto the query to match the base class of the value. This feature\r\npreviously only worked when the value was a single `ActveRecord::Base`.\r\n                                                                                  \r\n    class Post < ActiveRecord::Base\r\n      belongs_to :author, polymorphic: true\r\n    end\r\n                                                                                  \r\n    Post.where(author: Author.where(last_name: "Emde"))\r\n    # Generates a query similar to:\r\n    Post.where(author_id: Author.where(last_name: "Emde"), author_type: "Author")\r\n'
12867,'matthewd','Rails 4.0.0 and 4.0.1 PostgreSQLAdapter does not properly check whether a connection is active\nTL;DR: Rails 4\'s PostgreSQLAdapter does not properly check whether a connection has died or not because `connect_poll` does not detect if the underlying TCP socket has closed. \r\n\r\nRails 4.0.0 and 4.0.1 do not properly detect whether a PostgreSQL connection still alive or not before using it. A previously good connection that has been disconnected by the remote server or by an intermediate proxy will not be detected by rails, which will result in queries failing. An example error that we ran into:\r\n\r\n```\r\n    PG::UnableToSend: SSL SYSCALL error: EOF detected\r\n\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql_adapter.rb:774→ exec\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql_adapter.rb:774→ exec_no_cache\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql/database_statements.rb:138→ block in exec_query\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/abstract_adapter.rb:435→ block in log\r\n    activesupport-4.0.1/lib/active_support/notifications/instrumenter.rb:20→ instrument\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/abstract_adapter.rb:430→ log\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql/database_statements.rb:137→ exec_query\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql_adapter.rb:921→ column_definitions\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/postgresql/schema_statements.rb:174→ columns\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/schema_cache.rb:114→ block in prepare_default_proc\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/schema_cache.rb:56→ yield\r\n    activerecord-4.0.1/lib/active_record/connection_adapters/schema_cache.rb:56→ columns\r\n    activerecord-4.0.1/lib/active_record/model_schema.rb:208→ columns\r\n    activerecord-4.0.1/lib/active_record/model_schema.rb:217→ columns_hash\r\n    activerecord-4.0.1/lib/active_record/relation/delegation.rb:14→ columns_hash\r\n    activerecord-4.0.1/lib/active_record/relation/finder_methods.rb:278→ find_one\r\n    activerecord-4.0.1/lib/active_record/relation/finder_methods.rb:268→ find_with_ids\r\n    activerecord-4.0.1/lib/active_record/relation/finder_methods.rb:35→ find\r\n    activerecord-deprecated_finders-1.0.3/lib/active_record/deprecated_finders/relation.rb:122→ find\r\n    activerecord-4.0.1/lib/active_record/relation.rb:334→ update\r\n    activerecord-4.0.1/lib/active_record/querying.rb:7→ update\r\n    (our controller method)\r\n    ...\r\n```\r\n\r\nThis error began occurring when we began using Rails 4.0.0 and 4.0.1 instead of Rails 3.2.15. Our database connections were being terminated by an HAProxy in our setup that terminates idle TCP connections, which Rails 3.2 had no issue with --- it would detect the dead connection and establish a new connection without issue. Rails 4 on the other hand does not. A subsequent request cycle caused a new connection to be created, which would then work as long as that connection was not killed as well.\r\n\r\nIt turns out, [Rails already has a unit test to verify that a dead connection is properly detected](https://github.com/rails/rails/blob/v4.0.1/activerecord/test/cases/adapters/postgresql/connection_test.rb#L91), but it is "skipped" by default because it requires a human to manually restart the PostgreSQL database (although there are ways this could be automated). When ActiveRecord::PostgresqlConnectionTest#test_reconnection_after_actual_disconnection_with_verify is run in Rails 4.0.1:\r\n\r\n```\r\ncd activerecord\r\n$EDITOR test/config.yml # Set with_manual_interventions to true instead of false\r\nARCONN=postgresql ruby -Itest test/cases/adapters/postgresql/connection_test.rb\r\n```\r\n\r\nIt fails, along with the tests performed after it.\r\n\r\nThe above error, as well as the failed test, are caused by PostgreSQLAdapter not properly discovering when the underlying TCP connection closes: libpq ran into an EOF, which occurs if the underlying TCP socket has closed. \r\n\r\nWhen the connection pool determines whether a given database connection is still valid, it calls [PostgreSQLAdapter#active?](https://github.com/rails/rails/blob/v4.0.1/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L567):\r\n\r\n```ruby\r\n      # Is this connection alive and ready for queries?\r\n      def active?\r\n        @connection.connect_poll != PG::PGRES_POLLING_FAILED\r\n      rescue PGError\r\n        false\r\n      end\r\n```\r\n\r\nRuby-pg\'s `PGConn#connect_poll` is a thin wrapper around `PQconnectPoll()` from libpq. However, `PQconnectPoll()` is meant for setting up a Postgres client connection in a non-blocking manner after the connection\'s socket is ready for reading/writing (as determined by `select()` or `poll()`) --- it does not actually perform any health checks on the connection. In fact, if the last known state of the connection is good, it immediately returns:\r\n\r\n([From src/interface/libpq/fe-connect.c in the postgresql source](http://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/interfaces/libpq/fe-connect.c;h=18fcb0c23724c7344f62f36adcb4f5ef9b0c73dc;hb=HEAD#l1553))\r\n\r\n```C\r\nPostgresPollingStatusType\r\nPQconnectPoll(PGconn *conn)\r\n{\r\n\tPGresult   *res;\r\n\tchar\t\tsebuf[256];\r\n\tint\t\t\toptval;\r\n\r\n\tif (conn == NULL)\r\n\t\treturn PGRES_POLLING_FAILED;\r\n\r\n\t/* Get the new data */\r\n\tswitch (conn->status)\r\n\t{\r\n\t\t\t/*\r\n\t\t\t * We really shouldn\'t have been polled in these two cases, but we\r\n\t\t\t * can handle it.\r\n\t\t\t */\r\n\t\tcase CONNECTION_BAD:\r\n\t\t\treturn PGRES_POLLING_FAILED;\r\n\t\tcase CONNECTION_OK:\r\n\t\t\treturn PGRES_POLLING_OK;\r\n\r\n...\r\n```\r\n\r\nThis means that `connect_poll` is not sufficient for detecting an inactive connection that has been closed by the other end. [The Rails 3.2.15 version of `active?`](https://github.com/rails/rails/blob/v3.2.15/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L341) successfully detects the lost TCP connection by actually performing a database query, which exercises the connection and would fail if the connection were terminated:\r\n\r\n```ruby\r\n      # Is this connection alive and ready for queries?\r\n      def active?\r\n        @connection.query \'SELECT 1\'\r\n        true\r\n      rescue PGError\r\n        false\r\n      end\r\n```\r\n\r\nThis code change was introduced in https://github.com/rails/rails/commit/34c7e73c1def1312e59ef1f334586ff2f668246e \r\n\r\n## To Fix\r\n\r\nThere is no easy way to determine if a TCP socket is dead other than by trying to use the connection (as was done in Rails 3.2.15 and earlier, and is also still used by the mysql adapters).\r\n\r\nTraditionally, a remotely closed TCP connection can be detected by calling `recv` on the socket. If recv returns a string of length 0, then the remote side has closed the connection. If the socket is non-blocking but has not been closed, it will return an EAGAIN error. However, this approach does not work if there is data buffered on the TCP stream. I attempted to come up with a fix that uses `recv_nonblock` to peek ahead in the stream:\r\n\r\n```ruby\r\n      def socket_alive?\r\n        socket = Socket.for_fd(@connection.socket)\r\n        socket.autoclose = false\r\n        socket.recv_nonblock(1, Socket::MSG_PEEK) != \'\'\r\n      rescue Errno::EAGAIN\r\n        true\r\n      end\r\n\r\n      # Is this connection alive and ready for queries?\r\n      def active?\r\n        socket_alive? && @connection.connect_poll != PG::PGRES_POLLING_FAILED\r\n      rescue PGError\r\n        false\r\n      end\r\n```\r\n\r\nHowever, if the server closes the connection, as it does during `test_reconnection_after_actual_disconnection_with_verify`, it sends a final message to the client that won\'t have been consumed yet when `socket_alive?` runs:\r\n\r\n```\r\n[3] pry(#<ActiveRecord::ConnectionAdapters::PostgreSQLAdapter>)> socket.recv_nonblock(1000, Socket::MSG_PEEK)\r\n=> "E\\x00\\x00\\x00mSFATAL\\x00C57P01\\x00Mterminating connection due to administrator command\\x00Fpostgres.c\\x00L2855\\x00RProcessInterrupts\\x00\\x00"\r\n```\r\n\r\nThere is actually a deeper problem here involving a time-of-check-to-time-of-use (TOCTTOU) weakness where the connection might die after checking the connection but before trying to use it. A better solution would be to detect the dead connection while trying to use it, and to then attempt to reestablish the connection when it dies. ActiveRecord should only let the error bubble up if the reconnect attempt fails.\r\n\r\n\r\n\r\n'
12856,'sgrif','Primary key constraint not changed when renaming table in postgresql\nSo I have this table in my postgresql database:\r\n\r\n    => \\d languages\r\n                                          Tabla «public.languages»\r\n     Columna |          Tipo          |                          Modificadores                           \r\n    ---------+------------------------+------------------------------------------------------------------\r\n     id      | integer                | not null valor por omisión nextval(\'languages_id_seq\'::regclass)\r\n     code    | character varying(2)   | \r\n     name    | character varying(255) | \r\n    Índices:\r\n        "languages_pkey" PRIMARY KEY, btree (id)\r\n\r\nI apply a simple migration which just does\r\n\r\n    class RenameLanguagesToLanguages2 < ActiveRecord::Migration\r\n      def change\r\n        rename_table :languages, :languages2\r\n      end\r\n    end\r\n\r\nand I end up having \r\n\r\n    => \\d languages2\r\n                                          Tabla «public.languages2»\r\n     Columna |          Tipo          |                          Modificadores                           \r\n    ---------+------------------------+------------------------------------------------------------------\r\n     id      | integer                | not null valor por omisión nextval(\'languages2_id_seq\'::regclass)\r\n     code    | character varying(2)   | \r\n     name    | character varying(255) | \r\n    Índices:\r\n        "languages_pkey" PRIMARY KEY, btree (id)\r\n\r\nIt seems like the primary key constraint (and its default index) is not changed and I might be wrong but I expected it to change.\r\n\r\nMy workaround is to do \r\n\r\n    rename_table :languages, :languages2\r\n    execute "ALTER TABLE languages2 DROP CONSTRAINT languages_pkey;"\r\n    execute "ALTER TABLE languages2 ADD PRIMARY KEY (id);"\r\n\r\nI found some related work but none of them fixes the issue: https://github.com/rails/rails/pull/6874 and https://github.com/rails/rails/commit/39eef1a565ef02e4dabc0811ef1bf4547ff9a60e\r\n\r\nI\'ve tried this in 3.2.15 and 4.0.1\r\n\r\nThanks a lot.\r\n'
12831,'rafaelfranca','Function _render_template(options) AbsctractController::Rendering not well encapsulate\nHi,\r\n\r\nAccording to rails convention, it seems that the method \\_render\\_template(options), found into AbstractController::Rendering are not encapsulate within the nice part (I think to private one).\r\n\r\nTo date for release 4.0.0 stable : \r\nhttps://github.com/rails/rails/blob/4-0-stable/actionpack/lib/abstract_controller/rendering.rb\r\n\r\n```\r\nmodule Rendering\r\n...\r\n    def _render_template(options) #:nodoc:\r\n        lookup_context.rendered_format = nil if options[:formats]\r\n        view_renderer.render(view_context, options)\r\n    end\r\n\r\n    ....\r\n\r\n    private\r\n\r\n    _all_other_method_begun_with_underscrore\r\n\r\n    # _render_template method would maybe be moved here ?\r\n\r\nend\r\n```'
12824,'dhh',"Add `#travel` and `#travel_to` to `ActiveSupport::TestCase`\nAdd `ActiveSupport::Testing::TimeHelpers#travel` and `#travel_to`. These methods change current time to the given time or time difference by stubbing `Time.now` and `Date.today` to return the time or date after the difference calculation, or the time or date that got passed into the method respectively. These methods also accept a block, which will return current time back to its original state at the end of the block.\r\n\r\n```ruby\r\nTime.travel 1.day\r\nTime.travel -1.day\r\n\r\nTime.travel 1.day do\r\n  User.create.created_at # => 1 day from now\r\nend\r\n\r\nTime.travel_to Time.new(2004, 11, 24, 01, 04, 44)\r\nTime.travel_to Date.new(2004, 11, 24)\r\n\r\nTime.travel_to Time.new(2004, 11, 24, 01, 04, 44) do\r\n  User.create.created_at # => 2004-11-24 01:04:44 -0500\r\nend\r\n```\r\n\r\nThis module is included in `ActiveSupport::TestCase` automatically.\r\n\r\n/cc @dhh, and please do grammar check for the doc for me, @fxn.\r\n\r\n---\r\n\r\nAlso, I was about to add a guide section for this, but I couldn't find a good place to add it. Any suggestions are welcomed!"
12815,'fxn','Update security.md\nHi Guys \r\nI was reading through this guide last night and noticed a small mistake, would be great if you could update it. \r\nI changed the word \'building\' to \'build\' in line 20. \r\n"Web application frameworks are made to help developers building web applications"'
12808,'pixeltrix','Rails4: Routes that uses same variable more than once in url requires it supplied more than once.\nI am on the path to upgrade a Rails 3.2 app to Rails 4.0.1\r\n\r\nI have a route that looks like this:\r\n```\r\nget \'download/:id/:id.tar\' => \'downloader#tar_file\', :as => :tar_file_downloader, :id => /\\d+/\r\n```\r\n\r\nThen in my view I had links to that using\r\n```\r\n<%=  link_to \'Download TAR file\', :tar_file_downloader(@order)  -%>\r\n```\r\n\r\nThat worked fine with Rails 3.x, but with Rails 4, it fails with:\r\n```\r\nNo route matches {:id=>nil, :controller=>"downloader", :action=>"tar_file", :format=>nil} missing required keys: [:id, :id]\r\n```\r\nMeaning that the url helper requires the `:id` parameter to be supplied twice, and yes if I change my view to\r\n```\r\n<%=  link_to \'Download TAR file\', :tar_file_downloader(@order, @order)  -%>\r\n```\r\nThen the problem disappears, but that is very inappropriate to supply the same information twice to the url generator just because the resulting URL contains the `:id` twice.\r\n\r\n\r\n'
12785,'jeremy','Do not expose internal state in the public encoder API (i.e. as_json)\nSee [1] for why this is not a good idea.\r\n\r\nAs part of this refactor, circular reference protection in as_json has\r\nbeen removed and the corresponding error class has been deprecated.\r\n\r\nAs discussed with @jeremy, circular reference error is considered\r\nprogrammer errors and protecting against it is out of scope for\r\nthe encoder.\r\n\r\nThis is again based on the excellent work by @sergiocampama in #11728.\r\n\r\n[1]: intridea/multi_json#138 (comment)'
12777,'pixeltrix','Overwrite controller namespace in route definition\n**Example:**\r\n\r\n```ruby\r\nnamespace :namespace do\r\n  get "/test", controller: "/module/controller"\r\nend\r\n```\r\n\r\nInside a `namespace` block there is no way to overwrite the controller namespace. \r\n\r\nSpecifying the controller as `/module/controller` will result in the following route definition: `/namespace/module/controller`.\r\n\r\n### Reproduction\r\n\r\n```ruby\r\n# Activate the gem you are reporting the issue against.\r\ngem \'rails\', \'4.0.0\'\r\n\r\nrequire \'rails\'\r\nrequire \'action_controller/railtie\'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = File.dirname(__FILE__)\r\n  config.session_store :cookie_store, key: \'cookie_store_key\'\r\n  config.secret_token    = \'secret_token\'\r\n  config.secret_key_base = \'secret_key_base\'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \'/\' => \'test#index\'\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def index\r\n    render text: \'Home\'\r\n  end\r\nend\r\n\r\nrequire \'minitest/autorun\'\r\nrequire \'rack/test\'\r\n\r\nclass BugTest < MiniTest::Unit::TestCase\r\n  include Rack::Test::Methods\r\n\r\n  def test_returns_success\r\n    get \'/\'\r\n    assert last_response.ok?\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Error\r\n\r\n```\r\nI, [2013-11-05T16:58:07.932991 #26898]  INFO -- : Started GET "/a/test" for 127.0.0.1 at 2013-11-05 16:58:07 +0100\r\nF, [2013-11-05T16:58:07.936201 #26898] FATAL -- :\r\nActionController::RoutingError (uninitialized constant A):\r\n  lib/action_dispatch/routing/route_set.rb:76:in `controller_reference\'\r\n  lib/action_dispatch/routing/route_set.rb:66:in `controller\'\r\n  lib/action_dispatch/routing/route_set.rb:44:in `call\'\r\n  lib/action_dispatch/journey/router.rb:71:in `block in call\'\r\n  lib/action_dispatch/journey/router.rb:59:in `each\'\r\n  lib/action_dispatch/journey/router.rb:59:in `call\'\r\n  lib/action_dispatch/routing/route_set.rb:682:in `call\'\r\n  lib/action_dispatch/middleware/params_parser.rb:27:in `call\'\r\n  lib/action_dispatch/middleware/flash.rb:241:in `call\'\r\n  lib/action_dispatch/middleware/cookies.rb:486:in `call\'\r\n  lib/action_dispatch/middleware/callbacks.rb:29:in `block in call\'\r\n  lib/action_dispatch/middleware/callbacks.rb:27:in `call\'\r\n  lib/action_dispatch/middleware/reloader.rb:64:in `call\'\r\n  lib/action_dispatch/middleware/remote_ip.rb:76:in `call\'\r\n  lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call\'\r\n  lib/action_dispatch/middleware/show_exceptions.rb:30:in `call\'\r\n  lib/action_dispatch/middleware/request_id.rb:21:in `call\'\r\n  lib/action_dispatch/middleware/static.rb:64:in `call\'\r\n  test.rb:36:in `test_returns_success\'\r\n```'
12756,'jonleighton',"With Rails 4, Model.scoped is deprecated but Model.all can't replace it\nFrom: http://stackoverflow.com/questions/18198963/with-rails-4-model-scoped-is-deprecated-but-model-all-cant-replace-it\r\n\r\nStarting Rails 4, `Model.scoped` is now deprecated.\r\n\r\n```\r\nDEPRECATION WARNING: Model.scoped is deprecated. Please use Model.all instead.\r\n```\r\n\r\nBut, there's a difference in `Model.scoped` and `Model.all`, that is, `scoped.scoped` returns a scope, while `all.all` runs the query.\r\n\r\nOn Rails 3:\r\n\r\n```ruby\r\n> Model.scoped.scoped.is_a?(ActiveRecord::Relation)\r\n=> true\r\n```\r\n\r\nOn Rails 4:\r\n\r\n```ruby\r\n> Model.all.all.is_a?(ActiveRecord::Relation)\r\nDEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`).\r\n=> false\r\n```\r\n\r\nThere are use cases in libraries / concerns that returns a scope when there's a conditional to do something or nothing, like so:\r\n\r\n```ruby\r\nmodule AmongConcern\r\n  extend ActiveSupport::Concern\r\n\r\n  module ClassMethods\r\n    def among(ids)\r\n      return scoped if ids.blank?\r\n\r\n      where(id: ids)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nIf you'd change this `scoped` to `all`, you'd face random problems depending where the `among` was used in the scope chain. For instance, `Model.where(some: value).among(ids)` would run the query instead of returning a scope.\r\n\r\nWhat I want is an idempotent method on `ActiveRecord::Relation` that simply returns a scope.\r\n\r\nIt turns out, \r\n\r\n```ruby\r\nwhere(nil)\r\n```\r\n\r\nis the shortest, real replacement of `scoped`, which works both on Rails 3 and 4.\r\n\r\nI think it's best if we have `scoped` on Rails 4 again.\r\n\r\nThoughts?"
12751,'pixeltrix','Rails 4.0.1 URL generation issue\nI have namespaced models, nested with each other - Admin::Article and inside Admin::GalleryPhoto. So my routes look like this:\r\n\r\n```\r\nnamespace :admin do\r\n  resources :articles, except: [:show] do\r\n    resources :gallery_photos, except: [:show]\r\n  end\r\nend\r\n```\r\nI use the same form for new and edit actions and for new I build it like\r\n```\r\n@gallery_photo = @article.gallery_photos.build\r\n```\r\nSo then in my form haml I have:\r\n```\r\n= form_for @gallery_photo, url: admin_article_gallery_photo_path(@article, @gallery_photo)\r\n```\r\nI followed the [form helpers guides](http://guides.rubyonrails.org/form_helpers.html) and it worked in Rails 4.0.0. If there is a @gallery_photo it renders the url to it (`edit_admin_article_gallery_photo_path`), if not it renders the url to collection POST (`admin_article_gallery_photos_path`).\r\n\r\nBut with Rails 4.0.1 I get an error on the new action:\r\n```\r\nNo route matches {:article_id=>#<Admin::Article id: 5,[...]>, :id=>#<Admin::GalleryPhoto id: nil, title: nil, article_id: 5, image_file_name: nil, image_content_type: nil, image_file_size: nil, image_updated_at: nil, created_at: nil, updated_at: nil, position: nil>} missing required keys: [:id]\r\n```\r\n\r\nApparently it tries to render the `edit_url` to not-yet-persisted `@gallery_photo` instead of the POST to collection.\r\n\r\nAm I doing something wrong with my `form_for` helper or is there a Rails 4.0.1 regression?'
12746,'rafaelfranca','Fix Hash#deep_merge bug and improve documentation — resolves #12738\nPreviously merging into a hash with a falsy value would not result in\r\nthe merge-block being called. The fix is simply to check for presence\r\nof the key in the hash.\r\n\r\nThe documentation example for `deep_merge` now appropriately\r\ndemonstrates what a deep merge does.\r\n\r\nCloses #12738'
12742,'sgrif',"update_all does not work when updating binary columns\nRunning update_all on an active record model to update a binary column\r\nends up with an SQL escaping error of `incomplete multibyte character`.\r\n\r\nThis issue is not present on the latest rails 3.2 but is present on rails 4 and on master.\r\n\r\nI've added a failing test here, but no fix. Here is the error:\r\n```\r\nPG::Error: incomplete multibyte character\r\n\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb:126:in `escape_string'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb:126:in `quote_string'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb:15:in `quote'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb:19:in `quote'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:163:in `quote_bound_value'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:104:in `block in sanitize_sql_hash_for_assignment'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:103:in `each'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:103:in `map'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:103:in `sanitize_sql_hash_for_assignment'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/sanitization.rb:39:in `sanitize_sql_for_assignment'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/relation.rb:308:in `update_all'\r\n    /Users/mario/Work/rails/activerecord/lib/active_record/querying.rb:7:in `update_all'\r\n    test/cases/binary_test.rb:56:in `test_upate_all_binary'\r\n```"
12667,'vijaydev',"Fix Guide HTML validation\nHi!\r\n\r\nThe [Ruby on Rails Guides Guidelines](http://edgeguides.rubyonrails.org/ruby_on_rails_guides_guidelines.html) say that you should make sure all guides are valid HTML and that `bundle exec rake guides:generate` should be run with `WARNINGS=1` to make sure our internal links are valid. To my surprise, there were quite a few validation errors!\r\n\r\nNow, `rake guides:validate` returns no errors and `rake guides:generate WARNINGS=1` returns no warnings.\r\n\r\nI left these commits small and separate, please instruct if you wish me to squash them.\r\n\r\nExpect a PR soon moving the guides to HTML5, hopefully it won't be too much work!"
12623,'rafaelfranca','has_one generates an ORDER BY clause in Rails 4 that may cause performance issues\nI\'m not sure if this is an intended change from Rails 3.2, as it doesn\'t appear in the CHANGELOG, but I\'m seeing a performance regression with Rails 4 on large tables using Postgresql because of the added \'ORDER BY\' clause.\r\n\r\nExample code:\r\n\r\n```ruby\r\nrequire \'bundler\'\r\nBundler.setup(:default)\r\n\r\nrequire \'active_record\'\r\n\r\nActiveRecord::Base.establish_connection(adapter: \'sqlite3\', database: \':memory:\')\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users\r\n  create_table :profiles do |t|\r\n    t.integer :user_id\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_one :profile\r\nend\r\nclass Profile < ActiveRecord::Base\r\n  belongs_to :user\r\nend\r\n\r\nUser.create!(profile: Profile.new)\r\n\r\nuser = User.first\r\n\r\nqueries = []\r\nsubscriber = ActiveSupport::Notifications.subscribe(\'sql.active_record\') do |name, s, f, id, values|\r\n  queries << values[:sql]\r\nend\r\n\r\nuser.profile\r\n\r\nputs queries.first\r\n```\r\n\r\nI get:\r\n```sql\r\n-- Rails 4.0.0 and 4.0.0rc3\r\nSELECT  "profiles".* FROM "profiles"  WHERE "profiles"."user_id" = ?  ORDER BY "profiles"."id" ASC LIMIT 1\r\n\r\n\r\n-- Rails 3.2.15\r\nSELECT  "profiles".* FROM "profiles"  WHERE "profiles"."user_id" = 1 LIMIT 1\r\n```\r\n\r\nTo return to pre-4.0 behaviour I\'ve changed has_one to the following:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_one :profile, -> { order(nil) }\r\nend\r\n```  '
12612,'rafaelfranca',"Let validates_inclusion_of accept Time and DateTime ranges\n```ruby\r\nvalidates_inclusion_of :created_at, 1.year.ago..Time.now\r\n```\r\nraises\r\n\r\n    TypeError: can't iterate from Time\r\n\r\nsince #10774 was merged.\r\nThis PR fixes the regression.\r\n\r\nI think we'd better backport this to 4-0-stable before shipping 4.0.1 stable release."
12598,'pixeltrix',"Add ability to set a prefix name for routes which have hyphen\nWith current Rails when you have in your routes\r\n\r\n```ruby\r\nget '/contact_us' => 'pages#contact'\r\nget '/about_us'   => 'pages#about_us'\r\n```\r\n\r\nyou'll get this inspection: \r\n\r\n```shell\r\n           Prefix Verb  URI Pattern                  Controller#Action\r\n       contact_us GET   /contact_us(.:format)        pages#contact\r\n         about_us GET   /about_us(.:format)          pages#about_us\r\n```\r\n\r\n---\r\n\r\nBut when your routes are with hyphen (dash), like so:\r\n\r\n```ruby\r\nget '/contact-us' => 'pages#contact'\r\nget '/about-us'   => 'pages#about_us'\r\n```\r\n\r\nyou'll get this: \r\n\r\n```shell\r\n           Prefix Verb  URI Pattern                  Controller#Action\r\n                  GET   /contact-us(.:format)        pages#contact\r\n                  GET   /about-us(.:format)          pages#about_us\r\n```\r\n\r\nWhich does lead that theres no helper methods for these routes i.e. `about_us_path`, `contact_us_path`.\r\n\r\nFor this pull request, it will convert the hyphens to underscores in paths so it'll be familiar to Ruby to translate it to a method.\r\n\r\nThis is will be the inspection for the latest routes above:\r\n\r\n```shell\r\n           Prefix Verb  URI Pattern                  Controller#Action\r\n       contact_us GET   /contact-us(.:format)        pages#contact\r\n         about_us GET   /about-us(.:format)          pages#about_us\r\n```"
12582,'strzalek',"HABTM broken promise\nQuoting changelog (https://github.com/rails/rails/blob/master/activerecord/CHANGELOG.md) :\r\n\r\n> has_and_belongs_to_many is now transparently implemented in terms of has_many :through. Behaviour should remain the same, if not, it is a bug.\r\n\r\nIt looks like it's not. I wanted to fix issue in AMS yesterday and it turned out it was broken only on edge rails and problem was with HABTM. Here's AMS PR: https://github.com/rails-api/active_model_serializers/pull/404\r\n\r\nI'll post proper failing test case for rails & will try to fix this issue later today.\r\n\r\n/cc @tenderlove "
12510,'fxn','ActiveSupport::Inflector.underscore messes up acronyms under namespaces\nFor example:\r\n\r\n```ruby\r\nActiveSupport::Inflector.inflections do |inflect|\r\n  inflect.acronym \'ISP\'\r\n  inflect.acronym \'ISPs\'\r\nend\r\n\r\n"ISP".pluralize.underscore \r\n  => "isps" (ok)\r\n"SomeISP".pluralize.underscore \r\n  => "some_isps" (ok)\r\n"Provider::ISP".pluralize.underscore\r\n  => "provider/is_ps" (should be provider/isps)\r\n```\r\n'
12498,'pixeltrix','Usage of shallow inside of a namespace results in doubled namespaces in routes\nGiven:\r\n````ruby\r\nMy::Application.routes.draw do\r\n  namespace :admin do\r\n    shallow do\r\n      resources :users do\r\n        resources :articles do\r\n          resources :comments\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n````\r\n\r\nRunning `rake routes` results in entries:\r\n\r\n````\r\n   admin_article_comments GET    /admin/admin/articles/:article_id/comments(.:format)     admin/comments#index\r\n                          POST   /admin/admin/articles/:article_id/comments(.:format)     admin/comments#create\r\nnew_admin_article_comment GET    /admin/admin/articles/:article_id/comments/new(.:format) admin/comments#new\r\n       edit_admin_comment GET    /admin/admin/comments/:id/edit(.:format)                 admin/comments#edit\r\n            admin_comment GET    /admin/admin/comments/:id(.:format)                      admin/comments#show\r\n                          PATCH  /admin/admin/comments/:id(.:format)                      admin/comments#update\r\n                          PUT    /admin/admin/comments/:id(.:format)                      admin/comments#update\r\n                          DELETE /admin/admin/comments/:id(.:format)                      admin/comments#destroy\r\n      admin_user_articles GET    /admin/admin/users/:user_id/articles(.:format)           admin/articles#index\r\n                          POST   /admin/admin/users/:user_id/articles(.:format)           admin/articles#create\r\n   new_admin_user_article GET    /admin/admin/users/:user_id/articles/new(.:format)       admin/articles#new\r\n       edit_admin_article GET    /admin/admin/articles/:id/edit(.:format)                 admin/articles#edit\r\n            admin_article GET    /admin/admin/articles/:id(.:format)                      admin/articles#show\r\n                          PATCH  /admin/admin/articles/:id(.:format)                      admin/articles#update\r\n                          PUT    /admin/admin/articles/:id(.:format)                      admin/articles#update\r\n                          DELETE /admin/admin/articles/:id(.:format)                      admin/articles#destroy\r\n              admin_users GET    /admin/users(.:format)                                   admin/users#index\r\n                          POST   /admin/users(.:format)                                   admin/users#create\r\n           new_admin_user GET    /admin/users/new(.:format)                               admin/users#new\r\n          edit_admin_user GET    /admin/admin/users/:id/edit(.:format)                    admin/users#edit\r\n               admin_user GET    /admin/admin/users/:id(.:format)                         admin/users#show\r\n                          PATCH  /admin/admin/users/:id(.:format)                         admin/users#update\r\n                          PUT    /admin/admin/users/:id(.:format)                         admin/users#update\r\n                          DELETE /admin/admin/users/:id(.:format)                         admin/users#destroy\r\n````\r\n\r\nAlmost all get the doubled-up `/admin/admin`. \r\n\r\nFlipping the order of `namespace` and `shallow` appears to result in the expected behavior. It still feels like a bug (because you might not want to `shallow` everything in a `namespace`).'
12452,'senny','store_accessor broken for hstore\nThe following test code fails in edge rails:\r\nhttps://gist.github.com/inopinatus/6850497\r\n\r\nlooks like commit https://github.com/rails/rails/commit/5ac2341 is the culprit.\r\n'
12450,'rafaelfranca',"Fix bug, when ':dependent => :destroy' violates foreign key constraints\nFix issue, when ':dependent => :destroy' option violates foreign key constraints, issue #12380"
12395,'carlosantoniodasilva','Serialize postgres arrays, hstore and json values correctly in AR update methods. Fixes #12261\nCloses #12261\r\n\r\nAs described in #12261 the column information was not being passed in for sanitization methods, therefore db-adaptor-specific quoting could not trigger resulting in an exception => https://gist.github.com/senny/6725398. \r\n\r\nThe bug applies to `update_column`, `update_columns` and `update_all` methods on columns of type `array`, `hstore` and `json`(maybe even more).\r\n\r\nThe suggested version of `quote_bound_value` now explicitly checks for array, hstore and json type columns, which is not flexible nor elegant, so it might need some refactoring, suggestions welcome.\r\n\r\n@senny thanks for your help!'
12374,'sikachu',"Introduce `render :plain` and `render :html`, make `render :body` as an alias to `render :text`\nThis is related to #3234.\r\n\r\nPer discussion, `render :text` misdirect people to think that it would render content with `text/plain` MIME type. However, `render :text` actually sets the response body directly, and inherits the default response MIME type, which is `text/html`.\r\n\r\nIn order to reduce confusion, we're introducing 3 more render format to `render`:\r\n\r\n```ruby\r\nrender html: '<strong>HTML String</strong>' # render with `text/html` MIME type\r\n\r\nrender plain: 'plain text' # render with `text/plain` MIME type\r\n\r\nrender body: 'raw body' # render raw content, does not set content type, inherits \r\n                        # default content type, which currently is `text/html`\r\n```\r\n\r\nWe want to phrase out the usage of `render :text`, to reduce the confusion in the future. There's currently no plan for deprecating `render :text`.\r\n\r\n---\r\n\r\nProgress: [here](https://github.com/sikachu/rails/compare/rails:master...sikachu:ps-render-format?expand=1)\r\n\r\n* [x] adds `render :body`\r\n* [x] adds `render :plain`\r\n* [x] adds `render :html`\r\n* [ ] deprecates `render :text`"
12290,'pixeltrix','Closes #12278. AR::ConnectionAdapters::Column.string_to_time method respects string with timezone.\nCloses #12278.\r\n\r\nIn current implementation, `AR::ConnectionAdapters::Column.string_to_time` method ignores timezone.\r\n\r\nIf with timezone (e.g. Wed, 04 Sep 2013 20:30:00 JST), the method should respects its timezone.'
12261,'carlosantoniodasilva','ActiveRecord does not serialize arrays for native Postgres array type columns \nThe issue occurs when using #update_column, #update_columns and #update_all on a column of native postgres array type. \r\n\r\n    SomeTable.first.update_column(:array_column, [\'value_1\', \'value_2\'])\r\n    >> UPDATE "some_tables" SET "array_column" = \'value_1\',\'value_2\'...\r\n\r\n\r\nI think the issue is [here](quote_bound_value) where the value is passed in to the method with no information about the column type and therefore [postgres specific](https://github.com/rails/rails/blob/45bc84d5ceb741967a41ef572b2cd0806a926a41/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb#L30) quoting can not be invoked.\r\n\r\nIf my thinking is correct I can try to fix this'
12253,'guilleiguaran',"Responder ignores :action option when rendering using respond_with\nThis Gist details the issue and suggests a possible fix:\r\n\r\nhttps://gist.github.com/jordansexton/6588798\r\n\r\nWhen providing an alternative action for rendering to respond_with, the action is ignored when the resourceful response is successful, because `options[:action]` is deleted for reasons I can't determine. Changing line 11 of `responder.rb`, as demonstrated in `patched_responder.rb`, fixes this so that the action is correctly passed to `default_render`. The other code is shown to demonstrate the execution path: `to_html` (or any other format) calls `default_render` when the resource has no errors, which always renders without the excluded action.\r\n\r\nA simple example detailing a use case is provided. In `messages_controller.rb`, the show action is called. When it's an unsent message, I want to treat it as a draft and show a form to edit the resource. I believe expected behavior would be to render messages/test.html, but because of the `options.delete(:action)` call in `ActionController::Responder`, it will always render messages/show.html."
12251,'chancancode','Always compact array parameters rather than setting them to nil\nRebase reapplication of #9569, thanks to @collectiveidea and @laserlemon\r\n\r\nThe CVE-2013-0155 security vulnerability outlines how array parameters\r\ncontaining nil values can be dangerous when accepted directly into\r\nActive Record finder methods. The previous fix has been to detect array\r\nparameters with nil values and to clobber the entire array into nil.\r\n\r\nInstead, compacting the array solves the security issue and causes less\r\nsurprise in the case where array parameters are expected, as is often\r\nthe case when accepting nested attributes for collections.'
12163,'pixeltrix',"Time#change doesn't work when DST just changed\nNot 100% sure about the reason, so I'm not gonna speculate :)\r\n\r\nI can reproduce this in Rails 3.2.14 and 4.0.0:\r\n```ruby\r\n>> timezone = ActiveSupport::TimeZone.new('Europe/Madrid')\r\n>> time = timezone.at(1319936400) #DST just changed from CEST to CET\r\n>> time.inspect\r\n=> Sun, 30 Oct 2011 02:00:00 CET +01:00\r\n>> time.to_i\r\n=> 1319936400\r\n>> time = time.change(min: 0) # time should stay the same, but it won't\r\n>> time.inspect\r\n=> Sun, 30 Oct 2011 02:00:00 CEST +02:00\r\n>> time.to_i\r\n=> 1319932800\r\n```\r\n\r\nThe same thing happens on any change inside that hour: min, sec or/and usec."
12031,'carlosantoniodasilva','Make AR::Base#touch fire the after_commit and after_rollback callbacks\nI expected\r\n\r\n```ruby\r\nclass Product < ActiveRecord::Base\r\n  after_commit :expire_cache\r\n  \r\n  def expire_cache\r\n    puts "cache expired"\r\n  end\r\n\r\nproduct.touch\r\n```\r\n\r\nto output "cache expired", but it doesn\'t, and it used to in Rails 3.0. This PR brings back that functionality by making touches call `after_commit` callbacks, woo!\r\n\r\nWe relied on `after_commit` callbacks being fired by touches to do things like expire caches, send documents to our search cluster, bump versions in Redis, etc. When we upgraded to 3.2, we found this problem and had to go and add `after_touch` callbacks to all those places to get touches to cause the same changes in the system. We make pretty heavy use of touches to bump timestamps up the association chain and whatnot, so they are a principle instigator of attribute change in the system. I think having to add both callbacks to *really* get a callback fired when stuff changes is sucky because it means client code has to deal with de-duplication if both callbacks fire, client code has to be aware of the semantic differences of when they fire, and before this change there is no way to get called back to when a record\'s timestamp bump has definitely been committed to the database. \r\n\r\nThanks for any feedback you can give me!\r\n\r\n@carlosantoniodasilva this is a follow up to #12026 on top of `4-0-stable`, is this what you need?'
12023,'rafaelfranca','inserts with `prepared_statements: false` broken on 4.0\nas I\'m trying to improve AR-JDBC to match the behaviour of ActiveRecord I\'ve hit this quite strange but quite serious "regression" while running our test suite with MRI agains AR **4.0**. Prepared statements are on by default for a while now on Rails but since AR-JDBC just added them we run tests with and without them. \r\n\r\nI noticed that (all) tests that create records **fail** if `prepared_statement: false`, it\'s worth nothing that the same tests run fine against **3.2** (with and without PS).\r\n\r\nHappens with Postgres and SQLite3 adapters (Mysql/Mysql2 seem just fine), here are the back-traces (test-code is simply pretty much any `Model.create! :attr => \'\'`) :\r\n\r\n```\r\n  ActiveRecord::StatementInvalid: PG::ProtocolViolation: ERROR:  bind message supplies 1 parameters, but prepared statement "a10" requires 0\r\n  : INSERT INTO "string_ids" ("id") VALUES (\'some_string\') RETURNING "id"\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/postgresql_adapter.rb:780:in `get_last_result\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/postgresql_adapter.rb:780:in `exec_cache\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/postgresql/database_statements.rb:139:in `block in exec_query\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract_adapter.rb:425:in `block in log\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract_adapter.rb:420:in `log\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/postgresql/database_statements.rb:137:in `exec_query\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/postgresql/database_statements.rb:183:in `exec_insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:96:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/query_cache.rb:14:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/relation.rb:76:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:498:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/attribute_methods/dirty.rb:78:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:303:in `block in create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:373:in `_run__444213998555957560__create__callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:80:in `run_callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:303:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/timestamp.rb:57:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:466:in `create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:299:in `block in create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:373:in `_run__444213998555957560__save__callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:80:in `run_callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:299:in `create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:106:in `save\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/validations.rb:51:in `save\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/attribute_methods/dirty.rb:32:in `save\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:270:in `block (2 levels) in save\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:326:in `block in with_transaction_returning_status\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `block in transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:210:in `within_new_transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:209:in `transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:323:in `with_transaction_returning_status\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:270:in `block in save\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:281:in `rollback_active_record_state!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:269:in `save\'\r\n```\r\n\r\n```\r\n  ActiveRecord::StatementInvalid: SQLite3::RangeException: bind or column index out of range: INSERT INTO "db_types" ("sample_text") VALUES (\'\')\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/sqlite3-1.3.8/lib/sqlite3/statement.rb:41:in `bind_param\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/sqlite3-1.3.8/lib/sqlite3/statement.rb:41:in `block in bind_params\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/sqlite3-1.3.8/lib/sqlite3/statement.rb:37:in `each\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/sqlite3-1.3.8/lib/sqlite3/statement.rb:37:in `bind_params\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/sqlite3_adapter.rb:308:in `block in exec_query\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract_adapter.rb:425:in `block in log\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract_adapter.rb:420:in `log\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/sqlite3_adapter.rb:292:in `exec_query\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:69:in `exec_insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:96:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/query_cache.rb:14:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/relation.rb:76:in `insert\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:498:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/attribute_methods/dirty.rb:78:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:303:in `block in create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:373:in `_run__2590510977372017430__create__callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:80:in `run_callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:303:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/timestamp.rb:57:in `create_record\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:466:in `create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:299:in `block in create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:373:in `_run__2590510977372017430__save__callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activesupport-4.0.0/lib/active_support/callbacks.rb:80:in `run_callbacks\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/callbacks.rb:299:in `create_or_update\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/persistence.rb:128:in `save!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/validations.rb:57:in `save!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/attribute_methods/dirty.rb:41:in `save!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:275:in `block in save!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:326:in `block in with_transaction_returning_status\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `block in transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:210:in `within_new_transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:209:in `transaction\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:323:in `with_transaction_returning_status\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/transactions.rb:275:in `save!\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/validations.rb:41:in `create!\'\r\n```'
12017,'rafaelfranca','custom select AREL passed into `select_values` on 4.0\nseems as the use-case I present was working with **3.2** but no longer does on **4.0**, it ends up with yet another :  *NoMethodError: undefined method `reverse\' for nil:NilClass*\r\n\r\nhere\'s the code that fails (reproducable e.g. with the mysql2 adapter):\r\n\r\n```ruby\r\nrole = Role.create! :name => "main", :description => "main role"\r\nRole.create! :name => "user", :description => "user role"\r\n\r\nRight.create! :name => "r0", :hours => 0\r\nr1 = Right.create! :name => "r1", :hours => 1\r\nr2 = Right.create! :name => "r2", :hours => 2\r\nRight.create! :name => "r3", :hours => 3\r\n\r\nrole.permission_groups.create! :right => r1.reload\r\nrole.permission_groups.create! :right => r2.reload\r\n\r\nconnection = ActiveRecord::Base.connection\r\ngroups = role.reload.permission_groups.select(\'right_id\')\r\n\r\nassert_equal [ r1.id, r2.id ], connection.select_values(groups)\r\n```\r\n\r\nmodels / migrations :\r\n\r\n```ruby\r\nclass CreateRightsAndRoles < ActiveRecord::Migration\r\n  def self.up\r\n    create_table :role_assignments do |t| \r\n      t.column :role_id, :integer\r\n      t.column :user_id, :integer\r\n    end\r\n\r\n    create_table :roles do |t| \r\n      t.column :name, :string\r\n      t.column :description, :string\r\n    end \r\n\r\n    create_table :permission_groups do |t|\r\n      t.column :right_id, :integer, :null => false\r\n      t.column :role_id, :integer, :null => false\r\n    end \r\n\r\n    create_table :rights do |t| \r\n      t.column :name, :string\r\n      t.column :controller_name, :string\r\n      t.column :actions, :string\r\n      t.column :hours, :float, :null => false\r\n    end\r\n  end\r\n\r\n  def self.down\r\n    drop_table :role_assignments\r\n    drop_table :roles\r\n    drop_table :permission_groups\r\n    drop_table :rights\r\n  end\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_many :permission_groups, :dependent => :destroy\r\n  has_many :roles, :through => :permission_groups\r\nend\r\n\r\nclass Role < ActiveRecord::Base\r\n  has_many :permission_groups, :dependent => :destroy\r\n  has_many :rights, :through => :permission_groups\r\n  has_many :role_assignments, :dependent => :destroy\r\n  \r\n  def has_right?(right)\r\n    rights.include? right\r\n  end\r\nend\r\n\r\nclass PermissionGroup < ActiveRecord::Base\r\n  belongs_to :right\r\n  belongs_to :role\r\nend\r\n\r\nclass RoleAssignment < ActiveRecord::Base\r\n  belongs_to :user\r\n  belongs_to :role\r\nend\r\n```\r\n\r\nback-trace :\r\n```\r\n  NoMethodError: undefined method `reverse\' for nil:NilClass\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:14:in `block in to_sql\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/bind_visitor.rb:26:in `call\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/bind_visitor.rb:26:in `visit_Arel_Nodes_BindParam\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/visitor.rb:19:in `visit\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:517:in `visit_Arel_Nodes_Equality\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/visitor.rb:19:in `visit\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:499:in `block in visit_Arel_Nodes_And\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:499:in `map\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:499:in `visit_Arel_Nodes_And\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/visitor.rb:19:in `visit\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:216:in `block in visit_Arel_Nodes_SelectCore\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:215:in `each\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:215:in `each_with_index\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:215:in `visit_Arel_Nodes_SelectCore\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/mysql.rb:41:in `visit_Arel_Nodes_SelectCore\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:175:in `block in visit_Arel_Nodes_SelectStatement\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:175:in `each\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:175:in `visit_Arel_Nodes_SelectStatement\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/mysql.rb:36:in `visit_Arel_Nodes_SelectStatement\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/visitor.rb:19:in `visit\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/visitor.rb:5:in `accept\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/to_sql.rb:68:in `accept\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/arel-4.0.0/lib/arel/visitors/bind_visitor.rb:11:in `accept\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `to_sql\'\r\n/opt/local/rvm/gems/ruby-1.9.3-p429@jdbc/gems/activerecord-4.0.0/lib/active_record/connection_adapters/abstract/database_statements.rb:44:in `select_values\'\r\n```'
12016,'rafaelfranca','Auto-generate stable fixture UUIDs on PostgreSQL\nFixes #11524. This PR builds on that one by @ruckc:\r\n* Added tests.\r\n* Supports polymorphic associations by inspecting the polymorphic foreign key type.\r\n'
11993,'robin850','Use NameError#name to assert raised error.\nThis makes the test compatible with other Ruby implementations, which may implement error messages differently.'
11902,'senny','Inconsistent behaviour in AR finders when a column is UUID\nModel1 id is an Integer, given parameter is casted to_i\r\n```ruby\r\n> Model1.find_by(id: "lol i\'m no integer")\r\nSELECT "model1".* FROM "model1" WHERE "model1"."id" = 0 LIMIT 1\r\n=> nil\r\n```\r\n\r\nModel2 id is an UUID, raises an error\r\n```ruby\r\n> Model2.find_by(id: "lol i\'m no UUID")\r\n=> PG::InvalidTextRepresentation: ERROR:  invalid input syntax for uuid: "lol i\'m no UUID"\r\n```\r\n\r\nIt would be nice to have consistent behaviour regardless of the column type, but I\'m not sure how to handle it nicely in UUID case. Maybe we could even avoid hitting the database if we can detect a non-uuid parameter?'
11821,'rafaelfranca','Handle aliased attributes in AR::Relation#select, #order, etc.\nWith this we can write `Model#select(:aliased)`, `Model#order(:aliased)`, `Model#reoder(aliased: :desc)`, etc.\r\n\r\nSupplementary work to 54122067acaad39b277a5363c6d11d6804c7bf6b.'
11750,'pixeltrix','refactor action_dispatch to use flat_map\n'
11742,'pixeltrix','Remove duplication from time/date-time/date\nMethods moved:\r\n:ago, :beginning_of_day, :middle_of_day, :beginning_of_hour,\r\n:beginning_of_minute.\r\n\r\nDate#change is now aware of hours/minutes/seconds, and when they are\r\npassed to it, a TimeWithZone will created for that date at midnight.\r\n\r\nThe following new methods are a results of this change: Date#beginning_of_hour and, Date#beginning_of_minute'
11694,'rafaelfranca','Fix that a collection proxy could be cached before the save of the owner, resulting in an invalid proxy lacking the owner’s id\nAbsent this fix calls like: owner.association.update_all to behave unexpectedly because they try to act on association objects where\r\nowner_id is null.\r\n\r\nmore evidence here: https://gist.github.com/Empact/5865555\r\n```\r\nActive Record 3.2.13\r\n-- create_table(:firms, {:force=>true})\r\n   -> 0.1371s\r\n-- create_table(:clients, {:force=>true})\r\n   -> 0.0005s\r\n1 clients. 1 expected.\r\n1 clients updated. 1 expected.\r\n```\r\n\r\n```\r\nActive Record 4.0.0\r\n-- create_table(:firms, {:force=>true})\r\n   -> 0.1606s\r\n-- create_table(:clients, {:force=>true})\r\n   -> 0.0004s\r\n1 clients. 1 expected.\r\n0 clients updated. 1 expected.\r\n```'
11667,'guilleiguaran',"Include web-console in new projects Gemfile\nAs part of  the Google Summer of Code 2013, me and @guilleiguaran has been working on bringing `rails console` to the browser. Today we are proud to announce that we hit `0.1.0` and we have enough of it, to let you guys test it.\r\n\r\nThe project development lives in https://github.com/gsamokovarov/web-console and we'll be happy to get any feedback about how we can make it better. That this is more of a demo release and we will really appreciate all of the extra testing we can get. Feel free to open issues on https://github.com/gsamokovarov/web-console/issues with any bugs,  feature requests or general feedback.\r\n\r\n/cc @guilleiguaran, @rafaelfranca, @pixeltrix, @spastorino, @drogus"
11650,'rafaelfranca','Renamed private methods _create_record and _update_record\nThis is to ensure that they are not accidentally called by the app code.\r\nThey are renamed to `_create_record` and `_update_record` respectively.\r\nCloses #11645'
11636,'fxn',"`ActiveSupport::Dependencies`: consts in uppercase nestings not marked as autoloaded\nConstants autoloaded in all-caps nestings are not getting marked as such by `ActiveSupport::Dependencies`. As a result they're not reloaded after modification when `cache_classes` is disabled. A failing test case is included.\r\n\r\nThis was because the originally requested constant name was not being passed to `#load_or_require`, so the expected location of the new constant had to be inferred from the path name using `String#camelize`. So if you autoloaded `HTML::SomeClass`, the watcher was told to look for new constants in `Html`, and none were found.\r\n\r\nI've fixed this by passing the qualified constant name to `#load_or_require`. This seemed to be the original intention behind the optional `const_path` argument to that method, which was previously unused.\r\n\r\nThe full build passes on the rails-dev-box - any feedback would be greatly appreciated. I've left the commits separate for review but will squash them if it's okay to merge.\r\n\r\nEdit: this bug affects 3.2, 4.0 and master - assuming it's okay to merge, please can it be considered for backporting to the older branches?"
11589,'rafaelfranca',"Make try with no arguments return a TryProxy\nI often see code along the lines of:\r\n\r\n```ruby\r\nfoo.try(:[], 0)\r\n```\r\n\r\nI find this harder to read than it should be.\r\n\r\nThis pull request changes the `try` method so that it returns an `ActiveSupport::TryProxy` when called without arguments. This proxy then forwards any methods sent to it to the original object.\r\n\r\nFor example, the above code can be rewritten as:\r\n\r\n```ruby\r\nfoo.try[0]\r\n```\r\n\r\nThis does not break existing functionality. At the moment, calling `try` with no arguments raises an exception:\r\n\r\n```irb\r\n>> 123.try\r\nTypeError: nil is not a symbol\r\nfrom /Users/charlie/.gem/ruby/2.0.0/gems/activesupport-4.0.0/lib/active_support/core_ext/object/try.rb:45:in `respond_to?'\r\n>> 123.try!\r\nArgumentError: no method name given\r\nfrom /Users/charlie/.gem/ruby/2.0.0/gems/activesupport-4.0.0/lib/active_support/core_ext/object/try.rb:55:in `public_send'\r\n```"
11586,'senny','change_column_default fails in PostgreSQL adapter for Array columns\nhttps://github.com/rails/rails/commit/c940b14 has fixed array column type support for change_column. However, change_column_default still fails because in [column type is not sent into quote inside change_column](https://github.com/rails/rails/blob/754a373e301d2df0b12a11083405252722bc8366/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb#L398). If we allow `options` to be passed in rather than `default` then we can fix this, but this changes the abstract adapter interface. Thoughts?\r\n\r\n/cc @senny \r\n\r\nPotential test case:\r\n\r\nAdd\r\n```\r\n  @connection.change_column_default :pg_arrays, :snippets, []\r\n```\r\n\r\nto [`array_test.rb:31`](https://github.com/rails/rails/blob/c940b148f38fac551082416ce0799cfa89f2bbc1/activerecord/test/cases/adapters/postgresql/array_test.rb#L31)\r\n'
11481,'guilleiguaran',"Cache#fetch_multi returns a Hash instead of an Array\nThe current implementation of `fetch_multi` returns an array and has no means to easily backtrack which names yielded which results. By changing the return value to a Hash we retain the name information. Hash#values can be used on the response if only the values are needed.\r\n\r\nI've been attempting to add `fetch_multi` support to dalli: mperham/dalli#380 and discovered the disparity between methods. @mperham and I agree that the result should be a Hash rather than an Array. Ideally, and practically, all implementations for the various cache stores should return the same result.\r\n\r\nThis overwrites the original behavior from rails/rails#10234"
11474,'pixeltrix',"Prevent server blow up when iterating over TimeWithZone Range\nIterating over a Range of Time is impossible in ruby:\r\n\r\n``` ruby\r\n((Time.now - 1.month)..Time.now).to_a # raises TypeError: can't iterate from Time\r\n```\r\n\r\nBut it is still possible with ActiveSupport::TimeWithZone\r\n\r\n``` ruby\r\n((Time.now.in_time_zone - 1.month)..Time.now.in_time_zone).to_a\r\n    # => Tons of deprecations blow up your console\r\n```\r\n\r\nIn good case current process is stuck with IO.\r\nIn worth case server disk space blow up with production.log file.\r\n\r\nThis was a huge problem for us and caused a down time on our production app.\r\n\r\nIn order to prevent that we can generate #succ deprecation warning only once.\r\nAnd remove TimeWithZone#succ as soon as Time#succ will be removed."
11464,'pixeltrix','Customize subsecond digits when encoding DateWithTime\nThe subsecond fraction digits had been hardcoded to 3. This forced all timestamps to include the subsecond digits with no way to customize the value. While the subsecond format is part of the ISO8601 spec, it is not adhered to by all parsers (notably mobile clients). This adds the ability to customize the number of digits used, optionally setting them to 0 in order to eliminate the subsecond fraction entirely:\r\n\r\n```ruby\r\n# Disable subsecond fractions\r\nActiveSupport::JSON::Encoding.subsecond_fraction_digits = 0\r\n\r\n# Restore the default\r\nActiveSupport::JSON::Encoding.subsecond_fraction_digits = nil\r\n```\r\n\r\nWithout the ability to customize the value I have no choice but to monkey patch `ActiveSupport::TimeWithZone` to use `xmlschema`. Otherwise our iOS clients chokes on every timestamp.'
11350,'pixeltrix',"Fix microsecond precision of Time#at_with_coercion\nWhen `Time.at_with_coercion` (wraps `Time.at`) is called with a single\r\nargument that `acts_like?(:time)` it is coerced to integer thus losing\r\nit's microsecond percision.\r\n\r\nThis commits changes this to use `#to_f` to prevent the problem"
11346,'NZKoz','Check authentication scheme in Basic auth\n`authenticate_with_http_basic` and its families should check the\nauthentication schema is "Basic".\n\nDifferent schema, such as OAuth2 Bearer should be rejected by basic auth, but \nit was passing as the test shows.\n\nThis fixes #10257.'
11333,'guilleiguaran',"Rails 4 update of 'The Asset Pipeline' guide.\nUpdate asset pipeline guide for Rails 4. Includes numerous grammatical changes."
11331,'tenderlove','Remove conditional, results are always an instance of `ActiveRecord::Result`\nRemove conditional, since results are always an instance of `ActiveRecord::Result`'
11311,'senny','Eager loading of has_many through breaks eager loading of has_many\nI have a model with has_many and has_many :through\r\n\r\n    class Customer < ActiveRecord::Base\r\n      has_many :orders\r\n      has_many :invoices, :through => :orders\r\n    end\r\n    class Order < ActiveRecord::Base\r\n      has_many :invoices\r\n    end\r\n\r\nIf I eager load orders and invoices, orders is not cached:\r\n\r\n    > records = Customer.includes(:orders, :invoices).all\r\n    Customer Load (0.5ms)  SELECT `customers`.* FROM `customers`\r\n    Order Load (0.4ms)  SELECT `orders`.* FROM `orders` WHERE `orders`.`customer_id` IN (5521) ORDER BY created_at ASC\r\n    Invoice Load (0.3ms)  SELECT `invoices`.* FROM `invoices` WHERE `invoices`.`order_id` IN (20081, 20091, 20101, 20111, 20121)\r\n    > records.first.orders.loaded?\r\n    => false\r\n    > records.first.invoices.loaded?\r\n    => true\r\n    \r\nIf I change order of includes arguments, both are eager loaded, with two orders queries:\r\n\r\n    > records = Customer.includes(:orders, :invoices).all\r\n    Customer Load (0.5ms)  SELECT `customers`.* FROM `customers`\r\n    Order Load (0.4ms)  SELECT `orders`.* FROM `orders` WHERE `orders`.`customer_id` IN (5521) ORDER BY created_at ASC\r\n    Invoice Load (0.3ms)  SELECT `invoices`.* FROM `invoices` WHERE `invoices`.`order_id` IN (20081, 20091, 20101, 20111, 20121)\r\n    Order Load (0.4ms)  SELECT `orders`.* FROM `orders` WHERE `orders`.`customer_id` IN (5521) ORDER BY created_at ASC\r\n    > records.first.orders.loaded?\r\n    => true\r\n    > records.first.invoices.loaded?\r\n    => true\r\n\r\nI think both cases should do same queries (three queries as first case) and cache both associations.'
11290,'rafaelfranca','Returning false in after_* callback still firing next after_* callbacks?\nsimilar to #7127,  but I do see fix only for around callbacks in 7127 fix code.\r\n\r\n```\r\nrequire \'active_model\'\r\n\r\nclass A\r\n  extend ActiveModel::Callbacks\r\n  define_model_callbacks :create\r\n  def create; run_callbacks(:create) { p \'create A\' }; end\r\n  after_create { p \'CB1\'; return false }\r\n  after_create { p \'CB2\' }\r\nend\r\n\r\na = A.new; p a.create\r\n```\r\n```\r\n"create A"\r\n"CB1"\r\n"CB2"\r\n"create A"\r\n```\r\n\r\nRails 3.2.8\r\n'
11248,'jonleighton','AR association proxy + joins + merge regression in 4.0.0\nFor instance, the following code was working on AR 3.2, but raises `ActiveRecord::ConfigurationError` on 4.0.0.\r\nAnd very strangely, looks like working again on current edge.\r\n\r\n```ruby\r\nclass Company < ActiveRecord::Base\r\n  has_many :affiliations\r\n  has_many :users, through: :affiliations\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :friendships\r\n  has_many :friends, through: :friendships do\r\n    def companies\r\n      Company.joins(:users).merge(self)\r\n      # for 3.2\r\n      # Company.joins(:users).merge(self.scoped)\r\n    end\r\n  end\r\nend\r\n\r\nclass Friendship < ActiveRecord::Base\r\n  belongs_to :user\r\n  belongs_to :friend, foreign_key: :friend_id, class_name: \'User\'\r\nend\r\n\r\nclass Affiliation < ActiveRecord::Base\r\n  belongs_to :user\r\n  belongs_to :company\r\nend\r\n```\r\n\r\n3.2 and 4.1 (edge)\r\n```ruby\r\nputs User.first.friends.companies.to_sql\r\n# => SELECT "companies".* FROM "companies" INNER JOIN "affiliations" ON "affiliations"."company_id" = "companies"."id" INNER JOIN "users" ON "users"."id" = "affiliations"."user_id" INNER JOIN "friendships" ON "users"."id" = "friendships"."friend_id" WHERE "friendships"."user_id" = ?\r\n```\r\n\r\n4.0.0\r\n```ruby\r\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/railties-4.0.0/lib/rails/commands/runner.rb:53:in `eval\': #<Arel::Nodes::InnerJoin:0x007fecd5872228 @left=#<Arel::Table:0x007fecd5872458 @name="friendships", @engine=ActiveRecord::Base, @columns=nil, @aliases=[], @table_alias=nil, @primary_key=nil>, @right=#<Arel::Nodes::On:0x007fecd5872250 @expr=#<Arel::Nodes::Equality:0x007fecd58722a0 @left=#<struct Arel::Attributes::Attribute relation=#<Arel::Table:0x007fecd5872b60 @name="users", @engine=ActiveRecord::Base, @columns=nil, @aliases=[], @table_alias=nil, @primary_key=nil>, name="id">, @right=#<struct Arel::Attributes::Attribute relation=#<Arel::Table:0x007fecd5872458 @name="friendships", @engine=ActiveRecord::Base, @columns=nil, @aliases=[], @table_alias=nil, @primary_key=nil>, name=:friend_id>>>> (ActiveRecord::ConfigurationError)\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:144:in `block in build\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:143:in `each\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:143:in `build\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:144:in `block in build\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:143:in `each\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:143:in `build\'\r\nfrom .../activerecord-4.0.0/lib/active_record/associations/join_dependency.rb:39:in `initialize\'\r\nfrom .../activerecord-4.0.0/lib/active_record/relation/query_methods.rb:939:in `new\'\r\nfrom .../activerecord-4.0.0/lib/active_record/relation/query_methods.rb:939:in `build_joins\'\r\nfrom .../activerecord-4.0.0/lib/active_record/relation/query_methods.rb:802:in `build_arel\'\r\nfrom .../activerecord-4.0.0/lib/active_record/relation/query_methods.rb:795:in `arel\'\r\nfrom .../activerecord-4.0.0/lib/active_record/relation.rb:494:in `to_sql\'\r\nfrom (eval):1:in `<top (required)>\'\r\nfrom .../railties-4.0.0/lib/rails/commands/runner.rb:53:in `eval\'\r\nfrom .../railties-4.0.0/lib/rails/commands/runner.rb:53:in `<top (required)>\'\r\nfrom .../railties-4.0.0/lib/rails/commands.rb:86:in `require\'\r\nfrom .../railties-4.0.0/lib/rails/commands.rb:86:in `<top (required)>\'\r\nfrom ./bin/rails:4:in `require\'\r\nfrom ./bin/rails:4:in `<main>\'\r\n```\r\n\r\n@jonleighton Do you remember how it was fixed on edge? And could you backport the fix to 4-0-stable?'
11225,'rafaelfranca','Fix for saving has-one-through\nFixes issue #9336\r\n\r\nHas-one-through-has-one is incorrectly triggering unnecessary saves on the grandparent relationship. Fixes a save check that is always true for this type of relationship.'
11218,'rafaelfranca','Loofah-integration\nToday Rails uses the HTML-scanner gem to do its sanitization. We will switch the gem that is used, while keeping the old API for backwards compatibility. Instead of the scanner gem, we will use Loofah. Loofah is built on top of Nokogiri, meaning we rid the implementation\'s reliance on regular expressions and we get speed. On large documents and fragments Loofah is around [60 to 100% faster](https://gist.github.com/flavorjones/170193) than the current implementation.\r\n\r\n### Notes\r\n\r\nThe sanitizers used in `ActionView::SanitizeHelper` have been extracted to the rails-html-sanitizer gem.\r\nhttps://github.com/rafaelfranca/rails-html-sanitizer\r\n\r\nThe `DomAssertions` and `SelectorAssertions` have been extracted to the rails-dom-testing gem.\r\nhttps://github.com/kaspth/rails-dom-testing\r\n\r\nThe substitution values syntax in `assert_select` has changed.\r\n```ruby\r\nassert_select "div#?", /\\d+/\r\nassert_select "div:match(\'id\', ?)", /\\d+/\r\n```\r\nThe attribute to match should be enclosed in quotes to avoid issues with Nokogiri\'s css selector syntax parsing. It is not necessary to do so with the question mark.\r\n\r\n### Todos\r\n\r\n- [x] Extract failing tests to mark them as pending.\r\n- [x] Find areas where backwards compatibility is broken\r\n\r\n##### Pending Test Fixes\r\n- [x] Find out what causes `Output Error: Unknown Encoding ASCII-8BIT` three times in date_helper_test and once in form_helper_test. Related: https://github.com/sparklemotion/nokogiri/issues/553\r\n- [x] Research the other failing tests\r\n\r\n##### Sanitizers\r\n- [x] Implement Action View `FullSanitizer`, `LinkSanitizer` and `WhiteListSanitizer` in `sanitizers.rb`\r\n- [x] Deprecate `protocol_separator` and `bad_tags` for `WhiteListSanitizer`\r\n- [x] Make `sanitize` accept custom `:tags` and `:attributes` options\r\n- [x] Make `sanitize` accept a `Loofah::Scrubber` via `:scrubber` option\r\n- [x] Make `PermitScrubber`\r\n- [x] Make `TargetScrubber`\r\n\r\n##### Sanitizers Testing\r\n- [x] Add new tests in `sanitizers_test.rb`\r\n- [x] Complete test coverage for `PermitScrubber`\r\n- [x] Complete test coverage for `TargetScrubber`\r\n- [x] Test behavior of changing sanitization\r\n- [x] Move testing of `PermitScrubber`\'s peculiarities from `sanitizers_test.rb`\r\n\r\n##### Dom and Selector Assertions\r\n- [x] Reimplement `assert_dom_equal` with Loofah\r\n- [x] Move Dom and Selector assertions to Action View\r\n- [x] Fix test_nested_css_select failing on line 245\r\n- [x] Fix test_feed_item_encoded finding two p elements when it shouldn\'t\r\n- [x] Marked as pending the colliding xml namespaces issue discussed here: https://groups.google.com/forum/#!topic/nokogiri-talk/Nv8kX4p_r7I\r\n\r\n### Related issues\r\n\r\nhttps://github.com/flavorjones/loofah/pull/44\r\nhttps://github.com/flavorjones/loofah/pull/45\r\nhttps://github.com/flavorjones/loofah/pull/46\r\nhttps://github.com/flavorjones/loofah/pull/47\r\nhttps://github.com/flavorjones/loofah/pull/51\r\nhttps://github.com/flavorjones/loofah/pull/52\r\nhttps://github.com/flavorjones/loofah/pull/54\r\n\r\n//@rafaelfranca'
11199,'rafaelfranca','ActiveRecord::ReadOnlyRecord even with readonly(false) in scope\nwhen upgrading my app to rail4 some actions throw an `ActiveRecord::ReadOnlyRecord`\r\n\r\nthat\'s probably because they have a default-scope that uses a `join` \r\n\r\nthat was already an issue with rails3, that\'s why those scopes have a `readonly(false)` addition:\r\n\r\n```ruby\r\ndefault_scope -> { joins(:event).where("events.label" => Whitelabel[:label_id]).readonly(false) }\r\n```\r\n\r\nupdating to rails4 breaks this behavior. is that expected? if so, is there a way to work around it?\r\n\r\nhere is the code: https://github.com/phoet/on_ruby/blob/master/app/models/material.rb#L10\r\n'
11168,'josh','Enforce signed cookie expiration\nExtracting a chainable cookie jar for a technique we use at @github to prevent cookie replays after the cookie expires from the users browser.\r\n\r\n``` ruby\r\ncookies.signed.expires[:user_id] = { :value => 137, :expires => 1.week.from_now }\r\ncookies.signed.expires[:user_id] # => 137\r\n```\r\n\r\nThe same browser expiry value is baked into the cookie value, signed and verified on read. Obvious this requires the cookie be signed or encrypted or else you could easy forge whatever expiry time. So you\'ll need to chain it with the existing signed or encrypted jars.\r\n\r\nI\'m still really unsure about the name. *"expire"*, *"expires"*, *"expiry"*, etc. The idea it is enforces the expire time. Any suggestions? Was hoping @dhh could wordsmith it.\r\n\r\n/cc @dhh @josevalim @trevorturk @mastahyeti\u200e @spastorino \r\n'
11110,'senny','Unable to grab "Range" header in Rails 4.0.0\nIn a controller I have this code:\r\n\r\n```ruby\r\n        puts "IN send content \'#{request.headers[\'Range\']}\'"\r\n        request.headers.each do |k, v|\r\n          if k == \'Range\'\r\n            puts "RANGE HEADER FOUND \'#{v}\'"\r\n          end\r\n        end\r\n```\r\n\r\nThis produces the following output:\r\n\r\n```\r\nIN send content \'\'\r\nRANGE HEADER FOUND \'bytes=4-11\'\r\n```\r\n\r\nThis seems rather paradoxical, right?   This works correctly in rails 3.2.12, but not in 4.0.0\r\n\r\nIn rails 4.0.0 this returns the result I\'m looking for, but it feels like I\'m violating the API.\r\n```ruby\r\nrequest.headers.env[\'Range\']\r\n#=> "bytes=4-11"\r\n```\r\n\r\n'
11060,'guilleiguaran','Only output Server logs in Development\nRight now when you start a server via `rails s`, the logger gets extended so that it logs to the file system and also to stdout. This extension behavior is not "intelligent" and if the default logger is already set to output to stdout, then the contents will be received twice.\r\n\r\nTo capture logs in accordance with http://www.12factor.net/logs some platforms require the logs to be sent to standard out. If a logger is set to stdout, and the server is started using `rails server` instead of another method (i.e. `thin start` etc.) then the app will produce double logs.\r\n\r\nThis PR fixes the issue by only extending the logger to standard out in the development environment. So that in production you don\'t get double logs like this:\r\n\r\n```\r\nActionView::Template::Error (wrong number of arguments (5 for 4)):\r\n    1: <% lang_index = 0 %>\r\n    2: <div class="row">\r\n    3:   <ul class="nav nav-tabs nav-stacked span2" data-tabs="tabs" id="repo-tabs">\r\n    4:     <% repos.group_by(&:language).each do |lang, repos| %>\r\n    5:       <% unless lang == nil %>\r\n    6:         <li><a href="#<%= "#{lang.parameterize}#{lang.hash}" %>" data-toggle="tab"><%= lang %></a></li>\r\n    7:       <% end -%>\r\n  app/views/shared/_repos.html.erb:4:in `_app_views_shared__repos_html_erb___1685450633638247395_70300668607000\'\r\n  app/views/pages/index.html.erb:13:in `_app_views_pages_index_html_erb__2084723628308867770_70300687584880\'\r\n\r\nActionView::Template::Error (wrong number of arguments (5 for 4)):\r\n    1: <% lang_index = 0 %>\r\n    2: <div class="row">\r\n    3:   <ul class="nav nav-tabs nav-stacked span2" data-tabs="tabs" id="repo-tabs">\r\n    4:     <% repos.group_by(&:language).each do |lang, repos| %>\r\n    5:       <% unless lang == nil %>\r\n    6:         <li><a href="#<%= "#{lang.parameterize}#{lang.hash}" %>" data-toggle="tab"><%= lang %></a></li>\r\n    7:       <% end -%>\r\n  app/views/shared/_repos.html.erb:4:in `_app_views_shared__repos_html_erb___1685450633638247395_70300668607000\'\r\n  app/views/pages/index.html.erb:13:in `_app_views_pages_index_html_erb__2084723628308867770_70300687584880\'\r\n```\r\n\r\nATP Railties. Opened against master in favor of #10999'
11055,'rafaelfranca','Ability to pass block to select form builder helper\nIn case when there is some complicated html inside of <select> tag the default rails helpers won\'t help and you need to generate html manually.\r\n\r\nThis patch allows to pass a block to rails form builder helper:\r\n\r\n``` haml\r\n    = select(report, "campaign_ids") do\r\n    -# OR\r\n    = f.select(:campaign_ids) do\r\n      - available_campaigns.each do |c|\r\n        %option{:data => {:tags => c.tags.to_json}, :value => c.id}= c.name\r\n```\r\n\r\n'
11044,'chancancode',"Parsing empty array as array of [null] in json request\nNow with the following params:\r\n\r\n    { people: [{name: 'angelo', posts:[] }] }\r\n\r\nIn a normal http post are decoded as:\r\n\r\n    { :people => [{:name => 'angelo', :posts => []} ]}\r\n\r\nwhile in json request are decoded as:\r\n\r\n    { :people => [{:name => 'angelo', :posts => nil }] }\r\n\r\nWith this PR , json request and html have the same decoded params\r\nfixes #11023"
10996,'rafaelfranca',"Refactor and clean up number helpers\nReading through the source of the number helpers is a nightmare. There is very little that can be understood about the code aside from the documentation for each. This is intended to pull some of the hidden secrets of these helpers into their own classes.\r\n\r\n* Refactored all helpers to delegate to a `NumberConverter` object.\r\n* Extracted as much hidden knowledge as possible.\r\n* Eliminated need to hide private module methods\r\n* Eliminated as much shared/hidden duplication in the objects.\r\n\r\nI don't think I am done as I still do not fully grasp a lot of the mathematical decisions being made, so help with naming would be much appreciated."
10984,'tenderlove','Live streaming doesn\'t work with basic authentication or builder\nThe depot application in Agile Web Development with Rails is a store where the products are books.  I looked into adding a "download" action which would download an ebook using live streaming.  After I did that, other actions started to fail.  It is understandable that other actions in the same controller would perform differently, but I didn\'t expect hangs.\r\n\r\nBasic scenario: rails new depot; cd depot; rails generate scaffold Product title; rake db:migrate; rails server.  At that point, navigate to http://localhost:3000/products/, and create a single new product using whatever title you like.\r\n\r\nReplace app/controllers/products_controller.rb with https://gist.github.com/rubys/5801812\r\n\r\nCreate app/views/products/index.xml.builder with https://gist.github.com/rubys/5801817\r\n\r\nWith builder, hangs are intermittent. Navigate to http://localhost:3000/products.xml and refresh the page repeatedly (⌘R or F5).\r\n\r\nWith authentication hangs are repeatable.  Navigate to http://localhost:3000/products/1/edit'
10963,'pixeltrix','Router regression: url_for \'*path\' => \'pages#show\' returns links starting with // \nI have a \r\n\r\n    match "*path" => "pages#show"\r\n\r\nin my routes.rb and \r\n\r\n    url_for({:controller=>"pages", :action=>"show", :path=>"/test"})\r\n\r\nreturns "//test" instead of "/test" since rails ~ 3.2.13'
10961,'spastorino',"Removing a repetitive comment and refactoring the Application class in Railties\nThe comment on the ``env_config`` method is repetitive, likely to get outdated, and provides no useful information which cannot be gleamed from the code. I'm therefore removing it. I'm also refactoring to make the method easier to read."
10952,'fxn',"rake db:schema:load seems to be broken\nOn rc2, I tried running a simple migration and got a weird error message claiming that one of my old migrations' timestamp was the same for a different migration. Examining the migrations folder, I found this to be untrue.\r\n\r\nI then ran `rake db:reset` and it appears to perform every migration once, successfully, before trying each one a second time. Relevant output is this:\r\n\r\n    [lots of successful migrations]\r\n    -- initialize_schema_migrations_table()\r\n       -> 0.0077s\r\n    rake aborted!\r\n    Duplicate migration 20130604213458. Please renumber your migrations to resolve the conflict.\r\n\r\n`20130604213458` is the timestamp for the very first migration. Running `rake db:migrate` now gives me a slightly different error:\r\n\r\n    Multiple migrations have the name AddHstoreExtension\r\n\r\n`AddHstoreExtension` is the very first migration, with timestamp `20130604213458`. Neither the timestamp nor the migration name are duplicated.\r\n\r\nAs a side note, after trying several combinations of `rake db:drop`, `rake db:migrate`, `rake db:schema:load`, `rake db:reset`, etc. the error messages for `rake db:migrate` and `rake db:reset` have switched from what they originally were. Minor detail, though.\r\n\r\nSwitching back to rc1 has fixed this completely."
10920,'josevalim','Make .find_each return an Enumerator if no block given\nPreviously, find_each required a block. This is in-congruent with other enumerable behavior, which can be chained.\r\n\r\nBy returning a potentially lazy enumerable, the benefit of memory management is maintained, but with the added benefit of chain-able operations.'
10902,'spastorino',"Calls to the application constant have been refactored\nInstead of using ``AppTemplate::Application`` when drawing routes or creating configurations\r\non the application, I'm changing to use ``Rails.application`` which is more agnostic.\r\n\r\nDoing this means that in the future, if the Rails application is no longer a singleton, you'll still be able to use the tests by calling the canonical rails application instance."
10901,'senny','Fixes CollectionAssociation#ids_reader returning incorrect ids for new records\nEdit: This is present in 3.2 only - this issue isn\'t present in master as it\'s fixed by other changes.\r\n\r\n`Associations::CollectionAssociation#ids_reader` triggered for a non-persisted owning record would incorrectly trigger a query for records with a `NULL` foreign key value. This would result in querying and returning IDs of all non-associated records, rather than an empty set as would be expected. \r\n\r\nFor example:\r\n\r\n```\r\nCompany.new.contract_ids\r\n"SELECT `contracts`.id FROM `contracts`  WHERE `contracts`.`company_id` IS NULL"\r\n```\r\n\r\nBesides the incorrect return value, on large tables this could potentially have a material performance impact.\r\n\r\nWith this change, the above query won\'t be executed and the `ids_reader` will simply map over the cached association values (which would be an empty set for new records, unless any had been added).'
10898,'tenderlove','Refactored ActiveRecord `first` method to get rid of duplication.\n'
10845,'pixeltrix','Id extraction from model object in mailer views\nWIth rails 4.0.0.rc1\r\n\r\n```ruby\r\nuser_order_url(@order, :locale => \'fr\')\r\nuser_order_path(@order, :locale => \'fr\')\r\n```\r\nboth lines of code fails in mailer views with this message\r\n\r\n```\r\n#<ActionController::UrlGenerationError: No route matches {:action=>"show", :controller=>"orders", :locale=>"fr", :id=>nil, :format=>nil} missing required keys: [:id]>\r\n```\r\nbut that used to work with rails 3.2.x\r\n\r\nIf I set id explicitly this work again\r\n\r\n```ruby\r\nuser_order_url(@order, :locale => \'fr\', id: @order.id)\r\nuser_order_path(@order, :locale => \'fr\', id: @order.id)\r\n```\r\n\r\nand in standard controller that works fine without setting id explicitly. '
10830,'tenderlove','Rails 4 bytea/binary not unescaped?\nI have a bytea field in postgres (says binary in schema.rb).\r\n\r\nThere seems to be different behavior in Rails 4 compared to Rails 3.2.\r\nIf I use ActiveRecord::Base.connection.execute to get raw data, I get the same data in both versions.\r\n\r\nHowever when I inspect the value that ActiveRecord gives me when reading the attribute from the model, I get a different value.\r\n\r\nRaw: "\\\\x789c63e108010000730061"\r\nRails 3.2: "x\\x9Cc\\xE1\\b\\x01\\x00\\x00s\\x00a"\r\nRails 4: "\\\\x789c63e108010000730061"\r\n\r\nObviously this is causing problems for me. What\'s wrong?\r\nPS: I was using **postgres_ext** and activerecord-postgres-hstore gems in Rails 3.2, removed in Rails 4. I\'m getting this issue during upgrading to Rails 4.\r\n\r\nPS: It seems I can get the same string in Rails 4 by doing PGconn.unescape_bytea on the string. Did someone forget to unescape it or something? If this is intended I think it should be included in http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html\r\n\r\nThanks.\r\n'
10816,'rafaelfranca','Make AM::Dirty less dirty to plugin into AR or other library\nAdded new API methods #reset_changes! and #changed_applied!\r\nto control changes state. Previsously you needed to update internal\r\ninstance variables, but now API methods is available.\r\n\r\n\r\n``` ruby\r\n    class Person\r\n      include ActiveModel::Dirty\r\n\r\n      define_attribute_methods :name\r\n\r\n      # Old way:\r\n\r\n      def save\r\n        # do some work\r\n        @previously_changed = changes\r\n        @changed_attributes = nil\r\n      end\r\n\r\n      def reload\r\n        # do some work\r\n        @previously_changed = nil\r\n        @changed_attributes = nil\r\n      end\r\n\r\n      # New way:\r\n\r\n      def save\r\n        # do some work\r\n        changes_applied!\r\n      end\r\n\r\n      def reload\r\n        # do some work\r\n        reset_changes!\r\n      end\r\n    end'
10789,'tenderlove',"Exception when setting config.logger = Logger.new(STDOUT) in Rails 4\nOn Rails 4.0.0.rc1, if I set `config.logger` to be `Logger.new(STDOUT)` and make a request, I get an exception (backtrace included below). I've tested this at the tip of the 4-0-0 branch as well with the same results. Using `ActiveSupport::Logger.new(STDOUT)` works fine. I reproduced this on Mac OS X 10.8.3, with Ruby 2.0.0-p195 compiled with RVM.\r\n\r\nIt's not clear to me whether or not Ruby's Logger is supposed to work with Rails 4. The [debugging guide](http://edgeguides.rubyonrails.org/debugging_rails_applications.html#the-logger) still includes examples using the Logger class, and the [Rails 4 release notes](http://edgeguides.rubyonrails.org/4_0_release_notes.html#active-support-deprecations) indicate that you should be able to use Logger as well. The [upgrading guide](http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html) doesn't mention Logger at all, though I know it is a work in progress.\r\n\r\nOn the other hand, [core_ext/logger.rb](https://github.com/rails/rails/blob/4-0-0/activesupport/lib/active_support/core_ext/logger.rb) in Active Support seems to be deprecated, though I am pretty sure that this file isn't being loaded by default in a new Rails 4 install.\r\n\r\nAt minimum, this seems like a documentation issue. If Ruby's Logger is no longer supported, the docs should probably say so, and examples using `Logger` should be changed.\r\n\r\nIf the stdlib logger is still supported, then I think this is a bug that probably needs to be fixed before 4.0 is released.\r\n\r\nPlease let me know if there's any way that I can be helpful.\r\n\r\n```\r\nArgumentError (wrong number of arguments (0 for 1)):\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/activesupport/lib/active_support/core_ext/kernel/reporting.rb:82:in `capture'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/activerecord/lib/active_record/migration.rb:363:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/activesupport/lib/active_support/callbacks.rb:373:in `_run__1084573524063806798__call__callbacks'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/activesupport/lib/active_support/callbacks.rb:80:in `run_callbacks'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/callbacks.rb:27:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/reloader.rb:64:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/remote_ip.rb:76:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/railties/lib/rails/rack/logger.rb:38:in `call_app'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/railties/lib/rails/rack/logger.rb:23:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/request_id.rb:21:in `call'\r\n  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'\r\n  rack (1.5.2) lib/rack/runtime.rb:17:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/activesupport/lib/active_support/cache/strategy/local_cache.rb:83:in `call'\r\n  rack (1.5.2) lib/rack/lock.rb:17:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/actionpack/lib/action_dispatch/middleware/static.rb:64:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/railties/lib/rails/engine.rb:511:in `call'\r\n  /Users/david/.rvm/gems/ruby-2.0.0-p195@rails4/bundler/gems/rails-6f7046354719/railties/lib/rails/application.rb:97:in `call'\r\n  rack (1.5.2) lib/rack/lock.rb:17:in `call'\r\n  rack (1.5.2) lib/rack/content_length.rb:14:in `call'\r\n  rack (1.5.2) lib/rack/handler/webrick.rb:60:in `service'\r\n  /Users/david/.rvm/rubies/ruby-2.0.0-p195/lib/ruby/2.0.0/webrick/httpserver.rb:138:in `service'\r\n  /Users/david/.rvm/rubies/ruby-2.0.0-p195/lib/ruby/2.0.0/webrick/httpserver.rb:94:in `run'\r\n  /Users/david/.rvm/rubies/ruby-2.0.0-p195/lib/ruby/2.0.0/webrick/server.rb:295:in `block in start_thread'\r\n```"
10786,'guilleiguaran','Imposible to get remote javascript on Rails 4 (under Windows)\nIn rails 3, I included this line: \r\n<%= javascript_include_tag "http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.js" %>\r\n\r\nBut when migrate to rails 4, its not posible and I get the next error:\r\nInvalid argument - C:/Ruby193/myapp/app/assets/javascripts/http://cdn.leafletjs.com/leaflet-0.5.1\r\n\r\nSo far, I won\'t be able to get remote libraries.'
10773,'pixeltrix','Adding documentation and tests to ``polymorphic_url`` and ``link_to``\nRight now, it\'s hard to find any documentation to tell you if its possible to do this:\r\n\r\n```ruby\r\npolymorphic_url([:comments], anchor: "comment_#{comment.id}")\r\n```\r\n\r\nHowever it is possible because ``polymorphic_url`` sends its options as arguments to ``url_for``. This patch documents the options and adds tests to make sure the options work.'
10757,'fxn',"Module#deprecate dependency ActiveSupport::Deprecation\nI used Module#deprecate and raised NoMethodError\r\n\r\n```ruby\r\nrequire 'active_support/core_ext/module/deprecation'\r\n\r\nclass Foo\r\n  def foo\r\n  end\r\n  deprecate :foo # raise NoMethodError: undefined method `deprecate_methods' for ActiveSupport::Deprecation:Class\r\nend\r\n\r\nFoo.new.foo\r\n```\r\n\r\nThe following is satisfactory:\r\n\r\n```ruby\r\nrequire 'active_support/deprecation'\r\nrequire 'active_support/core_ext/module/deprecation'\r\n\r\nclass Foo\r\n  def foo\r\n  end\r\n  deprecate :foo\r\nend\r\n\r\nFoo.new.foo\r\n```"
10756,'rafaelfranca','Write_fragment gives undefined method errors\nDISCLAIMER: This is me first pull request ever, sorry if i did something wrong :)\r\n\r\nWhen you create an object that has no strict representation as a string, the to_str returns an undefined method error.\r\n\r\nIt was broken in commit https://github.com/rails/rails/commit/a61e3acef25d8fb86275d41a9d0d1ba163d7e0bb\r\n\r\nJust added the if respond_to.\r\n\r\nThis should be fix in (all) supported version of rails imho.\r\n\r\n```ruby\r\n>> fragment = {"foo"=>0.0, "bar"=>0.0}\r\n=> {"foo"=>0.0, "bar"=>0.0}\r\n>> fragment_name= "foobar"\r\n=> "foobar"\r\n>>  write_fragment(fragment_name, fragment)\r\n!! #<NoMethodError: undefined method `to_str\' for {"foo"=>0.0, "bar"=>0.0}:Hash>\r\n>>\r\n```\r\n'
10740,'josevalim',"HashWithIndifferentAccess#select working as intended\nBefore this commit, #reject returned a HashWithIndifferentAccess, whereas #select returned a Hash. Now #select also returns a HashWithIndifferentAccess.\r\n\r\nI think the behavior was confusing, refactoring some code I changed a couple of `hash_with_indifferent_access.reject { |k,v| v.blank? }` by a `hash_with_indifferent_access.select { |k,v| v.present? }` because I found it a lot more readable in the context it was, and was surprised that the behavior changed.\r\n\r\nI'm not sure if testing both bang methods is necessary, but I thought it might not hurt.\r\n\r\nHope to hear what you think.\r\n\r\nFixes #10723"
10686,'pixeltrix','Fix error due to Time.at \nIn changes to fix https://bugs.ruby-lang.org/issues/8173. `Time.at` now requires an object to implement `to_int`. Aliasing `to_int` to `to_i` fixes this.'
10685,'fxn','ActiveSupport::Dependencies.const_missing can choose incorrect from_mod\nI noticed an issue while using the MailView gem, which someone discovered a few months ago: https://github.com/37signals/mail_view/issues/37\r\n\r\nI traced the issue down to this commit: https://github.com/rails/rails/commit/2ed325a3e90fc17c2d52a26bd1799b5f4e4bdf88\r\n\r\nThe issue manifests as an exception "A copy of <name> has been removed from the module tree but is still active!" ...which is coming from here: https://github.com/rails/rails/blob/master/activesupport/lib/active_support/dependencies.rb#L444-L446\r\n\r\nThe MailView gem asks you to put a mailer in `app/mailers` like so:\r\n\r\n```ruby\r\nclass MessagePreview < MailView\r\n  def example\r\n    ExampleMailer.example\r\n  end\r\nend\r\n```\r\n\r\nIf you change any model or controller in your application, you are forced to `touch tmp/restart.txt` to avoid raising the exception. I\'m able to work around the issue by using the double-colon thingamajig to ensure we\'re at the top namespace:\r\n\r\n```ruby\r\nclass MessagePreview < MailView\r\n  def example\r\n    ::ExampleMailer.example\r\n  end\r\nend\r\n```\r\n\r\n...but notice it\'s done on the mailer. I did some debugging and noticed something strange in `load_missing_constant` like so:\r\n\r\n```ruby\r\nload_missing_constant(from_mod, const_name)\r\nfrom_mod = MessagePreview\r\nconst_name = ExampleMailer\r\n```\r\n\r\nSo, I believe `Dependencies` is (incorrectly?) assuming that `ExampleMailer` is defined in `MessagePreview` when it is just a regular mailer defined like so:\r\n\r\n```ruby\r\nclass ExampleMailer < ApplicationMailer\r\n  def example\r\n  end\r\nend\r\n```\r\n\r\n...which, I believe was changed by this commit: https://github.com/rails/rails/commit/2ed325a3e90fc17c2d52a26bd1799b5f4e4bdf88\r\n\r\nI\'m not sure if this is a bug with Rails or with MailView, to be honest. I haven\'t looked at the ActiveSupport::Dependencies code until now. Something seems fishy, though, so I thought I should open an issue here to get some more :eyes: on it. \r\n\r\n/cc @fxn \r\n\r\n'
10672,'spastorino','Bug fix: Evented notification subscribers can handle published events\n'
10646,'jeremy',"Fix ActionMailer testcase break with mail 2.5.4.\nAccording to https://travis-ci.org/rails/rails/jobs/7220308#L148, AM's testcase was break.\r\nI guess that AM's testcase was wrong. When we pass :transfer_encoding option, we should pass *encoded* content.\r\n\r\nI guess this PR should be backported to 3-2-stable, 4-0-stable too."
10643,'jonleighton','[Rails 4] Association Unscoped does not work\nI am not sure if this is a bug. Back in Rails 3. I believe I could do this...\r\n\r\n```ruby\r\nbelongs_to :creator, scope: unscoped, class_name: "User"\r\n```\r\n\r\nBut this in Rails 4 does not work...\r\n\r\n```ruby\r\nbelongs_to :creator, -> { unscoped }, class_name: "User"\r\n```\r\n\r\nAnd I had to do it this way...\r\n\r\n```ruby\r\nbelongs_to :creator, -> { where is_destroyed: [true, false] }, class_name: "User"\r\n```\r\n\r\nBut this is still working...\r\n\r\n```irb\r\nUser.where(is_destroyed: false).unscoped.find 2\r\n# User 2 is_destroyed: true\r\n```'
10634,'pixeltrix','Maintain proleptic gregorian in Time#advance\nIf Time is assumed to represent a gregorian value (not conspicuously documented, but assumed by Time#to_date in Ruby > 1.8), Time#advance should return a value which is also gregorian. Currently, that is not invariably the case:\r\n\r\n    Time.utc(1582, 10, 15).advance(:days => -1) # => 1582-10-04 00:00:00 UTC\r\n\r\nIf a resulting Time object with implicit julian date is used in calculations with Time objects with implicit gregorian dates, hijinks ensue:\r\n\r\n    t = Time.utc(1582, 10, 15)\r\n    distance_of_time_in_words(t - t.advance(:days => -1)) # => "11 days"\r\n\r\nI\'d be glad to backport this fix. In that case ActiveSupport\'s Time#to_date (for Ruby < 1.9) should also be amended to specify proleptic gregorian for consistent behavior with Ruby 1.9.'
10625,'fxn',"include README in relevant top-level module for RDoc\nThe purpose for this is to allow users who've installed the RI documentation for rails to view the associated README contents for all available top-level modules. This should work with rdoc 3.9, as well as future releases of rdoc."
10605,'tenderlove','Postgresql UUID primary key not defaulting to using uuid_generate_v4() in test environment...\nI\'m running Rails 4.0.0.rc1 and have a table that uses UUID as primary key:\r\n\r\n```ruby\r\nclass CreateWebLinks < ActiveRecord::Migration\r\n  def change\r\n    create_table :web_links, id: :uuid do |t|\r\n      t.boolean     :active,      default: true\r\n      t.string      :url,         null: false, default: "http://"\r\n      t.string      :title,       null: false, default: ""\r\n      t.string      :description\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWhen running migrations, the development database sets the default value to use PG\'s uuid_generate_v4() function to create the ID within the database.\r\n\r\nI have not been able to get the test database to perform similarly. The ID is created and is denoted as UUID. However, the default value of \'uuid_generate_v4()\' is not set in the database.\r\n\r\nI\'ve tried blowing the test database away, rake test:prepare and rake db:migrate RAILS_ENV=test. Can\'t seem to get it working and tests are failing as a result.'
10582,'guilleiguaran',"Sprockets under Ruby 2.0 and Rails 4.0rc1 ignores environment assets.precompile path appends\nThis line is ignored in config/environments/production.rb, but works in application.rb. \r\n\r\nconfig.assets.precompile += %w(vendor/*')\r\n\r\nSprockets also fails to compile jquery-ui images in vendor/assets/stylesheets/images no matter where you put this line.\r\n\r\n"
10526,'rafaelfranca','In Rails 4.0.0.rc1 serializing a nested hash in an array causes all keys to be stringified \nIn Rails 3.2.13 serializing a nested hash properly keep the keys as either strings or symbols.  In Rails 4.0.0.rc1 all keys inside arrays are stringified.\r\n\r\nTo verify I created a new rails app and added one model and one test.  Here are the important files and test results:\r\nGemfile:\r\n```ruby\r\nsource \'https://rubygems.org\'\r\n\r\n# gem \'rails\', \'4.0.0.rc1\'\r\ngem \'rails\', \'3.2.13\'\r\ngem \'sqlite3\'\r\ngem \'pry\'\r\n```\r\ncreate_xyzzies.rb migration file:\r\n```ruby\r\nclass CreateXyzzies < ActiveRecord::Migration\r\n  def change\r\n    create_table :xyzzies do |t|\r\n      t.text :ticket\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nxyzzy.rb model file:\r\n```ruby\r\nclass Xyzzy < ActiveRecord::Base\r\n  serialize :ticket\r\nend\r\n```\r\nxyzzy_test.rb \r\n```ruby\r\nrequire \'test_helper\'\r\n\r\nclass XyzzyTest < ActiveSupport::TestCase\r\n  test "the ticket" do\r\n    xy = Xyzzy.new\r\n    xy.ticket = original_ticket\r\n    # binding.pry\r\n    assert xy.ticket == original_ticket\r\n    xy.save\r\n    # binding.pry\r\n    assert xy.ticket == original_ticket\r\n  end\r\nend\r\n\r\ndef original_ticket\r\n  {\r\n    compression: 0,\r\n    \'name\' => \'test\',\r\n    guid: \'xyzzy\',\r\n    settings: {\r\n      option1: \'no way\',\r\n      \'option2\' => \'maybe\',\r\n      option3: \'for sure\'\r\n    },\r\n    transforms: [\r\n      t1: {\r\n        :type => 2,\r\n        wrapper: 16,\r\n        \'mime\' => \'video/mpg\',\r\n        fps: 29.95\r\n      },\r\n      \'t2\' => {\r\n        :type => 2,\r\n        \'wrapper\' => 16,\r\n        mime: \'video/mpg\',\r\n        "fps" => 29.95\r\n      }\r\n    ]\r\n  }\r\nend\r\n```\r\nBundle and run the test (rake test) - it passes, the hash looks like this: (at the binding locations)\r\n```ruby\r\n# Rails 3.2.13\r\n\r\n## Ticket before save\r\n=> {:compression=>0,\r\n "name"=>"test",\r\n :guid=>"xyzzy",\r\n :settings=>{:option1=>"no way", "option2"=>"maybe", :option3=>"for sure"},\r\n :transforms=>\r\n  [{:t1=>{:type=>2, :wrapper=>16, "mime"=>"image/png", :fps=>29.95},\r\n    "t2"=>{:type=>2, "wrapper"=>16, :mime=>"image/png", "fps"=>29.95}}]}\r\n\r\n## Ticket after save\r\n=> {:compression=>0,\r\n "name"=>"test",\r\n :guid=>"xyzzy",\r\n :settings=>{:option1=>"no way", "option2"=>"maybe", :option3=>"for sure"},\r\n :transforms=>\r\n  [{:t1=>{:type=>2, :wrapper=>16, "mime"=>"video/mpg", :fps=>29.95},\r\n    "t2"=>{:type=>2, "wrapper"=>16, :mime=>"video/mpg", "fps"=>29.95}}]}\r\n```\r\n\r\nEdit the Gemfile and comment the line for rails 3.2.13 and uncomment the rails 4.0.0.rc1\r\nBundle and run the test again (rake test) - it fails, the hash looks like this: (at the binding locations)\r\n```ruby\r\n# Rails 4.0.0.rc1\r\n\r\n## Ticket before save\r\n=> {:compression=>0,\r\n "name"=>"test",\r\n :guid=>"xyzzy",\r\n :settings=>{:option1=>"no way", "option2"=>"maybe", :option3=>"for sure"},\r\n :transforms=>\r\n  [{:t1=>{:type=>2, :wrapper=>16, "mime"=>"video/mpg", :fps=>29.95},\r\n    "t2"=>{:type=>2, "wrapper"=>16, :mime=>"video/mpg", "fps"=>29.95}}]}\r\n    \r\n## Ticket after save\r\n=> {:compression=>0,\r\n "name"=>"test",\r\n :guid=>"xyzzy",\r\n :settings=>{:option1=>"no way", "option2"=>"maybe", :option3=>"for sure"},\r\n :transforms=>\r\n  [{"t1"=>{"type"=>2, "wrapper"=>16, "mime"=>"video/mpg", "fps"=>29.95},\r\n    "t2"=>{"type"=>2, "wrapper"=>16, "mime"=>"video/mpg", "fps"=>29.95}}]}\r\n```\r\nNotice that in Rails 4 all keys inside hashes in the array are stringified.  In reality my hashes are not mixed like this example is - they are all symbol keys and everything inside an array gets stringified.'
10525,'rafaelfranca','LookupContext js/html fallback is hacked in there\n`ActionView::LookupContext` is hardcoded to append the :html format whenever :js is set as the format.  A user may want to extend this behavior to their own custom defined formats (for example a :mobile format could fallback to :html as well).  \r\n\r\nThis current behavior is the magic behind allowing you to render an html partial within a javascript response.\r\n\r\n```ruby\r\n# in new.js.erb\r\n# will render the _form.html.erb partial\r\nrender partial: \'form\', locals: {object: @object}\r\n```\r\n\r\nThis change allows you to specify your own fallbacks easily.  In somewhere like `config/initializers/mime_types.rb`:\r\n```ruby\r\nMimeTypes.register_alias "text/html", :mobile\r\nActionView::LookupContext.format_fallbacks[:mobile] = [:html]\r\n```\r\nNow, if you have a request where the format is :mobile, it will try to render a mobile template first, and fallback to the html template.  Additionally, you could render an html partial within a mobile template.\r\n\r\nThis behavior is already being tested in `actionpack/test/template/lookup_context_test.rb`.\r\n'
10492,'josevalim','ActiveRecord is running "validate on: :create" validations of persisted associated objects when the parent is created.\nThis is a change in behavior since Rails 3.2.*, and perhaps related to this change 9b15e01c219013825275e7e10140d9883d148c8c\r\n\r\nSeems counter-intuitive to run a create validation when the object itself is not being created.\r\n\r\nI have a failing test here: Empact@bd13c5f42565a910b6d167538b78d75703b4f41a'
10482,'tenderlove','Fixes #10432 add_column not creating array columns in PostgreSQL\nWhen then PostgreSQL visitor was [added](https://github.com/rails/rails/commit/6b7fdf3bf3675a14eae74acc5241089308153a34)\r\n`add_column` was no longer receiving the column options directly. This\r\ncaused the options to be lost along the way.'
10428,'guilleiguaran','config.assets.precompile ignored with recommended settings\nconfig.assets.precompile is ignored if using the suggested format from rails guides.\r\n\r\n```ruby\r\nconfig.assets.precompile += [\'test.js\']   # ignored\r\nconfig.assets.precompile << \'test.js\'  # works\r\n```\r\n\r\nBoth pieces of code produce the same array, but in the former, additions are not compiled.\r\n\r\nI made a new app to verify something wasn\'t amiss in my larger app, and the same problem occurs.\r\n\r\nRails 4.0.0.beta1\r\nruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-darwin12.3.0]\r\n\r\n```\r\n# default production.rb\r\n\r\npipe-test ❯ RAILS_ENV=production rake assets:precompile\r\n[#<Proc:0x007ff48c920350@/Users/gdunne/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sprockets-rails-2.0.0.rc4/lib/sprockets/railtie.rb:39 (lambda)>, /(?:\\/|\\\\|\\A)application\\.(css|js)$/]\r\nINFO -- : Writing .../public/assets/rails-d8fb6a2617998f32edf5edb354fc5326.png\r\nINFO -- : Writing .../public/assets/application-d4a508061cd56ce9e544945495285e0c.js\r\nINFO -- : Writing .../public/assets/application-fa5fb97555c828140aa155ca341aaff3.css\r\n\r\n\r\n\r\n# production.rb as per: http://guides.rubyonrails.org/asset_pipeline.html#precompiling-assets\r\n# config.assets.precompile += [\'test.css\', \'test.js\']\r\n\r\npipe-test ❯ RAILS_ENV=production rake assets:precompile                                                                             ⏎\r\n[#<Proc:0x007f884a8a4358@/Users/gdunne/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sprockets-rails-2.0.0.rc4/lib/sprockets/railtie.rb:39 (lambda)>, /(?:\\/|\\\\|\\A)application\\.(css|js)$/, "test.css", "test.js"]\r\nINFO -- : Writing .../public/assets/rails-d8fb6a2617998f32edf5edb354fc5326.png\r\nINFO -- : Writing .../public/assets/application-d4a508061cd56ce9e544945495285e0c.js\r\nINFO -- : Writing .../public/assets/application-fa5fb97555c828140aa155ca341aaff3.css\r\n\r\n\r\n\r\n# production.rb:\r\n# [\'test.css\', \'test.js\'].each do |asset|\r\n#  config.assets.precompile << asset\r\n# end\r\n\r\npipe-test ❯ RAILS_ENV=production rake assets:precompile\r\n[#<Proc:0x007fd7c4338328@/Users/gdunne/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sprockets-rails-2.0.0.rc4/lib/sprockets/railtie.rb:39 (lambda)>, /(?:\\/|\\\\|\\A)application\\.(css|js)$/, "test.css", "test.js"]\r\nINFO -- : Writing .../public/assets/rails-d8fb6a2617998f32edf5edb354fc5326.png\r\nINFO -- : Writing .../public/assets/application-d4a508061cd56ce9e544945495285e0c.js\r\nINFO -- : Writing .../public/assets/test-a3b89b66a8471f3e75abb239e3b35c7d.js\r\nINFO -- : Writing .../public/assets/application-fa5fb97555c828140aa155ca341aaff3.css\r\nINFO -- : Writing .../public/assets/test-a3b89b66a8471f3e75abb239e3b35c7d.css\r\n```\r\n\r\n\r\n'
10377,'dhh',"Allow numbers in partial name for digesting\nThe regular expression would not match templates with numbers in the filename. For example:\r\n\r\n```ruby\r\n<%= render 'shared/layout_1' %>\r\n```\r\n\r\nWould result in (in the log):\r\n\r\n`Couldn't find template for digesting: shared/layout_.html`\r\n\r\n... and no digest would be generated."
10370,'neerajdotname','It\'s not possible to make exclusive scopes any more\nSince we\'ve deprecated `all`, I also tried with current_scope but to no avail:\r\n\r\n```\r\nclass Project\r\n  # Intend as exclusive scope\r\n  scope :trashed_or_not, -> { all.merge(self.where(trashed: [ true, false ])) }\r\nend\r\n\r\n\r\nProject.where(trashed: false).trashed_or_not\r\n\r\n# 4.0.0.beta1\r\n"SELECT `projects`.* FROM `projects` WHERE `projects`.`trashed` IN (1, 0)"\r\n\r\n# rails/master\r\n"SELECT `projects`.* FROM `projects` WHERE `projects`.`trashed` = 0 AND `projects`.`trashed` IN (1, 0)"\r\n\r\n\r\nProject.where(trashed: false).merge(Project.trashed_or_not)\r\n\r\n# 4.0.0.beta1 AND rails/master\r\n"SELECT `projects`.* FROM `projects` WHERE `projects`.`trashed` IN (1, 0)"\r\n```\r\n\r\nWhat we really want to do is this, though:\r\n\r\n```\r\nclass Project\r\n  # Intend as exclusive scope\r\n  scope :trashed_or_not, -> { exclusive.where(trashed: [ true, false ]) }\r\nend\r\n```\r\n\r\nBut until that works, at the very least we need another way of declaring exclusive scopes via the merge feature inside of a scope definition.'
10367,'jonleighton',"first_or_create fix for has_many :through\nfixes #10144\r\n\r\n`physician.patients.first_or_create` creates the association\r\nrecord.\r\n\r\nHowever `physician.patients.where(name: 'neeraj').first_or_create`\r\ndoes not create the association record.\r\n\r\nIn the first case `first_or_create` is being invoked on\r\n`CollectionProxy` instance. However in the second instance\r\n`physician.patients.where(name: 'neeraj')` returns a `Relation`\r\nobject and not `CollectionProxy` object.\r\n\r\nFix is to check if the relation object happens to have\r\n`proxy_association` then invoke `create` on that\r\n`proxy_association`.\r\n\r\n/cc @jonleighton"
10306,'pixeltrix','String#to_time off-by-one-hour daylight savings time issue \nWhen calling to_time on a string representing a timestamp in Standard Time while in the context of a Daylight Savings Time environment, the resulting value is off by one hour:\r\n\r\n```\r\n"2010-01-26 16:21:18 +0000".to_time.utc\r\n => 2010-01-26 17:21:18 UTC\r\n```\r\n\r\nI believe this stems from this line of this commit, where the utc_offset from Time.now is used to calculate the resulting time\'s utc offset:\r\nhttps://github.com/rails/rails/commit/b79adc4323ff289aed3f5787fdfbb9542aa4f89f#L1R24\r\n\r\n```\r\n1.9.3-p125 :001 > Time.now.zone\r\n => "CDT"\r\n1.9.3-p125 :002 > Time.now.utc_offset/3600\r\n => -5\r\n1.9.3-p125 :003 > "2010-01-26 16:21:18 +0000".to_time.utc_offset/3600\r\n => -6\r\n```'
10305,'pixeltrix',"SSL redirects to the wrong route\nI've made a sample application to demonstrate this bug. \r\n\r\nGoing to http://rails-ssl-bug.herokuapp.com/foo/1 redirects to https://rails-ssl-bug.herokuapp.com/foo/preview/1\r\n\r\n----\r\n\r\nIt seems that Rails redirects to the first route with matching params, controller + action name.  \r\n\r\n```ruby\r\n  match ':foo/preview/:id'                    => 'application#test',  via: [:get], as: :preview\r\n  match ':foo/:id'                            => 'application#test',  via: [:get], as: :test\r\n```\r\n"
10304,'jonleighton','find_by_* method declared on an a hmt association class is ignored\n```\r\ndiff --git a/activerecord/test/cases/deprecated_dynamic_methods_test.rb b/activerecord/test/cases/deprecated_dynamic_methods_test.rb\r\nindex 8e842d8..a6b56c2 100644\r\n--- a/activerecord/test/cases/deprecated_dynamic_methods_test.rb\r\n+++ b/activerecord/test/cases/deprecated_dynamic_methods_test.rb\r\n@@ -413,6 +413,10 @@ class DeprecatedDynamicMethodsTest < ActiveRecord::TestCase\r\n     assert_equal person, person.readers.first.person\r\n   end\r\n \r\n+  def test_find_by_custom_finder_on_association_class\r\n+    assert_equal [], Author.first.comments.find_by_anything!\r\n+  end\r\n+\r\n   def test_find_or_initialize\r\n     the_client = companies(:first_firm).clients.find_or_initialize_by_name("Yet another client")\r\n     assert_equal companies(:first_firm).id, the_client.firm_id\r\ndiff --git a/activerecord/test/models/comment.rb b/activerecord/test/models/comment.rb\r\nindex ede5fbd..75cd984 100644\r\n--- a/activerecord/test/models/comment.rb\r\n+++ b/activerecord/test/models/comment.rb\r\n@@ -26,6 +26,11 @@ class Comment < ActiveRecord::Base\r\n     all\r\n   end\r\n   scope :all_as_scope, -> { all }\r\n+\r\n+  \r\n+  def self.find_by_anything!\r\n+    all\r\n+  end\r\n end\r\n \r\n class SpecialComment < Comment\r\n```\r\n\r\nProduces this failure:\r\n\r\n\r\n```\r\n\r\nDeprecatedDynamicMethodsTest#test_find_by_custom_finder_on_association_class:\r\nActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: comments.anything: SELECT  "comments".* FROM "comments" INNER JOIN "posts" ON "comments"."post_id" = "posts"."id" WHERE "posts"."author_id" = ? AND "comments"."anything" IS NULL LIMIT 1\r\n    /Users/david/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sqlite3-1.3.7/lib/sqlite3/database.rb:91:in `initialize\'\r\n    /Users/david/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sqlite3-1.3.7/lib/sqlite3/database.rb:91:in `new\'\r\n    /Users/david/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/sqlite3-1.3.7/lib/sqlite3/database.rb:91:in `prepare\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:303:in `block in exec_query\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:425:in `block in log\'\r\n    /Users/david/Code/rails/activesupport/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:420:in `log\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:292:in `exec_query\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:504:in `select\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:24:in `select_all\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:63:in `select_all\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/querying.rb:36:in `find_by_sql\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation.rb:561:in `exec_queries\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation.rb:447:in `load\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation.rb:196:in `to_a\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation/finder_methods.rb:315:in `find_take\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation/finder_methods.rb:65:in `take\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation/finder_methods.rb:71:in `take!\'\r\n    /Users/david/Code/rails/activerecord/lib/active_record/relation/finder_methods.rb:54:in `find_by!\'\r\n    /Users/david/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-deprecated_finders-1.0.1/lib/active_record/deprecated_finders/collection_proxy.rb:10:in `method_missing\'\r\n    test/cases/deprecated_dynamic_methods_test.rb:417:in `test_find_by_custom_finder_on_association_class\'\r\n```'
10278,'chancancode','Fix #to_json for BasicObject Enumerables\nObjects which `include Enumerable` already get the `as_json` method, but they do not get `to_json`.\r\n\r\nThat means it would get `to_json` from `Object` in most cases, however, not if they inherit from `BasicObject`.\r\n\r\nYou might think, "who does that?!" :confused: (and rightfully so). \r\n\r\nThat is just the simplest case where we\'d have an issue. For a real-life use case, consider someone who uses `SimpleDelegator` and includes `Enumerable`. In that case, `#to_json` will forward on to the wrapped object, which means it will end up calling `#as_json` on each element in the wrapped collection, instead of each element in the collection we actually want to call it on.\r\n\r\nDelegation is a much more common pattern than inheriting directly from `BasicObject` and [we ran into this issue in DisplayCase](https://github.com/objects-on-rails/display-case/issues/27).\r\n\r\nNow, it could be the case that we should just say, "if you don\'t want to forward the `#to_json` message to the other object, then write a method to define it."\r\n\r\nI thought about that a lot, but since `as_json` is already on `Enumerable` I thought `#to_json` probably should be as well. (Especially since there was already a test case for it, but it was not testing against a custom `Enumerable`, it was testing against an array of hashes).\r\n\r\n(And we certainly don\'t want to pollute `BasicObject` with the method, even though it is the simplest test case I could come up with!)\r\n\r\nIn addition to testing the case I mentioned above, this pull request also adds tests to demonstrate:\r\n\r\n1. The classes to which Rails adds `#to_json` get the method. (On the face of it, I thought that\'s really not testing much, but it could be useful to catch regressions for objects that expect it to be defined).\r\n2. That we actually test (to|as)_json against an enumerable instead of a hash.\r\n\r\n:thumbsup: ?'
10251,'pixeltrix','root_path is broken\n6ab1a9540b73555f2cabb54860b9ca17e8f226cb breaks `root_path`.\r\n\r\nHere is a test (against the 3-2-stable branch):\r\n\r\n```diff\r\ndiff --git a/railties/test/application/routing_test.rb b/railties/test/application/routing_test.rb\r\nindex e50d744..4cdc654 100644\r\n--- a/railties/test/application/routing_test.rb\r\n+++ b/railties/test/application/routing_test.rb\r\n@@ -229,6 +229,30 @@ module ApplicationTests\r\n       end\r\n     end\r\n \r\n+    def test_root_path\r\n+      app(\'development\')\r\n+\r\n+      controller :foo, <<-RUBY\r\n+        class FooController < ApplicationController\r\n+          def index\r\n+            render :text => "foo"\r\n+          end\r\n+        end\r\n+      RUBY\r\n+\r\n+      app_file \'config/routes.rb\', <<-RUBY\r\n+        AppTemplate::Application.routes.draw do\r\n+          get \'foo\', :to => \'foo#index\'\r\n+          root :to => \'foo#index\'\r\n+        end\r\n+      RUBY\r\n+\r\n+      remove_file \'public/index.html\'\r\n+\r\n+      get \'/\'\r\n+      assert_equal \'foo\', last_response.body\r\n+    end\r\n+\r\n     test \'routes are added and removed when reloading\' do\r\n       app(\'development\')\r\n \r\n```'
10180,'pixeltrix','Subdomain route constraints not functioning in 4.0.0.beta1\nThe following works correctly in 3.2.13 but not in 4.0.0.beta1:\r\n\r\n*config/routes.rb*\r\n\r\n    constraints subdomain: \'admin\' do\r\n      defaults subdomain: \'admin\' do\r\n        namespace :admin, path: \'/\' do\r\n          root to: \'dashboard#index\'\r\n        end\r\n      end\r\n    end\r\n\r\n    constraints subdomain: false do\r\n      defaults subdomain: false do\r\n        root :to => \'home#index\'\r\n      end\r\n    end\r\n\r\n*route helpers*\r\n\r\n    root_url       # http://subdomain-test.dev/\r\n    admin_root_url # http://admin.subdomain-test.dev/\r\n\r\n*rake routes*\r\n\r\n    admin_root / admin/dashboard#index {:subdomain=>"admin"}\r\n          root / home#index {:subdomain=>false}\r\n\r\nIn 3.2.13 both routes are recognized and handled by the correct controller actions when invoked under their respective subdomains, but in 4.0.0.beta1 the root route fails to recognize and `Rails::WelcomeController#index` is served.\r\n\r\nI would attach test output but I don\'t believe `assert_recognizes` supports subdomains.\r\n\r\n*updated for clarity*'
10164,'rafaelfranca','While merging relations preserve context for joins\nFixes #3002. Also see #5494.\r\n\r\n```ruby\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :author\r\n  has_many :comments\r\nend\r\n```\r\n\r\n`Comment.joins(:post).merge(Post.joins(:author).merge(Author.where(:name => "Joe Blogs"))).all` would\r\nfail with `ActiveRecord::ConfigurationError: Association named \'author\' was not found on Comment`.\r\n\r\nIt is failing because `all` is being called on relation which looks like this after all the merging:\r\n`{:joins=>[:post, :author], :where=>[#<Arel::Nodes::Equality: ....}`. In this relation all the context that\r\n`Post` was joined with `Author` is lost and hence the error that `author` was not found on `Comment`.\r\n\r\nThs solution is to build JoinAssociation when two relations with join information are being merged. And later\r\nwhile building the arel use the  previously built `JoinAssociation` record in `JoinDependency#graft` to\r\nbuild the right from clause.\r\n\r\nThanks to Jared Armstrong (https://github.com/armstrjare) for most of the work. I ported it to make it\r\ncompatible with new code base.\r\n\r\n/cc @jonleighton'
10140,'rafaelfranca',"`rake db:create` creates a schema when `schema_search_path` is specified\nCloses #3624\r\n\r\nAfter this patch `rake db:create` will create a schema if `schema_search_path` is specified. Currently it only works if `schema_search_path` is a single schema. I've seen a couple of tickets related to `schema_search_path` so I first wanted to ask what format we actually support. If something like `first, second` is a valid `schema_search_path` of course I'd have to adjust the patch to create two schemas."
10109,'rafaelfranca','"uninitialized constant ActiveRecord::SchemaMigration" in model tests when using attr_accessible \nI upgraded a Rails 3.2 app to the 4.0.0.beta1, running on Ruby 2, and am trying to run tests.\r\nHowever my model tests fail with the error above.\r\n\r\nI narrowed it down to the use of attr_accessible in a model\r\n(I know the preferred way on Rails 4 is now using strong parameters, but attr_accessible should still work I think).\r\n\r\nSteps to reproduce:\r\n```\r\n$ rails new someapp\r\n$ cd someapp\r\n$ rails generate scaffold Post title\r\n... edit Gemfile, add gem \'protected_attributes\'\r\n$ bundle install\r\n... edit app/models/post.rb and add "attr_accessible :title" \r\n$ rake db:migrate\r\n$ rake test:models\r\n```\r\n\r\nthis results in this stacktrace:\r\n\r\n````\r\n/Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/protected_attributes-1.0.0/lib/active_record/mass_assignment_security.rb:23:in `<top (required)>\': uninitialized constant ActiveRecord::SchemaMigration (NameError)\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/protected_attributes-1.0.0/lib/protected_attributes.rb:6:in `block in <top (required)>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activesupport-4.0.0.beta1/lib/active_support/lazy_load_hooks.rb:38:in `instance_eval\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activesupport-4.0.0.beta1/lib/active_support/lazy_load_hooks.rb:38:in `execute_hook\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activesupport-4.0.0.beta1/lib/active_support/lazy_load_hooks.rb:45:in `block in run_load_hooks\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activesupport-4.0.0.beta1/lib/active_support/lazy_load_hooks.rb:44:in `each\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activesupport-4.0.0.beta1/lib/active_support/lazy_load_hooks.rb:44:in `run_load_hooks\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/base.rb:322:in `<module:ActiveRecord>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/base.rb:22:in `<top (required)>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/schema_migration.rb:3:in `<top (required)>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/migration.rb:730:in `schema_migrations_table_name\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/migration.rb:738:in `current_version\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/migration.rb:747:in `needs_migration?\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/activerecord-4.0.0.beta1/lib/active_record/migration.rb:357:in `check_pending!\'\r\n\tfrom /Users/tomdeleu/Projects/blobby/test/test_helper.rb:6:in `<class:TestCase>\'\r\n\tfrom /Users/tomdeleu/Projects/blobby/test/test_helper.rb:5:in `<top (required)>\'\r\n\tfrom /Users/tomdeleu/Projects/blobby/test/models/post_test.rb:1:in `require\'\r\n\tfrom /Users/tomdeleu/Projects/blobby/test/models/post_test.rb:1:in `<top (required)>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:10:in `require\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:10:in `block (2 levels) in <main>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:9:in `each\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:9:in `block in <main>\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:4:in `select\'\r\n\tfrom /Users/tomdeleu/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/rake-10.0.4/lib/rake/rake_test_loader.rb:4:in `<main>\'\r\nrake aborted!\r\n```\r\n\r\nAm I missing anything?\r\n'
10101,'pixeltrix',"Refactoring some reused code into a method (inside of the routes mapper)\nI've created a method which refactors the ``scope`` method. It creates a method for the code which sets the recover hash and then merges the scope."
10099,'tenderlove',"Created way of cloning a Rails::Application instance\nFirst, I've deferred the instantiating of a ``Rails::Application`` instance. Before an object was being initialized as soon as you created a subclass of ``Rails::Application``, whereas it makes much more sense to wait for an explicit initialization.\r\n\r\nThe ``Rails.application`` variable will now get set on the first initialization of a ``Rails::Application`` instance. This paves the way to allow you to do a lot of things before you actually instantiated the application.\r\n\r\nI've also added a feature where you can clone the application so that it shares the same configuration, routes, helpers, etc. This is part of a larger railties update that is coming up, but it this batch of code is sufficiently small and doesn't change that much functionality."
10068,'tenderlove',"Replace string eval with alternatives\nSimilar to @tenderlove's ed9e3f699ab3fac01ad9ef038847d1cdd4c9f063, this pull request swaps out `class_eval` of strings for dynamic methods, and replaces it using either `define_method` or `delegate`.\r\n\r\nI originally wrote this in January, for use in RubyMotion which doesn't support string eval. I didn't create a PR because at the time it seemed the preference was to use string eval when generating dynamic methods. If this is no longer the case, then perhaps there is interest in these changes.\r\n\r\nThis PR leaves `callbacks.rb` and `core_ext/module/delegation.rb` untouched. Rewriting their use of string eval would cause the code to be quite a bit less readable.\r\n\r\nI ran the tests using ruby 2.0.0p0."
10058,'jonleighton','Avoid calling define_method in CollectionProxy#scope\nCalling define_method busts the method cache, which has a major performance penalty. This refactoring avoids that in CollectionProxy#scope.'
10006,'jeremy','Update csrf_helper.rb (KISS)\ni want to propose a breaking change to make naming convention simpler. \r\nI never saw people to modify `request_forgery_protection_token`. Look at this code:\r\n```\r\n form_authenticity_token == params[request_forgery_protection_token] ||\r\n          form_authenticity_token == request.headers[\'X-CSRF-Token\']\r\n```\r\nWhy param\'s name is variable but header name is constant? And, why default name is \'authenticity_token\'? (In fact CSRF is about authorization, not authentication. So, this naming sucks).\r\n\r\nI propose to have X-CSRF-Token and csrf_token as constant names for CSRF token. Yes, completely constant in code. Such things are never modified. \r\n\r\nIt is a speaking name and developers will understand what does it exactly do. I never understood where is "authenticity" part in authenticity_token.\r\n\r\np.s. PR is not done, what do you think? '
9978,'spastorino','Cookie-base session store auto-upgrade\nChanges:\r\n\r\n- Automatically configure cookie-based sessions to be encrypted if `secret_key_base` is set, signed if only `secret_token` is set.\r\n\r\n- This eliminates the need to introduce the new `EncryptedCookieStore` and `UpgradeSignatureToEncryptionCookieStore` cookie-based session stores, so we leave only the existing `config.session_store :cookie_store` option and remove the two new options introduced in 4.0.0.beta1: `encrypted_cookie_store` and `upgrade_signature_to_encryption_cookie_store`.\r\n\r\n- Automatically upgrade existing signed cookie-based sessions from Rails 3.x to be encrypted if both `secret_key_base` and `secret_token` are set. Simply upgrade to the new key generator if only `secret_token` is set. (Pull request #9909 took care of transparently upgrading signed cookies to use the new key generator.)\r\n\r\nReasoning:\r\n\r\nThe signed cookie jar has changed to use the new Rails-internal key generator, so you are discouraged from having a known/shared secret for signing cookies / sharing sessions.\r\n\r\nIf signed cookies and signed session cookies are considered internal to Rails, then we can upgrade from signed to encrypted automatically if they opt-in by setting `secret_key_base`.\r\n\r\nIf that all makes sense, then we can just have the one session store for Rails: `cookie_store`. This reduces the number of config options and allows us to state the caveats around upgrading plainly in one place.\r\n\r\n/cc @jeremy @spastorino @neerajdotname\r\n\r\n--\r\n\r\n@fxn (or someone else interested in documentation) I\'m wondering if we should include a link to the upgrade guide, which is where the caveats/warnings/etc about setting `secret_key_base` are currently. \r\n\r\nShould we use: http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html or something? Should we just leave this as-is?\r\n\r\n--\r\n\r\nFurther possible work:\r\n\r\nI\'d like to continue with a bit more work here, if these ideas make sense:\r\n\r\n1. Standardize on `name` instead of `key` when referring to cookies. We use both now and @jeremy prefers `name` which is fine by me. Also standardize `private` spacing as per JK\'s comments. \r\n\r\n2. I think we also need to fix `PermanentCookieJar`\'s `[]` method, which may have been broken in 2b773e148b. It\'s confusing `key` and `name`. I\'m not sure why there\'s no failing test.\r\n\r\n3. Rename `DummyKeyGenerator` to `LegacyKeyGenerator` -- "dummy" isn\'t a very descriptive name. I\'ve settled on "legacy" to refer to signed stuff generated by Rails 3.x. I\'m open to other names, but I\'d like to move away from "dummy". \r\n\r\n4. Don\'t remove `Dummy/LegacyKeyGenerator` in 4.1. I think we should keep this around a bit longer to ensure that people can upgrade from 3.2.x to 4.1.x etc. There\'s "fixme" comments in place that I\'d like to remove. \r\n\r\n5. Use `Dummy/LegacyKeyGenerator` where it makes sense instead of `MessageVerifier` directly. Anything referring to signed cookies should use `Dummy/LegacyKeyGenerator`, I believe. '
9932,'pixeltrix','routing bugfixes when matching multiple paths\n#### 1.) multiple paths containing a slash\r\n\r\nThis is basically a revert of https://github.com/rails/rails/commit/d03aa104e069be4e301efa8cefb90a2a785a7bff and a new fix inside the `#match` method.\r\n\r\n#### 2.) multiple paths using the match shorthand syntax\r\n\r\nAs the `#match` must be aware of multiple paths the shorthand expansion must be applied for each path separately.'
9929,'jonleighton','current_scope is not applied for subclasses\n#9869 \r\n\r\nThe fix is causing a test failure as of now.\r\n\r\n```\r\nNamedScopeTest#test_should_not_duplicates_where_values \r\n[/Users/nsingh/dev/\r\nrails_edge/rails/activerecord/test/cases/named_scope_test.rb:303]:\r\nExpected: ["1=1"]\r\n  Actual: ["1=1", "1=1"]\r\n```\r\n\r\nEven though the test is asserting that where values should not be duplicated, the sql that is generated does not have the duplication. So I\'m not sure about the validity of the test.\r\n\r\nI\'ll clean up pull request with squashing, change log etc when it is all set to go.\r\n\r\ncc @jonleighton @tenderlove \r\n\r\n\r\n'
9928,'rafaelfranca','respect auto_increment in rename_column for mysql\nCloses #3493\r\n\r\nThe PR extracts "extra" on mysql column to fetch `auto_increment` information, which is associated with the column.\r\n\r\nThis information is then used when migrating. \r\n'
9877,'pixeltrix','test case for controller option on scope block in routes file\nThis test-case reproduces #9856 and is currently failing:\r\n\r\n```\r\n  1) Failure:\r\nTestRoutingMapper#test_controller_option_with_nesting_and_leading_slash [test/dispatch/routing_test.rb:1186]:\r\nExpected: "job#manage_applicant"\r\n  Actual: "active#manage_applicant"\r\n```'
9876,'rafaelfranca','Restore columns dropped by hstore test\nDisabling the hstore extension during testing created order dependent\r\ntest failures.\r\n\r\nOne way to view the problem in master is:\r\n```\r\nARCONN=postgresql bundle exec ruby -wI.:test -e "%w{test/cases/adapters/postgresql/hstore_test.rb test/cases/schema_dumper_test.rb}.each { |f| require f }"\r\n```'
9869,'neerajdotname','Chaining (merging) scopes in inherited models\nI saw there are a lot of issues around chaning/merging scopes and conditions. My use case broke on Rails master (worked on 4.0.0.beta1 and 3.2.13).\r\n\r\nThe code:\r\n```ruby\r\nclass Observation < ActiveRecord::Base\r\n  scope :identified, lambda { where("species_id <> 0") }\r\nend\r\n\r\nclass MyObservation < Observation\r\n  scope :mine_identified, lambda { where(mine: true).identified }\r\nend\r\n\r\nMyObservation.mine_identified.to_sql\r\n#=> "SELECT \\"observations\\".* FROM \\"observations\\"  WHERE (species_id <> 0)"\r\n# FAIL!!\r\n```\r\n\r\nI did pretty lots of testing different variants. What can I say: it does not matter whether it is string or hash condition. But the order matters:\r\n\r\n```ruby\r\nclass MyObservation < Observation\r\n  scope :mine_identified, lambda { identified.where(mine: true)}\r\nend\r\n\r\nMyObservation.mine_identified.to_sql\r\n#=> "SELECT \\"observations\\".* FROM \\"observations\\"  WHERE \\"observations\\".\\"mine\\" = \'t\' AND (species_id <> 0)"\r\n# PASS!!\r\n```\r\n\r\nAnd the most interesting is that failure happens only in the child model, if I move the combined scope into parent model, it is ok:\r\n\r\n```ruby\r\nclass Observation < ActiveRecord::Base\r\n  scope :identified, lambda { where("species_id <> 0") }\r\n  scope :mine_identified, lambda { identified.where(mine: true)}\r\nend\r\n\r\nObservation.mine_identified.to_sql\r\n#=> "SELECT \\"observations\\".* FROM \\"observations\\"  WHERE \\"observations\\".\\"mine\\" = \'t\' AND (species_id <> 0)"\r\n# PASS!!\r\n```\r\n\r\nP.S. I will try to dig into AR tests to see if I can create a failing test case.'
9856,'pixeltrix','Setting controller on scope block in routes file - regression in 3.2.13\nI\'m not sure if this is the same issue as #9697 or not, but my nested `scope` routes don\'t work anymore in 3.2.13 (but they do in 3.2.12):\r\n\r\n```ruby\r\nscope \'/job\', :controller => :job do\r\n  scope \'/:id\', :action => :manage_applicant, :as => "job_manage_applicant", :constraints => { :id => /\\d+/ } do\r\n    get \'/deselected\', :active_tab => 0\r\n    get \'/active\', :active_tab => 1\r\n    get \'/hired\', :active_tab => 2\r\n    get \'\', :active_tab => 1\r\n  end\r\nend\r\n```\r\n\r\nIn 3.2.12, `rake routes` returns:\r\n\r\n```\r\njob_manage_applicant_deselected GET    /job/:id/deselected(.:format)    job#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>0}\r\n    job_manage_applicant_active GET    /job/:id/active(.:format)        job#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>1}\r\n     job_manage_applicant_hired GET    /job/:id/hired(.:format)         job#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>2}\r\n           job_manage_applicant GET    /job/:id(.:format)               job#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>1}\r\n```\r\n\r\nHowever, in 3.2.13:\r\n\r\n```\r\njob_manage_applicant_deselected GET    /job/:id/deselected(.:format)    deselected#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>0}\r\n    job_manage_applicant_active GET    /job/:id/active(.:format)        active#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>1}\r\n     job_manage_applicant_hired GET    /job/:id/hired(.:format)         hired#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>2}\r\n           job_manage_applicant GET    /job/:id(.:format)               job#manage_applicant {:subdomain=>"clients", :id=>/\\d+/, :active_tab=>1}\r\n```\r\n\r\nAnd then I get `ActionController::RoutingError`s about `uninitialized constant ActiveController`, etc.\r\n\r\nThe same behaviour is exhibited even if I put the `controller` option on the inner scope, or even on each specific route. Only this form worked:\r\n\r\n```ruby\r\nscope \'/job\' do\r\n  scope \'/:id\', :action => :manage_applicant, :as => "job_manage_applicant", :constraints => { :id => /\\d+/ } do\r\n    get \'/deselected\' => \'job#manage_applicant\', :active_tab => 0\r\n    get \'/active\' => \'job#manage_applicant\', :active_tab => 1\r\n    get \'/hired\' => \'job#manage_applicant\', :active_tab => 2\r\n    get \'\', :active_tab => 1\r\n  end\r\nend\r\n```\r\n\r\nWhich, of course, is not very DRY.'
9854,'sikachu',"Fix regression on accessing database fixtures when runnning `rails test`  \nReferring to #9080 [comment](https://github.com/rails/rails/pull/9080#issuecomment-15249358)\r\n\r\n>The way it should work is:\r\n>\r\n>1) `rails test models/single_test` should NOT reload the db fixtures, but MUST provide access to the existing fixtures through the accessors, like `line_items(:one)`.\r\n>\r\n>2) `rails test models/single_test --reload-fixtures` MUST reload the db fixtures AND provide access through accessors.\r\n>\r\n>3) `rails test models` MUST reload the db fixtures AND provide access through accessors.\r\n>\r\n>4) `rails test` MUST reload the db fixtures AND provide access through accessors.\r\n\r\nCurrently, since I've commented out `fixtures :all` in https://github.com/rails/rails/commit/1a0c58b2988a24a783b4f9a658ac629922125551#L2L9 all the helpers are not available, and that's not desired behavior at all.\r\n\r\n/cc @dhh, @rubys, @tenderlove "
9843,'jeremy','Rails 4 prints help for "rails new" when running "rails console"\nUpgrading an existing Rails 3 app to Rails 4 results in a `rails` command that only ever prints the help for `rails new`. Here are reproduction steps:\r\n\r\n```\r\nmkdir app\r\ncd app\r\ncurl -sLo Gemfile http://git.io/G3awjw\r\nbundle install --binstubs --path vendor/bundle\r\nbundle exec rails new .\r\nbundle exec rails runner "puts \'WORKING\'" #=> WORKING\r\nsed -i -e \'s/3.2.13/4.0.0.beta1/g\' Gemfile # update to rails 4\r\nruby -i -ne \'print if not /coffee|sass/\' Gemfile\r\nbundle update rails\r\nrm -rf script/rails # like you\'re supposed to\r\nbundle exec rails runner "puts \'WORKING\'" #=> help for rails new\r\n```\r\n\r\nThere are angry developers about this issue available for perusal in carlhuda/bundler#2253.'
9829,'pixeltrix','url_helpers persisting params from current request when combined with defaults\nURL helpers seem to be keeping options from the current request when building links. This only happens when I use defaults in the routes. This is happening on rails 3.2.12.\r\n\r\nIn the second case, the output i expect is /all_html/foo, not /all_html/foo/booga\r\n\r\n```ruby\r\n# config/routes.rb\r\nDefaultsBug::Application.routes.draw do\r\n  get "/all/:type(/:category)" => "application#index", :as => :all_products\r\n\r\n  defaults :format => :html do\r\n    get "/all_html/:type(/:category)" => "application#index_html", :as => :all_html_products\r\n  end\r\nend\r\n```\r\n```ruby \r\n# application_controller.rb\r\nclass ApplicationController < ActionController::Base\r\n  def index\r\n    render :text => all_products_path("foo")\r\n  end\r\n\r\n  def index_html\r\n    render :text => all_html_products_path("foo")\r\n  end\r\nend\r\n```\r\n\r\n```\r\n$ curl http://localhost:3001/all/ooga/booga\r\n/all/foo\r\n$ curl http://localhost:3001/all_html/ooga/booga\r\n/all_html/foo/booga\r\n```'
9794,'pixeltrix','Fix improperly configured host in generated urls\nIf the host in `default_url_options` is accidentally set with a protocol such as \r\n\r\n```\r\nhost: "http://example.com"\r\n``` \r\n\r\nthen the generated url will have the protocol twice `http://http://example.com` which is not what the user intended. Likely they wanted to define a host `host: "example.com"` and a `protocol: "http://"` but did not know the convention.\r\n\r\nThis may not the most common problem, but when it happens it can go undetected for a while. I accidentally added `http://` out of habit recently only to find all the links in my emails were broken after deploying a demo site to production. Rather than allow this accident go undetected, we can fix the problem in line by properly setting the protocol and host.\r\n\r\n\r\nI was able to find this related question on stack overflow: http://stackoverflow.com/questions/5878329/rails-3-devise-how-do-i-make-the-email-confirmation-links-use-secure-https-n where the answer was highly upvoted.\r\n\r\nThis is based off of work in #7415 cc/ @pixeltrix\r\n\r\nATP Action Mailer and Action Pack'
9793,'steveklabnik',"Edge Guide: Getting Started: unexplained changes to 'Back' and 'Edit' links in show.html.erb\nToward the end of **5.12 Updating Posts**, the 'Back' and 'Next' links in `show.html.erb` are defined as\r\n\r\n    <%= link_to 'Back', action: :index %>\r\n    | <%= link_to 'Edit', action: :edit, id: @post.id %>\r\n\r\nThe next time the code for `show.html.erb` is listed, in **6.4 Generating a Controller**, the links are defined as\r\n\r\n    <%= link_to 'Edit Post', edit_post_path(@post) %> |\r\n    <%= link_to 'Back to Posts', posts_path %>\r\n\r\nwith no explanation for the changes."
9725,'pixeltrix',"Allow route concerns to be defined as a string or symbol array\nRight now several of the route options (only, except) can be defined\r\nas arrays of string or symbols. I was surprised when playing with\r\nrails 4 and this didn't work.\r\n\r\n- Added test for string array declaration.\r\n\r\nWith this change concerns could be declared with strings or symbols:\r\n\r\n    resources :posts, concerns: [:commentable, :taggable]\r\n    resources :media, concerns: %w(commentable taggable)"
9680,'carlosantoniodasilva','Revert grep to select since they are not the same\nA previous commit swapped out a call to select for a call to grep in\r\ntime_zone_options_for_select. This behavior actually causes the\r\nregexp priority option to stop working.\r\n\r\nActiveSupport::TimeZone overrides the =~ operator which is what the\r\nselect block was using previously. Enumerable#grep\r\nchecks pattern === element and in this case that would be /US/ ===\r\nActiveSupport::TimeZone which does not work because\r\nActiveSupport::TimeZone does not supply an implicit converting to_str\r\nmethod, only an explicit to_s method.\r\n\r\nIt would be impossible to provide a to_str method that behaves\r\nidentically to the =~ method provided on ActiveSupport::TimeZone\r\nso the only option is to revert back to using select with =~.'
9654,'pixeltrix','Missing template error responding to a path with a period via a catchall route\nI have a route like the following:\r\n\r\n```\r\n  get \'*path\' => \'application#catchall\'\r\n```\r\n\r\nThe action for this route performs a default render of an `catchall.html.erb` template.\r\n\r\nIn a Rails 3.2, this action successfully responds to a URL with a path such as `/foo.bar`. With Rails 4, the same URL produces an error:\r\n\r\n```\r\nMissing template application/catchall with {:locale=>[:en], :formats=>[nil], :handlers=>[:erb, :builder, :raw, :ruby]}. Searched in: * "/Users/john/Development/scratch/app/views"\r\n```\r\n\r\nA sample app which exhibits this problem is available [here](https://github.com/jfirebaugh/rails-4-catchall). If you switch the Gemfile to Rails 3.2 you will see that it works.'
9604,'josevalim','Exceptions raised when using ActionController::Live cause server crash\nAny exceptions that occur in a controller using ActionController::Live would cause the server to either hang with an open socket indefinitely, or immediately crash (depending on whether the server was launched with rails s or directly).\r\n\r\nEasiest way to duplicate the issue is to include ActionController::Live, and visit a route that has no associated view, or to call an undefined method. Issue was reproduced with Ruby 1.9.3 as well as 2.0.\r\n\r\nAdded a catch block in Live to make exception handling work similarly to streaming templates. A redirect to 500.html is issued using a script tag, the stream is closed, and the exception is logged to the terminal.'
9576,'rafaelfranca',"[Backport to 3-2-stable] Don't reset inheritance_column when setting explicitly.\nThis is backported from master (cdfcbc4).\r\n\r\nSee pull request https://github.com/rails/rails/pull/5327\r\n\r\ncc @tenderlove @jonleighton"
9513,'jonleighton','rails console --sandbox does not revert changes anymore\nSince updating to Rails 4.0.0.beta1 my ```rails console --sandbox``` mode has stopped reverting changes made to the database upon exit.\r\n\r\nBelow is an example of how I can replicate this issue:\r\n\r\n```\r\nrails c --sandbox\r\n\r\nPage.count #=> 0\r\nPage.create title: "Test" #=> true\r\nPage.count #=> 1\r\n\r\nexit\r\nrails c\r\n\r\nPage.count #=> 1\r\n```\r\n\r\nI\'m using Ruby 2.0.0p0 and PostgreSQL 9.2.2.'
9494,'jeremy',"ActiveSupport::Cache::Entry Conversion Problems\nI've been working on a much higher performance replacement for `ActiveSupport::Cache::Store`, and noticed some issues with the code that converts `ActiveSupport::Cache::Entry`s from the rails3 format to the rails4 format.\r\n\r\nSome things I've noticed:\r\n\r\n1. Changing the format at all is a huge problem for those of us who aren't comfortable transitioning to rails4 wholesale. With the way things are setup, if you want to run a rails3 instance next to a rails4 instance, they have to be connected to separate caches or otherwise namespaced.\r\n\r\n2. Rails3's `AS::Cache::Entry` objects `Marshal.dump` the value in their constructor, whereas rails4's code seems to just expect the whole object to get serialized except in the case that it's compressed (which makes sense), but that's not accounted for in the conversion, so converted objects' values get returned as binary strings.\r\n\r\nAt the very least, we need to fix 2 (patch here: https://github.com/bitlove/rails/commit/26d6ae9533238683323a90675a53141c380c3d5c), and maybe it's too late for rails4, but removing `ActiveSupport::Cache::Entry` altogether would be a substantial performance boost and make new rails versions a lot less painful."
9480,'senny',"[4.0beta1] In migrations, `change_table` does not support `t.hstore` while `create_table` does\nTrying to create a `hstore` column in a `create_table` call works fine, while trying it in `change_table` produces the following error:\r\n```\r\n-- change_table(:movies)\r\nrake aborted!\r\nAn error has occurred, this and all later migrations canceled:\r\n\r\nundefined method `hstore' for #<ActiveRecord::ConnectionAdapters::Table:0x007fccd3d532a0>\r\n```\r\n\r\nThis is on 4.0.0.beta1."
9461,'guilleiguaran',"Assets precompilation doesn't always work as intended\nI could replicate the issue in a new application after removing the `turbo-links` gem, that will require 'action_view', triggering the code that configures Sprockets. I've discussed the problem here:\r\n\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/rubyonrails-core/_HBlCNcsL_I\r\n\r\nHere is an application demonstrating the issue:\r\n\r\nhttps://github.com/rosenfeld/assetsbug\r\n\r\nSee the generated CSS here missing the '/assets' prefix:\r\n\r\nhttps://github.com/rosenfeld/assetsbug/blob/master/public/assets/application-6418e61630e537f3523f94b677f81370.css\r\n\r\nThanks for looking into this."
9458,'senny','AR: `joins` + `uniq` + `count` seems to ignore `uniq`\nIf i use `joins` followed by `uniq` on an `ActiveRecord` query, calling `count` on the result is inconsistent with iterating over it: it seems that `count` ignores `uniq`.\r\n\r\nProbably i should use `includes` instead of `joins`, but this behavior still looks like a bug to me.\r\n\r\nHere is a script to reproduce:\r\n\r\n```ruby\r\ngem \'activerecord\', \'~>3.2.12\'\r\nrequire \'active_record\'\r\nrequire \'logger\'\r\n\r\nputs "Active Record #{ ActiveRecord::VERSION::STRING }"\r\n\r\n# ActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\n# Connect to an in-memory sqlite3 database\r\nActiveRecord::Base.establish_connection( :adapter  => \'sqlite3\',\r\n                                         :database => \':memory:\' )\r\n\r\n# Create a database schema to reproduce the bug\r\nActiveRecord::Schema.define do\r\n  create_table :users\r\n\r\n  create_table :dogs do |t|\r\n    t.integer :user_id\r\n  end\r\nend\r\n\r\n# Create a set of models to reproduce the bug\r\nclass User < ActiveRecord::Base\r\n  has_many :dogs\r\nend\r\n\r\nclass Dog < ActiveRecord::Base\r\n  belongs_to :user\r\nend\r\n\r\n# Create some test data\r\nuser = User.create!\r\n2.times do user.dogs.create! end\r\n\r\n# Inconsistent behavior:\r\nputs "`User.joins(:dogs).uniq.all.count` evaluates to:"\r\nputs User.joins(:dogs).uniq.all.count #  prints "1"\r\n\r\nputs "`User.joins(:dogs).uniq.to_a.count` evaluates to:"\r\nputs User.joins(:dogs).uniq.to_a.count #  prints "1"\r\n\r\nputs "`User.joins(:dogs).uniq.count` evaluates to:"\r\nputs User.joins(:dogs).uniq.count       # prints "2", why?\r\n```\r\n\r\nThis does not happen with `includes` instead of `joins`: both results are 1 in that case.'
9449,'pixeltrix',"Named routes in Rails 4 when they shouldn't be named\nI have something like this in my routes:\r\n\r\n```ruby\r\n    get 'usage_report' => 'usage_report#index', format: false\r\n    post 'usage_report/:action', format: /json/, controller: :usage_report, as: :usage_report\r\n```\r\n\r\nHere is the output of `rake routes` in Rails 4 beta 1:\r\n\r\n```\r\nrake routes\r\n      Prefix Verb URI Pattern                     Controller#Action\r\nusage_report GET  /usage_report                   usage_report#index\r\nusage_report POST /usage_report/:action(.:format) usage_report#:action {:format=>nil}\r\n```\r\n\r\nIf you invert the order of the declaration of the routes it gets fixed (like in Rails 3 output):\r\n\r\n```\r\nrake routes\r\n      Prefix Verb URI Pattern                     Controller#Action\r\nusage_report POST /usage_report/:action(.:format) usage_report#:action {:format=>nil}\r\n             GET  /usage_report                   usage_report#index\r\n```"
9437,'pixeltrix','the router allows String contraints.\nCloses #9432.\r\n\r\nThis patch only applies the sanity checks to Rexep Contraints. This gets string contraints working again. I also modified the documentation to reflect that Strings are valid inside the :constraints hash.'
9432,'senny','Undefined method `source\' in routes with format constraints as String or Symbol\nRails 4.0.0.beta1\r\nRuby 1.9.3-p385\r\n\r\nI have routes like this:\r\n\r\n    get \'/photos.:format\' => \'feeds#photos\', constraints: {format: \'xml\'}\r\n\r\nApplication fails to start with the following error\r\n\r\n```\r\n  undefined method `source\' for "xml":String\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:128:in `block in normalize_requirements!\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:125:in `each\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:125:in `normalize_requirements!\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:63:in `initialize\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1425:in `new\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1425:in `add_route\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1404:in `decomposed_match\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1386:in `block in match\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1386:in `each\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:1386:in `match\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:596:in `map_method\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/mapper.rb:556:in `get\'\r\n/home/vk/quails/config/routes.rb:109:in `block in <top (required)>\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/route_set.rb:320:in `instance_exec\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/route_set.rb:320:in `eval_block\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/actionpack-4.0.0.beta1/lib/action_dispatch/routing/route_set.rb:298:in `draw\'\r\n/home/vk/quails/config/routes.rb:1:in `<top (required)>\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/dependencies.rb:222:in `load\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/dependencies.rb:222:in `block in load\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/dependencies.rb:213:in `load_dependency\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/dependencies.rb:222:in `load\'\r\n  /home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:40:in `block in load_paths\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:40:in `each\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:40:in `load_paths\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:16:in `reload!\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:26:in `block in updater\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/file_update_checker.rb:75:in `call\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/activesupport-4.0.0.beta1/lib/active_support/file_update_checker.rb:75:in `execute\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:27:in `updater\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:9:in `rescue in execute_if_updated\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/routes_reloader.rb:7:in `execute_if_updated\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application/finisher.rb:69:in `block in <module:Finisher>\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/initializable.rb:30:in `instance_exec\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/initializable.rb:30:in `run\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/initializable.rb:55:in `block in run_initializers\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/initializable.rb:54:in `run_initializers\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/application.rb:213:in `initialize!\'\r\n/home/vk/.rvm/gems/ruby-1.9.3-p385@rails4/gems/railties-4.0.0.beta1/lib/rails/railtie/configurable.rb:30:in `method_missing\'\r\n/home/vk/quails/config/environment.rb:6:in `<top (required)>\'\r\n```\r\n\r\nIf I change it to Regexp it works\r\n\r\n    get \'/photos.:format\' => \'feeds#photos\', constraints: {format: /xml/}'
9417,'sikachu',"calling model.dup with ruby 2.0.0 calls private method\nswitching my rails 3.2.12 project to ruby 2.0.0 fails a test:\r\n\r\n```ruby\r\nNoMethodError:\r\n  private method `initialize_dup' called for #<Event:0x007fe06c809428>\r\n```\r\n\r\nthis is the code that gets called: https://github.com/phoet/on_ruby/blob/master/app/models/event.rb#L86\r\n\r\nlooks like ```initialize_dup``` is now a private method :sadpanda:"
9326,'fxn','Rails 4.1.0 - 3.1.0 (and lower?): model (file) naming issue\nRails 4.1.0 and lower cannot handle "generator model file names" that include a single character which is enclosed by underscores.\r\n\r\nTry this:\r\n\r\n> rails g model a_b_c_something name:string\r\n> rake db:migrate\r\n> Console: ABCSomething.count\r\n=> NameError: uninitialized constant ABCSomething\r\n\r\nWhy this happens:\r\nThe file name of the generated model will be "a_b_c_something.rb". Rails does not seem to load it by itself.\r\n\r\nTo load it (and make the NameError disappear):\r\n- Either (in the console): "require" the file manually\r\n- Or: Change the file name to reflect the "underscore condition" mentioned in the intro (i.e. to something like "a_bc_something.rb") and the Class name accordingly (i.e. to "ABcSomething")\r\n\r\nSo Rails must be updated to load model files with names that match the above mentioned criteria\r\n\r\n*Edit:*\r\nI have done some more testing: The above procedure fails down to v.3.1.0 (and possibliy even lower - sorry, I ran into other problems preventing me to go testing even lower). 4.0.0.rc2, 4.0.0 and 4.1.0 are also affected.'
9296,'jonleighton','ActiveRecord produces unexpected results when using includes and joins with a table with a default_scope\nA standalone script that reproduces this bug is at https://gist.github.com/hughdavenport/4958157\r\n\r\nThe problem occurs when you have a table (T1) that has a default_scope (where(:flag=>true)), and then use this table in an includes and joins request from another table.\r\n\r\nWhat I would expect is that doing an includes and a joins with this table will inherit the default_scope, so some results are filtered out. My reasoning is below.\r\n\r\n1- Straight select\r\nPerforming T1.all will include the default_scope, so will have filtered results when doing ret.each {|row| p row}\r\n\r\n2- Just includes\r\nPerforming T2.includes(:t1) will first select from T2, then do a follow up select from T1 with the default_scope, and an "t1s".id" IN (...). This will return similar filtered results as T1.all when doing ret.each {|row| p row.t1}\r\n\r\n3- Just joins\r\nPerforming T2.joins(:t1) will select from T2 inner join T1 (without the default_scope), and then when you access row.t1, it performs a follow up select on T1 with the default_scope and a "t1s.id" = ... giving the expected result\r\n\r\n4- Both joins and includes (where the bug occurs)\r\nPerforming T2.includes(:t1).joins(:t1) will select all the rows from T2 inner join T1 (without the default_scope). When you access row.t1, no follow up select is done, so it *will* include results that would not be selected with any of the queries 1-3 above. This is shown by the output of "1 BAD (T2 select + includes T1 + joins T1)" from the gist mentioned above. This only occurs when row.t1.flag is false, which is not what would be expected from a default_scope of where(:flag=>true)\r\n\r\nThe output of the gist is below:\r\nActive Record 3.2.12\r\n```\r\n-- create_table(:t1s, {:force=>true})\r\nD, [2013-02-15T15:31:28.588790 #18236] DEBUG -- :    (0.8ms)  select sqlite_version(*)\r\nD, [2013-02-15T15:31:28.589393 #18236] DEBUG -- :    (0.2ms)  CREATE TABLE "t1s" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "flag" boolean) \r\n   -> 0.0163s\r\n-- create_table(:t2s, {:force=>true})\r\nD, [2013-02-15T15:31:28.590108 #18236] DEBUG -- :    (0.1ms)  CREATE TABLE "t2s" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "t1_id" integer) \r\n   -> 0.0006s\r\nD, [2013-02-15T15:31:28.627138 #18236] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2013-02-15T15:31:28.633193 #18236] DEBUG -- :   SQL (4.7ms)  INSERT INTO "t1s" ("flag") VALUES (?)  [["flag", false]]\r\nD, [2013-02-15T15:31:28.633525 #18236] DEBUG -- :    (0.0ms)  commit transaction\r\nD, [2013-02-15T15:31:28.634382 #18236] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2013-02-15T15:31:28.634956 #18236] DEBUG -- :   SQL (0.1ms)  INSERT INTO "t1s" ("flag") VALUES (?)  [["flag", true]]\r\nD, [2013-02-15T15:31:28.635160 #18236] DEBUG -- :    (0.0ms)  commit transaction\r\nD, [2013-02-15T15:31:28.642831 #18236] DEBUG -- :    (0.1ms)  begin transaction\r\nD, [2013-02-15T15:31:28.644326 #18236] DEBUG -- :   SQL (0.1ms)  INSERT INTO "t2s" ("t1_id") VALUES (?)  [["t1_id", 1]]\r\nD, [2013-02-15T15:31:28.644542 #18236] DEBUG -- :    (0.0ms)  commit transaction\r\nD, [2013-02-15T15:31:28.645102 #18236] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2013-02-15T15:31:28.645658 #18236] DEBUG -- :   SQL (0.0ms)  INSERT INTO "t2s" ("t1_id") VALUES (?)  [["t1_id", 2]]\r\nD, [2013-02-15T15:31:28.645837 #18236] DEBUG -- :    (0.0ms)  commit transaction\r\nD, [2013-02-15T15:31:28.646663 #18236] DEBUG -- :   T1 Load (0.1ms)  SELECT "t1s".* FROM "t1s" WHERE "t1s"."flag" = \'t\'\r\nD, [2013-02-15T15:31:28.647436 #18236] DEBUG -- :   T2 Load (0.1ms)  SELECT "t2s".* FROM "t2s" \r\nD, [2013-02-15T15:31:28.652982 #18236] DEBUG -- :   T1 Load (0.1ms)  SELECT "t1s".* FROM "t1s" WHERE "t1s"."flag" = \'t\' AND "t1s"."id" IN (1, 2)\r\nD, [2013-02-15T15:31:28.672691 #18236] DEBUG -- :   T2 Load (0.1ms)  SELECT "t2s".* FROM "t2s" INNER JOIN "t1s" ON "t1s"."id" = "t2s"."t1_id"\r\nD, [2013-02-15T15:31:28.676209 #18236] DEBUG -- :   T1 Load (0.1ms)  SELECT "t1s".* FROM "t1s" WHERE "t1s"."flag" = \'t\' AND "t1s"."id" = 1 LIMIT 1\r\nD, [2013-02-15T15:31:28.676947 #18236] DEBUG -- :   T1 Load (0.1ms)  SELECT "t1s".* FROM "t1s" WHERE "t1s"."flag" = \'t\' AND "t1s"."id" = 2 LIMIT 1\r\nD, [2013-02-15T15:31:28.678236 #18236] DEBUG -- :   SQL (0.1ms)  SELECT "t2s"."id" AS t0_r0, "t2s"."t1_id" AS t0_r1, "t1s"."id" AS t1_r0, "t1s"."flag" AS t1_r1 FROM "t2s" INNER JOIN "t1s" ON "t1s"."id" = "t2s"."t1_id"\r\n"1 BAD (T2 select + includes T1 + joins T1)"\r\n```\r\n\r\nLet me know if you have any questions\r\n\r\nCheers,\r\n\r\nHugh'
9286,'fxn','constantize and safe_constantize do not work as expected \n**Only in development environment**\r\n\r\nGiven model structure as in example app -> https://github.com/stevo/poc_constantize\r\n\r\n![Screen Shot 2013-02-14 at 3 55 23 PM](https://f.cloud.github.com/assets/138187/157131/a2a1c918-76b6-11e2-9096-9a42466a9970.png)\r\n\r\n> models/namespace1/namespace2/klass2.rb\r\n> models/namespace1/klass1.rb\r\n\r\nExecuting `safe_constantize` or `constantize` for the first time for not existing namespace2 class but matching the class name of class directly under namespace1 returns that existing class. Second execution returns nil (as expected)\r\n\r\nTested on Rails 3.2.8, 3.2.11, 3.2.12\r\n\r\nTested on Ruby 1.9.2p320 below\r\n\r\n```\r\n1.9.2p320 :001 > "Namespace1::Namespace2::Klass1".safe_constantize\r\n => Namespace1::Klass1 \r\n1.9.2p320 :002 > "Namespace1::Namespace2::Klass1".safe_constantize\r\n => nil \r\n```\r\n\r\nTested on Ruby 1.9.3p385 -> https://gist.github.com/bartekd/4953245'
9266,'sikachu','No such middleware to insert before: Rack::Lock\nI have uncommented line config.threadsafe! in production.rb file inside config/environments , its start giving error No such middleware to insert before: Rack::Lock\r\nPlatform :    \r\n   Jruby  1.7.2\r\n   Java 7\r\n   Rails 3.2.11\r\n'
9184,'rafaelfranca','Fix regex to strip quotations from hstore values\nPreviously regex did not strip quotation marks where hstore values were multi-line strings.'
9173,'carlosantoniodasilva','Backport rails/rails-perftest#2 to fix rake test:benchmark\nThis is a backport of https://github.com/rails/rails-perftest/pull/2 to fix #4938.\r\n\r\nThe rake task does now work but while testing I got problems with the `rails benchmarker` and `rails profiler` commands:\r\n\r\n```\r\nlocal-3-2-stable » rails profiler \'10.times{"a string"}\'\r\n/Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:167:in `block in non_options\': file not found: 10.times{"a string"} (ArgumentError)\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:146:in `map!\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:146:in `non_options\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:207:in `non_options\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:52:in `process_args\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:891:in `_run\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:884:in `run\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:21:in `run\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:326:in `block (2 levels) in autorun\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:27:in `run_once\'\r\n\tfrom /Users/senny/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/test/unit.rb:325:in `block in autorun\'\r\n```\r\n\r\nI could fix this by clearing `ARGV` after the ["on-the-fly-test-case"](https://github.com/senny/rails/blob/backport_perftest_fix/railties/lib/rails/commands/benchmarker.rb#L32) is defined. This would be another hacky workaround though and I\'m open for better ideas.'
9162,'matthewd','Added XX-Month format to month_name helper\nAdded another commonly used format to date_helper\'s month_name method.\r\n"01 - January"\r\n\r\nAdded test + documentation.\r\n\r\n'
9102,'chancancode','4.0: escape_once is double-escaping hex-encoded entities\nrelated to #9088'
9097,'rafaelfranca','DATABASE_URL query string parsing of booleans\nI\'ve been using the DATABASE_URL option in production and recently added a query parameter "prepared_statements=false" to disable prepared statements in Postgres (required in order to use pgbouncer for pool management).  This did not work and still resulted in prepared_statements being set to true.\r\n\r\nBecause the value is being set to "false" string, Ruby treats it as true.  Eventually I figured out a workaround by setting "prepared_statements=", which results in a value of nil which evaluates to false.  All good.\r\n\r\nJust wondering if perhaps the connection query parsing should provide a mechanism for parsing "false" as FalseClass and "true" as TrueClass, especially for those parameters that are known to be boolean.  Similar issue may exist for integers.'
9073,'pixeltrix',"Fix handling of dirty time zone aware attributes\nPreviously, when `time_zone_aware_attributes` were enabled, after\r\nchanging a datetime or timestamp attribute and then changing it back\r\nto the original value, `changed_attributes` still tracked the\r\nattribute as changed. This caused `[attribute]_changed?` and\r\n`changed?` methods to return true incorrectly.\r\n\r\nExample:\r\n\r\n    in_time_zone 'Paris' do\r\n      order = Order.new\r\n      original_time = Time.local(2012, 10, 10)\r\n      order.shipped_at = original_time\r\n      order.save\r\n      order.changed? # => false\r\n\r\n      # changing value\r\n      order.shipped_at = Time.local(2013, 1, 1)\r\n      order.changed? # => true\r\n\r\n      # reverting to original value\r\n      order.shipped_at = original_time\r\n      order.changed? # => false, used to return true\r\n    end"
9063,'pixeltrix','if force_ssl filters a non html request, the url of redirection loses\nthe format.\r\n\r\nIt happens because the format is not added to redirect_options.\r\nThis PR tests if the request is not a html request and than\r\nlooks up the format inside Mime::Type.\r\nfixes #9061'
9061,'pixeltrix','force_ssl ignores :format\n:force_ssl ignores the request :format when building redirect target, this causes http://test.example.dev/index.json to be redirected to https://test.example.dev/index when it should be index.json.'
9056,'pixeltrix','Generated controller test code failing in Engines\nI set up a Rails 3.2.11 engine using the following commands:\r\n\r\n    rails plugin new engine_controllers --mountable\r\n\r\nI then generated the controller:\r\n\r\n    rails g controller Resources index\r\n\r\nSo far no problem if I use the dummy test app:\r\n\r\n    cd test/dummy\r\n    rails s\r\n    open http://localhost:3000/engine_controllers/resources/index\r\n\r\nHowever tests does not pass:\r\n\r\n````\r\n➜  engine_controllers  rake\r\nRack::File headers parameter replaces cache_control after Rack 1.5.\r\nRun options: \r\n\r\n# Running tests:\r\n\r\nE.\r\n\r\nFinished tests in 0.451202s, 4.4326 tests/s, 2.2163 assertions/s.\r\n\r\n  1) Error:\r\ntest_should_get_index(EngineControllers::ResourcesControllerTest):\r\nActionController::RoutingError: No route matches {:controller=>"engine_controllers/resources"}\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:533:in `raise_routing_error\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:529:in `rescue in generate\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:521:in `generate\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:562:in `generate\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:558:in `generate_extras\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:554:in `extra_keys\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:151:in `assign_parameters\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:463:in `process\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:49:in `process\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:390:in `get\'\r\n    /Users/ybart/Documents/sources/tests/rails/engine_controllers/test/functional/engine_controllers/resources_controller_test.rb:6:in `block in <class:ResourcesControllerTest>\'\r\n\r\n2 tests, 1 assertions, 0 failures, 1 errors, 0 skips\r\nrake aborted!\r\nCommand failed with status (1): [ruby -I"lib:lib:test" -I"/Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/rake-10.0.3/lib" "/Users/ybart/Documents/sources/tests/rails/engine_controllers/vendor/bundle/ruby/1.9.1/gems/rake-10.0.3/lib/rake/rake_test_loader.rb" "test/**/*_test.rb" ]\r\n\r\nTasks: TOP => default => test\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nHere is the related generated test code and routes: \r\n\r\n```\r\n# test/functional/engine_controllers/resources_controller_test.rb\r\nrequire \'test_helper\'\r\n\r\nmodule EngineControllers\r\n  class ResourcesControllerTest < ActionController::TestCase\r\n    test "should get index" do\r\n      get :index\r\n      assert_response :success\r\n    end\r\n\r\n  end\r\nend\r\n```\r\n\r\n```\r\n# config/routes\r\nEngineControllers::Engine.routes.draw do\r\n\r\n  get "resources/index"\r\n  #resources :resources\r\nend\r\n```\r\n\r\nTo me it seems OK, so I don\'t know whether this is an issue with the generated code or with underlying code. I would be very grateful for a fix, an explanation or a workaround.\r\n\r\nThanks. \r\n\r\n'
8990,'jonleighton',"has_many :through can't overwrite conditions of what it's going through\nConsider this:\r\n\r\n```ruby\r\nclass Person\r\n  has_many :accesses\r\n  has_many :projects, -> { where trashed: false }, through: :accesses\r\nend\r\n\r\nclass Project\r\nend\r\n\r\nclass Access\r\n  belongs_to :project, -> { where trashed: [ true, false ] }\r\nend\r\n\r\n# Will use trashed: [ true, false ] instead of trashed: false\r\nperson.projects\r\n```\r\n\r\nThe conditions above are being resolved as `Project.where(FROM_PERSON).where(FROM_ACCESS)`. That means that it's never possible for the hmt declaration in Person to overwrite anything set in Access. It should be `Project.where(FROM_ACCESS).where(FROM_PERSON)`.\r\n\r\nThis is the same way it resolved in 3.2, but in 3.2 it would AND the two statements instead of overwriting them. So it kinda worked by accident (as long as the FROM_PERSON condition was more restrictive than the FROM_ACCESS one)."
8982,'fxn',"Documentation clarity for #update_column and #update_columns\nChange #update_column and #update_columns' documentation to make it clear that a query is immediately triggered.\r\n\r\nhttps://github.com/rails/rails/issues/8981\r\n"
8936,'rafaelfranca',"Review, please: Capture block so content won't leak.\n**Beware: tests are red.**\r\n\r\nThe [following pull request](https://github.com/rails/rails/pull/8916) fixed\r\nthe block being passed to the appropriate helper method. However, the content\r\nbeing passed into the block is generating repeated markup on the page due to\r\nsome weird ERb evaluation.\r\n\r\nThis commit tries to capture the block's generated output so the page isn't\r\nflooded with markup, but I'm not able to make the tests pass due to a missing\r\noutput buffer. Please help me review this behavior.\r\n\r\n### Example 1 - it leaks markup to the page.\r\n\r\n```erb\r\n<%= f.collection_radio_buttons :category, Category.all, :id, :name do |b|%>\r\n  <%= b.label { b.radio_button + b.text } %>\r\n<%- end%>\r\n```\r\n\r\n### Example 2 - doesn't leak\r\n\r\n```erb\r\n<%= f.collection_radio_buttons :category, Category.all, :id, :name do |b| b.label { b.radio_button + b.text }; end %>\r\n```"
8934,'tenderlove','Connection pool breaks with classes created with Class.new(ActiveRecord::Base)\nretrieve_connection_pool in connection_pool.rb look up connection pool by class name. However, class name is the empty string if the class is created with  Class.new(ActiveRecord::Base). If several classes are created that way using different databases, then massive confusion will occur. \r\n\r\nI see two possible resolutions to this: \r\n1: Enforce name being != "" when executing estrablish_connection\r\n2: use object_id instead of class name. \r\n\r\nNot the biggest issue I guess since it is quite a bit off the normal path of doing things, but it is still not very nice to get silent breakage. '
8930,'carlosantoniodasilva','rake railties:install:migrations respects the order of railties\nI have a couple of projects that make use of Rails\' engines. There are two engines with migrations, where one engine depends on having a database table created in a migration in another engine. Unfortunately, "railties:install:migrations" task does not respect the order of engines that one can configure via "Rails.application.config.railties_order". This simple commit fixes that by using "ordered_railties" instead of "railties" (and thus the migration files are copied to the main application in the correct order).'
8914,'carlosantoniodasilva','Remove header bloat introduced by BestStandardsSupport middleware\nAfter the Rails server ran for long enough, Chome started returning a `net::ERR_RESPONSE_HEADERS_TOO_BIG` error on every page load, and curl would error with `curl: (27) Avoided giant realloc for header (max is 102400)!`. A server restart would reset the headers and made the problem temporarily go away.\r\n\r\nInvestigating showed that the same `IE=Edge,` headers were being appended on every request until finally the header size exceeded the 100k limit that browsers impose. \r\n\r\nThis patch ensures that the IE=Edge and other header variables only get appended to the X-UA-Compatible header if they are not there already, and it makes the test pass that I modified to catch the problem.\r\n\r\nThe commit that introduced this problem (d8c1404107501e131e4c7c653794768f5c461793, @nikitug) was applied to both master and 3-2-stable, so this fix should be backported to 3-2-stable as well.'
8900,'spastorino',"Adding CookieJar #fetch methods for hash-like access to cookies\nSo many times I have found myself doing something like this:\r\n\r\n```ruby\r\nclass HomeController\r\n  def index\r\n    cookies.fetch(:some_key)\r\n  end\r\nend\r\n```\r\n\r\nOf course, I'm immediately informed that the `CookieJar#fetch` method doesn't exist. I got tired of this because cookies are so often treated like `Hash`es.\r\n\r\nLet's give `cookies` a little promotion, shall we?"
8897,'rafaelfranca','collection_radio_buttons/check_boxes are not considering the custom builder block\nThe start of the discussion happened with [this gist](https://gist.github.com/4511472).\r\n\r\nIt appears the block that can be passed in the method is not being taken into account when rendering the radio buttons or checkboxes.\r\n\r\n## Example\r\n\r\n``` erb\r\n<%= f.collection_radio_buttons(:category_id, Category.all, :id, :name) do |b| %>\r\n  <%= b.label(:"data-value" => b.value) { b.radio_button + b.text } %>\r\n<%-end%>\r\n```\r\n\r\nFor each item in the collection, the expected result should be something like:\r\n\r\n``` html\r\n<label>\r\n  <input type="radio"/>\r\n  Category 1\r\n</label>\r\n```\r\n\r\nRather\r\n\r\n/cc @rafaelfranca '
8892,'pixeltrix','Update actionpack/lib/action_dispatch/routing/route_set.rb\nUse keys.zip(args) instead of args.zip(keys) as the latter one can sometimes lead to an options hash like:\r\n{nil => Model}\r\nwhich in turn will raise an exception when trying to convert to_param.\r\n'
8891,'carlosantoniodasilva',"Rack master integration (We depend after this commit on Rack ~> 1.5.0)\nReview please ...\r\n\r\n/cc @josevalim @NZKoz @jeremy @carlosantoniodasilva @raggi\r\n\r\nThe thing I'm not sure is about is request.session_options[:id] I've changed that to request.session.id to adhere to Rack API "
8868,'rafaelfranca',"Use the index name explicitly provided in a migration when reverting.\nschema_statements uses the column name by default to construct the index name, and then raises an exception if it doesn't exist, even if the name option is specified, which causes #8858.  this commit makes index_name_for_remove fall back to constructing the index name to remove based on the name option."
8824,'spastorino','Modify CookieStore middleware inheritance to avoid subclassing Rack::Session::Cookie [Fix for #7372]\nAs discussed in #7372, this PR contains commits that change `ActionDispatch::Session::CookieStore` to inherit from `Rack::Session::Abstract::ID` instead of `Rack::Session::Cookie`.\r\n'
8814,'pixeltrix','Potential bug in rails routing with singular and plural resources\nI may have found a weird bug in rails routing.\r\n\r\nBasically, I\'ve an application with my own implementation of users and access rights. The Users Controller is mapped through single and plural resource like this (code is a bit long but usefull after): \r\n\r\n```ruby\r\n    resource :user, :as => :current_user, :type => :current_user do\r\n        collection do\r\n            post \'one_request\'\r\n            post \'other_request\'\r\n        end\r\n    end\r\n    resources :users\r\n    resources :sessions, :only => [:new, :create, :destroy] do\r\n        collection do\r\n            post \'request_new_password\'\r\n        end\r\n    end\r\n\r\n    match "/signin" => \'sessions#new\', :as => :signin\r\n    match \'/signout\', :to => \'sessions#destroy\'\r\n\r\n\r\n    match \'/foo\' => redirect(\'/bar\')\r\n   [...]\r\n```\r\n\r\nThis code is tested with rspec with code like this one : \r\n```ruby\r\n    describe "GET \'show\'" do\r\n        describe "Singular path" do\r\n            it "should redirect without authentication (HTML)" do\r\n                get \'show\'\r\n                response.should redirect_to(signin_path)\r\n            end\r\n            [...]\r\n         end\r\n         [...]\r\n     end\r\n```\r\n\r\nThe weird problem is that if I remove the useless redirection in my config/routes.rb, I\'ve the following error on all spec related to singular resource testing : \r\n```\r\n  1) UsersController GET \'show\' Singular path should redirect without authentication (HTML)\r\n     Failure/Error: get \'show\', :type => :current_user\r\n     ActionController::RoutingError:\r\n       No route matches {:controller=>"users", :action=>"show"}\r\n     # ./spec/controllers/users_controller_spec.rb:138:in `block (4 levels) in <top (required)>\'\r\n```\r\n\r\nTo my mind, it seems to be an error in the way rails handle routes other wise I can\'t see why a useless redirection would change my route in another controller. This bugs seems to be limited only to singular resources and may be created by other parameters in my code.\r\n\r\nWhat do you think ?'
8797,'jonleighton','Behavior of #select changed\n3.2.9:\r\n\r\n```\r\nirb(main):003:0> Account.new.groups.select("count(groups.id) total, max(groups.updated_at) max_updated_at").first.max_updated_at\r\n  Group Load (0.3ms)  SELECT count(groups.id) total, max(groups.updated_at) max_updated_at FROM `groups` WHERE `groups`.`account_id` = NULL LIMIT 1\r\n=> nil\r\n```\r\n\r\n4.0.0.beta:\r\n\r\n```\r\nirb(main):001:0> Account.new.groups.select("count(groups.id) total, max(groups.updated_at) max_updated_at").first.max_updated_at\r\nNoMethodError: undefined method `max_updated_at\' for nil:NilClass\r\n\tfrom (irb):1\r\n\tfrom /Users/david/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/bundler/gems/rails-e63e280bed3a/railties/lib/rails/commands/console.rb:88:in `start\'\r\n\tfrom /Users/david/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/bundler/gems/rails-e63e280bed3a/railties/lib/rails/commands/console.rb:9:in `start\'\r\n\tfrom /Users/david/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/bundler/gems/rails-e63e280bed3a/railties/lib/rails/commands.rb:71:in `<top (required)>\'\r\n\tfrom ./bin/rails:4:in `require\'\r\n\tfrom ./bin/rails:4:in `<main>\'\r\n```\r\n\r\nI had code that relied on the first thing working. You can certainly argue that it\'s a tad dodgy to rely on select working like this, but I\'m not sure that\'s compelling enough to break backwards compatibility.\r\n\r\nWas this change intentional or a biproduct of something else?'
8795,'jonleighton','#exists? no longer takes default_scope into consideration\nModels:\r\n\r\n```ruby\r\nclass Todolist < ActiveRecord::Base\r\n  has_many :todos\r\nend\r\n\r\n\r\nclass Todo < ActiveRecord::Base\r\n  default_scope -> { where trashed: false }\r\n  belongs_to :todolist\r\nend\r\n```\r\n\r\nQueries:\r\n\r\n```\r\nirb(main):007:0> l.todos.exists?(completed: true)\r\n  Todo Exists (0.1ms)  SELECT 1 AS one FROM "todos" WHERE "todos"."todolist_id" = ? AND "todos"."completed" = \'t\' LIMIT 1  [["todolist_id", 1]]\r\n=> 1\r\nirb(main):008:0> l.todos.where(completed: true).exists?\r\n  Todo Exists (0.1ms)  SELECT 1 AS one FROM "todos" WHERE "todos"."trashed" = \'f\' AND "todos"."todolist_id" = ? AND "todos"."completed" = \'t\' LIMIT 1  [["todolist_id", 1]]\r\n=> nil\r\n```\r\n\r\nAs you can see, the default scope is only being respected when using an explicit #where -- not when we just pass the options to #exists?.'
8766,'pixeltrix',"Remove suggestion that Procs can be used as session secrets.\nThe docs suggest you can use a `Proc` as a session-signing key, and does not seem to be true from spelunking the code and setting up a minimal app using just the `Cookie` middlewares.\r\n\r\nIt also promotes a dangerous practise: using the current user to pick a signing token means you need to unmarshal the session and send part of it to the database, *before* you've verified the session cookie's authenticity."
8756,'guilleiguaran',"Fix javascript_include_tag when no js runtime is available\nIn a production environment where the assets have been precompiled, we\r\ndon't want an assets compile step to happen on the application server at\r\nall. To ensure this, a js runtime may not be available on the app\r\nservers. In this environment, pages using javascript_include_tag for\r\nassets with non-standard or chained extensions were throwing 500 errors.\r\nFor instance, `javascript_include_tag('jquery.min')` would blow up.\r\n\r\nSprockets was attempting to build the assets being included during the\r\nrewrite_extension step (responsible for appending a '.js' extension to\r\nassets being included by the basename rather than a fully qualified\r\nname). This was happening as a step to resolve #6310, which required\r\nchecking for the presence of an asset with a non-standard extension\r\nbefore appending the extension.\r\n\r\nWe can check for the presence of an asset without invoking the asset\r\nbuild step by using Sprockets' resolve method, which will search for the\r\nbase file without building it (and is the method that find_asset uses\r\ninternally to get the path to the asset before attempting to build it).\r\n\r\nWhen rewriting the extension on an asset, these are the steps:\r\n- If the source does not have an extension, assume that the default\r\n  extension is desired and append it.\r\n- If there is an extension and it doesn't match the default extension,\r\n  check to see if a file with the precise name specified exists amongst\r\n  the assets; if it is present, do not append the default extension.\r\n  (This is the step that resolves #6310).\r\n\r\n---\r\nThis is a new pull of #6729 after github was confused post-rebase."
8735,'guilleiguaran',"Ensure assets aren't duplicated when using sprockets require.\nAddresses the problem by calling flatten on asset array before calling uniq.\r\n\r\nI've created a separate pull request on rails/sprockets-rails that addresses the issue for Rails 4.\r\n\r\nhttps://github.com/rails/sprockets-rails/pull/33\r\n"
8700,'senny','Double forward slash appears in root_url when trailing_slash is true\nGiven this line in a default Rails app in the application.rb:\r\n\r\n```ruby\r\nconfig.action_controller.default_url_options = { trailing_slash: true }\r\n```\r\n\r\nThe `root_url` contains two forward slashes. (www.example.com//)\r\n\r\nSteps to reproduce:\r\n\r\n1. Run `rails new test_forward_slash`\r\n2. Run `rails g controller home index`\r\n3. Edit application.rb to have the line shown above\r\n4. Edit the home/index.html.erb to print out `root_url`\r\n5. You should see a double forward slash.\r\n\r\nhttps://github.com/silasj/rails_test_forward_slash'
8695,'fxn',"Convert the default readme to markdown\nI've converted the default readme file to markdown as that seems to be the most common format these days.  Is the readme file really needed any more?"
8684,'tenderlove','When creating a new item in rails 4 that was generated by scaffold, by default it doesn\'t have any CSS.\nNot sure what is going on here.\r\n\r\nas of 56aa02f1ab66cfda8f5c8bdbd088dfd38b633cb7, on Ubuntu 12.10 with ruby 1.9.3p362, the following happens:\r\n\r\ngenerate a new rails application, and then generate a resource - I used `rails g scaffold article title:string body:text`.\r\n\r\nMigrate the database and start the server, then head to localhost:3000/articles/new, and create a new article, and then click "Create Article".\r\n\r\n\r\nIn Firefox, what happens next is rather interesting. On the page with the flash message, it shows this:\r\n\r\n![Screenshot from 2013-01-01 22:28:40](https://f.cloud.github.com/assets/567771/37646/85aee166-548c-11e2-86e4-c64ff4b3b0dd.png)\r\n\r\n\r\nFirebug reports that it has no style rules. I then opened it up in a new tab, and it shows this:\r\n\r\n![Screenshot from 2013-01-01 22:29:27](https://f.cloud.github.com/assets/567771/37647/a46f113e-548c-11e2-9a4d-85b60437874c.png)\r\n\r\nFirebug reports that it has these style rules:\r\n\r\n    body {\r\n        background-color: #FFFFFF;\r\n        color: #333333;\r\n        font-family: verdana,arial,helvetica,sans-serif;\r\n        font-size: 13px;\r\n        line-height: 18px;\r\n    }\r\n\r\n\r\nIn Chrome, the opposite happens. The one with the flash shows the style rules, the one without shows none. \r\n\r\n\r\nWhat is going on here?\r\n \r\n'
8659,'jonleighton',"Association#create now raises on validation errors\nirb(main):002:0> Account.first.groups.create(name: nil)\r\n  Account Load (0.5ms)  SELECT `accounts`.* FROM `accounts` ORDER BY `accounts`.`id` ASC LIMIT 1 /**/\r\n   (0.1ms)  BEGIN /**/\r\n\r\n   (0.1ms)  ROLLBACK /**/\r\nArgumentError: First name is required\r\n\tfrom /Users/david/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/bundler/gems/signal_id-3da8c6597718/app/models/signal_id/person_name.rb:11:in `initialize'\r\n\tfrom /Users/david/Code/bcx/app/models/group.rb:46:in `new'\r\n\r\nThis used to just return an unsaved Group object with a validation error. We had #create! for when you want to raise."
8649,'senny','Routes HTML formatting/debug doesn\'t expand engines (rails 4)\nI do have an engine (X) with some routes inside, the HTML output (/rails/info/routes & whenever a (routing) error occurs), doesn\'t expand the engine routes.\r\n\r\n~~~\r\n Routes\r\n\r\nRoutes match in priority from top to bottom\r\nHelper\r\nPath / Url \tHTTP Verb \tPath \tController#Action\r\nroot_path \tGET \t/ \twelcome#index\r\nx_path \t\t/ \tX::Engine \r\n~~~\r\n\r\nis the output I get from /rails/info/routes\r\n\r\n\r\n\r\nWhen executing `bundle exec rake routes` I see the following\r\n\r\n~~~\r\n   root GET / welcome#index\r\nx     / X::Engine\r\n\r\nRoutes for X::Engine:\r\n     auth_core_users POST   /users(.:format)      x/auth_core/users#create\r\n new_auth_core_users GET    /users/new(.:format)  x/auth_core/users#new\r\nedit_auth_core_users GET    /users/edit(.:format) x/auth_core/users#edit\r\n                     GET    /users(.:format)      x/auth_core/users#show\r\n                     PATCH  /users(.:format)      x/auth_core/users#update\r\n                     PUT    /users(.:format)      x/auth_core/users#update\r\n                     DELETE /users(.:format)      x/auth_core/users#destroy\r\n~~~\r\n\r\nI am using the latest Rails 4 git master code, according to my Gemfile.lock revision ID "1d38c82b7ad98d64f5ee45c0e08d5826e14d98c0"'
8646,'carlosantoniodasilva','ignore other warnings in test assertion. Ruby 2.0\nUsing Ruby 2.0 we get a failing test in actionpack:\r\n\r\n      1) Failure:\r\n    test_locals_option_to_assert_template_is_not_supported(RenderTest) [/Users/senny/Projects/rails/actionpack/test/controller/render_test.rb:1441]:\r\n    --- expected\r\n    +++ actual\r\n    @@ -1,2 +1,3 @@\r\n    -"the :locals option to #assert_template is only supported in a ActionView::TestCase\r\n    +"/Users/senny/Projects/rails/actionpack/test/fixtures/test/_customer_greeting.erb:1: warning: assigned but unused variable - customer_greeting_counter\r\n    +the :locals option to #assert_template is only supported in a ActionView::TestCase\r\n     "\r\n\r\nThis is because there are tons of warnings emitted and the test makes a hard match against the warning buffer.\r\n\r\nI\'m sure we will get rid of the warnings with Ruby 2.0 but there is no reason this test should fail.'
8639,'rafaelfranca',"Add AR::Base#valid! method\nThis is helper method in case when some operations should be done on a record before saving. But they doesn't make sence if record is invalid.\r\n\r\n``` ruby\r\ndef create_developer_from_linkedin(parameters)\r\n  d = Developer.new(parameters)\r\n  d.valid!\r\n  d.import_linkedin_profile\r\n  d.save!\r\nend"
8632,'pixeltrix','Fixes #8631 request post? detection should remain unaffected by local inflections such as POS for Point Of Sale\nrequest post? detection should remain unaffected by local inflections such as POS for PointOfSale'
8623,'carlosantoniodasilva','Fixed nested fields bug when called with AssociationProxy\nFormBuilder.fields_for_with_nested_attributes (action_view/helpers/form_helper.rb):\r\nThis part of code expected associations to be arrays and was never executed since associations are now CollectionProxy instead of Array.\r\n```ruby\r\n          if association.respond_to?(:persisted?)\r\n            association = [association] if @object.send(association_name).is_a?(Array)\r\n```\r\nTest is included'
8622,'rafaelfranca','Tests and fix for validates_presence_of :allow_nil, :allow_blank\nTests and fix for this issue:\r\n\r\nhttps://github.com/rails/rails/issues/8621'
8585,'senny','mark_for_destruction not working correctly\nIn my application I am using mark_for_destruction to remove nested records on the basis of condition.\r\n\r\nI have a Ticket model and  Pick model:\r\n\r\n```ruby\r\nclass Ticket < ActiveRecord::Base\r\n  has_many :picks\r\n  accepts_nested_attributes_for :picks\r\n  attr_accessible :picks_attributes\r\n\r\n  before_save :mark_destroy_zero_weighted_picks\r\n\r\n  def mark_destroy_zero_weighted_picks\r\n    picks.each do |pick|\r\n      pick.mark_for_destruction if pick.weight.to_i == 0\r\n    end\r\n  end\r\nend\r\n\r\nclass Pick < ActiveRecord::Base\r\n  belongs_to :ticket\r\n  attr_accessible :ticket_id\r\n  attr_accessible :weight\r\nend    \r\n```\r\n\r\nIf there is a ticket with 4 picks associated to it having weight: 1,0,2,1 . Then only first pick gets saved and all other picks after the 0 weighted pick (for which marked_for_destruction is true) are removed when creating a new ticket record. It works fine if I edit the record but does not work while creating a new record.'
8557,'rafaelfranca',"Adding Back Rails::Engine::Railties#engines\nFirst PR for me, so please let me know if I've done something horribly wrong :-P\r\n\r\nRemoving Rails::Engine::Railties#engines breaks functionality with gems such as Thinking Sphinx.\r\nThis restores it with a deprecation warning. See #8551"
8551,'rafaelfranca','Put back `Rails::Engine::Railties#engines` and deprecate it\nSee https://github.com/rails/rails/commit/0470ddcf0301e537d5151d62177eadba5eae182d#commitcomment-2113973'
8550,'jonleighton','ActiveRecord association does not .equal? itself\nIn 3.2.9, With two models setup as:\r\n\r\n``` ruby\r\nclass Order < ActiveRecord::Base\r\n  has_many :line_items\r\nend\r\n\r\nclass LineItem < ActiveRecord::Base\r\nend\r\n```\r\n\r\nChecking to see if the association `.equal?` itself returns false, despite the `object_id`s being equivalent:\r\n\r\n```\r\n[10] pry(main)> order = Order.first\r\n#<Order id: 2, created_at: "2012-11-30 16:50:33", ...>\r\n[11] pry(main)> order.line_items.equal? order.line_items\r\n=> false\r\n[12] pry(main)> order.line_items.object_id == order.line_items.object_id\r\n=> true\r\n```\r\n\r\nI realize ActiveRecord associations return proxy objects, which is probably the source of disparity. Is this behavior intended?'
8546,'carlosantoniodasilva','fix testcase: ruby-2.0.0 warned unused variables\nruby 2.0.0 (r38432) later warned unused variables. if you run `rake test`, some testcase is fail. because this testcase read $stderr with 2.0.0 warning messages.\r\n\r\nI think this testcase is enough for confirmation of  display warning messages.'
8541,'fxn',"Invalid attempt to explain a MySQL UPDATE query\nMySQL only support [explain statements for SELECT queries](http://dev.mysql.com/doc/refman/5.0/en/explain.html)\r\n\r\nI tried to patch it, basically the [EXPLAINED_SQLS constant](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/explain_subscriber.rb#L21) just need to be dependent of the adapters. But I'm not sure how I can cleanly access the current adapter from there.\r\n\r\n\r\n```\r\n  EXPLAIN (0.4ms)  EXPLAIN UPDATE `organizations` SET `updated_at` = '2012-12-17 17:21:44', `active_card` = NULL WHERE `organizations`.`id` = 76\r\nMysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UPDATE `organizations` SET `updated_at` = '2012-12-17 17:21:44', `active_card` =' at line 1: EXPLAIN UPDATE `organizations` SET `updated_at` = '2012-12-17 17:21:44', `active_card` = NULL WHERE `organizations`.`id` = 76\r\nCompleted 500 Internal Server Error in 922ms\r\n\r\nActiveRecord::StatementInvalid (Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UPDATE `organizations` SET `updated_at` = '2012-12-17 17:21:44', `active_card` =' at line 1: EXPLAIN UPDATE `organizations` SET `updated_at` = '2012-12-17 17:21:44', `active_card` = NULL WHERE `organizations`.`id` = 76):\r\n```\r\n\r\nRegards"
8516,'senny',"assert_template with :locals raises NoMethodError: undefined method `[]' for nil:NilClass\n### Observation\r\n\r\nConsider a view such as the following:\r\n\r\n**```foo/example.html.haml```**:\r\n\r\n```ruby\r\n...\r\nrender :partial => 'foo/bar'\r\nrender :partial => 'foo/baz', :locals => {:var => 10}\r\n...\r\n```\r\n\r\nThe view test is as follows:\r\n\r\n**```foo/example.html.haml_spec.rb```**:\r\n```ruby\r\n...\r\nit 'should render foo/bar.' do\r\n  render\r\n  # This works. An underscore *must* be used before partial name.\r\n  assert_template :partial => 'foo/_bar' \r\nend\r\n\r\nit 'should render foo/baz.' do\r\n  render\r\n\r\n  # This does *not* work, and raises NoMethodError: undefined method `[]' for nil:NilClass\r\n  assert_template :partial => 'foo/_baz', :locals => {:var => 10}  \r\n\r\n  # This *does* work, the difference being that\r\n  # an underscore *must not* be used before the partial name.\r\n  assert_template :partial => 'foo/baz', :locals => {:var => 10}  \r\nend\r\n...\r\n```\r\n\r\n### Expectation\r\n\r\nPartial name should be specified in the same way regardless of whether locals are specified in assert_template or not."
8513,'chancancode','test showing that the :digest option to CookieStore does absolutely nothing anymore\nSeems this was broken 3 years ago and no one noticed?\r\n\r\nhttps://github.com/rails/rails/commit/25f7c030e4ea440ea6c2a84c92118299753392d9\r\n\r\nNot sure how best to go about fixing it - if anyone cares?  This (:digest) was a good idea, but either no one is using it or has no idea it broke - since it would be a very silent failure.'
8511,'jonleighton',"AR scope() that overrides previous where() behaves differently than chained where()\nTwo examples:\r\n\r\n``` ruby\r\nclass PaymentGatewayEvent < ActiveRecord::Base\r\n  scope :successful, where(:success => true)\r\nend\r\n\r\nPaymentGatewayEvent.where(:success => false).successful.count\r\n\r\n# SELECT COUNT(*) FROM `payment_gateway_events`\r\n# WHERE `payment_gateway_events`.`success` = 1\r\n\r\n#  => 41062 \r\n\r\nPaymentGatewayEvent.where(:success => false).where(:success => true).count \r\n\r\n# SELECT COUNT(*) FROM `payment_gateway_events`\r\n# WHERE `payment_gateway_events`.`success` = 0\r\n# AND `payment_gateway_events`.`success` = 1\r\n\r\n#  => 0\r\n```\r\n\r\nWrapping the scope in a lambda {} doesn't change the behaviour.\r\n\r\nWe're expecting the second (zero results) behaviour: we have an AR relation that we pass through to a summary function that  works out what percentage of operations were successful. It's possible that the AR relation is, as a response to user input, filtering out all unsuccessful transactions.\r\n\r\nBut the much more worrying issue is that a scope'd `where()` behaves differently from one that's directly chained.\r\n\r\nRails 3.2.6, Ruby 1.9.3, MySQL (mysql2 driver)."
8492,'senny',"Migrations on some specific paths crash.\nHow to reproduce:\r\n\r\n```\r\nmkdir 10_urban\r\ncd 10_urban\r\nrails new library\r\n# change Gemfile to include therubyracer\r\nbundle\r\nrails g scaffold author name:string\r\nrake db:migrate\r\n```\r\n\r\n```\r\nrake aborted!\r\nAn error has occurred, this and all later migrations canceled:\r\n\r\nundefined method `migrate' for #<Object:0x000000033811e0>\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:528:in `migrate'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:720:in `block (2 levels) in migrate'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:775:in `call'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:775:in `block in ddl_transaction'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/connection_adapters/abstract/database_statements.rb:192:in `transaction'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/transactions.rb:208:in `transaction'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:775:in `ddl_transaction'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:719:in `block in migrate'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:700:in `each'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:700:in `migrate'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:570:in `up'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/migration.rb:551:in `migrate'\r\n/usr/local/rvm/gems/ruby-1.9.2-p320/gems/activerecord-3.2.8/lib/active_record/railties/databases.rake:153:in `block (2 levels) in <top (required)>'\r\nTasks: TOP => db:migrate\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nThe problem stems from the Regexp used to match the migration name:\r\n\r\n```\r\nfile.scan(/([0-9]+)_([_a-z0-9]*)\\.?([_a-z0-9]*)?.rb/).first\r\n```\r\n\r\nThe last dot should be escaped and, in my opinion, the regexp should match the end of the string as well. So the regexp should look as follows:\r\n\r\n```\r\n/([0-9]+)_([_a-z0-9]*)\\.?([_a-z0-9]*)?\\.rb\\z/\r\n```"
8491,'fxn',"Issue #8442\nSo I tried using hub gem to do a pull request for the following issue: https://github.com/rails/rails/issues/8442\r\n\r\nBut I keep getting 422 so I decided to stop fighting it and do it through github's GUI.If someone can attach the pull request to issue 8442 that would be awesome. \r\n\r\nThanks."
8488,'pixeltrix','URL Helpers module is reset after initialization in 3.2.9\nMy Rails plugin modifies url_for method so that :locale option is converted to the appropriate subdomain. See  https://github.com/semaperepelitsa/subdomain_locale/blob/master/lib/subdomain_locale/url_for.rb\r\n\r\nIn a railtie I include this module into Rails.application.routes.url_helpers for zero-setup. See\r\nhttps://github.com/semaperepelitsa/subdomain_locale/blob/master/lib/subdomain_locale/railtie.rb\r\n\r\nThis broke in 3.2.9. I see that Rails.application.routes.url_helpers module changes after initialization and therefore no longer includes my module. The breaking commit might be this one by @spastorino: e41d78ce221b2ca84cc260e20f3813eaace586b3.\r\n\r\nWhat is the way to accomplish the same thing now?'
8460,'pixeltrix','Database objects do not register < 1sec changes\nI just upgraded from rails 3.1.3 to rails 3.2.9\n\nIt seems database objects that keep track of postgres DateTime objects do not register changes under 1 second\n\n```ruby\n1.9.3-p327 :001 > e = Employee.last\n1.9.3-p327 :002 > e.created_at\n => Wed, 14 Nov 2012 11:43:18 PST -08:00\n1.9.3-p327 :003 > e.created_at.to_f\n => 1352922198.0550148\n1.9.3-p327 :004 > e.created_at += 0.5\n => Wed, 14 Nov 2012 11:43:18 PST -08:00\n1.9.3-p327 :006 > e.changed?\n => false\n1.9.3-p327 :007 > e.created_at.to_f\n => 1352922198.0550148\n1.9.3-p327 :008 > e.created_at += 0.95\n => Wed, 14 Nov 2012 11:43:19 PST -08:00\n1.9.3-p327 :009 > e.changed?\n => true\n1.9.3-p327 :010 > e.created_at.to_f\n => 1352922199.0050151\n1.9.3-p327 :011 > e.created_at.class\n => ActiveSupport::TimeWithZone\n```\n\nHowever less than 1 second changes to time objects in rails 3.1.3 worked as expected.'
8448,'rafaelfranca','3.2.9, specifically pull request #8048, breaks actionmailer\'s mailer methods\n#8048 (included in 3.2.9) changes how actionmailer\'s mailer methods behave. It makes the return value of mailer methods significant. In 3.2.8 they where not significant. Also, it does not do what it says it does. It does not render a message when a mailer method does not return a value, regardless of whether `mail` was called. \n\nThe return value of a mail method should not be significant IMHO. In 3.2.8, It was fine to, for example, call mail and then call some methods on the resulting object, which may or may not have significant return values (like `mail(to: "foo").add_file("bar")`)\n\nI\'ve created a small script to illustrate my point: https://gist.github.com/4232681. In 3.2.8 this would deliver the message, wich seems like expected behaviour to me. In 3.2.9 however, it doesn\'t deliver anything.'
8390,'pixeltrix','distance_of_time_in_words between 2 datetimes with nonzero timezone in 3.2.9\n```ruby\n1.9.3p327 :002 > Rails::VERSION::STRING\n => "3.2.9" \n1.9.3p327 :003 > include ActionView::Helpers::DateHelper\n => Object \n1.9.3p327 :004 > start_date = DateTime.new 1975, 1, 31, 0, 0, 0, \'+6\'\n => Fri, 31 Jan 1975 00:00:00 +0600 \n1.9.3p327 :005 > end_date = DateTime.new 1977, 1, 31, 0, 0, 0, \'+6\'\n => Mon, 31 Jan 1977 00:00:00 +0600 \n1.9.3p327 :006 > distance_of_time_in_words(start_date, end_date)\n => "12 minutes"  # !!! INSTEAD OF "about 2 years"\n```\n\nWith \'+0\' timezone\n\n```ruby\n1.9.3p327 :007 > start_date = DateTime.new 1975, 1, 31, 0, 0, 0, \'+0\'\n => Fri, 31 Jan 1975 00:00:00 +0000 \n1.9.3p327 :008 > end_date = DateTime.new 1977, 1, 31, 0, 0, 0, \'+0\'\n => Mon, 31 Jan 1977 00:00:00 +0000 \n1.9.3p327 :009 > distance_of_time_in_words(start_date, end_date)\n => "about 2 years" \n```\n\nThis works correctly on master branch.\n\nWill you fix this on 3.2 branch?\n\nP.S. Quick workaround:\n\n    distance_of_time_in_words(start_date.to_i - end_date.to_i)'
8376,'senny','render partial from a controller -- 3.2.9\nIn previous versions of Rails (until at least 3.2.0), I was able to render a _partial_ in a _controller_ with a _layout_.  \n\nI use this for reusing the same partial in two contexts, one where it\'s a whole page of it\'s own, and one where it\'s a partial on a page. \n\nIn a _controller action_:\n\n     render :partial => "some_partial", :layout => true\n\nI would get the partial, wrapped in the usual default layout for the controller. Great. \n\nThis worked up to 3.2.0, and possibly later. \n\nJust upgraded my app to 3.2.9, and now I get this stacktrace trying to do above -- if I change `:layout => false`, it works.  But I want the layout. And the partial with (full, ordinary) layout worked before. Is it a bug/regression that it\'s stopped? Or am I doing something illegal? Do I really need to create a view template that does nothing but wrap the partial, so I can call it from the controller with the layout?\n\nI am thinking this is a bug. \n\n    undefined method `include?\' for #<Proc:0x00000012929b38>\n\n    actionpack (3.2.9) lib/action_view/renderer/partial_renderer.rb:338:in `find_template\'\n    actionpack (3.2.9) lib/action_view/renderer/partial_renderer.rb:259:in `render_partial\'\n    actionpack (3.2.9) lib/action_view/renderer/partial_renderer.rb:238:in `block in render\'\n    actionpack (3.2.9) lib/action_view/renderer/abstract_renderer.rb:38:in `block in instrument\'\n    activesupport (3.2.9) lib/active_support/notifications.rb:123:in `block in instrument\'\n    activesupport (3.2.9) lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\n    activesupport (3.2.9) lib/active_support/notifications.rb:123:in `instrument\'\n    actionpack (3.2.9) lib/action_view/renderer/abstract_renderer.rb:38:in `instrument\'\n    actionpack (3.2.9) lib/action_view/renderer/partial_renderer.rb:237:in `render\'\n    actionpack (3.2.9) lib/action_view/renderer/renderer.rb:41:in `render_partial\'\n    actionpack (3.2.9) lib/action_view/renderer/renderer.rb:15:in `render\'\n    actionpack (3.2.9) lib/abstract_controller/rendering.rb:110:in `_render_template\'\n    actionpack (3.2.9) lib/action_controller/metal/streaming.rb:225:in `_render_template\'\n    actionpack (3.2.9) lib/abstract_controller/rendering.rb:103:in `render_to_body\'\n    actionpack (3.2.9) lib/action_controller/metal/renderers.rb:28:in `render_to_body\'\n    actionpack (3.2.9) lib/action_controller/metal/compatibility.rb:50:in `render_to_body\'\n    actionpack (3.2.9) lib/abstract_controller/rendering.rb:88:in `render\'\n    actionpack (3.2.9) lib/action_controller/metal/rendering.rb:16:in `render\'\n    [....]\n\n'
8368,'tenderlove','Allow connection_handler to be overriden per-thread\nThis PR is in response to #8344, it introduces the ability to set a new connection_handler per thread while maintaining the current behavior. \n\nThis can be used by applications that need multiple concurrent connections to different dbs. \n\nA typical use case may be for apps that serve multiple subdomains from a single rails app and need db isolation per subdomain.\n\ncc @tenderlove'
8330,'rafaelfranca','Added regression test for cache_key changes in conjunction with associations.\n'
8264,'senny',"rake db:migrate fail due to limit of 64 character on the temp table\nI am getting the below error while trying to run db:migrate. The file db migrate file is also added below. Thanks.\r\n\r\nThe file I want to migrate is:\r\n\r\n```ruby\r\n class RemoveAccessableColumnNameFromSysUserRights < ActiveRecord::Migration\r\n   def up\r\n     remove_column :authentify_sys_user_rights, :accessable_column_name\r\n   end \r\n\r\n   def down\r\n     add_column :authentify_sys_user_rights, :accessable_column_name, :string\r\n   end\r\n end\r\n```\r\n\r\n======= The error is:\r\n\r\n```\r\nD:\\Application\\rails\\apps\\authentify>rake db:migrate\r\n==  RemoveAccessableColumnNameFromSysUserRights: migrating ====================\r\n-- remove_column(:authentify_sys_user_rights, :accessable_column_name)\r\nrake aborted!\r\nAn error has occurred, this and all later migrations canceled:\r\n\r\nIndex name 'temp_index_altered_authentify_sys_user_rights_on_accessable_column_name' on table 'altered_authentify_sys_user_rights' is too long; the li\r\nmit is 64 characters\r\nD:/Application/rails/apps/authentify/db/migrate/20121103200652_remove_accessable_column_name_from_sys_user_rights.rb:3:in `up'\r\nC:in `migrate'\r\nTasks: TOP => db:migrate => app:db:migrate\r\n(See full trace by running task with --trace)\r\n```"
8195,'rafaelfranca',"Pull #6986 causes regression in version 3.2.9\nPull #6986 causes a backward-incompatible change in behavior in Rails version 3.2.9.\r\n\r\nI have two issues with this pull request:\r\n\r\n1. The code was introduced to fix a MySQL-specific behavior but it affects people who aren't using a `mysql` adapter.\r\n2. It causes a regression in behavior from the previous patch version.\r\n\r\nHere is an example test that passes in version 3.2.8 but fails in 3.2.9:\r\n\r\n```ruby\r\nclass Parent < ActiveRecord::Base\r\n  has_one :child\r\nend\r\n\r\nclass Child < ActiveRecord::Base\r\n  belongs_to :parent, :touch => true\r\nend\r\n\r\nsetup do\r\n  @parent = Parent.create\r\n  Child.create(:parent => @parent)\r\nend\r\n\r\ndef test_cache_key_changes_when_child_touched\r\n  key = @parent.cache_key\r\n  @parent.child.touch\r\n  @parent.reload\r\n  assert_not_equal key, @parent.cache_key # F\r\nend\r\n```\r\n\r\nIn version 3.2.8, this test passed because it only required a fraction of a second to pass between when the parent was created an touched.\r\n\r\nThe only way I can make this test pass in version 3.2.9 (without monkey patching) is by adding `sleep 1` before `@object.child.touch`."
8192,'senny',"`rails generate plugin` without either --full or --mountable omits the scripts directory and config/routes\nIt seems that it should default to one or the other, or warn the user that the command is invalid.  A rails project without a scripts directory doesn't seem to be the appropriate behavior."
8127,'jonleighton','Fix #8080 (wrong #respond_to? value for AR::Delegation).\nFix the case when `Relation#respond_to?` always return `true` for the methods delegated to `@klass` without checking for this method in `@klass`. (#8080)\r\n\r\nBefore patch:\r\n\r\n```ruby\r\nTopic.all.by_lifo              #=> Creates the scoped method on ActiveRecord::Delegation module\r\nPost.all.respond_to?(:by_lifo) #=> true\r\nPost.all.by_lifo               #=> NoMethodError\r\n```\r\n\r\nAfter patch:\r\n```ruby\r\nTopic.all.by_lifo              #=> Creates the scoped method on ActiveRecord::Delegation module\r\nPost.all.respond_to?(:by_lifo) #=> false\r\n```\r\n\r\nAlso moved delegation tests to the separate case and fixed some hashes to 1.9-style.'
8119,'guilleiguaran','ActionView::Helpers::AssetUrlHelper#asset_path uses request.script_name in an engine\nI encountered the following problem with current master branch (4.0.0.beta):\r\n\r\nThe asset_path method seems to use the `request.script_name` information to determine the correct url for the assets. \r\nBut when you try to include assets per `assets_path` **in an engine** (or a depending method e.g. `stylesheet_link_tag`) than this `script_name` is prefixed to the urls.\r\n\r\nSteps to reproduce:\r\n\r\n1. Generate a fresh rails 4.0.0.beta project\r\n2. Generate a fresh isolated mountable engine (like the example in the edge guide) with a dummy controller and a dummy method `foo#bar` which uses a layout.\r\n3. Require the engine as a gem in the rails `Gemfile`\r\n4. Mount the engine, e.g. `mount Blorgh::Engine, :at => \'blorgh\'`\r\n5. Start the server\r\n\r\nProblem: The stylesheet-link url is generates \r\n\r\n     stylesheet_link_tag("blorgh/application") => "/blorgh/assets/blorgh/application.css?body=1"\r\n\r\nI temporarily fix this problem by setting `config.relative_url_root = \'\'` in `application.rb` of the main project.\r\n\r\n'
8099,'guilleiguaran',"asset pipeline in rails 3.2.9.rc2 fails to require assets with dot in the filename, claiming recursive require\nTo recreate:\r\nHave two files in your app/assets/stylesheets, application.sass and foo.bar.sass, the application.sass containing only a `/*= require foo.bar */` and the foo.bar.sass being empty, you'll get the following exception when precompiling:\r\n\r\n    /RAILS_ROOT/app/assets/stylesheets/application/foo.bar.sass has already been required\r\n      (in /RAILS_ROOT/app/assets/stylesheets/application/foo.bar.sass)\r\n"
8064,'carlosantoniodasilva','Rename ActiveModel::Model to ActiveModel::BasicModel\n'
8062,'tenderlove',"config.threadsafe! makes app slower on Rails 3.2\nI've made a few benchmarks using Puma server, MRI 1.8.7 and a very simple Rails app (just some render :text), and it appears that config.threadsafe! option makes responses slower (under higher concurrency level) on Rails 3.2, while on Rails 3.0 it doesn't change anything.\r\n\r\nHere are some numbers (mean request time):\r\nab -c 1 -n 1000\r\n3.652ms (puma, mri 1.8.7, 3.2.8, nonthreadsafe)\r\n3.721ms (puma, mri 1.8.7, 3.2.8, threadsafe)\r\n\r\n3.075ms (puma, mri 1.8.7, 3.0.11, nonthreadsafe)\r\n3.109ms (puma, mri 1.8.7, 3.0.11, threadsafe)\r\n\r\nab -c 5 -n 1000\r\n4.198ms (puma, mri 1.8.7, 3.2.8, nonthreadsafe)\r\n5.790ms (puma, mri 1.8.7, 3.2.8, threadsafe)\r\n\r\n4.354ms (puma, mri 1.8.7, 3.0.11, nonthreadsafe)\r\n4.322ms (puma, mri 1.8.7, 3.0.11, threadsafe)\r\n\r\nab -c 20 -n 1000\r\n4.278ms (puma, mri 1.8.7, 3.2.8, nonthreadsafe)\r\n6.357ms (puma, mri 1.8.7, 3.2.8, threadsafe)\r\n\r\n4.730ms (puma, mri 1.8.7, 3.0.11, nonthreadsafe)\r\n4.831ms (puma, mri 1.8.7, 3.0.11, threadsafe)\r\n\r\nAnd charts:\r\nhttps://docs.google.com/spreadsheet/oimg?key=0AkbGtPEbW0gxdEpNMzQxUks4QU5SQjc0ZUlFYllCdVE&oid=2&zx=jhc4f6kq18dl\r\nhttps://docs.google.com/spreadsheet/oimg?key=0AkbGtPEbW0gxdEpNMzQxUks4QU5SQjc0ZUlFYllCdVE&oid=1&zx=368n1r1r176a\r\n\r\nI may be wrong and it's a side effect of something else, but I upgraded my Rails app from 3.0.11 to 3.2.8 a few days ago (running atop JRuby) and had to downgrade b/c of performance reasons (app was much slower which was leading to congestions). Benchmark of some action:\r\n\r\n57.838ms    Trinidad, Rails 3.2.8\r\n47.342ms    Kirk, Rails 3.2.8\r\n35.814ms    Kirk, Rails 3.0.11\r\n\r\nHuge difference! There is definitely some problem. "
8034,'fxn','Organize README\n * Organized code status badges into a "Code Status" section.\r\n * Moved the OSI MIT License link inline (bullets are for unordered\r\n   lists).'
8032,'rafaelfranca','rake db:test:prepare tries to load the structure.sql into development database\nThe last revision of 3-2-stable branch - commit 7f09bcd1810f - drops, creates the test database, but the structure is loaded into development one.\r\n\r\nA snippet from PostgreSQL log:\r\n\r\n````\r\n[case mz_test] FATAL:  database "mz_test" does not exist\r\n[case postgres] LOG:  duration: 7211.694 ms  statement: CREATE DATABASE "mz_test" ENCODING = \'unicode\'\r\n[case mz_devel] ERROR:  must be owner of extension plpgsql\r\n[case mz_devel] STATEMENT:  COMMENT ON EXTENSION plpgsql IS \'PL/pgSQL procedural language\';\r\n[..]\r\n[case mz_devel] ERROR:  relation "cards" already exists\r\n[case mz_devel] STATEMENT:  CREATE TABLE cards (\r\n\r\n````\r\nand so on..\r\n\r\nI am looking for the exact commit somewhere between commit 45d78a3dd1a1 and 7f09bcd1810f where the problem has been introduced.'
8027,'carlosantoniodasilva',"Atomic.rb assumes it may chown/chmod a file but doesn't handle the EPERM error.\nPreviously this code just assumed it is capable of changing the file\r\nownership, both user and group. This will fail in a lot of scenario's\r\nunless:\r\n* The process is run as a superuser (root);\r\n* The owning user and group are already set to the user and group we're\r\n  trying to chown to;\r\n* The user chown'ing only changes the group to another group it is a\r\n  member of.\r\nIf either of those conditions are not met the filesystem will simply\r\ndeny the operation throwing an error.\r\n\r\nIt is also not always possible to do a chmod, there might be a SELinux\r\npolicy or another limitation preventing the user to change the file\r\nmode. To this end the chmod call has also been added to the rescue\r\nblock.\r\n\r\nI've also added a little comment above the chmod command that doing a\r\nchmod on a file which has an ACL set will cause the ACL to be\r\nrecalculated / modified."
8018,'pixeltrix','redirect() in routes.rb incorrectly behaves like a catch-all route\nThis similar to the issue described in #2430, but the solution described there is incomplete. Placing the redirect route later in the routemap only prevents the redirect from catching another route so long as that other route is specified correctly.\r\n\r\nHowever, if for example a parameter is missing or the route doesn\'t exist, the routemap will swallow the routing error and simply use the redirect route with `action` and `controller` as parameters.\r\n\r\nAs an example, we have the following in our `routes.rb`:\r\n\r\n```ruby\r\nmatch "/myresources" => redirect("/deals")\r\n```\r\n\r\nNow if you incorrectly specify another non-existent route like this:\r\n\r\n```ruby\r\nurl_for(:controller => "blargh", :action => "blargh")\r\n```\r\n\r\nInstead of getting a Routing Error, it returns:\r\n\r\n```ruby\r\n"http://localhost/myresources?action=blargh&controller=blargh"\r\n```\r\n\r\nThis is incorrect.'
8004,'pixeltrix','When using mysql and SQL schema format structure.sql records current auto increment values\nDue to a (six year old!) [bug in MySQL][1] the current auto increment value for the table gets saved into `structure.sql`. This is true for the old way of dumping the structure and the new way using `mysqldump` introduced in #7564 because the bug affects the output of `SHOW CREATE TABLE`. Obviously this results in unnecessary changes to `structure.sql` being committed.\r\n\r\nOne way of addressing this is to use `--compatible=no_table_options` when dumping and then wrap the load with a `SET STORAGE_ENGINE=InnoDB`, e.g:\r\n\r\n``` SQL\r\nSET @OLD_STORAGE_ENGINE=@@STORAGE_ENGINE, STORAGE_ENGINE=InnoDB;\r\nSOURCE /rails_root/db/structure.sql;\r\nSET STORAGE_ENGINE=@OLD_STORAGE_ENGINE;\r\n```\r\n\r\nHowever this assumes that every table is InnoDB which may obviously not be the case. The other option is to use `--compatible=no_table_options` and write a bunch of `ALTER TABLE #{table} ENGINE=#{engine}` commands to `structure.sql` in the same way that the migration status is dumped as sequence of `INSERT` statements.\r\n\r\nAnyone have any opinions?\r\n\r\n[1]: http://bugs.mysql.com/bug.php?id=20786'
7977,'pixeltrix','Redirects in engine routes works strange\nAssuming engine routes:\r\n\r\n```ruby\r\nPages::Engine.routes.draw do\r\n  namespace :admin do\r\n    root to: redirect("/admin/map")\r\n\r\n    resource :map\r\n  end\r\nend\r\n```\r\n\r\nAnd an application:\r\n\r\n```ruby\r\nRails.application.routes.draw do\r\n  mount Pages::Engine => "/pages"\r\nend\r\n```\r\n\r\nGET "/pages/admin" should redirect to "/pages/admin/map", but redirecting to "/admin/map"\r\n\r\nThis works in plain rails apps, thus I think, that engines should behave the same way.'
7944,'pixeltrix','Remove variables when determining the controller for match shorthand routes\nWhen match is used inside a scope that contains path variables, the logic to determine the controller will return unusable results.\r\n\r\nThis patch removes the path variables from the segment, before determining the controller.'
7924,'pixeltrix','Route constraints don\'t work with route globbing\nThe constraints regex in this example is completely ignored:\r\n```match "/*id" => "pages#show", constraints: { id: /company/ }```\r\n\r\nThe RailsGuides\' article on this subject seems to suggest the above should match all pages that start with /company. There\'s an example with a wildcard and a constraint in the Advanced Constraints section (though the example uses an object instead of a hash with regex):\r\nhttp://guides.rubyonrails.org/routing.html#advanced-constraints\r\n\r\nThis is on Rails 3.2.8'
7901,'rafaelfranca','Fixes #7894 and #7896\nFixes #7894 and #7896'
7859,'tenderlove','Fix has_many assocation w/select load after create\nIf you create a new record via a collection association proxy that has\r\nnot loaded its target, and which selects additional attributes through\r\nthe association, then when the proxy loads its target, it will\r\ninadvertently trigger an ActiveModel::MissingAttributeError during\r\nattribute writing when CollectionAssociation#merge_target_lists attempts\r\nto do its thing, since the newly loaded records will possess attributes\r\nthe created record does not.\r\n\r\nThis error also raises a bogus/confusing deprecation warning when\r\naccessing the association in Rails 3.2.x, so cherry-pick would be\r\nappreciated!'
7853,'jonleighton','first_or_create is applying erroneous scope to model callbacks\nThe following code does not result in a raise to the controller.\r\n\r\nWish.rb\r\n```ruby\r\n  before_create :verify_wish_limit\r\n  \r\n  private\r\n  \r\n  def verify_wish_limit\r\n    raise OverLimitException # if blah blah\r\n  end\r\n```\r\n\r\nwishes_controller.rb\r\n```ruby\r\n  def create\r\n    @wish = @user.wishes.where(:product_id => @product.id).first_or_create\r\n  rescue Wish::OverLimitException\r\n    # handle error\r\n  end\r\n```\r\n\r\nChanging the creation line to the following does:\r\n\r\n~~~\r\n@wish = @user.wishes.find_or_create_by_product_id(@product.id)\r\n~~~'
7845,'pixeltrix',"find_or_create dynamic finder doesn't use type attribute when creating an instance\n```\r\nclass Company < ActiveRecord::Base; end\r\nclass Firm < Company; end\r\nclass Client < Company; end\r\nCompany.find_or_create_by_type_and_name('Firm', 'Google') \r\n# Returns instance of Company when \r\n# running first time and instance of Firm when running second time\r\n```\r\nThe issue here is that find_or_create isn't smart enough to figure out that 'type' is inheritance_column and should be used for newly created record instantiation"
7780,'jonleighton',"activerecord: Avoid mysql non-null text column defaulting to empty string\nThe mysql database adaptor assumes that non-null text columns behave as if the default value is an empty string. This is the default behaviour for mysql connections, but putting the connection in strict mode with `SET SQL_MODE='STRICT_ALL_TABLES'` makes like other databases, where the default value is NULL so the value must be specified.\r\n\r\nThe mysql adaptor defaults to using this strict mode, although it can be disabled with setting `strict: false` in the database configuration. However, the mysql adapter has a hack based on non-strict mode behaviour to detect an empty string default value. So even though strict mode is used, this hack is continuing non-strict mode behaviour within strict mode.\r\n\r\nI propose just removing this hack to mimic the non-strict behaviour to make its behaviour consistent with other databases.  This is what this pull request does."
7766,'fxn','"Expected X to define Y" is not helpful.\nThat is one of the most annoying aspects of doing anything with Rails. Hitting that error means dealing with completely nonsensical forensic information, since usually a backtrace goes nowhere near the original issue, and even the class and filenames in the error message rarely if ever point to the correct place.\n\nThe loader must be instrumented to a degree allowing proper reporting of the original point of failure. Recognising a cycle in the loader as described in #882 is a first step, but still does not give the necessary insights.'
7668,'drogus','Removing to_shorthand to fix #6497\nWhen using shortcut routes inside an engine the "to_shorthand" variable\nis set to true, causing the module scope of the route to not be applied.'
7570,'pixeltrix','ActionController::ForceSSL accepts options for redirect_to\nforce_ssl can accept options for redirect_to. like status for the http code to use for redirect'
7528,'pixeltrix','force_ssl seems to drop optional path segments when redirecting to https\nI have a route:\n\n```\nconstraints subdomain: "images" do\n  match "/:id(/:geometry)" => "images#show"\nend\n```\n\nAnd a controller:\n\n```\nclass ImagesController < ActionController::Base\n\n  force_ssl if Rails.env.production?\n\n  def show\n    # ...\n  end\n\nend\n```\n\nIf I go to: http://images.domain.dev/42/300x400?some=params\nI get redirected to: https://images.domain.dev/42?some=params'
7493,'fxn','Re-writing the AJAX Guide\nI did a poll on Twitter to see what parts of Rails needed documentation the most, and one glaring thing that was pointed out was how out of date the AJAX guide was.\n\nCurrently, this request is not ready to be merged, but I wanted to get some feedback on what I plan to do before I bother to write the entire thing.\n\nBasically, I built a new outline, and threw a quick paragraph or two together for a bunch of the parts.\n\nCurrent guide (NOT the one I\'m working on) is [here](http://edgeguides.rubyonrails.org/ajax_on_rails.html), for reference.\n\n## Questions\n\nSome specific feedback I\'d like addressed before I flesh this out more:\n\n### Intro to AJAX\n\nWhen this guide was written, AJAX was a bit newer of a technique. The original guide had an explanation of what AJAX is. Now that everybody knows what\'s up, do we still need this?\n\n### library coverage\n\nI plan on (and have in the outline) linking to a bunch of different projects that are used for testing JS, for example. Is the \'give a bunch of them a paragraph and a link\' something we want here?\n\n### SPAs?\n\nI wrote up a little section mentioning Ember, Backbone, and Throne of JS. Obviously, "How to write a heavy JS app" is out of the scope of this guide, but I felt that mentioning tools that people can transition to once they get a lot of JS going would make sense. Is this useful?\n\n/cc @fxn @radar @wycats @dhh'
7477,'drogus','A missing require is added to fix build. When performing rake test:isolated in actionmailer, test/base_test.rb was break.\nI fixed some warnings related to `mime_type` method\'s deprecation on master (#7469).\n\nBut I got some another problems.\nWhen executing `rake test:isolated` in ActionMailer, test/base_test.rb was break.\n\n```\n 1) Failure:\ntest_0007_should set template content type if mail has only one part(BaseTest) [test/base_test.rb:69]:\nExpected: "text/html"\nActual: "text/plain"\n...\n```\n\nAfter investigating, I realized the cause of problem.\nIf we didn\'t load `action_dispatch`, we also didn\'t execute `ActionView::Template::Types.delegate_to Mime`\nPlease see also https://github.com/rails/rails/commit/67f55e282236eef53adc6036e735190b1dda5a47#L0R107.\n\nIf we delegate to Mime, build is success.'
7433,'pixeltrix','Test of namespaced Controller fails\nSnippet of routes.rb\n\n    namespace :backend do\n      resources :tickets\n    end\n\nThe Controller is generated with scaffolding: \n\n    rails g scaffold_controller backend/tickets index show new create edit update destroy\n\nIt is accessible in development and production mode with the url\n\n    /backend/tickets\n\nBut when running the (scaffolded and unchanged) functional test of this controller, the actions for :destroy, :edit, :show and :update are not found, \n\n    ActionController::RoutingError: No route matches {:controller=>"backend/tickets", :action=>"update"}\n\nand so on. Did i do something wrong? I applied every hint i found, everythings seems to be in the right place for me. '
7416,'carlosantoniodasilva',"#4938 Fix launching performance tests\nWhen we run `rake test:benchmark` for performance tests it raises\nArgumentError that file --benchmark not found. It happens because\ngem 'test-unit' passes remaining options to the tests, whereas mintest\ndoesn't do it."
7411,'pixeltrix','Rails 3.2.8: Use of ActiveSupport::sum causes extra database queries vs inject\nHere is the scenario:\n\n    class Serving\n      has_many :constituents\n      has_many :nutritions, :through => :constituents\n    end\n\n    class Constituent\n      belongs_to :serving\n      belongs_to :nutrition\n      attr_accessible :qty_in_grams\n    end\n\n    class Nutrition\n      has_many :constituents\n      has_many :servings, :through => constituents\n      attr_accessible :calories_per_gram\n    end\n\nI want to calculate the total calories for the serving, I naturally do the following query:\n\n    Serving.sum { |serving| \n      serving.constituents.sum { |constituent| \n        constituent.qty_in_grams * constituent.nutrition.calories_per_gram \n      } \n    }\n\nThis makes a lot of queries, so I use includes to reduce the number of queries down:\n\n    Serving.includes(:constituents => :nutrition).sum { |serving| \n      serving.constituents.sum { |constituent| \n        constituent.qty_in_grams * constituent.nutrition.calories_per_gram \n      } \n    }\n\nHowever, this doesn\'t seem to help. Puzzled, and after a lot of fiddling, I make a change that reduces the queries down to 3.\n\n    Serving.includes(:constituents => :nutrition).sum { |serving| \n      serving.constituents.inject(0) { |memo, constituent| \n        memo + (constituent.qty_in_grams * constituent.nutrition.calories_per_gram) \n      } \n    }\n\nI don\'t know why ActiveSupport::sum appears to act differently to inject in this case. Is this a bug? (I searched the issue tracker and didn\'t find any likely suspects.)\n\n**Example logs:**\n\nWith includes and 2 sums:\n\n    Serving Load (1.0ms)  SELECT "servings".* FROM "servings" \n    Constituent Load (3.0ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)\n    Nutrition Load (2.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" IN (1, 2, 8, 6, 7, 5, 4, 3, 9, 10, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 23, 22, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38)\n    Constituent Load (0.8ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 1 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 2 LIMIT 1\n    Constituent Load (1.2ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 2\n    Nutrition Load (0.8ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 8 LIMIT 1\n    Nutrition Load (0.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 6 LIMIT 1\n    Nutrition Load (0.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 7 LIMIT 1\n    Nutrition Load (1.1ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 5 LIMIT 1\n    Nutrition Load (0.8ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 4 LIMIT 1\n    Nutrition Load (1.2ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 3 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 1 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 9 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 10 LIMIT 1\n    Nutrition Load (0.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 11 LIMIT 1\n    Constituent Load (0.7ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 3\n    Nutrition Load (1.2ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 12 LIMIT 1\n    Nutrition Load (0.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 17 LIMIT 1\n    Nutrition Load (1.2ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 18 LIMIT 1\n    Constituent Load (1.0ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 4\n    Nutrition Load (0.8ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 13 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 14 LIMIT 1\n    Nutrition Load (4.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 15 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 16 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 11 LIMIT 1\n    Nutrition Load (1.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 7 LIMIT 1\n    Constituent Load (1.1ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 5\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 19 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 6 LIMIT 1\n    Nutrition Load (1.2ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 9 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 7 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 20 LIMIT 1\n    Constituent Load (0.9ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 6\n    Nutrition Load (1.6ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 23 LIMIT 1\n    Nutrition Load (6.5ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 22 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 21 LIMIT 1\n    Nutrition Load (6.5ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 24 LIMIT 1\n    Constituent Load (1.2ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 7\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 25 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 26 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 27 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 28 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 29 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 30 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 31 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 32 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 34 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 33 LIMIT 1\n    Constituent Load (1.2ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 8\n    Nutrition Load (5.7ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 25 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 26 LIMIT 1\n    Nutrition Load (1.4ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 27 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 28 LIMIT 1\n    Nutrition Load (1.1ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 29 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 30 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 31 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 32 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 34 LIMIT 1\n    Nutrition Load (7.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 33 LIMIT 1\n    Constituent Load (1.0ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 9\n    Nutrition Load (1.1ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 23 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 22 LIMIT 1\n    Constituent Load (1.1ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 10\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 25 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 26 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 27 LIMIT 1\n    Nutrition Load (1.1ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 28 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 29 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 30 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 31 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 32 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 33 LIMIT 1\n    Constituent Load (1.0ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 11\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 21 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 35 LIMIT 1\n    Nutrition Load (0.9ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 36 LIMIT 1\n    Nutrition Load (0.8ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 37 LIMIT 1\n    Constituent Load (0.9ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" = 12\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 38 LIMIT 1\n    Nutrition Load (1.0ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" = 17 LIMIT 1  \n\nWith includes, 1 sum, 1 inject:\n\n    Serving Load (1.0ms)  SELECT "servings".* FROM "servings" \n    Constituent Load (3.7ms)  SELECT "constituents".* FROM "constituents" WHERE "constituents"."serving_id" IN (1, 2, 3, 4, 5, 6 , 7, 8, 9, 10, 11, 12)\n    Nutrition Load (3.1ms)  SELECT "nutritions".* FROM "nutritions" WHERE "nutritions"."id" IN (1, 2, 8, 6, 7, 5, 4, 3, 9, 10, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 23, 22, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38)\n'
7345,'rafaelfranca','Postgresql range support\n@tenderlove will add rest range to this pull request later. But for now you can check and tell if i missed something :) or may be if some improvements can be done.'
7323,'rafaelfranca','3.1.8 html_escape gives warnings\nThe fix for #7215 by @spastorino caused #3927 to manifest again and now my tests run spamming with:\n\n```\n/Users/betelgeuse/.rvm/gems/ruby-1.9.3-p125/gems/activesupport-3.1.8/lib/active_support/core_ext/string/output_safety.rb:23: warning: regexp match /.../n against to UTF-8 string\n```'
7316,'rafaelfranca','Backport of "Support cookie jar options for all cookie stores" for 3.2-stable\nIt fixes #3047, #2483.\n\n@rafaelfranca I\'ve backported two commits, first to support jar options on all stores and second to fix issue with re-streaming of cookie jar with the same value. Also I\'ve found that one of the tests in the second commit was wrongly written, so I\'ve corrected that as well.\n\nAll tests pass.'
7306,'rafaelfranca',"increment! doesn't call before_update callback\nRails 3.2.8 breaks several tests we had around ActiveRecord increment / decrement.  Specifically we aren't seeing a before_update callback triggered when we call `record.increment!(:quantity, 1)`.  The documentation says that it skips validation but says nothing about callbacks in general."
7252,'pixeltrix','Text field limits in schema.rb changing on db:migrate with different machines\nRunning rake db:migrate to bring my machine\'s schema up to date with my team\'s just resulted in the following diff to db/schema.rb:\n\n    --- a/db/schema.rb\n    +++ b/db/schema.rb\n    @@ -1046,7 +1046,7 @@\n         t.float    "max_hr"\n         t.float    "calories"\n         t.float    "average_speed"\n    -    t.text     "raw_data",         :limit => 16777215\n    +    t.text     "raw_data",         :limit => 2147483647\n         t.float    "avg_cadence"\n         t.binary   "log_data",         :limit => 16777215\n         t.integer  "challenge_id"\n\nThe last developer to make changes to the schema file has mysql version: "mysql Ver 14.14 Distrib 5.1.55, for apple-darwin10.6.0 (i386) using readline 6.1", and I have  "mysql  Ver 14.14 Distrib 5.1.51, for apple-darwin10.4.0 (i386) using readline 6.1". I\'m trying to find a simpler way to reproduce the issue, but this is as far as I\'ve got in investigating it so far.'
7237,'rafaelfranca','Incorrect integer status using {attribute}_changed? in Rails 3.2.7 \nAfter upgrading from Rails 3.2.6 to 3.2.7, encountered a test failure when evaluating an integer attribute that contained a zero value as changed.  Tested other non-integer values and the _changed? status was correct.  The following is a quick test to reproduce the problem:\n\nFirst obtain an integer attribute from the database table (using postgres in my case):\nr=Review.find_by_issue(11)\nr.issue\n => 11\nr.changes\n => {}\nr.issue = 11\n => 11\nr.changed?\n => false\nr.changes\n => {}\n\nThe above works as it did before in Rails 3.2.6.  The next test using zero has a different behavior:\n\nr=Review.find_by_issue(0)\nr.issue\n => 0\nr.changes\n => {}\nr.issue = 0\n => 0\nr.changed?\n => true\nr.changes\n => {"issue"=>[0,0]}\n\nIt now treats a zero value to the same zero value as a change in Rails 3.2.7.   I also tested this against Rails 3.2.8rc1 and encountered the same problem.'
7234,'guilleiguaran','remote_ip was failing under unix socks (puma)\nwas crashing under puma, needed to ensure we always get an ip even if we are being served over a unix sock where remote_addr is empty'
7172,'fxn',"Bug: ActiveModel Validations sample code in documentation\nLooking at the api documentation on \n\nhttp://api.rubyonrails.org/classes/ActiveModel/Validations.html\n\nDocumentation shows the code as:\n... record.errors.add attr, 'starts with z.' if value.to_s[0] == zz ...\nwhen it is supposed to be \n.... record.errors.add attr, 'starts with z.' if value.to_s[0] == ?z "
7160,'fxn','ActiveRecord cannot be eager loaded without ActionDispatch\nactive_record/session_store.rb references `ActionDispatch::Session::AbstractStore` causing `ActiveSupport::Autoload.eager_autoload!` to error when it is called in a project with ActiveRecord but without ActionPack.'
7144,'pixeltrix','route url defaults take precedence over controller params/url_options\nUsing 3.2.6\n\n```ruby\n#routes.rb\nmatch "/test(/:foo)" => "my_controller#index", :defaults => {:foo => "my_default"}, :as => :test_index\nmatch ":id/test(/:foo)" => "my_controller#show", :defaults => {:foo => "my_default"}, :as => :test_show\n```\n\n```ruby\n# my_controller.rb\n\n# this shouldn\'t even be necessary since url_for takes its context from the controller anyway\ndef url_options\n   super.merge(:foo => params[:foo])\nend\n```\n\nload `/test/something-thats-not-default`\n\n```haml\n-# index.html.haml\n\n=link_to "link text", test_show_path(some_object)\n```\n\nResulting link goes to `1/test/` instead of `1/test/something-thats-not-default`\n\nThis works on the other hand, but seems verbose as i have to drag along parameters everywhere:\n```haml\n =link_to "link text", test_show_path(some_object, :foo => params[:foo])\n```'
7135,'jonleighton','belongs_to and default scope\n```ruby\nclass Plan < ActiveRecord::Base\n  default_scope: { where(\'plans.created_at > 1\') }\nend\nclass Program < ActiveRecord::Base\n  belongs_to :plan\nend\nProgram.first.plan\n  Program Load (0.2ms)  SELECT "programs".* FROM "programs" LIMIT 1\n  Plan Load (0.2ms)  SELECT "plans".* FROM "plans" WHERE "plans"."id" = 1 AND (plans.created_at > 1) LIMIT 1\n => #<Plan id: 1, created_at: "2012-07-19 10:27:57", updated_at: "2012-07-19 10:27:57">\n```\n\nRails 3.2.6 applies default scope on belongs_to relations, but there is no way to apply different scope or unscoped. Something like this would be useful.\n```ruby\n\nbelongs_to :plan, scope: :unscoped\nbelongs_to :plan, scope: :my_scope'
7132,'fxn','Inconsistent inflector behaviour for uncountable words in a multi-word string separated by underscores\n```ruby\n# Single-word + uncountables = no problem!\n"information".singularize # => "information"\n"information".pluralize # => "information"\n\n# Multi-word + spaces + countables = no problem!\n"weird bugs".singularize # => "weird bug"\n"weird bug".pluralize # => "weird bugs"\n\n# Multi-word + spaces + uncountables = no problem!\n"funky jeans".pluralize # => "funky jeans"\n"funky jeans".singularize # => "funky jeans"\n\n# Multi-word + underscores + countables = no problem!\n"weird_bugs".singularize # => "weird_bug"\n"weird_bug".pluralize # => "weird_bugs"\n\n# Multi-word + underscores + uncountables = BOOM!\n"funky_jeans".singularize # => "funky_jean"\n"client_information".pluralize # => "client_informations"\n```\n\nI consider this a bug because...\n1. According to [this test case](https://github.com/rails/rails/blob/master/activesupport/test/inflector_test_cases.rb#L16), pluralizing/singularizing a multi-word string is a supported feature\n2. According to [this test cases](https://github.com/rails/rails/blob/master/activesupport/test/inflector_test_cases.rb#L82), pluralizing/singularizing a multi-word string separated by underscores is a supported feature\n3. [`tableize`](https://github.com/rails/rails/blob/master/activesupport/lib/active_support/inflector/methods.rb#L121) depends on 2.\n4. `"funky_jeans".singularize` used to work before 9b4622a483319f3d1e7f4489442f0d86afb6da36:\n```shell\nmbp:godfrey rails [(no branch)] $ git checkout baebe7d0d5c82cc7bb0570ae7d17a947f9bf58f7\nHEAD is now at baebe7d... Avoid Bundler Resolver bug until they solve the issue\nmbp:godfrey rails [(no branch)] $ irb -Iactivesupport/lib\n>> require \'active_support/all\'\n=> true\n>> \'funky_jeans\'.singularize\n=> "funky_jeans"\n```\n\nHowever, as far as I know, `"client_information".pluralize` have always been (incorrectly) returning `"client_informations"`, meaning that fixing this might break certain apps out there. `singularize` and `pluralize` used to go through different code paths, but 52fa34faee76ca54b1b394ea3a25dfee42491c22 merged them into a single path, so it\'s no longer possible to just fix the bug introduced in 9b4622a483319f3d1e7f4489442f0d86afb6da36 without affecting the other direction as well. (I don\'t think that\'s a very reasonable behaviour anyways.)'
7127,'rafaelfranca','Returning false in around_* callback still firing after_* callbacks?\nWhen returning `false` in an `around_*` callback, this will halt the chain and prevent the method from being executed. However, `after_*` callbacks are still being triggered. This behavior does not occur with `before_*`.\n\nHere is some example code:\n\n```ruby\nrequire \'active_model\'\n\nclass A\n  extend ActiveModel::Callbacks\n  define_model_callbacks :create\n  def create; run_callbacks(:create) { p \'create A\' }; end\n  before_create { false }\n  after_create { p \'not here\' }\nend\n\nclass B\n  extend ActiveModel::Callbacks\n  define_model_callbacks :create\n  def create; run_callbacks(:create) { p \'create B\' }; end\n  around_create { false }\n  after_create { p \'but here?\' }\nend\n\na = A.new; p a.create\nb = B.new; p b.create\n```\n\nThis results in:\n\n```ruby\nfalse\n"but here?"\nnil\n```\n\nThis was tested on both ActiveModel 3.2.6 and ActiveModel on master. Is this a bug or expected behavior?\n\nSee https://github.com/mongoid/mongoid/issues/2198\n'
7118,'rafaelfranca',"option :within in :exclusion validator not recognized\n```ruby\nvalidates :name, :exclusion => { :within => %w(a b c) }\n```\n\nruby-1.9.3-p194@TestApp/gems/activemodel-3.2.3/lib/active_model/validations/exclusion.rb:13:in `check_validity!': An object with the method #include? or a proc or lambda is required, and must be supplied as the :in option of the configuration hash (ArgumentError)\n\nIn the docs it says :within is an alias for :in\nhttp://guides.rubyonrails.org/active_record_validations_callbacks.html#exclusion\n"
7113,'fxn','Add/update some activesupport documentation\n* more complete documentation for module attribute_accessors\n\n* add Module#deprecate documentation'
7064,'josevalim',"Do not eager load models that are observerd\nObservers are one of the few things eager-loading stuff, whereas associations/helpers etc are all lazy.\n\nthis pull adds lazy_observe to Observer, so that models can be observed when they are loaded and not when observers are loaded.\n\nin our app: rails c loads 45 AR models,\nwith lazy_observe this can be reduced to 0\n\nloadtime:\n45 -> 14.2s\n0 -> 12.0s\n\n - faster application startup\n - less memory on startup\n - less db queries on startup\n - gems can do their monkey-patching safely before models are loaded\n - easier to fork+test since less is loaded (spork / spin)\n - can boot an application with a database that is in a bad state (before migration / columns missing etc)\n\nthis pull is still missing tests, I'll convert the tests from https://github.com/grosser/lazy_observers if there is a consensus that this is wanted feature."
7058,'rafaelfranca','Fix tests that depend on run order\n'
7027,'carlosantoniodasilva','Backport 5c51cd0\nFixes #6844.\nThis appears to be a jRuby bug, but it is by-passed by 5c51cd0.\n\nNo tests added because `actionpack/test/controller/send_file_test.rb` `send_file_stream` and `send_file_nostream` both fail under jRuby jruby 1.6.7 (ruby-1.9.2-p312) without this patch.\n'
7026,'rafaelfranca','Fixed bug creating invalid HTML in select options\nWhen a select tag is created for a field with errors, then the inserted\noptions will errantly have a <div class="field_with_errors"> wrapping\nthem.\n\nFixes issue #7017 for master'
7025,'rafaelfranca','Select options valid html\nWhen a select tag is created for a field with errors, and that select\ntag has :prompt or :include_blank options, then the inserted first\noption will errantly have a `<div class="field_with_errors">` wrapping\nit.\n\nFixes issue #7017'
7017,'rafaelfranca','field_with_errors div getting added around default <option> tag\nCame across a strange HTML validation error while updating our app from Rails 3.0.11 to 3.2.6. It seems like if we have a `<select>` tag for a field with both an `:include_blank` option *and* a validation error, the `<div class="field_with_errors">` wrapper will be put around both the `<select>` tag and the first `<option>`.\n\nHere\'s a quick way to reproduce.\n\nAssume a fresh Rails 3.2.6 app with the following model generation:\n\n    rails g model my_model val:string \n\nand the following in `app/models/my_model.rb`:\n\n```ruby\nclass MyModel < ActiveRecord::Base\n  attr_accessible :val\n  validates :val, :presence => true\nend\n```\n\nNow in a `rails console` go:\n\n```irb\n> mm = MyModel.new\n> mm.valid?\n> fb = ActionView::Helpers::FormBuilder.new(\'my_model\', mm, helper, {}, nil)\n> fb.select(:val, [:a, :b], :include_blank => \'select something...\')\n => "<div class=\\"field_with_errors\\"><select id=\\"my_model_val\\" name=\\"my_model[val]\\"><div class=\\"field_with_errors\\"><option value=\\"\\">select something...</option></div>\\n<option value=\\"a\\">a</option>\\n<option value=\\"b\\">b</option></select></div>" \n```\n\nNotice the extra `<div class="field_with_errors">` around the first option? This is not valid HTML, and probably should not be included in the output `<select>` tag.\n\nI\'ve tracked this down to the method `add_options` in the `InstanceTag` class (in the file `lib/action_view/helpers/form_options_helper.rb`) and its use of `content_tag` in order to generate the option for `:include_blank` or `:prompt`. It seems like `ActionView::Helpers::ActiveModelHelper` wraps `content_tag` so that it calls `error_wrapping` around generated tags, thus causing the errant `<div>` around the first option.\n\nI\'d be happy to submit a patch for a fix, but I\'d like some guidance on where/how to best fix this. I can think of a few ways to fix this, in order of my personal preference:\n\n1. Have `add_options` call `content_tag_string` rather than `content_tag` -- `content_tag_string` is just a thin wrapper around `content_tag` and is not wrapped so as to call `error_wrapping`.\n2. Add an extra option to `content_tag` (called maybe `:wrap_errors`) that if present and false will cause `error_wrapping` in `ActionView::Helpers::ActiveModelHelper` to be skip creating the wrapper `div`.\n3. Change `error_wrapping` in `ActionView::Helpers::ActiveModelHelper` to be aware of and skip `<option>` tags\n4. Change `@@field_error_proc` in `ActionView::Base` to explicitly not wrap `<option>` tags\n\nThanks for listening, looking forward to some feedback!\n\n'
6975,'pixeltrix',"Incorrect changed for datetimes in mysql adapters\nHi guys, I've found a similar issue of #6591 in current rails 3-2-stable. Adding the following test to activerecord/test/cases/dirty_test.rb\n\n```ruby\n  def test_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_change\n    in_time_zone 'Paris' do\n      target = Class.new(ActiveRecord::Base)\n      target.table_name = 'pirates'\n\n      created_on = Time.now\n\n      pirate = target.create(:created_on => created_on)\n      pirate.reload # Here mysql truncate the usec value to 0\n\n      pirate.created_on = created_on\n      assert !pirate.created_on_changed?\n    end\n  end\n```\n\nI getting the following:\n\n```sh\nARCONN=mysql2 ruby -Itest test/cases/dirty_test.rb -n test_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_changeUsing mysql2 with Identity Map off\nRun options: -n test_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_change\n\n# Running tests:\n\nF\n\nFinished tests in 0.087599s, 11.4157 tests/s, 11.4157 assertions/s.\n\n  1) Failure:\ntest_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_change(DirtyTest) [test/cases/dirty_test.rb:104]:\nFailed assertion, no message given.\n\n1 tests, 1 assertions, 1 failures, 0 errors, 0 skips\n```\n\n```sh\nARCONN=sqlite3 ruby -Itest test/cases/dirty_test.rb -n test_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_change\nUsing sqlite3 with Identity Map off\nRun options: -n test_setting_time_attributes_with_time_zone_field_to_same_time_should_not_be_marked_as_a_change\n\n# Running tests:\n\n.\n\nFinished tests in 0.058396s, 17.1245 tests/s, 17.1245 assertions/s.\n\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n````\n\nI have a clue in why this is happening due to the lack of precision of the Mysql databases. Mysql does not save micro seconds\n\nThanks in advance "
6959,'josevalim',"Add few information on the field types\nHello\n\nI found more useful to see the abilities of the command line tools Rails provides so I decided to add more information on the options we can specify when we generate our models.\n\nI hope it's useful\n\nHave a nice day."
6952,'NZKoz','Add ActiveSupport::KeyGenerator as a simple wrapper around PBKDF2\nAs part of the changes for Rails4 we want to sort out all the cryptography related things we have in place right now.  The first part of this will be to add PBKDF2 for key derivation, then we can switch the session store and cookies.signed to use derived keys instead of using the bare secret.\n\nSimilarly future functionality like encrypted cookies / sessions can utilize derived keys.\n\nSo before merging I want to get some feedback from @meder and @thaidn on the particulars of our implementation.  In particular, what are suitable default values for `iterations` and `key_size`.\n\nThis is a pre-requisite for #3955 #5034 and possibly others.\n\nNote to other committers: Please leave this one for me to merge'
6933,'drogus','SCRIPT_NAME for main_app is ignored when URL helpers are called by isolated engine\nSay I have a Rails app mapped to /foo via my config.ru like so...\n\n```ruby\nmap "/foo" do\n  run Foo::Application\nend\n```\n\nThis mostly works and I am able to log into rails_admin (mounted at `/ra`, accessed via `/foo/ra`) but I am unable to log out again because the URL for the log out button is just `/admins/sign_out` instead of `/foo/admins/sign_out`. This URL is the result of...\n\n```ruby\nmain_app.send("destroy_#{devise_scope}_session_path")\n```\n\nI didn\'t see anything immediately wrong with this and indeed, if I run it inside one of my own controllers, it returns the correct result. I did a lot of digging and found that the decision on whether to insert the prefix is made in `actionpack/lib/action_controller/metal/url_for.rb`.\n\n```ruby\n      if _routes.equal?(env["action_dispatch.routes"])\n        @_url_options.dup.tap do |options|\n          options[:script_name] = request.script_name.dup\n          options.freeze\n        end\n      else\n        @_url_options\n      end\n```\n\nThe check seems to establish whether we are generating a URL for this application/engine or another. It is necessary because otherwise it would return `/foo/ra/admins/sign_out` and that would also be wrong. We need some way of accessing the other application\'s SCRIPT_NAME so that can be prepended instead but I can\'t think of any way to do it.'
6931,'fxn','YY::XX always references XX if XX was defined\n``` ruby\n# app/models/auth.rb\nclass Auth < ActiveRecord::Base; end\n# app/models/auth/twitter.rb\nclass Auth::Twitter < Auth; end\n\n# in console\n>> Auth::Twitter\n(rib-rails):1: warning: toplevel constant Twitter referenced by Auth::Twitter\n=> Twitter # expect to be Auth::Twitter that defines in app/models/auth/twitter.rb\n```\n\nanother example:\n\n``` ruby\n# app/models/user.rb\nclass User < ActiveRecord::Base; end\n\n# in console\n>> User::User::User::User::User::User::User::User::User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n(rib-rails):1: warning: toplevel constant User referenced by User::User\n=> User(...)\n```'
6920,'rafaelfranca','Reference statements\nAdd references schema statements.\n\nExamples:\n\n    add_reference :products, :supplier, polymorphic: true, index: true\n    remove_reference :products, :supplier\n\n`add_belongs_to`, `remove_reference` and `remove_references` are\nacceptable. `add_reference` is reversible.\n\nRelies on #6914'
6914,'rafaelfranca','Refactor migration test_helper\nand rename column test'
6903,'guilleiguaran','Replace deprecated `memcache-client` gem with `dalli` in ActiveSupport::Cache::MemCacheStore\nmemcache-client was deprecated in favour of dalli in 2010.\n\nThe purpose of this PR is offer a better upgrade path for current users of  mem_cache_store as was suggested by @jeremy (https://github.com/rails/rails/pull/6296#issuecomment-5754159)'
6896,'fxn',"ActiveSupport 3.2.6 modular extensions missing require\nSee https://gist.github.com/3012323\n\nWith ActiveSupport 3.2.3 I was able to require the `active_support/core_ext/numeric/time` by itself to get access to things like `4.minutes.ago`, but doing the same in 3.2.6 throws an error in the `ago` method presumable because `active_support/core_ext/time/zones` is never required.\n\nI tried for a bit to locate the appropriate location for the statement, but I'm not very familiar with the Rails source. I figured its an easy fix for someone who is..."
6884,'fxn','require \'active_support/duration\' loads a broken inflector\nThis is certainly not the only case I\'ve seen where you can end up with a broken inflector, but this is the first case that has affected me personally.  By "broken", I mean a situation where the string inflection methods are defined, but the inflection rules are not, so that singularize and pluralize just return the string as is.\n\nHere\'s are some examples.  First, the default case, where nothing has been loaded: \n\n    $ ruby -e "p \'foo\'.pluralize"\n    -e:1:in `<main>\': undefined method `pluralize\' for "foo":String (NoMethodError)\n\nNext, the case where the inflector is loaded, where it pluralizes correctly:\n\n    $ ruby -ractive_support/inflector -e "p \'foo\'.pluralize"\n    "foos"\n\nFinally, the case where the duration class is loaded, which apparently loads the inflection methods without the default inflections:\n\n    $ ruby -ractive_support/duration -e "p \'foo\'.pluralize"\n    "foo"\n\nThere are two possibilities to fix this:\n\n1) Don\'t load the inflector when the duration class is loaded.   I think that Duration#inspect uses the inflections, so that would have to be modified if you go this route.\n\n2) Make it impossible to load the string inflection methods without the default inflections.  This should probably done anyway, as I\'ve seen numerous people bitten by this.  This can be fixed by changing lib/active_support/core_ext/string/inflections.rb to require \'active_support/inflector\' instead of  \'active_support/inflector/methods\' and \'active_support/inflector/transliterate\'.\n\nNote that I\'ve not tested master, only 3.2.6.  However, looking at the source code, the problem appears to exist in master as well.  After master is fixed, the fix should be backported to 3.2-stable.'
6874,'rafaelfranca','Rename default sequence when table is renamed? [AR:postgres]\nDoes it make sense to rename the default primary key sequence when a table is renamed?\n\nAs it is, if I ```rename_table :foo, :bar```, I end up with a table named "bar" whose id column is incremented by a sequence named "foo_id_seq". The names being out of sync complicates things when multiple DB users are used in production (e.g. one user for migrations and one user for app connections) and permissions need to be applied to tables and their associated sequences.\n\nAttached is proposed crazy sauce which renames the primary key sequence if its name matches the default PK sequence created by the adapter.'
6869,'jonleighton','Remove ActiveRelation#inspect\nBefore this gets rejected outright I would like to have a conversation.\n\nI submit that the harm of hiding the ActiveRelation object outweighs any benefit gained in the Rails console with having the object inspect `#to_a`\n\nI know others feel the same way, I believe it is not worth the hassle of trying to dig into the Relation object to find out what is going on and just have it return that relation.'
6863,'fxn','Guide update for Async ActionMailer\n'
6826,'drogus','Simplify AV.prepare\nMove all helper and routes logic into the AbstractController instead of letting the view decide which modules to include.\n\nThis is another step in decoupling view and controller.'
6819,'kennyj','test_schema_dump_with_table_name_prefix_and_suffix got failed with Oracle\ntest_schema_dump_with_table_name_prefix_and_suffix got failed with Oracle\n\n```ruby\n$  ARCONN=oracle ruby -Itest test/cases/schema_dumper_test.rb -n test_schema_dump_with_table_name_prefix_and_suffix\nUsing oracle\nRun options: -n test_schema_dump_with_table_name_prefix_and_suffix --seed 15767\n\n# Running tests:\n\nF\n\nFinished tests in 4.543312s, 0.2201 tests/s, 1.3206 assertions/s.\n\n  1) Failure:\ntest_schema_dump_with_table_name_prefix_and_suffix(SchemaDumperTest) [test/cases/schema_dumper_test.rb:328]:\nExpected /create_table "schema_migrations"/ to not match "# encoding: UTF-8\\n# This file is auto-generated from the current state of the database. Instead\\n# of editing this file, please use the migrations feature of Active Record to\\n# incrementally modify your database, and then regenerate this schema definition.\\n#\\n# Note that this schema.rb definition is the authoritative source for your\\n# database schema. If you need to create the application database on another\\n# system, you should be using db:schema:load, not running all the migrations\\n# from scratch. The latter is a flawed and unsustainable approach (the more migrations\\n# you\'ll amass, the slower it\'ll run and the greater likelihood for issues).\\n#\\n# It\'s strongly recommended that you check this file into your version control system.\\n\\nActiveRecord::Schema.define(:version => 0) do\\n\\n  create_table \\"CamelCase\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"accounts\\", :force => true do |t|\\n    t.integer \\"firm_id\\",      :precision => 38, :scale => 0\\n    t.string  \\"firm_name\\"\\n    t.integer \\"credit_limit\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"admin_accounts\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"admin_users\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.text    \\"settings\\"\\n    t.string  \\"preferences\\",     :limit => 1024,                                :default => \\"\\"\\n    t.string  \\"json_data\\",       :limit => 1024\\n    t.string  \\"json_data_empty\\", :limit => 1024,                                :default => \\"\\"\\n    t.integer \\"account_id\\",                      :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"aircraft\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"audit_logs\\", :force => true do |t|\\n    t.string  \\"message\\",                                                 :null => false\\n    t.integer \\"developer_id\\",             :precision => 38, :scale => 0, :null => false\\n    t.integer \\"unvalidated_developer_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"author_addresses\\", :force => true do |t|\\n  end\\n\\n  create_table \\"author_favorites\\", :force => true do |t|\\n    t.integer \\"author_id\\",          :precision => 38, :scale => 0\\n    t.integer \\"favorite_author_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"authors\\", :force => true do |t|\\n    t.string  \\"name\\",                                                   :null => false\\n    t.integer \\"author_address_id\\",       :precision => 38, :scale => 0\\n    t.integer \\"author_address_extra_id\\", :precision => 38, :scale => 0\\n    t.string  \\"organization_id\\"\\n    t.string  \\"owned_essay_id\\"\\n  end\\n\\n  create_table \\"auto_id_tests\\", :primary_key => \\"auto_id\\", :force => true do |t|\\n    t.integer \\"value\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"binaries\\", :force => true do |t|\\n    t.string \\"name\\"\\n    t.binary \\"data\\"\\n    t.binary \\"short_data\\"\\n  end\\n\\n  create_table \\"birds\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.string  \\"color\\"\\n    t.integer \\"pirate_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"books\\", :force => true do |t|\\n    t.integer \\"author_id\\", :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n  end\\n\\n  create_table \\"booleans\\", :force => true do |t|\\n    t.boolean \\"value\\",   :precision => 1, :scale => 0\\n    t.boolean \\"has_fun\\", :precision => 1, :scale => 0, :default => false, :null => false\\n  end\\n\\n  create_table \\"bulbs\\", :force => true do |t|\\n    t.integer \\"car_id\\",         :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n    t.boolean \\"frickinawesome\\", :precision => 1,  :scale => 0\\n    t.string  \\"color\\"\\n  end\\n\\n  create_table \\"cars\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"engines_count\\", :precision => 38, :scale => 0\\n    t.integer \\"wheels_count\\",  :precision => 38, :scale => 0\\n    t.integer \\"lock_version\\",  :precision => 38, :scale => 0, :default => 0, :null => false\\n  end\\n\\n  create_table \\"categories\\", :force => true do |t|\\n    t.string  \\"name\\",                                                 :null => false\\n    t.string  \\"type\\"\\n    t.integer \\"categorizations_count\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"categories_posts\\", :id => false, :force => true do |t|\\n    t.integer \\"category_id\\", :precision => 38, :scale => 0, :null => false\\n    t.integer \\"post_id\\",     :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  create_table \\"categorizations\\", :force => true do |t|\\n    t.integer \\"category_id\\",         :precision => 38, :scale => 0\\n    t.string  \\"named_category_name\\"\\n    t.integer \\"post_id\\",             :precision => 38, :scale => 0\\n    t.integer \\"author_id\\",           :precision => 38, :scale => 0\\n    t.boolean \\"special\\",             :precision => 1,  :scale => 0\\n  end\\n\\n  create_table \\"circles\\", :force => true do |t|\\n  end\\n\\n  create_table \\"citations\\", :force => true do |t|\\n    t.integer \\"book1_id\\", :precision => 38, :scale => 0\\n    t.integer \\"book2_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"clubs\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"category_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"cold_jokes\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"collections\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"colnametests\\", :force => true do |t|\\n    t.integer \\"references\\", :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  create_table \\"comments\\", :force => true do |t|\\n    t.integer \\"post_id\\",                        :precision => 38, :scale => 0,                :null => false\\n    t.string  \\"body\\",           :limit => 4000,                                               :null => false\\n    t.string  \\"type\\"\\n    t.integer \\"taggings_count\\",                 :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"children_count\\",                 :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"parent_id\\",                      :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"companies\\", :force => true do |t|\\n    t.string  \\"type\\"\\n    t.string  \\"ruby_type\\"\\n    t.integer \\"firm_id\\",     :precision => 38, :scale => 0\\n    t.string  \\"firm_name\\"\\n    t.string  \\"name\\"\\n    t.integer \\"client_of\\",   :precision => 38, :scale => 0\\n    t.integer \\"rating\\",      :precision => 38, :scale => 0, :default => 1\\n    t.integer \\"account_id\\",  :precision => 38, :scale => 0\\n    t.string  \\"description\\",                                :default => \\"\\"\\n  end\\n\\n  add_index \\"companies\\", [\\"firm_id\\", \\"type\\", \\"rating\\", \\"ruby_type\\"], :name => \\"company_index\\"\\n  add_index \\"companies\\", [\\"firm_id\\", \\"type\\"], :name => \\"company_partial_index\\"\\n\\n  create_table \\"computers\\", :force => true do |t|\\n    t.integer \\"developer\\",        :precision => 38, :scale => 0, :null => false\\n    t.integer \\"extendedWarranty\\", :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  create_table \\"contracts\\", :force => true do |t|\\n    t.integer \\"developer_id\\", :precision => 38, :scale => 0\\n    t.integer \\"company_id\\",   :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"countries\\", :id => false, :force => true do |t|\\n    t.string \\"country_id\\"\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"countries_treaties\\", :id => false, :force => true do |t|\\n    t.string \\"country_id\\", :null => false\\n    t.string \\"treaty_id\\",  :null => false\\n  end\\n\\n  create_table \\"customers\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"balance\\",         :precision => 38, :scale => 0, :default => 0\\n    t.string  \\"address_street\\"\\n    t.string  \\"address_city\\"\\n    t.string  \\"address_country\\"\\n    t.string  \\"gps_location\\"\\n  end\\n\\n  create_table \\"dashboards\\", :id => false, :force => true do |t|\\n    t.string \\"dashboard_id\\"\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"defaults\\", :id => false, :force => true do |t|\\n    t.integer  \\"id\\",                                   :precision => 38, :scale => 0,                                    :null => false\\n    t.datetime \\"modified_date\\"\\n    t.datetime \\"modified_date_function\\"\\n    t.datetime \\"fixed_date\\",                                                          :default => \'2004-01-01 00:00:00\'\\n    t.datetime \\"modified_time\\"\\n    t.datetime \\"modified_time_function\\"\\n    t.datetime \\"fixed_time\\",                                                          :default => \'2004-01-01 00:00:00\'\\n    t.string   \\"char1\\",                  :limit => 1,                                 :default => \\"Y\\"\\n    t.string   \\"char2\\",                  :limit => 50,                                :default => \\"a varchar field\\"\\n    t.text     \\"char3\\",                                                               :default => \\"a text field\\"\\n    t.integer  \\"positive_integer\\",                     :precision => 38, :scale => 0, :default => 1\\n    t.integer  \\"negative_integer\\",                     :precision => 38, :scale => 0, :default => -1\\n    t.decimal  \\"decimal_number\\",                       :precision => 3,  :scale => 2, :default => 2.78\\n  end\\n\\n  create_table \\"developers\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.integer  \\"salary\\",     :precision => 38, :scale => 0, :default => 70000\\n    t.datetime \\"created_at\\"\\n    t.datetime \\"updated_at\\"\\n  end\\n\\n  create_table \\"developers_projects\\", :id => false, :force => true do |t|\\n    t.integer  \\"developer_id\\", :precision => 38, :scale => 0,                :null => false\\n    t.integer  \\"project_id\\",   :precision => 38, :scale => 0,                :null => false\\n    t.datetime \\"joined_on\\"\\n    t.integer  \\"access_level\\", :precision => 38, :scale => 0, :default => 1\\n  end\\n\\n  create_table \\"dog_lovers\\", :force => true do |t|\\n    t.integer \\"trained_dogs_count\\", :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"bred_dogs_count\\",    :precision => 38, :scale => 0, :default => 0\\n  end\\n\\n  create_table \\"dogs\\", :force => true do |t|\\n    t.integer \\"trainer_id\\", :precision => 38, :scale => 0\\n    t.integer \\"breeder_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"edges\\", :id => false, :force => true do |t|\\n    t.integer \\"source_id\\", :precision => 38, :scale => 0, :null => false\\n    t.integer \\"sink_id\\",   :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  add_index \\"edges\\", [\\"source_id\\", \\"sink_id\\"], :name => \\"unique_edge_index\\", :unique => true\\n\\n  create_table \\"electrons\\", :force => true do |t|\\n    t.integer \\"molecule_id\\", :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n  end\\n\\n  create_table \\"engines\\", :force => true do |t|\\n    t.integer \\"car_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"entrants\\", :force => true do |t|\\n    t.string  \\"name\\",                                     :null => false\\n    t.integer \\"course_id\\", :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  create_table \\"essays\\", :force => true do |t|\\n    t.string \\"name\\"\\n    t.string \\"writer_id\\"\\n    t.string \\"writer_type\\"\\n    t.string \\"category_id\\"\\n    t.string \\"author_id\\"\\n  end\\n\\n  create_table \\"events\\", :force => true do |t|\\n    t.string \\"title\\", :limit => 5\\n  end\\n\\n  create_table \\"eyes\\", :force => true do |t|\\n  end\\n\\n  create_table \\"faces\\", :force => true do |t|\\n    t.string  \\"description\\"\\n    t.integer \\"man_id\\",                        :precision => 38, :scale => 0\\n    t.integer \\"polymorphic_man_id\\",            :precision => 38, :scale => 0\\n    t.string  \\"polymorphic_man_type\\"\\n    t.integer \\"horrible_polymorphic_man_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"horrible_polymorphic_man_type\\"\\n  end\\n\\n  create_table \\"fk_test_has_fk\\", :force => true do |t|\\n    t.integer \\"fk_id\\", :precision => 38, :scale => 0, :null => false\\n  end\\n\\n  create_table \\"fk_test_has_pk\\", :force => true do |t|\\n  end\\n\\n  create_table \\"dogs\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  add_index \\"dogs\\", [\\"name\\"], :name => \\"index_foo_dogs_bar_on_name\\"\\n\\n  create_table \\"funny_jokes\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"goofy_string_id\\", :id => false, :force => true do |t|\\n    t.string \\"id\\",   :null => false\\n    t.string \\"info\\"\\n  end\\n\\n  create_table \\"guids\\", :force => true do |t|\\n    t.string \\"key\\"\\n  end\\n\\n  create_table \\"inept_wizards\\", :force => true do |t|\\n    t.string \\"name\\", :null => false\\n    t.string \\"city\\", :null => false\\n    t.string \\"type\\"\\n  end\\n\\n  create_table \\"integer_limits\\", :force => true do |t|\\n    t.integer \\"c_int_without_limit\\",              :precision => 38, :scale => 0\\n    t.boolean \\"c_int_1\\",                          :precision => 1,  :scale => 0\\n    t.integer \\"c_int_2\\",             :limit => 2, :precision => 2,  :scale => 0\\n    t.integer \\"c_int_3\\",             :limit => 3, :precision => 3,  :scale => 0\\n    t.integer \\"c_int_4\\",             :limit => 4, :precision => 4,  :scale => 0\\n    t.integer \\"c_int_5\\",             :limit => 5, :precision => 5,  :scale => 0\\n    t.integer \\"c_int_6\\",             :limit => 6, :precision => 6,  :scale => 0\\n    t.integer \\"c_int_7\\",             :limit => 7, :precision => 7,  :scale => 0\\n    t.integer \\"c_int_8\\",             :limit => 8, :precision => 8,  :scale => 0\\n  end\\n\\n  create_table \\"interests\\", :force => true do |t|\\n    t.string  \\"topic\\"\\n    t.integer \\"man_id\\",               :precision => 38, :scale => 0\\n    t.integer \\"polymorphic_man_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"polymorphic_man_type\\"\\n    t.integer \\"zine_id\\",              :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"invoices\\", :force => true do |t|\\n    t.integer  \\"balance\\",    :precision => 38, :scale => 0\\n    t.datetime \\"updated_at\\"\\n  end\\n\\n  create_table \\"iris\\", :force => true do |t|\\n    t.integer \\"eye_id\\", :precision => 38, :scale => 0\\n    t.string  \\"color\\"\\n  end\\n\\n  create_table \\"items\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"jobs\\", :force => true do |t|\\n    t.integer \\"ideal_reference_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"keyboards\\", :primary_key => \\"key_number\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"legacy_things\\", :force => true do |t|\\n    t.integer \\"tps_report_number\\", :precision => 38, :scale => 0\\n    t.integer \\"version\\",           :precision => 38, :scale => 0, :default => 0, :null => false\\n  end\\n\\n  create_table \\"lessons\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"lessons_students\\", :id => false, :force => true do |t|\\n    t.integer \\"lesson_id\\",  :precision => 38, :scale => 0\\n    t.integer \\"student_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"line_items\\", :force => true do |t|\\n    t.integer \\"invoice_id\\", :precision => 38, :scale => 0\\n    t.integer \\"amount\\",     :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"lint_models\\", :force => true do |t|\\n  end\\n\\n  create_table \\"liquid\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"lock_without_defaults\\", :force => true do |t|\\n    t.integer \\"lock_version\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"lock_without_defaults_cust\\", :force => true do |t|\\n    t.integer \\"custom_lock_version\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"mateys\\", :id => false, :force => true do |t|\\n    t.integer \\"pirate_id\\", :precision => 38, :scale => 0\\n    t.integer \\"target_id\\", :precision => 38, :scale => 0\\n    t.integer \\"weight\\",    :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"member_details\\", :force => true do |t|\\n    t.integer \\"member_id\\",       :precision => 38, :scale => 0\\n    t.integer \\"organization_id\\", :precision => 38, :scale => 0\\n    t.string  \\"extra_data\\"\\n  end\\n\\n  create_table \\"member_types\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"members\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"member_type_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"memberships\\", :force => true do |t|\\n    t.datetime \\"joined_on\\"\\n    t.integer  \\"club_id\\",   :precision => 38, :scale => 0\\n    t.integer  \\"member_id\\", :precision => 38, :scale => 0\\n    t.boolean  \\"favourite\\", :precision => 1,  :scale => 0, :default => false\\n    t.string   \\"type\\"\\n  end\\n\\n  create_table \\"men\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"minimalistics\\", :force => true do |t|\\n  end\\n\\n  create_table \\"minivans\\", :id => false, :force => true do |t|\\n    t.string \\"minivan_id\\"\\n    t.string \\"name\\"\\n    t.string \\"speedometer_id\\"\\n    t.string \\"color\\"\\n  end\\n\\n  create_table \\"mixed_case_monkeys\\", :primary_key => \\"monkeyID\\", :force => true do |t|\\n    t.integer \\"fleaCount\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"mixins\\", :force => true do |t|\\n    t.integer  \\"parent_id\\",  :precision => 38, :scale => 0\\n    t.integer  \\"pos\\",        :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\"\\n    t.datetime \\"updated_at\\"\\n    t.integer  \\"lft\\",        :precision => 38, :scale => 0\\n    t.integer  \\"rgt\\",        :precision => 38, :scale => 0\\n    t.integer  \\"root_id\\",    :precision => 38, :scale => 0\\n    t.string   \\"type\\"\\n  end\\n\\n  create_table \\"molecules\\", :force => true do |t|\\n    t.integer \\"liquid_id\\", :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n  end\\n\\n  create_table \\"movies\\", :primary_key => \\"movieid\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"non_poly_ones\\", :force => true do |t|\\n  end\\n\\n  create_table \\"non_poly_twos\\", :force => true do |t|\\n  end\\n\\n  create_table \\"numeric_data\\", :force => true do |t|\\n    t.decimal \\"bank_balance\\",                              :precision => 10, :scale => 2\\n    t.decimal \\"big_bank_balance\\",                          :precision => 15, :scale => 2\\n    t.integer \\"world_population\\",            :limit => 10, :precision => 10, :scale => 0\\n    t.integer \\"my_house_population\\",         :limit => 2,  :precision => 2,  :scale => 0\\n    t.decimal \\"decimal_number_with_default\\",               :precision => 3,  :scale => 2, :default => 2.78\\n    t.decimal \\"temperature\\"\\n    t.integer \\"atoms_in_universe\\",                         :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"orders\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"billing_customer_id\\",  :precision => 38, :scale => 0\\n    t.integer \\"shipping_customer_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"organizations\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"owners\\", :primary_key => \\"owner_id\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.datetime \\"updated_at\\"\\n    t.datetime \\"happy_at\\"\\n    t.datetime \\"eats_at\\"\\n    t.string   \\"essay_id\\"\\n  end\\n\\n  create_table \\"p_schema_migrations_s\\", :id => false, :force => true do |t|\\n    t.string \\"version\\", :null => false\\n  end\\n\\n  add_index \\"p_schema_migrations_s\\", [\\"version\\"], :name => \\"p_unique_schema_migrations_s\\", :unique => true\\n\\n  create_table \\"paint_colors\\", :force => true do |t|\\n    t.integer \\"non_poly_one_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"paint_textures\\", :force => true do |t|\\n    t.integer \\"non_poly_two_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"parrots\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.string   \\"color\\"\\n    t.string   \\"parrot_sti_class\\"\\n    t.integer  \\"killer_id\\",        :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\"\\n    t.datetime \\"created_on\\"\\n    t.datetime \\"updated_at\\"\\n    t.datetime \\"updated_on\\"\\n  end\\n\\n  create_table \\"parrots_pirates\\", :id => false, :force => true do |t|\\n    t.integer \\"parrot_id\\", :precision => 38, :scale => 0\\n    t.integer \\"pirate_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"parrots_treasures\\", :id => false, :force => true do |t|\\n    t.integer \\"parrot_id\\",   :precision => 38, :scale => 0\\n    t.integer \\"treasure_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"people\\", :force => true do |t|\\n    t.string   \\"first_name\\",                                                                    :null => false\\n    t.integer  \\"primary_contact_id\\",              :precision => 38, :scale => 0\\n    t.string   \\"gender\\",             :limit => 1\\n    t.integer  \\"number1_fan_id\\",                  :precision => 38, :scale => 0\\n    t.integer  \\"lock_version\\",                    :precision => 38, :scale => 0, :default => 0, :null => false\\n    t.string   \\"comments\\"\\n    t.integer  \\"best_friend_id\\",                  :precision => 38, :scale => 0\\n    t.integer  \\"best_friend_of_id\\",               :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\",                                                                    :null => false\\n    t.datetime \\"updated_at\\",                                                                    :null => false\\n  end\\n\\n  create_table \\"peoples_treasures\\", :id => false, :force => true do |t|\\n    t.integer \\"rich_person_id\\", :precision => 38, :scale => 0\\n    t.integer \\"treasure_id\\",    :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"pets\\", :primary_key => \\"pet_id\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.integer  \\"owner_id\\",   :precision => 38, :scale => 0\\n    t.integer  \\"integer\\",    :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\",                                :null => false\\n    t.datetime \\"updated_at\\",                                :null => false\\n  end\\n\\n  create_table \\"pirates\\", :force => true do |t|\\n    t.string   \\"catchphrase\\"\\n    t.integer  \\"parrot_id\\",               :precision => 38, :scale => 0\\n    t.integer  \\"non_validated_parrot_id\\", :precision => 38, :scale => 0\\n    t.datetime \\"created_on\\"\\n    t.datetime \\"updated_on\\"\\n  end\\n\\n  create_table \\"posts\\", :force => true do |t|\\n    t.integer \\"author_id\\",                                      :precision => 38, :scale => 0\\n    t.string  \\"title\\",                                                                                        :null => false\\n    t.string  \\"body\\",                           :limit => 4000,                                               :null => false\\n    t.string  \\"type\\"\\n    t.integer \\"comments_count\\",                                 :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"taggings_count\\",                                 :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"taggings_with_delete_all_count\\",                 :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"taggings_with_destroy_count\\",                    :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"tags_count\\",                                     :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"tags_with_destroy_count\\",                        :precision => 38, :scale => 0, :default => 0\\n    t.integer \\"tags_with_nullify_count\\",                        :precision => 38, :scale => 0, :default => 0\\n  end\\n\\n  create_table \\"price_estimates\\", :force => true do |t|\\n    t.string  \\"estimate_of_type\\"\\n    t.integer \\"estimate_of_id\\",   :precision => 38, :scale => 0\\n    t.integer \\"price\\",            :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"products\\", :force => true do |t|\\n    t.integer \\"collection_id\\", :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n  end\\n\\n  create_table \\"projects\\", :force => true do |t|\\n    t.string \\"name\\"\\n    t.string \\"type\\"\\n  end\\n\\n  create_table \\"randomly_named_table\\", :force => true do |t|\\n    t.string  \\"some_attribute\\"\\n    t.integer \\"another_attribute\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"ratings\\", :force => true do |t|\\n    t.integer \\"comment_id\\", :precision => 38, :scale => 0\\n    t.integer \\"value\\",      :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"readers\\", :force => true do |t|\\n    t.integer \\"post_id\\",   :precision => 38, :scale => 0,                    :null => false\\n    t.integer \\"person_id\\", :precision => 38, :scale => 0,                    :null => false\\n    t.boolean \\"skimmer\\",   :precision => 1,  :scale => 0, :default => false\\n  end\\n\\n  create_table \\"references\\", :force => true do |t|\\n    t.integer \\"person_id\\",    :precision => 38, :scale => 0\\n    t.integer \\"job_id\\",       :precision => 38, :scale => 0\\n    t.boolean \\"favourite\\",    :precision => 1,  :scale => 0\\n    t.integer \\"lock_version\\", :precision => 38, :scale => 0, :default => 0\\n  end\\n\\n  create_table \\"schema_migrations\\", :id => false, :force => true do |t|\\n    t.string \\"version\\", :null => false\\n  end\\n\\n  add_index \\"schema_migrations\\", [\\"version\\"], :name => \\"unique_schema_migrations\\", :unique => true\\n\\n  create_table \\"sessions\\", :force => true do |t|\\n    t.string \\"session_id\\"\\n    t.text   \\"data\\"\\n  end\\n\\n  add_index \\"sessions\\", [\\"session_id\\"], :name => \\"index_sessions_on_session_id\\", :unique => true\\n\\n  create_table \\"shape_expressions\\", :force => true do |t|\\n    t.string  \\"paint_type\\"\\n    t.integer \\"paint_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"shape_type\\"\\n    t.integer \\"shape_id\\",   :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"ship_parts\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"ship_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"ships\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.integer  \\"pirate_id\\",             :precision => 38, :scale => 0\\n    t.integer  \\"update_only_pirate_id\\", :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\"\\n    t.datetime \\"created_on\\"\\n    t.datetime \\"updated_at\\"\\n    t.datetime \\"updated_on\\"\\n  end\\n\\n  create_table \\"speedometers\\", :id => false, :force => true do |t|\\n    t.string \\"speedometer_id\\"\\n    t.string \\"name\\"\\n    t.string \\"dashboard_id\\"\\n  end\\n\\n  create_table \\"sponsors\\", :force => true do |t|\\n    t.integer \\"club_id\\",          :precision => 38, :scale => 0\\n    t.integer \\"sponsorable_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"sponsorable_type\\"\\n  end\\n\\n  create_table \\"squares\\", :force => true do |t|\\n  end\\n\\n  create_table \\"string_key_objects\\", :id => false, :force => true do |t|\\n    t.string  \\"id\\"\\n    t.string  \\"name\\"\\n    t.integer \\"lock_version\\", :precision => 38, :scale => 0, :default => 0, :null => false\\n  end\\n\\n  create_table \\"students\\", :force => true do |t|\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"subscribers\\", :id => false, :force => true do |t|\\n    t.string \\"nick\\", :null => false\\n    t.string \\"name\\"\\n  end\\n\\n  add_index \\"subscribers\\", [\\"nick\\"], :name => \\"index_subscribers_on_nick\\", :unique => true\\n\\n  create_table \\"subscriptions\\", :force => true do |t|\\n    t.string  \\"subscriber_id\\"\\n    t.integer \\"book_id\\",       :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"taggings\\", :force => true do |t|\\n    t.integer \\"tag_id\\",        :precision => 38, :scale => 0\\n    t.integer \\"super_tag_id\\",  :precision => 38, :scale => 0\\n    t.string  \\"taggable_type\\"\\n    t.integer \\"taggable_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"comment\\"\\n  end\\n\\n  create_table \\"tags\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"taggings_count\\", :precision => 38, :scale => 0, :default => 0\\n  end\\n\\n  create_table \\"tasks\\", :force => true do |t|\\n    t.datetime \\"starting\\"\\n    t.datetime \\"ending\\"\\n  end\\n\\n  create_table \\"teapots\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.string   \\"type\\"\\n    t.datetime \\"created_at\\", :null => false\\n    t.datetime \\"updated_at\\", :null => false\\n  end\\n\\n  create_table \\"test_oracle_defaults\\", :force => true do |t|\\n    t.string  \\"test_char\\",   :limit => 1,                                 :default => \\"X\\",     :null => false\\n    t.string  \\"test_string\\", :limit => 20,                                :default => \\"hello\\", :null => false\\n    t.integer \\"test_int\\",                  :precision => 38, :scale => 0, :default => 3,       :null => false\\n  end\\n\\n  create_table \\"topics\\", :force => true do |t|\\n    t.string   \\"title\\"\\n    t.string   \\"author_name\\"\\n    t.string   \\"author_email_address\\"\\n    t.datetime \\"written_on\\"\\n    t.datetime \\"bonus_time\\"\\n    t.datetime \\"last_read\\"\\n    t.string   \\"content\\",              :limit => 4000\\n    t.string   \\"important\\",            :limit => 4000\\n    t.boolean  \\"approved\\",                             :precision => 1,  :scale => 0, :default => true\\n    t.integer  \\"replies_count\\",                        :precision => 38, :scale => 0, :default => 0\\n    t.integer  \\"parent_id\\",                            :precision => 38, :scale => 0\\n    t.string   \\"parent_title\\"\\n    t.string   \\"type\\"\\n    t.string   \\"group\\"\\n    t.datetime \\"created_at\\",                                                                            :null => false\\n    t.datetime \\"updated_at\\",                                                                            :null => false\\n  end\\n\\n  create_table \\"toys\\", :primary_key => \\"toy_id\\", :force => true do |t|\\n    t.string   \\"name\\"\\n    t.integer  \\"pet_id\\",     :precision => 38, :scale => 0\\n    t.integer  \\"integer\\",    :precision => 38, :scale => 0\\n    t.datetime \\"created_at\\",                                :null => false\\n    t.datetime \\"updated_at\\",                                :null => false\\n  end\\n\\n  create_table \\"traffic_lights\\", :force => true do |t|\\n    t.string   \\"location\\"\\n    t.string   \\"state\\"\\n    t.datetime \\"created_at\\"\\n    t.datetime \\"updated_at\\"\\n  end\\n\\n  create_table \\"treasures\\", :force => true do |t|\\n    t.string  \\"name\\"\\n    t.integer \\"looter_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"looter_type\\"\\n  end\\n\\n  create_table \\"treaties\\", :id => false, :force => true do |t|\\n    t.string \\"treaty_id\\"\\n    t.string \\"name\\"\\n  end\\n\\n  create_table \\"triangles\\", :force => true do |t|\\n  end\\n\\n  create_table \\"tyres\\", :force => true do |t|\\n    t.integer \\"car_id\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"variants\\", :force => true do |t|\\n    t.integer \\"product_id\\", :precision => 38, :scale => 0\\n    t.string  \\"name\\"\\n  end\\n\\n  create_table \\"vertices\\", :force => true do |t|\\n    t.string \\"label\\"\\n  end\\n\\n  create_table \\"warehouse-things\\", :force => true do |t|\\n    t.integer \\"value\\", :precision => 38, :scale => 0\\n  end\\n\\n  create_table \\"weirds\\", :force => true do |t|\\n    t.string \\"a$b\\"\\n  end\\n\\n  create_table \\"wheels\\", :force => true do |t|\\n    t.integer \\"wheelable_id\\",   :precision => 38, :scale => 0\\n    t.string  \\"wheelable_type\\"\\n  end\\n\\n  create_table \\"zines\\", :force => true do |t|\\n    t.string \\"title\\"\\n  end\\n\\n  add_foreign_key \\"fk_test_has_fk\\", \\"fk_test_has_pk\\", :column => \\"fk_id\\", :name => \\"fk_name\\"\\n\\n  add_foreign_key \\"lessons_students\\", \\"students\\", :name => \\"student_id_fk\\"\\n\\n  add_synonym \\"subjects\\", \\"arunit.topics\\", :force => true\\n\\nend\\n".\n\n1 tests, 6 assertions, 1 failures, 0 errors, 0 skips\n```\n\nIt got failed since this test code initially committed as 211dcdeaa922c74ac20d274308fb5d41ad490194.'
6803,'guilleiguaran','asset digests not updating when corresponding files changed in development mode\nI like to enable asset digests in development mode and a far future cache expiry (via the static_cache_control config variable) to browser-cache unchanged assets.  In 3.2.6, the digests generated by the asset tag helpers (stylesheet_link_tag, javascript_include_tag, image path helpers) do not get updated when the corresponding files are changed locally.  To reproduce:\n\n1) in development.rb, set:\n\n  config.assets.digest = true\n  config.static_cache_control = "public, max-age=3600"\n\n2) load page in browser\n\n3) change contents of one of the asset files you included\n\n4) reload page in browser\n\nThe browser-caching is working, but the digest for whatever file you changed will not get updated (and the browser cache won\'t be busted for the file so it also won\'t get reloaded).  \n\nI\'m looking into a fix but am submitting this because I\'m sure someone more acquainted with the asset pipeline can patch it quicker or point me in the right direction.'
6802,'fxn','plural? and singular? methods for String\nI wanted to know if a string was plural or singular, so I added string extensions.'
6801,'rafaelfranca',"Mailer with no implicit template\nCurrently, if we send an email and use the implicit template with it but not template exists, nothing fails.\nI don't think that's the behavior usually intended.\n\nThis will raise an `ActionView::MissingTemplate` in that case.\nIt already occurs like this when rendering an explicit template."
6800,'jonleighton',"Dynamic finders for aliased attributes\npreviously dynamic finders only worked in combination with the actual column name and not it's alias defined with #alias_attribute"
6773,'pixeltrix','accepts_nested_attributes_for using the third table on a has_many :through association\nI see everywhere that accepts_nested_attributes_for is oriented to nest normal related tables, but what about that third table in a has_many :through association?\n\n```ruby\nclass Member < ActiveRecord::Base\n  has_many :subscriptions, dependent: :delete_all\n  has_many :groups, through: :subscriptions\n\n  attr_accessible :email\n\n  validates :email, presence: true\nend\n\nclass Group < ActiveRecord::Base\n  has_many :subscriptions, dependent: :delete_all\n  has_many :members, through: :subscriptions\n\n  accepts_nested_attributes_for :subscriptions\n\n  attr_accessible :name, :subscriptions_attributes\n\n  validates :name, presence: true, uniqueness: true\nend\n\nclass Subscription < ActiveRecord::Base\n  belongs_to :group\n  belongs_to :member\n\n  attr_accessible :group_id, :introduction\n\n  validates :group_id, presence: true\n  validates :introduction, presence: true\nend\n```\n\nI need to create a new group and a subscription for the current member at the same time, so I need to nest the ```introduction``` attribute inside the group form. I think that is not possible in Rails (no one seems to know about it, I already asked in the official group), am I wrong or should this be supported?\n\nHere I have a sample app that demonstrates the issue: https://github.com/idavemm/nested_form'
6745,'spastorino','SignedCookieJar and PermanentCookieJar properly delegate everything to parent_jar\nEarlier it was not possible to do cookies.signed.delete or cookies.permanent.clear, cause this and other methods were not properly delegated to parent jar and were called on SignedCookieJar (or PermanentCookieJar) itself, which raised errors. Now SignedCookieJar and PermanentCookieJar can be used anywhere, where regular CookieJar is acceptable.'
6739,'fxn','Deprecate update_attribute\nHistorically, update_attribute and update_attributes are similar, but\nwith one big difference: update_attribute does not run validations.\nThese two methods are really easy to confuse given their similar\nnames. Therefore, update_attribute is being deprecated in favor of\nupdate_column, and will be removed in Rails 4.\n\nSee the discussion on rails-core here:\nhttps://groups.google.com/d/topic/rubyonrails-core/BWPUTK7WvYA/discussion'
6738,'fxn','Remove update_attribute.\nHistorically, update_attribute and update_attributes are similar, but\nwith one big difference: update_attribute does not run validations.\nThese two methods are really easy to confuse given their similar\nnames. Therefore, update_attribute is being removed in favor of\nupdate_column.\n\nSee the thread on rails-core here:\nhttps://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/BWPUTK7WvYA'
6729,'guilleiguaran',"Js include tag fix\nIn a production environment where the assets have been precompiled, we\ndon't want an assets compile step to happen on the application server at\nall. To ensure this, a js runtime may not be available on the app\nservers. In this environment, pages using javascript_include_tag for\nassets with non-standard or chained extensions were throwing 500 errors.\nFor instance, `javascript_include_tag('jquery.min')` would blow up.\n\nSprockets was attempting to build the assets being included during the\nrewrite_extension step (responsible for appending a '.js' extension to\nassets being included by the basename rather than a fully qualified\nname). This was happening as a step to resolve #6310, which required\nchecking for the presence of an asset with a non-standard extension\nbefore appending the extension.\n\nWe can check for the presence of an asset without invoking the asset\nbuild step by using Sprockets' resolve method, which will search for the\nbase file without building it (and is the method that find_asset uses\ninternally to get the path to the asset before attempting to build it).\n\nWhen rewriting the extension on an asset, these are the steps:\n- If the source does not have an extension, assume that the default\n  extension is desired and append it.\n- If there is an extension and it doesn't match the default extension,\n  check to see if a file with the precise name specified exists amongst\n  the assets; if it is present, do not append the default extension.\n  (This is the step that resolves #6310).\n"
6697,'fxn','Documentation for where method on relations\nhttps://groups.google.com/d/topic/rubyonrails-core/IquCr3-vNVE/discussion generated some good discussion, but also some plain noise because the "where" method in Active Record isn\'t documented.\n\nI decided to fix that. This commit adds rdoc for #where, based on both the Rails Guide and a perusal of the Active Record test suite. I\'m opening a pull request, rather than just committing to docrails, because I want some input on style and substance for documenting this important method.\n\nI also found examples in the test suite of condition templates like this:\n\n    User.where("field = \'%s\'", "value")\n\nI don\'t see this printf-style mentioned anywhere in the guides or other external documentation; I\'m wondering if it\'s still valid/considered in good taste. If it is, then I\'d appreciate a pointer to which %-escapes are supported.\n\n'
6654,'tenderlove','Postgresql auto reconnect 2\nFixes not-quite-working PostgreSQL auto-reconnection on `Connection#verify!` and puts test coverage in place so that it should continue to work.'
6652,'pixeltrix','seconds_since_unix_epoch inaccurate at distant dates\nRails DateTime.to_f does not give the correct seconds since the unix epoch at dates far in the past\n\nRecent dates work fine,\n\n```ruby\ndate = DateTime.parse("Fri, 23 Mar 1996 12:26:40")\nTime.at(date.to_f) == date # true\n```\n\nDistant dates do not\n\n```ruby\ndate = DateTime.parse("Fri, 23 Mar 1336 12:26:40")\nTime.at(date.to_f) == date # false\n```\n\nThe native Ruby Time implementation of the seconds since epoch does work \n\n```ruby\ndate = Time.parse("Fri, 23 Mar 1336 12:26:40")\nTime.at(date.to_f) == date # true\n```'
6651,'pixeltrix','Time object\'s offset gets screwed up in certain circumstances\nRuby\'s `Time#getlocal` takes a UTC offset and returns a time object with an adjusted UTC offset (but no named zone). Such objects have funny behavior in the following circumstances when interacting with ActiveSupport functionality\n\n`+` method:\n\n```ruby\n> Time.parse("2012-01-01T00:00Z").getlocal("-08:00") # normal\n=> 2011-12-31 16:00:00 -0800\n> Time.parse("2012-01-01T00:00Z").getlocal("-08:00") + 0 # normal\n=> 2011-12-31 16:00:00 -0800\n> Time.parse("2012-01-01T00:00Z").getlocal("-08:00") + 0.days # wtf\n=> 2011-12-31 16:00:00 -0500\n```\n\n`change` method:\n\n```ruby\n> Time.parse("2012-01-01T00:00Z").getlocal("-08:00") # normal\n=> 2011-12-31 16:00:00 -0800\n> Time.parse("2012-01-01T00:00Z").getlocal("-08:00").change(:min => 59) # wtf\n=> 2011-12-31 16:59:00 -0500\n```'
6614,'rafaelfranca',"Remove `:confirm` in favor of `:data => { :confirm => 'Text' }` option\nJust like [683fc4d](https://github.com/rails/rails/commit/683fc4db00f496e5225928afb4d4e932e0fcdc48) this removes the :confirm option.\n\n/cc @rafaelfranca\n\nThe PR adding the deprecation is #6613"
6613,'rafaelfranca',"Deprecate `:confirm` in favor of `:data => { :confirm => 'Text' }` option\nJust like [21141e7](https://github.com/rails/rails/commit/21141e777bdce8534e3755c8de7268324b3d8714) this PR deprecates the `:confirm` option.\n\n/cc @rafaelfranca\n\nRelated to #6614"
6609,'jonleighton','Regression in 3.2.5: collection.clear does not call after_remove callback\nIn previous Rails versions (in Rails 2.3.x and up to Rails 3.2.3 at least), calling collection.clear for a HABTM association used to trigger after_remove callbacks. It\'s no longer the case with Rails 3.2.5.\n\n```ruby\nclass Developer < ActiveRecord::Base\n  has_and_belongs_to_many :projects\nend\n\nclass Project < ActiveRecord::Base\n  has_and_belongs_to_many :developers, :after_add => :developer_added, :after_remove => :developer_removed\n  \n  def developer_added(developer)\n    puts "#{developer.name} added"\n  end\n  \n  def developer_removed(developer)\n    puts "#{developer.name} removed"\n  end\nend\n\np = Project.create!(:name => \'Test\')\nd = Developer.create!(:name => \'John\')\np.developers << d\np.developers.clear\n```\n\nWith Rails 3.2.3, will output:\nJohn added\nJohn removed\n\nWith Rails 3.2.5, will output:\nJohn added\n\nIn both cases, the association is cleared.'
6600,'jonleighton',"4.0's ActiveRecord::DeprecationProxy doesn't handle extend/include\nHi - I've been starting to experiment with 4.0 and ran into a lot of problems with ActiveRecord plugins.  It seems a pretty common pattern to have an on_load hook along the lines of : \n\n```ruby\nActiveSupport.on_load(:active_record) do\n  include MyAwesomeStuff\nend\n```\n\nThe deprecation proxy (https://github.com/rails/rails/blob/master/activerecord/lib/active_record/model.rb#L82) doesn't handle this properly - it ends up including MyAwesomeStuff into the DeprecationProxy module, which isn't very useful.  (We undef all instance_methods from the module, but that doesn't include the 'include' method, since it's private.)    Perhaps add this ? - \n\n```diff\n\ndiff --git a/activerecord/lib/active_record/model.rb b/activerecord/lib/active_record/model.rb\nindex 105d1e0..265878b 100644\n--- a/activerecord/lib/active_record/model.rb\n+++ b/activerecord/lib/active_record/model.rb\n@@ -82,6 +82,7 @@ module ActiveRecord\n     module DeprecationProxy #:nodoc:\n       class << self\n         instance_methods.each { |m| undef_method m unless m =~ /^__|^object_id$|^instance_eval$/ }\n+        undef_method :include\n \n         def method_missing(name, *args, &block)\n           if Model.respond_to?(name)\n```\n\nto catch that case?\n\n<hr/>\n\n\nThen there's plugins that add class methods to ActiveRecord, via 'extend'.  Both of these approaches : \n\n```ruby\nActiveSupport.on_load(:active_record) do\n  extend MyAwesomeClassStuff\nend\n```\n\n```ruby\nmodule MyAwesomeStuff\n  def self.included(base)\n    base.extend(MyAwesomeClassStuff)\n  end\nend\n\nActiveSupport.on_load(:active_record) do\n  include MyAwesomeStuff\nend\n```\n\nare doomed to fail, since they're extending stuff into the Model module, which won't then be available as class methods in ActiveRecord::Base subclasses.\n\n<hr/>\n\nI'm mostly just putting this up as a request for comments - some breakage with 4.0 is probably inevitable, I'm just trying to figure out if we want to try to make these sort of approaches work with 4.0 (with deprecation warnings), or whether we just force plugin authors to update.\n\n\n\nPresumably the correct fix is : \n\n```ruby\nActiveSupport.on_load(:active_record) do\n  ActiveRecord::Base.send :include, MyAwesomeStuff\n  ActiveRecord::Base.send :extend, MyAwesomeClassStuff\nend\n```\n\n?  Or are you leaning towards plugins not automagically messing with ActiveRecord at all, and users should be manually include plugins they're interested in - \n\n```ruby\nclass User < ActiveRecord::Base\n  include ActsAsActingActuary::ActiveRecordMagic\n  acts_as_acting_actuary :foo\nend\n```\n?"
6598,'drogus','Regression in v3.2.5: precompiled assets aren\'t correctly found when using assets that have more than one extension\nI upgraded from Rails 3.2.3 to Rails 3.2.5. When doing so, Heroku now complains that one of my assets, ending in ".min.js", isn\'t compiled, and errors out.\n\nMy `config/application.rb` contains:\n\n```ruby\n    # JavaScript files to include in :defaults expansion\n    config.action_view.javascript_expansions[:defaults] = %w{rails modernizr-1.7.min}\n\n    config.assets.initialize_on_precompile = false\n    config.assets.precompile += [\n# ...\n      "screen/libs/modernizr-1.7.min.js",\n# ...\n    ]\n```\n\nWhen I hit any page in my application, I get:\n\n```\nActionView::Template::Error (screen/libs/modernizr-1.7.min isn\'t precompiled):\n    12: \n    13:   = stylesheet_link_tag "screen"\n    14:\n    15:   = javascript_include_tag "screen/libs/modernizr-1.7.min"\n    16: \n```\n\nPart of the Heroku deployment process already runs `rake assets:precompile`, though:\n\n```\n-----> Preparing app for Rails asset pipeline\n       Running: rake assets:precompile\n```\n\nand nothing\'s changed about that in my 3.2.5 upgrade. Additionally, the precompiled assets are there on disk in the expected locations, and those locations are the same as they were before.\n\nThis is likely to be a 3.2.5 regression.'
6585,'pixeltrix','Rails 3.2.5 breaks Redmine 2.0.1\n```\nStarted GET "/issues/43" for 195.135.221.2 at Fri Jun 01 15:12:44 +0200 2012\nProcessing by IssuesController#show as HTML\n  Parameters: {"id"=>"43"}\n  Rendered issues/_action_menu.html.erb (6.2ms)\n  Rendered issues/show.html.erb within layouts/base (12.5ms)\nCompleted 500 Internal Server Error in 325ms\n\nActionController::RoutingError (No route matches {:controller=>"issues", :id=>nil, :action=>"show"}):\n  app/views/issues/show.html.erb:17:in `_app_views_issues_show_html_erb__902631651_70179852102700\'\n  app/controllers/issues_controller.rb:118:in `show\'\n  app/controllers/issues_controller.rb:115:in `show\'\n```\n\nDowngrading to 3.2.3 fixes the issue again.'
6581,'pixeltrix','Properly add duration parts\nFixes the issues reported by #6559'
6559,'pixeltrix','ActiveSupport::Duration == is misleading (OR parts don\'t combine correctly)\nExample:\n``` irb\nirb(main):001:0> a = 1.month\n=> 1 month\nirb(main):002:0> a = 2.months\n=> 2 months\nirb(main):003:0> b = 1.month + 1.month\n=> 2 months\nirb(main):004:0> a==b\n=> true\nirb(main):005:0> Date.new(2012,1,31) + a\n=> Sat, 31 Mar 2012\nirb(main):006:0> Date.new(2012,1,31) + b\n=> Thu, 29 Mar 2012\n```\n\nDetails:\nThe equality code only compares the "value", but as shown here, "parts" is different\n``` irb\nirb(main):007:0> a.value\n=> 5184000\nirb(main):008:0> a.parts\n=> [[:months, 2]]\nirb(main):009:0> b.value\n=> 5184000\nirb(main):010:0> b.parts\n=> [[:months, 1], [:months, 1]]\nirb(main):011:0>\n```\n\nSolution:\nIf this is considered a problem, the solution is either to make equality use parts in some way (thus changing the == behavior), or implement some sort of compression, where multiple identical parts are automatically combined (thus changing the + behavior)'
6544,'drogus',"exists?(false) returns false\n*exists?* finder method now returns *false* with the *false* argument\n\n```ruby\nTopic.exists?(false)\n=> false\n```\n\nI would like to propose this solution. I think it may be acceptable.\nChanges don't affect on any other cases.\nDiscussion in issue #6431."
6533,'fxn',"Fix pluralize helper to properly handle minus one\nHere is a good explanation:\nhttp://neilwhitfield.wordpress.com/2007/10/31/good-question-are-fractions-and-decimals-singular-or-plural/\n\n'If the number one is used, whether it is +/-1, the following noun will be\nsingular. So it would be -1 apple. We’re talking grammar, not logic; and yes we\nsay zero apples, probably because zero is thought of as a number that is not\none, even though zero is neither singular nor plural logically.'"
6523,'rafaelfranca','Fix that #exists? can produce invalid SQL: "SELECT DISTINCT DISTINCT"\nThe combination of a :uniq => true association and the #distinct call in construct_limited_ids_condition combine to create invalid SQL, because we\'re explicitly selecting DISTINCT, and also sending #distinct on to AREL, via the relation#uniq_value.\n\nI unset relation#uniq_value in the limited ids lookup so that Arel doesn\'t apply the DISTINCT that we\'re already applying. This only affects the limited ids lookup query, and only in the problematic case where uniq_value was true. Everything else is unchanged.\n\nBug is present on 3-2-stable as well.\n\nPreviously failed with:\n\n```\nActiveRecord::StatementInvalid: SQLite3::SQLException: near "DISTINCT": syntax error: SELECT  DISTINCT DISTINCT "posts".id FROM "posts" LEFT OUTER JOIN "comments" ON "comments"."post_id" = "posts"."id" AND "comments"."type" IN (\'SpecialComment\', \'SubSpecialComment\') INNER JOIN "categorizations" ON "posts"."id" = "categorizations"."post_id" WHERE "categorizations"."author_id" = ? LIMIT 0\n    sqlite3-1.3.6/lib/sqlite3/database.rb:91:in `initialize\'\n    sqlite3-1.3.6/lib/sqlite3/database.rb:91:in `new\'\n    sqlite3-1.3.6/lib/sqlite3/database.rb:91:in `prepare\'\n    rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:288:in `block in exec_query\'\n    rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:288:in `block in log\'\n    rails/activesupport/lib/active_support/notifications/instrumenter.rb:18:in `instrument\'\n    rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:283:in `log\'\n    rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:277:in `exec_query\'\n    rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:495:in `select\'\n    rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:18:in `select_all\'\n    rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:63:in `select_all\'\n    rails/activerecord/lib/active_record/querying.rb:40:in `block in find_by_sql\'\n    rails/activerecord/lib/active_record/explain.rb:37:in `logging_query_plan\'\n    rails/activerecord/lib/active_record/querying.rb:39:in `find_by_sql\'\n    rails/activerecord/lib/active_record/relation.rb:174:in `exec_queries\'\n    rails/activerecord/lib/active_record/relation.rb:164:in `block in to_a\'\n    rails/activerecord/lib/active_record/explain.rb:37:in `logging_query_plan\'\n    rails/activerecord/lib/active_record/relation.rb:163:in `to_a\'\n    rails/activerecord/lib/active_record/relation/delegation.rb:6:in `collect\'\n    rails/activerecord/lib/active_record/relation/finder_methods.rb:241:in `construct_limited_ids_condition\'\n    rails/activerecord/lib/active_record/relation/finder_methods.rb:226:in `apply_join_dependency\'\n    rails/activerecord/lib/active_record/relation/finder_methods.rb:215:in `construct_relation_for_association_find\'\n    rails/activerecord/lib/active_record/relation/finder_methods.rb:177:in `exists?\'\n    test/cases/finder_test.rb:68:in `test_exists_with_distinct_association_includes_and_limit\'\n```'
6513,'senny','IntegrationTest && Headers\nOk, I just spent an hour or three trying to find out why this was failing:\n\n``` ruby\n    post \'/api/v1/accounts\', { account: valid_account }.to_json, "Content-Type" => "application/json"\n```\n\nHere\'s what it would spit out:\n\n``` \nParameters: {"{\\"account\\":{\\"name\\":\\"Christina Adams\\",\\"email\\":\\"vlawrence@flashspan.org\\",\\"password\\":\\"UtZ1lLOO\\",\\"password_confirmation\\":\\"UtZ1lLOO\\",\\"terms\\":\\"1\\"}}"=>"[FILTERED]"}\n```\n\nNow that\'s obviously wrong. How to solve this? Well normally in [every(link)](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17) [HTTP(link)](http://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Content-Length) [reference(link)](http://en.wikipedia.org/wiki/MIME#Content-Type) [material(link)](http://tools.ietf.org/html/rfc1049) or [resource(link)](http://www.freesoft.org/CIE/RFC/1521/4.htm) it\'ll tell you to pass along `Content-Type=application/json`. That actually works, say with a REST client or something. However, my tests were still failing!\n\nTurns out, after digging through [here]( https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/testing/integration.rb#L285-L299) the Rack hash env uses all uppercase characters *and a underscore*. In the end this means my Content-Type setting silently gets garbage collected and Rack happily uses `application/x-www-form-urlencoded` because `CONTENT_TYPE` was unchanged.\n\nI guess this could also be considered a Rack bug, but I think it might be actionpack\'s job to present it correctly.\n\nps. Changing to `CONTENT_TYPE` fixes my problem of course.'
6510,'fxn',"[Guides] Kindle announcement doesn't stand out enough\nIt looks like the original idea was to draw the reader's attention to it using the blue exclamation mark icon. This still forces me to read the entire paragraph of text, even if it's something I don't care about. When I'm trying to read the opening paragraph about the guides, having to pull my eyes away to read a block of text that's calling for my attention can be very distracting. I've started redesigning this a bit to fix make it easier for the user to decide if they care without having to turn their attention away from what they're doing. Here's a screenshot showing my approach:\n\n![Redesign Screenshot](https://img.skitch.com/20120528-gfw1tjegctbt4mrrrpdngqegj3.jpg)\n\nOnce I fix a few issues I'll post the code to my fork. Are design changes like this acceptable in PRs?\n\nThanks!"
6497,'drogus','Routing shortcut missbehaviour in engine\nI discovered a bug in the routing within (isolated and mountable) engines.\n\n```ruby\nProftpdUserManager::Engine.routes.draw do\n  # without shortcut\n  get \'server/traffic\' => "server#traffic"\n\n  # with shortcut\n  get \'server/traffic\'\n\n  resources :users do\n    member do\n      get \'enable\'\n      get \'disable\'\n      get \'credentials\'\n      get \'overview_traffic\'\n    end\n  end\n\n  root to: \'users#index\'\nend\n```\n\nWithout shortcut routes (as excpected) to ```proftpd_user_manager/server#index```\nWith the shortcut it routes to ```server#index``` it misses the namespace there...\n\nIs this a bug or expected?\n\n\nRegards,\n\nSven Pachnit'
6492,'tenderlove',"Fair connection pool2\nThird attempt of https://github.com/rails/rails/pull/6488\n\nI apologize for the mess.\n\n@rafaelfranca this is probalby more what you had in mind (I squashed all my commits, and left @yahonda's separate).\n\n@tenderlove could you review this one?\n\nOh, I upgraded to ruby 1.9.3 (was on 1.9.2), and I can run all the sqlite3 and postgresql tests with no errors:\n\n    postgresql\n    Finished tests in 231.744746s, 14.9475 tests/s, 45.5501 assertions/s.\n    3464 tests, 10556 assertions, 0 failures, 0 errors, 32 skips\n\n    sqlite3\n    Finished tests in 179.844340s, 18.5438 tests/s, 56.3932 assertions/s.\n    3335 tests, 10142 assertions, 0 failures, 0 errors, 12 skips"
6478,'drogus',"Absolute partial paths need to be preserved in namespace\nI got feeling that solution for https://github.com/rails/rails/issues/1951 are incorrect by nature. We include path namespacing in partial so even if we define custom resolver or just modify append_view_path we can't avoid namespacing. I am not sure how to fix this, but for my needs (defining one partial template for front/backend of my application using to_partial_path) this simple fix works. "
6475,'fxn',"Responsive guides\nI started implementing a responsive design for the Rails guides. I've only tested it on Apple laptops & portable devices, but I wanted to get feedback before going much further. What further do we need to do to pull this in and get it deployed?\n\n(Note: I originally requested this on lifo/docrails and was asked to send it here instead)"
6458,'fxn','"EXPLAIN SAVEPOINT active_record_1" error in tests with transactions\nSometimes we are using slower/old machines in development and we started getting following errors in our functional tests:\n\n```\ntest: players_table should sort by lastname. (Team::PlayersControllerTest):\nActiveRecord::StatementInvalid: Mysql2::Error: Table \'app_test.savepoint\' doesn\'t exist: EXPLAIN SAVEPOINT active_record_1\n    app/controllers/team/players_controller.rb:360:in `get_sort_players\'\n```\n\nAfter a long debugging we increased auto_explain_treshold_in_seconds method in our `config/evironment/test.rb`\n\n```\nconfig.active_record.auto_explain_threshold_in_seconds = 30 # originally 0.5\n```\n\nNow all tests pass as they should. We are using mysql (various versions) so I tried the following commands in mysql:\n\n```\nmysql> explain savepoint test_1;\nERROR 1146 (42S02): Table \'app_development.savepoint\' doesn\'t exist\nmysql> explain select * from players;\n...explanation of the query as expected...\n```\n\nI\'m not sure where/what is the problem. Feeling is that it\'s somehow that rails tries to sql explain slow transaction start? Is that possible? That would results mysql thinking that we are trying to run explain on some table.\n'
6454,'vijaydev','[guides] Update rails on rack\nThere were some classes no longer exists, it needs some review, mainly in the Rack::Builder and middlewares part.'
6369,'pixeltrix',"rake routes for a redirect is unhelpful\nGiven a route in routes.rb:\n\n    get '/e/:id' => redirect('/foo'), as: 'share_event'\n\nWhen I run `rake routes`\nThen I expect to see:\n\n    share_event GET  /e/:id(.:format)    redirect('/foo') # or something similar\n\nBut I currently see:\n\n    share_event GET  /e/:id(.:format)    :controller#:action"
6332,'drogus','improve tests for bundle_command\nTravis exports `BUNDLE_GEMFILE`, this overwrites current dir `Gemfile` here: https://github.com/rails/rails/blob/master/railties/lib/rails/generators/app_base.rb#L256.\nIt was changing context and running `install` command on `BUNDLE_GEMFILE` instead of `Gemfile` here https://github.com/rails/rails/blob/master/railties/test/generators/plugin_new_generator_test.rb#L102.\n\nMost important addition here is validating that `#{destination_root}/Gemfile.lock` was created - which assures `bundle install` was run in proper `Gemfile` context.\n\nAs I had to run `ruby install.rb 4.0.0.beta` to make the test pass I assume it might still be failing - unless `rails ~> 4.0.0.beta` is installed ... maybe it already is?\n'
6315,'josevalim','Moving number helper from ActionView to Active Support\nHi,\n\nIn an earlier pull request I hoped we could decouple ActiveSupport from ActionView:\n\nhttps://github.com/rails/rails/pull/5675\n\nIt was suggested by @josevalim that instead of that approach, we move the number helpers from ActionView to ActiveSupport.  In addition to his suggestion, this approach was a feature request in a separate issue:\n\nhttps://github.com/rails/rails/issues/3214\n\nIn this pull request I\'ve moved the functionality from NumberHelper in ActionView to ActiveSupport and added the methods to Numeric.  So instead of including NumberHelper and writing "number_to_human(123)", you could just include ActiveSupport and write "123.to_human".  The original NumberHelper methods are all left in place and accept the same options and behave the same (and just pass through to the AS implementation in Numeric).\n\nOther interested parties may include: @carlosantoniodasilva, @fxn, and @yfeldblum.\n\nLet me know if you\'d like any changes to this implementation.\n\nThanks,\nAndrew.\n'
6304,'pixeltrix',"The expire_action method should always add a format\nAction caches are always written with the format added to the path, therefore it makes sense that `expire_action` should always generate a path with a format even if the url does not have one, e.g:\n\n``` ruby\nget '/products', :to => 'products#index', :format => false, :defaults => { :format => 'html' }\n```\n\nThis route is action cached as `views/<host_with_port>/products.json` but `expire_action :controller => 'products', :action => 'index', :format => 'html'` generates a expiry path of `views/<host_with_port>/products `."
6273,'rafaelfranca','Feature/simple format refactoring\nRefactored simple_format into another method called `paragraph_split`\r\n\r\nWith the `paragraph_split` method, you are now able to split paragraphs and wrap those in any tag you may want without confining yourself to the `<p>` tag.'
6256,'drogus',"Engines with railties or engine as dependencies\nHello,\r\n\r\nIt seems that when an engine has railties or other engines as dependencies, the dependent railties do not get loaded into the application properly. You have to respecify those dependencies in you app Gemfile for them to work properly.\r\n\r\nIs that a bug or the expected behavior? I shouldn't have to worry about those dependencies really.\r\n\r\nThanks,\r\nJulien."
6246,'pixeltrix','redirecting to https does not retain subdomain\nHello, when redirecting to https the subdomain for the request is removed.\r\nI believe the correct behavior is to keep the same hostname, only changing http to https.\r\nThe logs (see below) says that request.host is correctly set to "admin.example.com", however the redirect points to "example.com".\r\n\r\napplication controller:\r\n```\r\ndef secure\r\n\tif not request.protocol.include? "https"\r\n\t    puts "REDIRECTING TO SECURE! request.host: #{request.host}"\r\n\t\tredirect_to :protocol => \'https\'\r\n\tend\r\nend\r\n```\r\n\r\n\r\n```\r\nStarted GET "/" for 123.123.123.123 at 2012-05-10 10:06:27 +0000\r\nProcessing by Backend::SignupsController#index as HTML\r\n  Parameters: {"subdomain"=>"admin"}\r\nREDIRECTING TO SECURE! request.host: admin.example.com\r\nRedirected to https://example.com/signups\r\nFilter chain halted as :secure rendered or redirected\r\n```\r\n\r\nThis application is running on heroku with rails 3.2'
6224,'pixeltrix','Wrong subdomain for constrained route in url helper\nSay I have the following routes that are constrained to specific subdomains:\r\n\r\n```\r\nApp::Application.routes.draw do\r\n  constraints :subdomain => "admin" do\r\n    scope :module => "backend", :as => "backend" do\r\n      resources :signups\r\n      root :to => "signups#index"\r\n    end\r\n  end\r\n  constraints :subdomain => "www" do\r\n    resources :main\r\n    root :to => "main#landing"\r\n  end\r\nend\r\n```\r\nThe problem is that root_url and backend_root_url both returns a url on the current subdomain: "http://__current-subdomain__.lvh.me/" instead the subdomain specific for the resource. I would like root_url to return "http://__www__.lvh.me/" and backend_root_url to return "http://__admin__.lvh.me/" (the behavior should be the same for all resources under the subdomain).\r\n\r\nI have tried to accomplish this in rails 3.2 by setting the url options in various places, one being url_options in application controller:\r\n\r\n```\r\nclass ApplicationController < ActionController::Base\r\n  def url_options\r\n    {host: "lvh.me", only_path: false}.merge(super)\r\n  end\r\nend\r\n```\r\n\r\nI\'m able to get the correct result using root_url(:subdomain => "admin") which returns "http://__admin__.lvh.me/" regardless of the current subdomain. However, this is not very DRY.'
6209,'pixeltrix','Deserialization breaks in STI derived classes if parent class overrides serialized attribute reader\nFor example:\r\n\r\n```ruby\r\n\r\nclass User < ActiveRecord::Base\r\n  attr_accessible :name\r\n  attr_accessible :options, :name\r\n  serialize :options\r\n\r\n  def options\r\n    self[:options] ||= {}\r\n  end\r\nend\r\n```\r\n\r\nAdmin model:\r\n\r\n```ruby\r\nclass Admin < User\r\nend\r\n```\r\n\r\n```ruby\r\n1] pry(main)> u = Admin.new(:options => {:name => "hemant"})\r\n=> #<Admin id: nil, name: nil, created_at: nil, updated_at: nil, type: "Admin", options: #<struct ActiveRecord::AttributeMethods::Serialization::Attribute coder=#<ActiveRecord::Coders::YAMLColumn:0x1114795e8 @object_class=Object>, value={:name=>"hemant"}, state=:unserialized>>\r\n```\r\n\r\nWhere as expected value of options should be deserialized `{:name => "hemant"}` hash. This is a regression, it used to work in Rails and from my investigations I found the fault to be in:\r\n\r\n```ruby\r\n     #attribute_methods.rb, line#88\r\n      def instance_method_already_implemented?(method_name)\r\n        if dangerous_attribute_method?(method_name)\r\n          raise DangerousAttributeError, "#{method_name} is defined by ActiveRecord"\r\n        end\r\n\r\n        if superclass == Base\r\n          super\r\n        else\r\n          # If B < A and A defines its own attribute method, then we don\'t want to overwrite that.\r\n          defined = method_defined_within?(method_name, superclass, superclass.generated_attribute_methods)\r\n          defined && !ActiveRecord::Base.method_defined?(method_name) || super\r\n        end\r\n      end\r\n```\r\n\r\nSo what is happening here is above method gets called each time a attribute accessor is defined within anonymous modules. So for attribute reader which is overriden, above method will return false for base class of STI model, but for any derived classes of base STI model, it will return true and hence rails won\'t define attribute reader for this attribute in anonymous module for derived class.\r\n\r\nSo the end result is - deserilization works correctly for base class, but it fails for derived classes. If this has to be the new behavior then I think, deserilization should not work for base class as well.'
6199,'pixeltrix',"ActiveRecord: For NEW record 'has_and_belongs_to_many' 'exists?' return true\nH!\r\n\r\nI have a models:\r\n\r\n```\r\nclass User < ActiveRecord::Base\r\n...\r\n  has_many :users_groups, :class_name => 'UsersGroups'\r\n  has_and_belongs_to_many :groups, :join_table => :users_groups\r\n...\r\nend\r\n```\r\n\r\nand \r\n\r\n```\r\nclass Group < ActiveRecord::Base\r\n...\r\n  has_many :users_groups, :class_name => 'UsersGroups'\r\n  has_and_belongs_to_many :users, :join_table => :users_groups\r\n...\r\nend\r\n```\r\n\r\nIf I request belonging to group for EXISTING `@user by 'group.users.exists?(@user)'` then it works correctly, perfectly.\r\n\r\nWhen I reqest belonging to group for NEW USER by ` 'group.users.exists?(@user)'` - it ALWAYS return TRUE.\r\nBut more logical will assume that the nonexistent user still isn't present in any group.\r\n"
6197,'fxn',"Don't run explain on slow queries for database adapters that don't support it\nWhen using the activerecord-jdbcmysql connection adapter, I received this exception after a slow query fired:\r\n\r\n```\r\n\r\nNoMethodError: undefined method `explain' for #<ActiveRecord::ConnectionAdapters::MysqlAdapter:0x1c92233b>\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/explain.rb:65:in `exec_explain'\r\n\tfrom org/jruby/RubyKernel.java:1787:in `tap'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/explain.rb:59:in `exec_explain'\r\n\tfrom org/jruby/RubyArray.java:2339:in `collect'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/explain.rb:58:in `exec_explain'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/explain.rb:34:in `logging_query_plan'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/relation.rb:159:in `to_a'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/relation/finder_methods.rb:377:in `find_first'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/relation/finder_methods.rb:122:in `first'\r\n\tfrom org/jruby/RubyBasicObject.java:1698:in `__send__'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/activerecord-3.2.3/lib/active_record/querying.rb:5:in `first'\r\n\tfrom (irb):1:in `evaluate'\r\n\tfrom org/jruby/RubyKernel.java:1088:in `eval'\r\n\tfrom org/jruby/RubyKernel.java:1410:in `loop'\r\n\tfrom org/jruby/RubyKernel.java:1197:in `catch'\r\n\tfrom org/jruby/RubyKernel.java:1197:in `catch'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/railties-3.2.3/lib/rails/commands/console.rb:47:in `start'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/railties-3.2.3/lib/rails/commands/console.rb:8:in `start'\r\n\tfrom /Users/blake/.rvm/gems/jruby-1.6.7-d19@myapp/gems/railties-3.2.3/lib/rails/commands.rb:41:in `(root)'\r\n\tfrom org/jruby/RubyKernel.java:1042:in `require'\r\n\tfrom script/rails:6:in `(root)'jruby-1.6.7-d19 :002 > \r\n```\r\n\r\nDigging a little deeper, it seems that only mysql2, postgres and sqlite3 support explain on the connection adapter. This change prevents the slow query explain from running if the connection adapter does not support it. Ideally, the test wouldn't stub out 'supports_explain?' on a connection that does indeed support it, but we don't yet have any tests that run end-to-end against a jruby runtime and use the jdbc drivers.\r\n\r\nFeedback appreciated!\r\n\r\nBlake"
6196,'pixeltrix','Route Automatically Pulls From params in controller.\nI\'m not sure if this is a bug, or if this is expected behavior.  Seems a little weird to me though.\r\n\r\nroutes.rb\r\n\r\n```\r\nresources :awesomes\r\nresources :pizzas\r\n```\r\n\r\n\r\npizzas_controller.rb\r\n\r\n```\r\ndef show\r\n    render :text => awesomes_path(nil)\r\nend\r\n```\r\n\r\n\r\nthen go to http://localhost:3000/pizzas/17\r\n\r\n```\r\n/awesomes/17\r\n```\r\n\r\nWhen in fact the awesome_id is completely different from the pizza_id.\r\n\r\nSeems like a bug, but I\'m not sure if this was intended behavior for some other case (because in the case of the awesomes controller it makes a little bit more sense).\r\n\r\nIn any case, is this a bug, or is pulling the id from the params the expected behavior?  When awesomes_path(nil) is called outside the context of a controller  the following exception gets raised (which seems like what I would expect the behavior to be):\r\n\r\n```\r\nActionController::RoutingError: No route matches {:action=>"show", :controller=>"buy_items"}\r\n```\r\n\r\nHappened on v3.2.3\r\n\r\nIs this a bug?\r\n'
6194,'fxn',"Optimizing all images used in the guides\nOptimized all images from the official guides with http://imageoptim.com/, for an overview of the file changes in size see: https://gist.github.com/2629041\r\n\r\nI went over each image used by the guides, and checked the diffs manually. These optimizations should be safe to use with the guide's design.\r\n\r\nnote: Originally I have created this pull request on the docrails project, these changes were not suited for that particular project (wherefore my apologies).\r\nAfter a short conversation with fxn on twitter, I decided to continue this here on rails."
6165,'pixeltrix','Make constantize look down the ancestor chain (excluding Object)\n`constantize` is meant to avoid looking up in `Object`, e.g. so that `"String::Fixnum".constantize` raises an error.\r\n\r\nUnfortunately, the ancestor chain is not looked up at all.\r\n\r\n    class A\r\n      Foo = :bar\r\n    end\r\n    class B < A\r\n    end\r\n    "B::Foo".constantize # => raises an error, should return B::Foo (which is == A::Foo)\r\n\r\nI ran into this when registering an observer (say "some_class/observer"), where `SomeClass::Observer` is defined in a base class of `SomeClass`. That currently fails, as `Observer` has to be defined directly in `SomeClass`.\r\n\r\nOne solution is for me to write:\r\n\r\n    class SomeClass < SomeBaseClass\r\n      Observer = Observer # to satisfy Rails constantize lookup!!\r\n    end\r\n\r\nI hope you appreciate the irony :-)\r\n\r\nI feel that there is no reason for `constantize` to be so strict, though. The attached patch fixes this.\r\n\r\nThanks.'
6150,'drogus',"Rails db console improvements\nThe code in [active_record/connection_adapters/sqlite3_adapter.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb) is slightly dublicated by [rails/commands/dbconsole.rb#L76-83](https://github.com/rails/rails/blob/master/railties/lib/rails/commands/dbconsole.rb#L76-83).\r\n\r\nI don't think it's very bad, but I suggest to improve db console a little more. In #6012 I covered db console with tests and we can now improve it a little.\r\n\r\nThe first commit - abort if we execute `rails db` on memory dtabase. The second - to use rails root expand path as here: [connection_adapters/sqlite3_adapter.rb#L21](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L21).\r\n\r\nThe first improvment I found only investigating code, but the second is from real life. I developed gem and executed dummy server `./spec/dummy/scripts/rails server`. It worked well. But  `./spec/dummy/scripts/rails db` failed with not resolved path to db file."
6105,'fxn','Support for underscores in module namespaces\nAs noted in #5849, Rails does not currently support module namespaces containing underscores. This is largely due to how ActiveSupport::Inflector.camelize and ActiveSupport::Inflector.underscore currently work.\n\nThis pull request essentially introduces a new convention whereby module namespaces containing underscores are translated to paths with *two* underscores for each underscore, and vice versa. For example:\n\n```\n"API::V0_1_0" --> "api/v0__1__0"\n```\n\n```\n"api/v0__1__0" --> "API::V0_1_0"\n```\nI\'m not married to this convention by any stretch, I\'m just throwing it out there as a straw man.\n\nIn addition to this fix for the 3-2-stable branch, I\'ve also made this change for the 3-0-stable, 3-1-stable, and master branches as well. You can find them in the following branches in my repo (if you want a separate pull request for each just let me know):\n\nunderscores-in-namespaces-3-0-stable\nunderscores-in-namespaces-3-1-stable\nunderscores-in-namespaces-3-2-stable\nunderscores-in-namespaces-master\n\nI can also fix this for the 2.x series branches as well if you want, just let me know.\n\nThanks,\nBrian'
6093,'jeremy',"notify_observers should be public\nAs @twinturbo objected in pull request #6063, here's a separate request for this change and expanded reasoning.\r\n\r\nReasons to make `notify_observers` public:\r\n\r\n- consistent with the fact that `notify_observers` in the stdlib's `Observable` is public.\r\n- consistent with the fact that the singleton method `notify_observers` is public:\r\n\r\n    Foo.notify_observers(:my_event, the_foo) # => currently ok\r\n    the_foo.notify_observers(:my_event) # => currently not ok\r\n\r\n- `notify_observers` is not the right level to restrict access. Some actions would be best kept private (say :after_save) but custom actions could very well be triggered by external clients. The class and its instances simply act as a rendez-vous point where complete strangers to the class can communicate.\r\n\r\nExample:\r\n\r\nAn observer implements `:after_save` to detect some state change. If detected, it wants to send a custom notification `:some_state_changed`, so other observers can be notified and don't have to reimplement the state change logic. It shouldn't have to use `send`.\r\n\r\nThanks"
6089,'tenderlove','delete_all raise an error if a limit is provided - fixes #4979\n'
6073,'rafaelfranca',"Restore state on create when ActiveRecord::RecordInvalid is raised\nThis fixes issue #3217.\r\n\r\nPreviously, a call to AR#create that raised AR::RecordInvalid would leave a record in an inconsistent state -- it wouldn't actually be saved in the database, but #persisted? => true and #id would be non-nil. This patch also merges clean into 3-2-stable, for now."
6063,'jeremy',"Allow extra arguments for Observers\nI wanted to use observers to send custom events and noticed that #notify_observers only accepts one argument.\r\n\r\nUnless there's a good reason not too, it woud be nice to accept extra arguments and pass them on.\r\n\r\nThanks"
6034,'drogus','Fix the Flash middleware loading the session on every request \nSo once upon a time, Rails always loaded the session unless you explicitly used session :off.  Loading itself is not so important but loading the session also triggers writing a session cookie back on the response, so obviously it is very important to turn session cookies off on shared resources, particularly if you\'re using cache control to make them publicly cacheable.  So you always knew to do session :off when you had a controller sending that kind of header.\r\n\r\nWhen sessions were changed to be lazily loaded in the 2.x days, session :off was removed since it was no longer required.\r\n\r\nBut in the refactoring of the flash code from the controller stack into the middleware stack in the 3.x series, the code was not just moved over directly - the commit (ead93c5) also rewrote a couple of the methods in a way that meant that the middleware now ALWAYS loads the session in order to clear flashes, and so\xa0ALWAYS writes back a session cookie.  Because Rails no longer has session :off, and middleware can\'t be skipped on a per-controller basis without building an entire new stack, this is not good.\r\n\r\nIt gets much worse though.  Tests/specs don\'t really run the real flash or session code - they have to set aup a fake context one way or another so IIRC they never did - and the test session setup code does not have the same bug.  So tests written to confirm that the controllers don\'t set session cookies are falsely passing.\r\n\r\nThe really bad thing came in Rails 3.1, which turned on Rack::Cache by default, even for existing apps.  Unlike most caches, Rack::Cache - at that time (I\'m told they\'ve put in a patch since) - would cache any responses that you mark cacheable even if they have cookies, and will cache and serve the cookie.\r\n\r\nEvery other HTTP cache I\'ve seen will either ignore the cacheable headers because there\'s a cookie, or strip the cookie.  (Of course, it is programmer error to have cacheable headers and a cookie header, but if the programmer error is in the framework and that\'s an unannounced change that tests don\'t reveal, this can get into production, and has.)\r\n\r\nSo by Rails 3.1 we had a silent behavior change to always send session cookies even on responses marked cacheable, false negatives from tests designed to check session cookies were not being sent, and a default infrastructure change that meant that other people\'s sessions cookies were sent out on cacheable objects even though that\'s clearly crazy, even on HTTPS.\r\n\r\nThis caused us a very expensive privacy breach because all customers ended up with session of customer who first happened to hit the shareable resources, since all future responses came from Rack::Cache instead of the actual session.\r\n\r\n(In case you\'re wondering why we didn\'t hit this as soon as we went to the 3.0 version that had the middleware change, we\'re using HTTPS - so the only cache that could possible see the response is one on our servers, which means only Rack::Cache.  But as I say, any other server-side caching software I\'ve ever used would not have done this anyway.)\r\n\r\nAlthough Rack::Cache may now be more sane, we still need to fix the regression in Rails that caused sessions to be always sent, because it\'s simply not supposed to work that way, not to mention a liability.\r\n\r\nI patched this for 3.1: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request_3-1-stable\r\nThe same patch rebased for 3.2: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request_3-2-stable\r\nAnd this pull request is the same patch rebased against master: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request\r\n\r\nWe have been using this patch in production on 3.1 for a while now and have had no issues.  Essentially it just sweeps the flash the first time it is requested, rather than before every request irrespective of whether it uses flash.\r\n\r\nThis is a behavior change, but only back to the behavior we had before the middleware refactor (ead93c5).  As far as I can see from the commit message (just "Move Flash into middleware") that was not supposed to be a behavior change - I think Josh may have just tidied up and not noticed the implication.\r\n\r\nFWIW, aside from not having the above problem, the original behavior is in any case much more useful.  To me it makes no sense to be clearing the flash if you haven\'t referenced the flash: for example, if you have various "whole page" actions which will render the flash in the page layout, but you also have an ajaxy autocompleter search action which only returns json autocomplete results, it makes no sense to have the ajaxy autocompleter search action clear the flash.\r\n\r\nSo with this patch we go back to the old behavior - when you look at the flash, it will be swept, otherwise, it won\'t.  The session cookie will therefore not be loaded to sweep the flash unless you use the flash.\r\n\r\nAlthough it\'s just a straight rebase, it\'d probably be fair to say that the original commit message might no longer need reference Rack::Cache for master if their patch has gone in since.  I haven\'t looked into whether it\'s present in the Rack::Cache versions pulled in to the 3.2 or 3.1 branches now, but it wasn\'t at the time I wrote the patch.'
6030,'rafaelfranca',"Break support mysql adapter\nIn continue of break support antiquity I suggest to break support mysql adapter (to use only mysql2). \r\n\r\nReally, what is reason to have 2 adapters for one DBMS? mysql gem doesn't support EXPLAIN. It's really funny and sad."
6010,'pixeltrix','Rails projects do not work if project path contains open bracket "["\nRails projects do not function if they are created within a project path that contains an open bracket "[".\r\n\r\nRepro:\r\n\r\nI created the following folders:\r\n\r\n```\r\n/coding/workspace/test1\r\n/coding/workspace/test 2\r\n/coding/workspace/test [3]\r\n/coding/workspace/test [4\r\n/coding/workspace/test ]5\r\n/coding/workspace/test [6/subfolder\r\n```\r\n\r\nWithin each of them, I created a new Rails project using "rails new hello_world". I then cd\'ed into the hello_world project folder and ran "rails server". Lastly I loaded http://localhost:3000/ in a web browser.\r\n\r\nRails projects within folders 1,2,5 work just fine (they display "public/index.html"), while Rails projects within folders 3,4,6 do not work. Specifically, they return the following error instead of displaying the smoke test "public/index.html":\r\n\r\n```\r\nRouting Error\r\n\r\nNo route matches [GET] "/"\r\nTry running rake routes for more information on available routes.\r\n```\r\n\r\nI have confirmed that the projects are created correctly, by diff\'ing a working and non-working project:\r\n\r\n```\r\n$ diff -r */hello_world\r\ndiff -r test [4/hello_world/config/initializers/secret_token.rb test1/hello_world/config/initializers/secret_token.rb\r\n7c7\r\n< HelloWorld::Application.config.secret_token = \'e84be29ba3ae3fc8a69f44b66e03070e0ef7fbd329816d7dd8ba7f9c0b0bd637480370794a1acf58eed4eda9dd92ca67a1f7784d54241d4b0dfb1a8011c0c3a2\'\r\n---\r\n> HelloWorld::Application.config.secret_token = \'f09e0ad716dd67a1a2d5acd1ff6765d5dcaaf9d3c5974c708a46b31486cd31b1a6e94e9a0ec55a0941c2e560d26cdaac835f113edb3eb5062a5b9d05d0ef66cf\'\r\n```\r\n\r\nLastly, I have reproduced this on Mac OS X 10.7.3 (ruby 1.8.7, gem 1.3.6, Rails 3.2.3) and Linux Mint (ruby 1.9.3p194, gem 1.8.23, Rails 3.2.3).'
6007,'rafaelfranca','handle includes/join correctly for calculation\nThis problem very detailed described at this [issue](https://github.com/rails/rails/issues/5990).\r\n\r\nAlso in progress of work with this issue I find that something like this returns error\r\n\r\n```ruby\r\nCompany.create!(:name => "test", :contracts => [Contract.new(:developer_id => 7)])\r\nCompany.includes(:contracts).maximum(:developer_id)\r\n```\r\n\r\nThis bug fixed at second commit in this pull request'
6003,'pixeltrix',"Fix side effect on strings in url_for\n`url_for` method changes controller that passed to the method. Example:  \r\n```ruby\r\ncontroller = '/projects'\r\nurl_for {:controller => controller, :action => 'status'}\r\nputs 'Side effect!' if controller == 'projects'\r\n```\r\nI suppose `url_for` shouldn't change any arguments it takes.  \r\nController is changed [here](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/route_set.rb#L490)\r\n\r\n"
5982,'tenderlove','ActiveRecord models based on a view create new instances with id = 0 rather than nil\nGiven a model like:\r\n\r\n    class Manufacturer < ActiveRecord::Base\r\n      attr_accessible :name\r\n\r\n      self.table_name = \'v_manufacturers\'\r\n      self.primary_key = \'id\'\r\n    end\r\n\r\nwhen you create a new instance\r\n\r\n    m = Manufacturer.new(name: \'Nissan\')\r\n    # => #<Manufacturer id: 0, name: "Nissan">\r\n\r\nbut the id should be nil.\r\n\r\nFor a test case with tests (1.9.3 @ rails 3.2), see\r\n\r\n    https://github.com/stevenchanin/view_test\r\n'
5853,'drogus',"validates_uniqueness_of admits duplicate nil values?\nLet's assume we have the following simple ActiveRecord model\r\n\r\n```ruby\r\nclass Foo < ActiveRecord::Base\r\n  validates_uniqueness_of :name\r\nend\r\n```\r\n\r\nwith an attribute `name`.\r\n\r\nIn Rails 3.0 I could not create two records with an empty name like this:\r\n\r\n```\r\nFoo.create!\r\nFoo.create!\r\n```\r\n\r\nwhich is expected, since we have a duplicate for the `name` attribute; namely `nil`.\r\n\r\nHowever, since around Rails 3.1 the same code does not fail. Is this intended? The validation still works as expected for duplicate values other than `nil`."
5821,'drogus',"Provided fix for calling rake tasks within mountable engines\nFollowing issue: Lets look at creating mountable Engine (Also discussed here: #2594)\r\n\r\n    rails plugin new foobar --mountable\r\n    cd foobar\r\n    rails g model foo bar:string\r\n    rake app:foobar:install:migrations\r\n\r\nThe last command will fail with: `Don't know how to build task 'railties:install:migrations'`\r\n\r\nSo I might provide a possible fix here.\r\nThere might be cooler solutions here, but I'm not familiar with the `Rails::Engine`.\r\nI'm also not that familiar with this TestFramework, so please have a look."
5813,'pixeltrix','Allow the building of STI associations\nWhen building an active record object from an association with parent.children.build, parent.build_child, or the equivalent with nested form attributes, this change allows you to pass the inheritance column attribute to specify the subclass when the associated class uses STI. e.g.\r\n\r\n<pre>\r\n    parent.children.build(:type => "OldestChild")\r\n</pre>\r\n\r\nThis has been the subject of a few other pull requests/issues, and has been closed out for security reasons. I believe this patch addresses those security issues by\r\n\r\n1. Ensuring that the class name is a valid class and that it is in the ancestors of the super class that the association is expecting. You cannot build any random object, it must be in the base association class\'s hierarchy.\r\n\r\n2. Respecting protected attributes. By default the inheritance column is protected. In order to build an association using a subclass, the inheritance column must be explicitly made accessible, either by overriding attributes_protected_by_default, or with attr_accessible.\r\n\r\nHere are the previously closed issues for reference:\r\n* https://github.com/rails/rails/pull/1686\r\n* https://github.com/rails/rails/issues/3749\r\n* https://github.com/rails/rails/pull/3750\r\n* https://github.com/rails/rails/issues/4130'
5770,'pixeltrix','TimeZone.parse should use zone information in the input string, when available\nOn the server where system timezone is say, CDT,\r\n\r\n    Time.zone.parse("Mon May 28 2012 00:00:00 GMT-0700 (PDT)")\r\n     => Mon, 28 May 2012 05:00:00 UTC +00:00 \r\n\r\nwhereas, \r\n\r\n    "Mon May 28 2012 00:00:00 GMT-0700 (PDT)".to_datetime\r\n     => Tue, 29 May 2012 00:00:00 -0700 \r\n\r\n.. produces the correct value.\r\n\r\nIs there a good reason why TimeZone.parse is ignoring time-zone information available in the input string? Shouldn\'t it behave the same as if we had use the string.to_datetime method?\r\n\r\nThe current implementation suggests that a caller should set Time.zone to the correct value first, before invoking parse, but this seems like an unnecessary step when the information needed is available in the input string itself.\r\n\r\n#### Additional information\r\n\r\nThe date format is used by chrome, safari and mozilla when serializing a javascript Date object to string. IE(9) ues a different format like `Mon May 28 00:00:00 PDT 2012` which is correctly handled by the default Time.zone.parse implementation.\r\n\r\nSee original issue posted on stack-overflow here http://stackoverflow.com/questions/10056025/rails-time-zone-parsing-doesnt-work-as-expected\r\n\r\n'
5767,'drogus','fixing assert_template bug when template matches expected, but not ends with\nHello guys, I discover that when we rendering "test/hello_world" and asserting with "test" or "st/he" or anything that matches, the assertion pass.\r\nI think this isn\'t a good behavior, so I changed to pass when ends with expected, now will pass with "hello_world" or "world" for example.\r\nWhat do you think about don\'t pass with half folder or file name? I thinking in when rendering "test/bla/hello_world", the only correct strings would be: "hello_world", "bla/hello_world" and "test/bla/hello_world"\r\nIf you guys like the idea I can implement.'
5742,'tenderlove',"ActionDispatch::ClosedError not raised for streamed page during rendering of csrf_meta_tag for first time\nhttp://api.rubyonrails.org/classes/ActionController/Streaming.html says that ActionDispatch::ClosedError will be raised for a streamed page if modifying the session after the template starts rendering.\r\n\r\n\r\nI recently fixed a bug on our rails site where if a user who has never visited the site before visits a streamed page, csrf_meta_tag (which calls form_authenticity_token which will set session[:_csrf_token] if it's not set) fails to set _csrf_token because the headers have already been sent out.  The fix was to add a before filter to call form_authenticity_token.\r\n\r\n\r\nOddly enough, however, ActionDispatch::ClosedError was not raised when the bug was present.  csrf_meta_tag just silently failed to set the csrf_token (which caused problems with the page when it tried to perform some AJAX requests).\r\n\r\n\r\nGrepping through 3.2.3 source code shows the only occurrence of ClosedError to be the documentation on streaming:\r\n\r\n```\r\n$ ls -d *-3.2.3\r\nactionmailer-3.2.3\tactiverecord-3.2.3\trails-3.2.3\r\nactionpack-3.2.3\tactiveresource-3.2.3\trailties-3.2.3\r\nactivemodel-3.2.3\tactivesupport-3.2.3\r\n$ grep -R ClosedError *-3.2.3\r\nactionpack-3.2.3/lib/action_controller/metal/streaming.rb:  # If you try to modify cookies, session or flash, an +ActionDispatch::ClosedError+\r\n$ \r\n```\r\n\r\nI'm not sure if this is the expected behavior now and the documentation just needs updating.\r\n"
5730,'drogus',"Add option to config_accessor to allow a default value.\nThis allows ActiveSupport::Configurable to allow default values.\r\n\r\n```\r\nclass Configuration\r\n  include ActiveSupport::Configurable\r\n  config_accessor :foo, :bar, :default => 'bar'\r\nend\r\n```"
5728,'drogus','redirect_to now accepts flash options for controller actions without explicit syntax\nThis is a minor change, but the syntax for redirecting to controller actions with flash options is more cumbersome than for other redirect targets. Previously, `redirect_to` required explicit parentheses and braces:\r\n\r\n    # Redirect to url\r\n    redirect_to post_url(@post), status: 301\r\n    redirect_to post_url(@post), status: 302, notice: "We\'ve temporarily moved!"\r\n    \r\n    # Redirect to controller action\r\n    redirect_to action: \'atom\', status: 301\r\n    redirect_to({action: \'atom\'}, status: 302, notice: "We\'re temporarily moved!")\r\n    redirect_to({action: \'atom\', status: 302}, notice: "We\'re temporarily moved!")\r\n\r\nTo avoid this, we could pull flash options from the action hash, as we currently do for the status option, leaving us with the syntax:\r\n\r\n    redirect_to action: \'atom\', status: 302, notice: "We\'re temporarily moved!"\r\n\r\nThis change would be backwards compatible with the exception of anyone using `:notice\', \':alert\', or \':flash\' as action hash keys to provide query string parameters or something. '
5717,'jonleighton',"Querying through associations doesn't set inverse instance when using extra scopes\nGiven the following models:\r\n\r\n``` ruby\r\nclass Manufacturer < ActiveRecord::Base\r\n  has_many :products, :inverse_of => :manufacturer\r\nend\r\n\r\nclass Product < ActiveRecord::Base\r\n  belongs_to :manufacturer, :inverse_of :products\r\n\r\n  def self.by_name\r\n    order(:name)\r\n  end\r\nend\r\n```\r\n\r\nthen trying to access the manufacturer of a product queried through the assoication only works without the extra query in a single case:\r\n\r\n``` irb\r\n>> Manufacturer.first.products.to_a.first.manufacturer\r\n```\r\n``` sql\r\nSELECT `manufacturers`.* FROM `manufacturers` LIMIT 1\r\nSELECT `products`.* FROM `products` WHERE `products`.`manufacturer_id` = 1\r\n```\r\n\r\nall other cases result in a extra query:\r\n\r\n``` irb\r\n>> Manufacturer.first.products.first.manufacturer\r\n```\r\n``` sql\r\nSELECT `manufacturers`.* FROM `manufacturers` LIMIT 1\r\nSELECT `products`.* FROM `products` WHERE `products`.`manufacturer_id` = 1 LIMIT 1\r\nSELECT `manufacturers`.* FROM `manufacturers` WHERE `manufacturers`.`id` = 1 LIMIT 1\r\n```\r\n\r\nThis is because the scope created from `first`, `order`, etc. has no knowledge of the association. Firstly this is surprising unless you're fairly intimate with AR internals and secondly to workaround the problem you end up making multiple associations, e.g:\r\n\r\n``` ruby\r\nclass Manufacturer < ActiveRecord::Base\r\n  has_many :products, :inverse_of => :manufacturer\r\n  has_many :sorted_products, :order => 'products.name', :inverse_of => :manufacturer\r\nend\r\n```\r\n\r\nWe should be able to pass the association information into the scope and have `AR::Relation` set the inverse instance in `AR::Relation#to_a`.\r\n\r\n@jonleighton what do you think?"
5706,'jeremy',"Use symbols in case statements for great justice\nThis is syntactic sugar for case statements.\r\n\r\n```ruby\r\n\r\n case user\r\n when ~:admin?\r\n   # Do stuff\r\n when ~:active?\r\n   # Do stuff\r\n end\r\n```\r\n\r\nWould be equivalent to:\r\n\r\n```ruby\r\n if user.admin?\r\n   # Do stuff\r\n elsif user.active?\r\n   # Do stuff\r\n end\r\n\r\n```\r\n\r\nWith the added benefit that if `user` is a method, it would only get called once, which, in certain cases, is significantly more efficient without adding complexity to the code.\r\n\r\n## Rationale\r\n\r\nThe short answer is because it looks nice.\r\n\r\nActiveSupport does a great job of extending ruby with simple conveniences like `Symbol#to_proc` which has now been merged in to ruby core. I think this could be part of the sugar that makes Ruby sweeter.\r\n\r\n## Why the `~`\r\n\r\nI chose the unary method `~` because I don't see it having any other use for `Symbol`, but it could just as easily be `+` or `-`.\r\n\r\nMy original concept was to override `Symbol#===`, which allows case to be used like this:\r\n\r\n```ruby\r\ncase user\r\nwhen :root?\r\n  # Do stuff\r\nwhen :active?\r\n  # Do stuff\r\nend\r\n```\r\n\r\nbut I felt that overriding `Symbol#===` is too obtrusive and dangerous.\r\n\r\nI wanted to use `&` as it is already accepted syntax for `Symbol#to_proc` but this is invalid ruby syntax:\r\n\r\n```ruby\r\ncase user\r\nwhen &:active?\r\n  # Do stuff\r\nend\r\n```\r\n\r\n## Negation\r\n\r\nIn offering this support I also thought about supporting negation: https://github.com/amiel/rails/compare/rails:master...case_with_predicates_and_negative\r\n\r\nThat branch allows for syntax like this as well:\r\n\r\n```ruby\r\n case user\r\n when ! :admin?\r\n   # Do stuff\r\n when ! :active?\r\n   # Do stuff\r\n end\r\n```\r\n\r\nThis pull request does not support negation in this way. I didn't want to override `Symbol#!`, and I think the # 2 under *Implementation Discussions* below would be a better way to handle negation.\r\n\r\n## Implementation discussion\r\n\r\nI tried a few different implementation concepts for this. This one is by far the simplest (thanks @emmanuel for pointing me in that direction).\r\n\r\nIn ruby 1.9, procs respond to `===` for use in case (see http://www.aimred.com/news/developers/2008/08/14/unlocking_the_power_of_case_equality_proc/)\r\n\r\nHere are a couple of other options:\r\n\r\n1. My first concept was to override `Symbol#===`, which offered the nicest syntax, but I felt was too obtrusive.\r\n2. In another version, `Symbol#~` returns an object that responds to `===`, this is also concise, but not as simple as the other two options. However, it offers the most complete support for negation. Here's an example implementation that also supports negation: https://github.com/amiel/rails/compare/rails:master...case_with_predicates_with_object\r\n\r\n"
5702,'drogus',"Call undefine_attribute_methods only when defining new attributes\nEvery time we call `attribute_method_prefix` and related methods, we also call `undefine_attribute_methods` behind the scenes. I think it'd be more clear and possibly more efficient to just do it before we define new attributes."
5688,'pixeltrix','Mapping to a redirect route with a param can result in URI::InvalidURIError\nAssuming a paramaterized redirect route like this:\r\n\r\n```ruby\r\nmatch \'foo/view/:id\' => redirect("/foo/%{id}")\r\n```\r\n\r\nIt is possible for an errant link to cause this to throw URI::InvalidURIError via HttpHelpers#redirect.  If someone forgets their closing quote in a link and the incoming URL looks like "/foo/view/1234>" (with the greater-than) the unprotected URI.parse on mapper.rb:372 will throw this exception.  This URL either shouldn\'t make it to the mapper or should not choke.\r\n\r\nOne suggestion would be transforming the URI exception to an ActionController::RoutingError and thus a 404:\r\n\r\n```ruby\r\nbegin\r\n  uri = URI.parse(path_proc.call(*params))\r\nrescue URI::InvalidURIError => e\r\n  raise ActionController::RoutingError, e.message\r\nend\r\n```\r\n\r\nThis is in actionpack for 3-0-stable.'
5657,'drogus',"rescue_from not testable in 3.2 integration tests\nI have a Rails app with a perfectly standard 'rescue_from' that catches certain exceptions (like ActiveRecord::RecordNotFound) and returns a 404 response. \r\n\r\nThis does not seem to be testable in a 3.2.2 integration test. \r\n\r\nI write a rails integration test::unit with a ` assert_response(:missing)` -- but the exception does not seem to be rescued with the rescue_from, the rescue_from is not being applied. The exception propogates all the way to the top and results in an Error reported, instead of Success. \r\n\r\nSee also this problem reported by someone else for functional level tests at: http://stackoverflow.com/questions/9286065/rescue-from-in-functional-integration-tests-in-rails-3-2"
5634,'drogus','Add _is_first and _is_last to partial rendered by collection\nMuch like the _counter variable that is accessible from within a partial called by a collection, the _is_first and _is_last designate if the current call to the partial is for the first or the last item respectively inside the collection.\r\n\r\nUseful if in the view, structural changes need to be made to the partial HTML in case of the first or last item of a collection.'
5516,'jonleighton',"read_attribute doesn't type-cast for STI object\nI've encountered an issue. There is a special case, when a field is not typecasted before validation.\r\n\r\nI've created a reduced test case: https://github.com/Vanuan/railsSTIvalidation\r\nspecifically, this commit: https://github.com/Vanuan/railsSTIvalidation/commit/3421d8400fd73b8971bf8f38058863ad757b02d7\r\n\r\nHere's the stacktrace:\r\n\r\nhttps://gist.github.com/2127207\r\n\r\nMaybe it's my mistake, but I don't see what I did wrong.\r\n"
5485,'drogus',"Http Digest Authentication with uri's with params\nHi,\r\n\r\nI think exists a problem with the http digest authentication in rails master. I'd made an [application test](https://gist.github.com/2057192) that you need to set under railties/test/application folder to execute them. Maybe should be better to set up and application example, tell me if is needed.\r\n\r\nThese problem doesn't exists in a Rails 2.3.14 application.\r\n\r\nIMHO the solution is that the [original_full_path method](https://github.com/rails/rails/blob/master/railties/lib/rails/application.rb#L292) should return the request url/path as the client requested without any encode parsing [in use here](https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/http_authentication.rb#L195) The commas should not be parsed\r\n"
5442,'guilleiguaran',"Proposed fix for #5261 (Identity Map)\nHi,\r\n\r\nI've written a potential fix for the issue that caused the identity map to be removed: https://gist.github.com/2039089\r\n\r\nIt's currently written as an after_save callback on the comment model but I would be willing to add it into activerecord with tests, etc, if the general idea of it is acceptable to the core team.\r\n\r\nThe general idea is that after a record is saved (if IdentityMap is enabled), its reflections are checked for any belongs_to associations that have a foreign_key (or foreign_type) that was changed. These associated models have their entire association cache cleared. This is probably heavy handed and could be optimized to only clear associations that rely on the changed foreign_key.\r\n\r\nThis fixes the issue mentioned in #5261 and also makes Rails work *more* logically than when the Identity Map is disabled in that situation. \r\n\r\nSpecifically:\r\n\r\n```ruby\r\nComment.create(:commentable => Post.create!)\r\n\r\nActiveRecord::IdentityMap.use do\r\n  post = Post.first\r\n  comment = post.comments[0]\r\n  comment.commentable = nil\r\n  comment.save\r\n  post.comments # returns [] with IM on and [Comment] with IM off\r\nend\r\n```\r\n\r\nPlease let me know if the issue is more complicated than I've understood it to be."
5339,'jeremy','week_start option added to rails app config\nFew months ago my PR #3547 was accepted.\nEver since I was thinking about adding `week_start` option to rails app config.\nLast comments on PR #3547 pushed me to come up with this PR.\n\nHere `config.week_start` option added, `beginning_of_week`, `end_of_week` and other methods updated to use `Date.week_start` as default.\n`Date.week_start` can be set via config or using `Date.week_start=` for current request\\thread (mimics time zone).\nMethod `sunday` (`monday`) updated to always return Sunday (Monday) to avoid possible confusion.\n\n`next_week` and `prev_week` updated the same way, but they can be modified to work correctly even if `week_start` is not `:monday`.\nIf feedback to this PR will be positive I can update them along with the API docs.\nUPDATE\noption renamed to `beginning_of_week`'
5330,'tenderlove','ConnectionPool.with_connection does not always properly release connection\nOkay, I think I\'m finally getting to the bottom of my ActiveRecord concurrency issues, think I\'ve actually found and identified the bug.  Rails 3.2.2\r\n\r\nConnectionPool.with_connection is supposed to check out a connection assigned to the thread if one isn\'t already checked out; then check it back in after the yield if a new one was checked out by with_connection. \r\n\r\nI believe it is broken. I have a demonstration Rails app I can put somewhere if someone needs it. But I guess I should really come up with a failing test, and perhaps a fix. In 3.2 stable branch?\r\n\r\nI believe the problem is right here ( in 3.2.2 tagged snapshot of connection pool):\r\n\r\nhttps://github.com/rails/rails/blob/c606fe2c6f1112d13b5ff01f3204e29cbdb09649/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L117\r\n\r\nwith_connection decides if it\'s a "fresh_connection" situation by calling active_connection?  .  Then it just yields the block -- if a connection wasn\'t already checked out to the thread, any ActiveRecord activity will automatically check one out. Then after, yield, it calls release_connection only if there was fresh_connection.\r\n\r\nThe problem is that the current implementation of active_connection? does **not** check to see if the current thread had a checked out connection. It checks to see if ANY thread had a checked out connection. https://github.com/rails/rails/blob/c606fe2c6f1112d13b5ff01f3204e29cbdb09649/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L100\r\n\r\nSo if some thread somewhere has an active connection, and then another thread uses #with_connection -- a new connection will be checked out for that thread, but NOT checked in at the end of with_connection. \r\n\r\nBug. \r\n\r\nI think this is what\'s going on.  I think @tenderlove may be the (only?) active committer that actually understands this stuff at all. Would GREATLY appreciate some feedback. \r\n\r\nI can try to create a failing test case and even a patch (will probably require the introduction of a new method, #current_thread_connection? or something, since #active_connection? has the semantics it does now (it may not always have had them, but who knows if changing them now would break something else)).  But I\'ve never contributed to rails before, not sure about the structure of the tests and getting a setup that allows you to run tests and such, appreciate any pointers.   Presumably I\'d work off of the rails 3.2 stable branch for a patch?\r\n\r\nIn a local copy, I\'ve already implemented a suggested fix, and it does make it pass my previously failing local test case (in a local rails app). Just need to figure out how to add the test to AR proper and run all AR tests to make sure it doesn\'t break any existing ones. '
5307,'spastorino',"Layout rendered for JavaScript HTML fallback\nThere is a breaking change between Rails 3.2.1 and 3.2.2...\r\n\r\nGiven the following controller:\r\n\r\n```Ruby\r\nclass NotesController < ApplicationController\r\n  respond_to :html, :js\r\n\r\n  def new\r\n    @note = Note.new\r\n    respond_with(@note)\r\n  end\r\nend\r\n````\r\n\r\nIn Rails 3.2.1, if you called the JavaScript format (e.g. `/notes/new.js`), you would have the `new` view rendered without the layout. In Rails 3.2.2, the layout is now generated. I don't believe this was an intended change and is in fact a bug. The change in processing *may* be related to https://github.com/rails/rails/issues/5025, but I haven't spent the time to see if in fact it is part of the issue."
5302,'fxn','Fix #camelize for terms with both underscore and camelcase\nCurrently, `"mixed_underscoreCamel".camelize` returns `"MixedUnderscorecamel"`.\r\n\r\nIt should return `"MixedUnderscoreCamel"`.'
5299,'josevalim','Always passing a respond block from to responder\nWe should let the responder to decide what to do with the given overridden response block, and not short circuit it.\r\n\r\nFixes #5280\r\n\r\nThis is for `3-2-stable`, assigning to @josevalim.'
5298,'josevalim','Always passing a respond block from to responder\nWe should let the responder to decide what to do with the given overridden response block, and not short circuit it.\r\n    \r\nFixes #5280\r\n\r\nThis is for `master`, assigning to @josevalim'
5292,'fxn','typo in "Getting Started with Rails", section 3.3\nIn the blue box, there\'s the following piece of code:\r\n\r\ncd .. && rails new blog —database=mysql\r\n\r\nThe long dash ("—") just before the word "database" should be replaced by two ordinary dashes ("--"), The writer probably originally did write that, but it must have been mangled by an editor.'
5280,'sikachu',"ActionController: Passing a block to respond_with does not run the responder.\nIn my application i'm using the flash responder provided by the responders gem (http://github.com/plataformatec/responders)\r\nWhen upgrading to rails 3.2.2 from 3.2.1 some of my flash messages stopped working. If I have a regular respond with then it works fine. So this works fine\r\n\r\n``` ruby\r\ndef my_action\r\n  respond_with current_user\r\nend\r\n```\r\n\r\nBut if I give respond_with a block then it no longer displays the flash messages. This used to work but no longer works:\r\n\r\n``` ruby\r\ndef my_action\r\n  respond_with current_user do |format|\r\n    format.html { redirect_to root_url }\r\n  end\r\nend\r\n```\r\n\r\nIt seems as though the responder is never called when a block is defined for respond_with. I have managed to get a failing test case over here https://github.com/mariovisic/rails/commit/defa3626f672963947efae9a2431cbbd6cf725ae\r\n\r\nI've had a tinker to fix the problem but without any luck. Was wondering if someone could take a look?\r\n\r\nCheers"
5225,'drogus','Rails 3.1 & 3.2 -- Can\'t get Sendfile to work\nI cannot get the `Rack::Sendfile` stuff to work with the compiled assets no matter how hard I try.  This is with Rails 3.1 and 3.2.1 both.\r\n\r\n## Steps to reproduce:\r\n\r\n```bash\r\n\r\nruby -v # => ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin11.3.0]\r\nrails -v # => Rails 3.2.1\r\nrails new myapp\r\ncd myapp/\r\nvim config/environments/production.rb\r\n# I uncomment: config.action_dispatch.x_sendfile_header = "X-Sendfile" # for apache\r\nenv RAILS_ENV=production rake assets:precompile\r\nenv RAILS_ENV=production rackup -p 3000\r\ncurl -s -o/dev/null -H \'X-Sendfile-Type: X-Sendfile\' -D- http://localhost:3000/assets/rails.png\r\n```\r\n\r\n## What I expect:\r\n```\r\nHTTP/1.1 200 OK\r\n...\r\nX-Sendfile: /tmp/myapp/public/assets/rails.png\r\n```\r\n\r\n## What I got:\r\n\r\n```\r\nHTTP/1.1 404 Not Found \r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 728\r\nX-Request-Id: c42e676c9a8c53cb844c661ad184eb18\r\nX-Runtime: 0.732327\r\nDate: Thu, 01 Mar 2012 06:50:16 GMT\r\nX-Rack-Cache: miss\r\nServer: WEBrick/1.3.1 (Ruby/1.9.2/2011-07-09)\r\nConnection: Keep-Alive\r\n```\r\n\r\n## Notes\r\n\r\nTracing down to Rack::Sendfile itself, I see that the response\'s body does not `respond_to? :to_path`.  The object it has is a bunch of `Proxy` objects which I don\'t grok.\r\n\r\nI hope this is enough information to figure this out.\r\n\r\nCiao!'
5217,'dhh','added namespace option for activerecord store\nTo prevent method name conflicts, I have added namespacing to the ActiveRecord store.  The way it works is you can now pass in some custom text to prefix the accessor/writer method names.  Passing in a value of *true* will namespace it with the database column name.\r\n\r\n    class Stuff < ActiveRecord::Base\r\n      store :item, accessors: [ :color ], namespace: true\r\n      store :thing, accessors: [ :color ], namespace: "article"\r\n    end\r\n    \r\n    s = Stuff.new(item_color: "blue", article_color: "purple")\r\n\r\n    s.item_color\r\n    #=> "blue"\r\n    s.article_color\r\n    #=> "purple"\r\n\r\nThis also can be done via the store_accessor method:\r\n\r\n    store_accessor :item, :size, namespace: true\r\n    store_accessor :thing, :size, namespace: \'article\'\r\n\r\n-patrick'
5215,'tenderlove','finders and scopes on has_many association on new object incorrectly query db for null foreign keys\nRails version 3.2.1\r\n\r\nConsider a new, unsaved (such that it has no id yet), instance of a model with a has_many association. Finders and scopes on the has_many association of this object behave incorrectly. They issue db queries with null for the foreign key. These queries return incorrect results if the foreign key is allowed to be null, because it will match all records with null values for that key.\r\n\r\nFor example, consider a School model:\r\n\r\n```ruby\r\nclass School < ActiveRecord::Base\r\n  has_many :students\r\nend\r\n```\r\n\r\nCreating a new, unsaved, instance of a school and accessing the students association correctly returns an empty array:\r\n\r\n```irb\r\nruby-1.9.2-p290 :009 > s = School.new\r\n => #<School id: nil, name: nil, created_at: nil, updated_at: nil> \r\nruby-1.9.2-p290 :010 > s.students\r\n => [] \r\n```\r\n\r\nHowever, adding a dynamic finder on the association incorrectly matches student records with null school_id foreign keys:\r\n\r\n```irb\r\nruby-1.9.2-p290 :011 > s.students.find_by_name("Aaron Aardvark")\r\n  Student Load (0.4ms)  SELECT `students`.* FROM `students` WHERE `students`.`school_id` IS NULL AND `students`.`name` = \'Aaron Aardvark\' LIMIT 1\r\n => #<Student id: 1, name: "Aaron Aardvark", school_id: nil, created_at: "2012-02-29 02:08:37", updated_at: "2012-02-29 02:08:37"> \r\n```\r\n\r\ncount, exists?, and other methods behave similarly incorrectly:\r\n\r\n```irb\r\nruby-1.9.2-p290 :012 > s.students.count\r\n   (0.3ms)  SELECT COUNT(*) FROM `students` WHERE `students`.`school_id` IS NULL\r\n => 2 \r\nruby-1.9.2-p290 :013 > s.students.exists?(Student.last)\r\n  Student Load (0.3ms)  SELECT `students`.* FROM `students` ORDER BY `students`.`id` DESC LIMIT 1\r\n  Student Exists (0.3ms)  SELECT 1 FROM `students` WHERE `students`.`school_id` IS NULL AND `students`.`id` = 2 LIMIT 1\r\n => true \r\n```\r\n\r\nScopes exhibit similarly bad behavior. Suppose Student has the following scope:\r\n\r\n```ruby\r\n  scope :starts_with, lambda { |prefix| where([\'LOWER(name) LIKE ?\', "#{prefix}%"])}\r\n```\r\n\r\nAccessing that scope on the association on a new, unsaved, school object gives this:\r\n\r\n```irb\r\nruby-1.9.2-p290 :014 > s.students.starts_with("a")\r\n  Student Load (0.4ms)  SELECT `students`.* FROM `students` WHERE `students`.`school_id` IS NULL AND (LOWER(name) LIKE \'a%\')\r\n => [#<Student id: 1, name: "Aaron Aardvark", school_id: nil, created_at: "2012-02-29 02:08:37", updated_at: "2012-02-29 02:08:37">] \r\n```\r\n\r\nThe correct behavior should probably be to return an empty array for the finders and scopes, 0 for the count, and false for exists?. However, throwing an exception would be fine with me as well.\r\n'
5147,'carlosantoniodasilva','using dependent as destroy, destroy do not fails if associated objects fails the destroy\nExample:\r\n\r\n``` ruby\r\nclass Category < ActiveRecord::Base\r\n  has_many :posts, :dependent => :destroy\r\nend\r\n```\r\n\r\n``` ruby\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :category\r\n\r\n  # simulates a failure but using a callback\r\n  # will produce the same issue\r\n  def destroy\r\n    false\r\n  end\r\nend\r\n```\r\n\r\n``` ruby\r\nCategory.create!(:name => "Category A")\r\nPost.create!(:category => Category.first, :title => "Post A")\r\n\r\nCategory.first.destroy\r\n#=> #<Category id: 1, name: "Category A", created_at: "2012-02-23 22:44:35", updated_at: "2012-02-23 22:44:35">\r\n\r\nCategory.first\r\n#=> nil\r\n\r\nPost.first\r\n#=> #<Post id: 1, category_id: 1, title: "Post A", created_at: "2012-02-23 22:44:49", updated_at: "2012-02-23 22:44:49">\r\n```\r\n\r\nMy real scenario is a bit more complex due to foreign keys, dependent restrict and others models before the model that fails the destroy due to a complex restriction.\r\n\r\nAnyway, that code reproduce the issue :)'
5145,'guilleiguaran',"Asset Pipeline ignores assets.compress config option\nWhen you create a brand new application using `rails 3.2.x`, the default configuration for the asset pipeline in the `development` environment, as set in `config/environments/development.rb` is as follows:\n\n    # Do not compress assets\n    config.assets.compress = false\n \n    # Expands the lines which load the assets\n    config.assets.debug = true\n\nThis is described in the Asset Pipeline documentation [as shown here](http://guides.rubyonrails.org/asset_pipeline.html#upgrading-from-old-versions-of-rails).  Unfortunately, this setup doesn't actually work out of the box.  If you generate a brand new application with a basic controller serving up a page with plain text, and then inspect the code, you'll notice that it does indeed acknowledge the `config.assets.debug = true` option, as multiple javascript files will be included (`jquery.js` and `jquery_ujs.js` are provided by default).  \n\nHowever, if you inspect what's inside of the `application.js` file that is being served up, you will notice that it is actually a compressed combination of all the others.  This must mean that `config.assets.compress = false` is being ignored and treated as `true` no matter what.\n\nYou'll also notice that if you inspect the javascript console in a browser like chrome, it causes a javascript error to be thrown with this message: `Uncaught TypeError: undefined is not a function  (application.js:32)`.  Worse yet, all jQuery scripts cease to function properly if you try to run with it like this.  I believe the error is thrown as a result of jQuery being included twice, but  it's difficult to tell for certain since the `application.js` file is compressed.\n\nNote that the application will still function fine in `production` mode, but it doesn't work properly in `development` mode.  Now there are two possible workarounds; the first is to set `config.assets.debug = false`, which will prevent the individual javascript files from being served up.  This defeats the purpose of the development mode configuration, as the application will essentially work as though it's being run in production mode (with just one giant compressed `application.js` file).  The second, more functional workaround, [as found here](http://stackoverflow.com/questions/8356251/rails-3-1-assets-strange-serving-in-development) is to add `config.serve_static_assets = false` to your `config/environments/development.rb` file.  This will only work if you run `rake assets:precompile` at least once.\n\nThe fact remains that this is a bug, and that unless this is addressed, the `assets.compress` option is essentially useless without a hack workaround.\n\nHere's a link to [a simple app I created which demonstrates this bug](https://github.com/fullbridge-batkins/rails32_asset_problems).\n\nI am not the first to acknowledge this.  It has been mentioned in [this issue report](https://github.com/rails/rails/issues/5095), as well as [this post on StackOverflow](http://stackoverflow.com/questions/8356251/rails-3-1-assets-strange-serving-in-development).  Pardon me for re-posting this but I feel the other issue is mislabeled.  "
5130,'fxn','Add config.default_method_for_update to support PATCH\nPATCH is the correct HTTP verb to map to the #update action. The\r\nsemantics for PATCH allows for partial updates, whereas PUT requires a\r\ncomplete replacement.\r\n\r\nChanges:\r\n* adds config.default_method_for_update you can set to :patch\r\n* optionally use PATCH instead of PUT in resource routes and forms\r\n* adds the #patch verb to routes to detect PATCH requests\r\n* adds #patch? to Request\r\n* changes documentation and comments to indicate support for PATCH\r\n\r\nThis change maintains complete backwards compatibility by keeping :put\r\nas the default for config.default_method_for_update.\r\n\r\n(Continuation of Issue #505)\r\n\r\n*Update:* as rinaldifonseca pointed out, there was a typo in the pull request message that said "HTML verb" instead of "HTTP verb".'
5121,'tenderlove',"Prepared statements leak when using model.association#find\nWhen you call `.find` on a `has_many` association, the database adapter uses prepared statements. However, this has the unintended side effect of creating a new prepared statement per model, as the association `WHERE` clause does not use bind variables.\r\n\r\nThis had the unfortunate side-effect of generating these messages in my production app (MySQL 5.1, Rails 3.1.3) after a lengthy enough uptime:\r\n\r\n```ruby\r\nActiveRecord::StatementInvalid: Mysql::Error: Can't create more than max_prepared_stmt_count statements (current value: 16382): SELECT `articles`.* FROM `articles` WHERE `articles`.`id` = ? LIMIT 1\r\n```\r\n\r\nSince MySQL caps the number of prepared statements to prevent flood attacks, if your app accidentally leaks prepared statements, it will eventually hit the `max_prepared_stmt_count` limit.\r\n\r\nHere's the basic test case:\r\n\r\n```ruby\r\nclass Article < ActiveRecord::Base\r\n  has_many :drafts\r\nend\r\n\r\nclass Draft < ActiveRecord::Base\r\nend\r\n```\r\n\r\nThis sample code:\r\n\r\n```ruby\r\narticle = Article.find(params[:id])\r\narticle.drafts.find(10)\r\n```\r\n\r\ngenerates the following SQL:\r\n\r\n```sql\r\nSELECT  `drafts`.* FROM `drafts`  WHERE `drafts`.`article_id` = 2 AND `drafts`.`id` = ? LIMIT 1\r\n```\r\n\r\nand passes in `[10]` as bind variables. Unfortunately, this generates a new prepared query for each available `Article` in the database that gets hit in this manner, as the `WHERE `drafts`.`article_id` = 2` portion is hard-coded into the query.\r\n\r\nI spoke to @tenderlove about this yesterday, and he mentioned wanting to enhance the visitor (https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb#L5-11) to take in the bind parameters and apply them as part of `#to_sql`.\r\n\r\nA separate ticket might be worth opening as well for completely disabling prepared statements for those who don't want them on, or for those who need to temporarily disable them to deal with issues like this in production."
5114,'tenderlove','Tilde character breaks scoped routes (worked in 3.1)\nRouting does not function properly in 3.2.1(Ruby 1.8.7)  when scope contains a tilde (~) character.  This worked properly in 3.1.\r\n\r\nReproduce the problem by creating a new project.\r\n\r\n```sh\r\n$ rails new generic\r\n$ cd generic\r\n$ rails generate controller home index\r\n$ rm public/index.html\r\n```\r\nEdit routes.rb to be,\r\n\r\n```ruby\r\nGeneric::Application.routes.draw do\r\n  scope \'/~user\' do\r\n    root :to => "home#index"\r\n  end\r\nend\r\n```\r\n\r\nStart the console,\r\n\r\n```sh\r\n$ bundle exec rails console\r\n1.8.7-p352 :001 > app.root_url\r\n => "http://www.example.com/~user" \r\n1.8.7-p352 :002 > app.get(app.root_url)\r\n => 404\r\n```\r\n\r\nNotice the return of (404) instead of the expected (200).  If you remove the tilde (~) character from the scope in routes.rb\r\n\r\n```ruby\r\nGeneric::Application.routes.draw do\r\n  scope \'/user\' do\r\n    root :to => "home#index"\r\n  end\r\nend\r\n```\r\n\r\nthe results in the console are as expected, i.e. (200).\r\n\r\n```sh\r\nbundle exec rails console\r\nLoading development environment (Rails 3.2.1)\r\n1.8.7-p352 :001 > app.root_url\r\n => "http://www.example.com/user" \r\n1.8.7-p352 :002 > app.get(app.root_url)\r\n => 200\r\n```\r\n\r\nAgain, this worked fine in the previous versions of 3.1.  This regression prevents me from publishing applications on shared service ISPs that restrict sites to include (.../~user) as the application root.  Any fix or work-arounds would be appreciated.\r\n'
5028,'fxn','Guides Docs CSS Issue\nThe last line of every code block (on Ubuntu/Chromium-Browser, at least) gets its underscore "stripped."\r\n\r\nFor example: http://guides.rubyonrails.org/asset_pipeline.html#coding-links-to-assets :\r\n\r\nThis:\r\n\r\n> <%= stylesheet_link_tag "application" %>\r\n> <%= javascript_include_tag "application" %>\r\n\r\nShows as:\r\n\r\n> <%= stylesheet_link_tag "application" %>\r\n> <%= javascript include tag "application" %>\r\n\r\nWhile there is no vertical scroll-bar, I am still able to scroll the text by selecting text downward. This reveals the hidden single pixel at the bottom, which was previously hidden.'
4981,'jonleighton','ActiveRecord namespacing conflict\nI ran into a namespacing conflict in ActiveRecord 3.2.1.  It seems having a subclass of ActiveRecord named Attribute can potentially conflict with the ActiveRecord::AttributeMethods::Serialization::Attribute class.  Below is an example script that will demonstrate the issue.\r\n\r\n```ruby\r\nrequire \'rubygems\'\r\nrequire \'active_record\'\r\nrequire \'logger\'\r\n\r\nputs "Using ActiveRecord #{ActiveRecord::VERSION::STRING}"\r\n\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Base.establish_connection(\r\n  :adapter  => \'sqlite3\',\r\n  :database => \':memory:\'\r\n)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, :force => true do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :attributes, :force => true do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Person < ActiveRecord::Base\r\nend\r\n\r\nclass Attribute < ActiveRecord::Base\r\nend\r\n\r\nputs Attribute.inspect\r\n\r\nclass Person\r\n  puts Attribute.inspect\r\nend\r\n```\r\n\r\nThe following is outputted.  Attribute seems to be bound to a different class depending on where it is accessed.  From within the Person class, it refers to ActiveRecord::AttributeMethods::Serialization::Attribute, which does not seem correct.\r\n\r\n```\r\nUsing ActiveRecord 3.2.1\r\n-- create_table(:people, {:force=>true})\r\nD, [2012-02-09T15:14:23.463416 #24084] DEBUG -- :    (2.9ms)  select sqlite_version(*)\r\nD, [2012-02-09T15:14:23.464320 #24084] DEBUG -- :    (0.3ms)  CREATE TABLE "people" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255)) \r\n   -> 0.0157s\r\n-- create_table(:attributes, {:force=>true})\r\nD, [2012-02-09T15:14:23.465231 #24084] DEBUG -- :    (0.1ms)  CREATE TABLE "attributes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255)) \r\n   -> 0.0008s\r\nAttribute(id: integer, name: string)\r\nActiveRecord::AttributeMethods::Serialization::Attribute\r\n```'
4940,'drogus','An Engine should know about the path where it is mounted\nThis is an example for using the paperclip gem inside an engine:\r\n\r\n    module MyEngine\r\n      class MyAttachment < ActiveRecord::Base\r\n        has_attached_file :document, :styles => { :thumb => "100x100>" },\r\n            :url => "/document/:id/:style.:extension"   # need to know, where the main_app mounted me!\r\n      end\r\n    end\r\n\r\nThis code should provide the information:\r\n\r\n    class Rails::Engine\r\n      def self.mounted_path\r\n        route = Rails.application.routes.routes.detect do |route|\r\n          route.app == self\r\n        end\r\n        route && route.path\r\n      end\r\n    end\r\n\r\nShould I make a pull request out of that?'
4894,'drogus',"Mountable Engines Rails File\nThis is the rails file generated for me: \r\nENGINE_ROOT = File.expand_path('../..', __FILE__)\r\nENGINE_PATH = File.expand_path('../../lib/myeng/engine', __FILE__)\r\n\r\nrequire 'rails/all'\r\nrequire 'rails/engine/commands'\r\n\r\nso whenever I run ./script/rails command it didn't run until I replaced \r\nrequire 'rails/all'\r\nrequire 'rails/engine/commands'\r\nwith\r\nload File.expand_path('../../test/dummy/script/rails', __FILE__)"
4880,'spastorino','respond_with :json (strange behavior)\nI get the exact same thing as this: http://www.ruby-forum.com/topic/3315760\r\n'
4878,'fxn',"PR #2072 with docs\nhttps://github.com/rails/rails/pull/2072 has been stale for a while now pending documentation. So, here goes: I've cherry picked the original commit and added changelog and docs. cc: @fxn @josevalim"
4847,'pixeltrix',"ActiveSupport/TimeWithZone#+ wrongly coerces TWZs to local TZ\n```ruby-1.9.2-p290 :009 > t = Time.new(2011,1,1,1,1,1,'+01:00')\r\n => 2011-01-01 01:01:01 +0100 \r\nruby-1.9.2-p290 :010 > t + 1.day\r\n => 2011-01-02 01:01:01 -0500 \r\nruby-1.9.2-p290 :011 > t = Time.now\r\n => 2012-02-02 01:45:56 -0500 \r\nruby-1.9.2-p290 :012 > t + 1.day\r\n => 2012-02-03 01:45:56 -0500 ```\r\n\r\nThis behavior is incorrect. The result of the former should be 2011-01-02 01:01:01 +0100.\r\n\r\nAs an obvious WTF:\r\n```ruby-1.9.2-p290 :016 > t = Time.new(2011,1,1,1,1,1,'+01:00')\r\n => 2011-01-01 01:01:01 +0100 \r\nruby-1.9.2-p290 :017 >  (t + 1.day - t) / (60*60)\r\n => 30.0 ```\r\n\r\n1 day is not 30 hours long. :-P\r\n\r\n`+(duration)` should respect any existing timezone that is there, rather than coercing it to local time without even bothering to offset correctly.\r\n\r\n[This](https://github.com/rails/rails/blob/211174a3be8554d54f2df140e601b8d39cc89824/activesupport/lib/active_support/time_with_zone.rb#L207) is probably the problem code (h/t Merc).\r\n\r\nAs a side note: day is *not* the smallest variable-length duration increment; minute is, because there are leapseconds.\r\n\r\nCheers,\r\nSai"
4837,'jonleighton','attribute_before_type_cast with serialized attributes is broken\nIt returns the internal struct that 3.2 is now using, rather than the deserialized value.\r\n\r\nThis is a problem because form helpers use this method, see https://github.com/rails/rails/issues/4004#issuecomment-3751199.\r\n\r\nThis is a blocker for the next 3.2 release.'
4817,'tenderlove','format are broken is with route globbing in 3.2.x\nI\'m gonna try to be as clear as possible\r\n\r\nI have a route:\r\n\r\n```ruby\r\n  match "/(*filters)" => \'properties#index\'\r\n```\r\nAnd in my controller I do\r\n\r\n```ruby\r\n    respond_to :html, :js\r\n    ...\r\n    respond_to do |format|\r\n      format.html \r\n      format.js { ...}\r\n    end\r\n``` \r\nAs it\'s a map based application, routes could be like ```/ne_27.065938,-80.6092/sw_25.489856,-82.542794```\r\nit works in rails 3.1.3 but since rails 3.2.x decimals .542794 becomes the format so format.html is not called and a I got a\r\n\r\n___Completed 406 Not Acceptable___\r\n\r\nresponse'
4816,'guilleiguaran',"rewrite_url adds port twice\nThis is the re-opening of an old ticket you can find here: https://rails.lighthouseapp.com/projects/8994/tickets/1106-rewrite_url-adds-port-twice.\r\n\r\nThe issue is:\r\n\r\nWhenever I use an url_helper or a redirect in development mode, the port is added twice to the url: http://localhost:3000:3000/clips\r\n\r\nIs it supposed to be fixed in Rails 3? I'm having the issue in rails 3.1 and 3.2. "
4796,'sikachu',"Default responder doesn't honor the overwritten response block\nConsider this snippet:\r\n\r\n```ruby\r\ndef create\r\n  @user = User.create(params[:user])\r\n  respond_with(@user) do |format|\r\n    format.json do\r\n      if @user.errors.blank?\r\n        render :json => @user\r\n      else\r\n        render :json => @user.errors\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThe given block will get passed into the responder as a `:default_response`(https://github.com/rails/rails/blob/v3.2.1/actionpack/lib/action_controller/metal/mime_responds.rb#L231-240) Hoever, it will not get called due to the fact that `to_format` does not honor the `:default_response` at all (https://github.com/rails/rails/blob/v3.2.1/actionpack/lib/action_controller/metal/responder.rb#L174-182). I think we should fix this to allow the override.\r\n\r\nSetting this to 3.2.2, and I will work on this."
4750,'fxn',"Explaining QueryCache queries throws an exception\nI'm pretty sure I've narrowed this down to a real fix, but I figured I'd file a bug report instead of a pull request since I'm not super familiar with rails internals.\r\n\r\nHere's the error I get, reproduced on 3.2.0 and 3.2.1:\r\n\r\n```\r\n#<NoMethodError: undefined method `empty?' for nil:NilClass>\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:62:in `block (2 levels) in exec_explain'\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:57:in `tap'\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:57:in `block in exec_explain'\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:56:in `map'\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:56:in `exec_explain'\r\n/home/matt/.rvm/gems/ruby-1.9.2-p290@gojotter/gems/activerecord-3.2.0/lib/active_record/explain.rb:32:in `logging_query_plan'\r\n```\r\n\r\nThe problem seems to be here:\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/explain.rb#L58\r\nThis line only checks if bind is empty?, but not for nil, so it barfs here.\r\n\r\nIt looks like these queries are generated in two places:\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L274\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb#L71\r\n\r\nThe latter doesn't always store a value for binds. This is what causes problems."
4720,'tenderlove','Rails 3.2.0 + 3.2.1 regression: :controller => "CampaignContent" in routes.rb under namespace converts badly\nCamelCased controller name in routes under namespace fails to convert properly. This works in Rails 3.1.x.\r\n\r\nThis is failing code:\r\n\r\nhttp://.../admin/storage_files/1?width=400&height=300\r\n\r\n``` ruby\r\n  namespace :admin do\r\n    resources :storage_files, :controller => "StorageFiles"\r\n  end\r\n```\r\nuninitialized constant Admin::StoragefilesController\r\n\r\nNote the small word "files", should say "Files".\r\n\r\n``` ruby\r\n    resources :storage_files, :controller => "StorageFiles"\r\n```\r\nworks.\r\n\r\nIt is failing only under namespaced routes.\r\nIf I put `:storage_files` instead of `"StorageFiles"` here it works too (even under namespaced routes).\r\n\r\nIf the string syntax is deprecated, it should be clear :)\r\n\r\n@tenderlove , I\'m not sure if this is a bug in Rails or in Journey gem?\r\nLooks like that string is downcased before converting to symbol or something?'
4718,'guilleiguaran','Redundant queries with Identity Map in STI model\nClear Rails 3.2.1, PG adapter, such classes:\r\n    \r\n    class Event < ActiveRecord::Base\r\n    end\r\n\r\n    class Report < ActiveRecord::Base\r\n    end\r\n\r\n    class VideoReport < Report\r\n    end\r\n\r\nfrom the console:\r\n\r\n    ruby-1.9.3-p0 :021 > ActiveRecord::IdentityMap.use { t1 = Event.find(1); t2 = Event.find(1); t3 = Event.find(1); t1.object_id == t3.object_id && t3.object_id == t2.object_id }\r\n      Event Load (0.5ms)  SELECT "events".* FROM "events" WHERE "events"."id" = $1 LIMIT 1  [["id", 1]]\r\n      Event Loaded  From Identity Map (id: 1)\r\n      Event Loaded  From Identity Map (id: 1)\r\n     => true \r\n    ruby-1.9.3-p0 :022 > ActiveRecord::IdentityMap.use { t1 = Report.find(1); t2 = Report.find(1); t3 = Report.find(1); t1.object_id == t3.object_id && t3.object_id == t2.object_id }\r\n      Report Load (0.5ms)  SELECT "reports".* FROM "reports" WHERE "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      Report Load (0.4ms)  SELECT "reports".* FROM "reports" WHERE "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      VideoReport Loaded  From Identity Map (id: 1)\r\n      Report Load (0.3ms)  SELECT "reports".* FROM "reports" WHERE "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      VideoReport Loaded  From Identity Map (id: 1)\r\n     => true \r\n    ruby-1.9.3-p0 :023 > ActiveRecord::IdentityMap.use { t1 = VideoReport.find(1); t2 = VideoReport.find(1); t3 = VideoReport.find(1); t1.object_id == t3.object_id && t3.object_id == t2.object_id }\r\n      VideoReport Load (0.5ms)  SELECT "reports".* FROM "reports" WHERE "reports"."type" IN (\'VideoReport\') AND "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      VideoReport Load (0.4ms)  SELECT "reports".* FROM "reports" WHERE "reports"."type" IN (\'VideoReport\') AND "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      VideoReport Loaded  From Identity Map (id: 1)\r\n      VideoReport Load (0.3ms)  SELECT "reports".* FROM "reports" WHERE "reports"."type" IN (\'VideoReport\') AND "reports"."id" = $1 LIMIT 1  [["id", 1]]\r\n      VideoReport Loaded  From Identity Map (id: 1)\r\n     => true\r\n\r\nYou can see, that Event\'s Identity Map works well, while VideoReport/Report Identity Map loads the same entity, while doing redundant queries for each .find()'
4714,'fxn','The Caching With Rails Guide is inaccurate.\nHi,\r\n\r\nI believe that the following statement is out of date:\r\n"Finally, if you are using memcached or Ehcache, you can also pass :expires_in."\r\n\r\nIt should be corrected as:\r\n\r\n"As of Rails 3.0, all cache stores now support the :expires_in option (with a time  interval in seconds) to schedule expiration of the cached item."\r\n\r\n-- Jeff'
4671,'fxn','ActiveRecord query plan logging not thread-safe?\nIn a Rails 3.2 app, I am manually spawning threads in application code, wrapping all ActiveRecord calls in a `#with_connection` block, which the docs say is a recommended \'contract\' with ActiveRecord: http://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html\r\n\r\nHowever, the auto-explain-logging of slow queries seems not to be thread-safe, it raises, stack trace below. Note that the stack trace does verify that my AR use is inside a `with_connection` block. \r\n\r\n    #<NoMethodError: private method `warn\' called for nil:NilClass>\r\n\r\n    ["/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/explain.rb:32:in `logging_query_plan\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation.rb:158:in `to_a\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation/finder_methods.rb:377:in `find_first\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation/finder_methods.rb:122:in `first\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation/finder_methods.rb:335:in `find_one\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation/finder_methods.rb:311:in `find_with_ids\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/relation/finder_methods.rb:107:in `find\'",\r\n     "/home/rochkind/umlaut/app/models/service_wave.rb:71:in `block (3 levels) in handle\'",\r\n     "/home/rochkind/.rvm/gems/ruby-1.9.2-p290@umlaut3/gems/activerecord-3.2.0/lib/active_record/connection_adapters/abstract/connection_pool.rb:118:in `with_connection\'",\r\n     "/home/rochkind/umlaut/app/models/service_wave.rb:68:in `block (2 levels) in handle\'"]\r\n'
4658,'tenderlove',"Test for unicode path support\nThis is a test for a regression from 3.1. This is currently broken due to a bug in journey. I've submitted a pull request to fix it in Journey: (https://github.com/rails/journey/pull/14), but as there was no testing in Rails of this functionality, I'm submitting this request as well."
4652,'pixeltrix','Random ArgumentError (A secret is required...\nUsing Rails 3.2.0 sometimes when I run my server instance (thin, rainbows) and do the first request to the app I\'m greeted with this:\r\n\r\n    ArgumentError (A secret is required to generate an integrity hash for cookie session data. Use config.secret_token = "some secret phrase of at least 30 characters"in config/initializers/secret_token.rb):\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/cookies.rb:316:in `ensure_secret_secure\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/cookies.rb:281:in `initialize\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/cookies.rb:228:in `new\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/cookies.rb:228:in `signed\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/cookie_store.rb:53:in `block in unpacked_cookie_data\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/abstract_store.rb:55:in `stale_session_check!\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/cookie_store.rb:51:in `unpacked_cookie_data\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/cookie.rb:98:in `extract_session_id\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/abstract_store.rb:51:in `block in extract_session_id\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/abstract_store.rb:55:in `stale_session_check!\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/session/abstract_store.rb:51:in `extract_session_id\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:43:in `load_session_id!\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:32:in `[]\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:262:in `current_session_id\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:268:in `session_exists?\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:107:in `exists?\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:122:in `load_for_read!\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:64:in `has_key?\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/flash.rb:258:in `ensure in call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/flash.rb:259:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:205:in `context\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:200:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/cookies.rb:338:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activerecord-3.2.0/lib/active_record/query_cache.rb:64:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activerecord-3.2.0/lib/active_record/connection_adapters/abstract/connection_pool.rb:443:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/callbacks.rb:28:in `block in call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.2.0/lib/active_support/callbacks.rb:405:in `_run__3746064330330596767__call__2880902640516870992__callbacks\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.2.0/lib/active_support/callbacks.rb:405:in `__run_callback\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.2.0/lib/active_support/callbacks.rb:385:in `_run_call_callbacks\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.2.0/lib/active_support/callbacks.rb:81:in `run_callbacks\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/callbacks.rb:27:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/remote_ip.rb:31:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/debug_exceptions.rb:16:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/show_exceptions.rb:56:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/railties-3.2.0/lib/rails/rack/logger.rb:26:in `call_app\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/railties-3.2.0/lib/rails/rack/logger.rb:16:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/request_id.rb:22:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/methodoverride.rb:21:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/rack-1.4.1/lib/rack/runtime.rb:17:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.2.0/lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0/lib/action_dispatch/middleware/static.rb:53:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/railties-3.2.0/lib/rails/engine.rb:479:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/railties-3.2.0/lib/rails/application.rb:220:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/railties-3.2.0/lib/rails/railtie/configurable.rb:30:in `method_missing\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/thin-1.3.1/lib/thin/connection.rb:80:in `block in pre_process\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/thin-1.3.1/lib/thin/connection.rb:78:in `catch\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/thin-1.3.1/lib/thin/connection.rb:78:in `pre_process\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/eventmachine-0.12.10/lib/eventmachine.rb:1060:in `call\'\r\n    /Users/kain/.rvm/gems/ruby-1.9.3-p0/gems/eventmachine-0.12.10/lib/eventmachine.rb:1060:in `block in spawn_threadpool\'\r\n\r\n'
4587,'tenderlove','ActionController::RoutingError no longer raised\nI have these routes:\r\n\r\n``` ruby\r\nresources :ducks\r\n  member do\r\n    get :pond\r\n  end\r\nend\r\n```\r\n\r\nBefore rails 3.2, `pond_duck_path(Duck.new)` would raise `ActionController::RoutingError`. Now it doesn\'t and instead returns `"/ducks/pond"`. Is this intentional?'
4571,'tenderlove','Postgres aggregate functions return string instead of integer or float, part 2\nPlease see the original issue: https://github.com/rails/rails/issues/1718\r\n\r\nI fear a fix is likely to break the existing API. As API changes are more acceptable between major versions I think it´s the best time to unify mysql and postgres (sqlite?) on master now. \r\n'
4552,'jonleighton','Association proxy inconsistencies\nNote to self to look into https://gist.github.com/1636945\r\n\r\ncc @avdi'
4526,'fxn',"Kindle ebook generation with working section navigation\nThis commit corrects the Kindle ebook navigation to work on the Kindle Touch.\r\n\r\nThe commit adapts and incorporates the code from https://github.com/danchoi/docrails_kindle\r\n\r\nNOTE: this commit introduces a dependency on nokogiri and kindlerb, but I don't\r\nknow the proper place outside this commit (which Gemfile or whatnot) to declare\r\nthis."
4450,'pixeltrix','URLs containing certain character codes break routing, DOS potential\n1. Create an empty rails project (I\'m using Rails 3.1.3), then uncomment the default "legacy" route in `config/routes.rb` so that there is at least one active route defined.\r\n\r\n2. Fire up `rails server`\r\n\r\n3. Now visit `http://localhost:3000/foo%E2%EF%BF%BD%A6`.\r\n\r\nThe result is an `ArgumentError`: "(invalid byte sequence in UTF-8)"\r\n\r\nThis may open up Rails sites which use email error notifications to DOS attacks via the repeated requesting of such URLs.\r\n\r\nNote that this is a more general case of #4379, which I found affected action-cached URLs. Both that issue and this one were brought to my attention by Bingbot requesting these kinds of invalid URLs from my production Rails site, resulting in error emails.'
4447,'tenderlove','Missing params to url helpers doesn\'t generate error\nGiven this set of routes:\r\n\r\n``` ruby\r\nTestapp::Application.routes.draw do\r\n  resources :products\r\nend\r\n```\r\n\r\nthen there\'s a discrepancy between 3.1 and 3.2 when you have missing params for url helpers, e.g:\r\n\r\n```\r\nLoading development environment (Rails 3.1.3)\r\n>> app.product_path\r\nActionController::RoutingError: No route matches {:action=>"show", :controller=>"products"}\r\n\r\nLoading development environment (Rails 3.2.0.rc2)\r\n>> app.product_path\r\n=> "/products"\r\n```\r\n\r\nNot sure whether this is important or not.\r\n\r\n/cc @tenderlove '
4401,'tenderlove','functional tests RoutingError when route exists\nI was looking to add a parameter that should be present base on the route.  This works in a controller and when viewing the page, but when writing a functional test it causes the route to never be found.  \r\n\r\n    resources :awesomes, :awesome_level => 100, :only => [:index]\r\n\r\ncauses the awesomes controller index action to have param[:awesome_level] set to 100, but now I cannot write a functional test for this action.  When I write a functional test it causes:\r\n\r\n\r\nActionController::RoutingError: No route matches {:controller=>"awesomes"}\r\n\r\nTo happen when I do not believe it should.  If the :awesome_level is removed from the routes file, the test passes.\r\n\r\nExample of the bug is in a bare rails project, with only the problem located at the github repo here:\r\n\r\nhttps://github.com/kenmazaika/routing-error-rails'
4379,'pixeltrix','Certain URLs trigger encoding errors when using action caching\nGenerate a fresh rails app, with a resource "things", and a things_controller.rb like this:\r\n\r\n```ruby\r\nclass ThingsController < ApplicationController\r\n  caches_action :show\r\n\r\n  def show\r\n    render :text => \'hi there\'\r\n  end\r\nend\r\n```\r\n\r\nNow start the app in production mode (so caching is active), and request a URL like this:\r\n\r\n    curl \'http://localhost:3000/things/1.%C3%83%C2%A2%C3%A2%E2%80%9A%C2%AC%C3%82%C2%A8%C3%83%C2%A2%C3%A2%E2%80%9A%C2%AC%C3%82%C2%A8\'\r\n\r\nThe result is the stacktrace at bottom. This is with Rails 3.1, but I\'ve seen the problem in production for several Rails versions, apparently because some crawlers (-cough- bing) request invalid links which incorporate trailing punctuation.\r\n\r\nApologies that I have no idea how to reproduce this with a test right now, but if I\'m pointed in the right direction, I\'ll be happy to help further.\r\n\r\n```\r\nEncoding::CompatibilityError in ThingsController#show\r\n\r\nincompatible character encodings: ASCII-8BIT and UTF-8\r\n\r\nactivesupport (3.1.3) lib/active_support/core_ext/uri.rb:18:in `gsub\'\r\nactivesupport (3.1.3) lib/active_support/core_ext/uri.rb:18:in `unescape\'\r\nactionpack (3.1.3) lib/action_controller/caching/actions.rb:179:in `normalize!\'\r\nactionpack (3.1.3) lib/action_controller/caching/actions.rb:172:in `initialize\'\r\nactionpack (3.1.3) lib/action_controller/caching/actions.rb:140:in `new\'\r\nactionpack (3.1.3) lib/action_controller/caching/actions.rb:140:in `filter\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:313:in `around\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:302:in `_callback_around_7\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:206:in `_conditional_callback_around_18\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:416:in `_run__758917200118941995__process_action__1057316068177780704__callbacks\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:81:in `run_callbacks\'\r\nactionpack (3.1.3) lib/abstract_controller/callbacks.rb:17:in `process_action\'\r\nactionpack (3.1.3) lib/action_controller/metal/rescue.rb:17:in `process_action\'\r\nactionpack (3.1.3) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action\'\r\nactivesupport (3.1.3) lib/active_support/notifications.rb:53:in `block in instrument\'\r\nactivesupport (3.1.3) lib/active_support/notifications/instrumenter.rb:21:in `instrument\'\r\nactivesupport (3.1.3) lib/active_support/notifications.rb:53:in `instrument\'\r\nactionpack (3.1.3) lib/action_controller/metal/instrumentation.rb:29:in `process_action\'\r\nactionpack (3.1.3) lib/action_controller/metal/params_wrapper.rb:201:in `process_action\'\r\nactiverecord (3.1.3) lib/active_record/railties/controller_runtime.rb:18:in `process_action\'\r\nactionpack (3.1.3) lib/abstract_controller/base.rb:121:in `process\'\r\nactionpack (3.1.3) lib/abstract_controller/rendering.rb:45:in `process\'\r\nactionpack (3.1.3) lib/action_controller/metal.rb:193:in `dispatch\'\r\nactionpack (3.1.3) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch\'\r\nactionpack (3.1.3) lib/action_controller/metal.rb:236:in `block in action\'\r\nactionpack (3.1.3) lib/action_dispatch/routing/route_set.rb:65:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/routing/route_set.rb:65:in `dispatch\'\r\nactionpack (3.1.3) lib/action_dispatch/routing/route_set.rb:29:in `call\'\r\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:152:in `block in call\'\r\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:96:in `block in recognize\'\r\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:89:in `optimized_each\'\r\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:95:in `recognize\'\r\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:141:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/routing/route_set.rb:532:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call\'\r\nrack (1.3.6) lib/rack/etag.rb:23:in `call\'\r\nrack (1.3.6) lib/rack/conditionalget.rb:25:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/head.rb:14:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/params_parser.rb:21:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/flash.rb:247:in `call\'\r\nrack (1.3.6) lib/rack/session/abstract/id.rb:195:in `context\'\r\nrack (1.3.6) lib/rack/session/abstract/id.rb:190:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/cookies.rb:331:in `call\'\r\nactiverecord (3.1.3) lib/active_record/query_cache.rb:64:in `call\'\r\nactiverecord (3.1.3) lib/active_record/connection_adapters/abstract/connection_pool.rb:477:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:392:in `_run_call_callbacks\'\r\nactivesupport (3.1.3) lib/active_support/callbacks.rb:81:in `run_callbacks\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/callbacks.rb:28:in `call\'\r\nrack (1.3.6) lib/rack/sendfile.rb:101:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/remote_ip.rb:48:in `call\'\r\nactionpack (3.1.3) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call\'\r\nrailties (3.1.3) lib/rails/rack/logger.rb:13:in `call\'\r\nrack (1.3.6) lib/rack/methodoverride.rb:24:in `call\'\r\nrack (1.3.6) lib/rack/runtime.rb:17:in `call\'\r\nactivesupport (3.1.3) lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\r\nrack (1.3.6) lib/rack/lock.rb:15:in `call\'\r\nrack-cache (1.1) lib/rack/cache/context.rb:132:in `forward\'\r\nrack-cache (1.1) lib/rack/cache/context.rb:241:in `fetch\'\r\nrack-cache (1.1) lib/rack/cache/context.rb:181:in `lookup\'\r\nrack-cache (1.1) lib/rack/cache/context.rb:65:in `call!\'\r\nrack-cache (1.1) lib/rack/cache/context.rb:50:in `call\'\r\nrailties (3.1.3) lib/rails/engine.rb:456:in `call\'\r\nrack (1.3.6) lib/rack/content_length.rb:14:in `call\'\r\nrailties (3.1.3) lib/rails/rack/log_tailer.rb:14:in `call\'\r\nrack (1.3.6) lib/rack/handler/webrick.rb:59:in `service\'\r\n/Users/steve/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/webrick/httpserver.rb:138:in `service\'\r\n/Users/steve/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/webrick/httpserver.rb:94:in `run\'\r\n/Users/steve/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/webrick/server.rb:191:in `block in start_thread\'\r\n\r\nRequest\r\n\r\nParameters:\r\n\r\n{"id"=>"1",\r\n "format"=>"Ã¢â‚¬Â¨Ã¢â‚¬Â¨"}\r\n```'
4364,'drogus',"Tests failing for helpers (and possibly views) when run within a mountable engine.\nI have an app that is a namespaced, mountable engine.  When writing specs for helpers, none of the named route helpers are available within the helpers themselves.  For example:\r\n\r\n```ruby\r\nmodule Booker\r\n  module BookHelper\r\n    def edit_book_link(book)\r\n      link_to 'Edit', edit_book_path(book)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nYes, the example is rediculous, but should illustrate my point.  When running tests within the engine, it appears that view/helper specs use an instance of **ActionView::TestCase::TestController** for the environment.  Since the standard way of testing engines these days is with an embedded dummy app, it appears that when *edit_book_link* above is run from the test suite, *edit_book_path* must exist in the dummy app's routes, which it won't.\r\n\r\nTo prove this, changing *edit_book_path* above to *booker.edit_book_path* causes the test to pass (but fail at runtime).\r\n\r\nMy solution to this thus far has been to add:\r\n\r\n```ruby\r\nActionView::TestCase::TestController.send :include, Booker::Engine.routes.url_helpers\r\n```\r\n\r\nto my test suite's helper file.\r\n\r\nI apologize for poorly explaining the problem, but hopefully the monkeypatch might point someone to a more permanent fix.\r\n"
4321,'tenderlove','validates_uniqueness_of fails with non-ID arguments\nExample:\r\n\r\n```ruby\r\nclass Foo < ActiveRecord::Base\r\n  belongs_to :a\r\n  belongs_to :b\r\n\r\n  validates_presence_of :a\r\n  validates_presence_of :b\r\n\r\n  validates_uniqueness_of :a, :scope => :b # fails with "NoMethodError: undefined method `text?\' for nil:NilClass"\r\n  # activesupport-3.0.11/lib/active_support/whiny_nil.rb:48:in `method_missing\'\r\n\r\n  validates_uniqueness_of :a_id, :scope => :b_id # works\r\nend\r\n```'
4284,'fxn','Added aliases for prev_year, prev_month, and prev_week in Time and Date calculations\nAs I was working with some time methods, I noticed that using the word `last` made more sense as it is generally how it is thought of. I have added aliases for these three methods last_year, last_month, and last_week.'
4276,'tenderlove','The close method of middlewares (body class) is not getting called.\nI noticed that the close method of the [identity map middleware body class] (https://github.com/rails/rails/blob/master/activerecord/lib/active_record/identity_map.rb#L127) is not getting called.\r\n\r\nYou can verify that with this monkey patch:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  module IdentityMap\r\n    class Middleware\r\n      class Body\r\n        def initialize(target, original)\r\n          Rails.logger.info("initialized")\r\n\r\n          @target = target\r\n          @original = original\r\n        end\r\n\r\n        def each(&block)\r\n          @target.each(&block)\r\n        end\r\n\r\n        def close\r\n          Rails.logger.info("closed")\r\n\r\n          @target.close if @target.respond_to?(:close)\r\n        ensure\r\n          IdentityMap.enabled = @original\r\n          IdentityMap.clear\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nDon\'t forget to enable the identity map with:\r\n\r\n```ruby\r\nconfig.active_record.identity_map = true\r\n```'
4260,'tenderlove','recognize_path skips scoped params in constraints\nUsing Rails 3.1 and 3.2.0.rc1, using `recognize_path` causes params not being provided to route constraints.\r\n\r\nWhile the route works correctly when called directly (using a browser, or via `app.get`), it fails being recognized using `recognized_path`.\r\n\r\nHere is the route:\r\n\r\n```ruby\r\nscope \'/prefix/:scoped_param/suffix\' do\r\n  constraints(ParamConstraint.new) do\r\n    resource :success\r\n  end\r\nend\r\n```\r\n\r\nHere is the constraint\r\n\r\n```ruby\r\nclass ParamConstraint\r\n  def matches?(request)\r\n    Rails.logger.info request.params\r\n    return request.params[:scoped_param]\r\n  end\r\nend\r\n```\r\n\r\nHere are the tests\r\n\r\n```ruby\r\nclass ScopedParamConstraintTest < ActionDispatch::IntegrationTest\r\n  test "Can fetch scoped page" do\r\n    get helper.success_path(scoped_param: \'test\')\r\n    assert_response :success\r\n  end\r\n    \r\n  test "Can recognize scoped page path" do\r\n    assert_not_nil Rails.application.routes.recognize_path(helper.success_path(scoped_param: \'test\'))\r\n  end\r\nend\r\n```\r\n\r\nTest results\r\n\r\n```\r\n# Running tests:\r\n\r\n.E\r\n\r\nFinished tests in 0.092361s, 21.6542 tests/s, 10.8271 assertions/s.\r\n\r\n  1) Error:\r\ntest_Can_recognize_scoped_page_path(ScopedParamConstraintTest):\r\nActionController::RoutingError: No route matches "/prefix/test/suffix/success"\r\n    /Users/ybart/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.2.0.rc1/lib/action_dispatch/routing/route_set.rb:603:in `recognize_path\'\r\n    /Users/ybart/Documents/sources/tests/rails/scoped-param-constraint/test/integration/scoped_param_constraint_test.rb:10:in `block in <class:ScopedParamConstraintTest>\'\r\n\r\n2 tests, 1 assertions, 0 failures, 1 errors, 0 skips\r\nErrors running test:integration! #<RuntimeError: Command failed with status (1): [/Users/ybart/.rvm/rubies/ruby-1.9.3-p0/bin...]>\r\n```\r\n\r\n\r\nI can provide a test project if needed.\r\n'
4164,'tenderlove',"Change to the way conflicting routes work\nIf I have the following in my routes.rb\r\n\r\n```ruby\r\n  resources :models\r\n  match 'special' => 'model#new', :as => :new_model\r\n```\r\nthen in 3.1, new_model_path would return\r\n\r\n```\r\n/special\r\n```\r\n\r\nbut now it returns\r\n\r\n```\r\n/models/new\r\n```\r\n\r\nIf you reverse their order, it now returns\r\n\r\n```\r\n/special\r\n```\r\n\r\nbut that is a change in behavior from 3.1.\r\n\r\n//Lars"
4084,'spastorino',"Asset Pipeline undefined method `[]' for nil:NilClass\nUsing, \r\n\r\nRuby 1.9.3-p0\r\nRails 3.1.3\r\nMac-OSX 6.8\r\n\r\nDatabase\r\nPostgresql\r\n\r\nI get this error when running the following command to precompile the assets.\r\n\r\n RAILS_ENV=production bundle exec rake assets:precompile --trace\r\n\r\n** Invoke assets:precompile (first_time)\r\n** Execute assets:precompile\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/bin/ruby /Users/me-myself/.rbenv/versions/1.9.3-p0/bin/rake assets:precompile:all RAILS_ENV=production RAILS_GROUPS=assets --trace\r\n** Invoke assets:precompile:all (first_time)\r\n** Execute assets:precompile:all\r\n** Invoke assets:precompile:primary (first_time)\r\n** Invoke assets:environment (first_time)\r\n** Execute assets:environment\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Invoke tmp:cache:clear (first_time)\r\n** Execute tmp:cache:clear\r\n** Execute assets:precompile:primary\r\nrake aborted!\r\nundefined method `[]' for nil:NilClass\r\n  (in /Users/me-myself/Rails_projects/pfvsa/app/assets/stylesheets/application.css)\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-rails-3.1.5/lib/sass/rails/helpers.rb:40:in `resolver'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-rails-3.1.5/lib/sass/rails/helpers.rb:25:in `image_url'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/funcall.rb:88:in `_perform'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/node.rb:40:in `perform'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/list.rb:69:in `block in _perform'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/list.rb:69:in `map'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/list.rb:69:in `_perform'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/script/node.rb:40:in `perform'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:214:in `visit_prop'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:37:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:18:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `block in visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `map'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:27:in `block in visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:39:in `with_environment'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:26:in `visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:37:in `block in visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:234:in `visit_rule'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:37:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:18:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `block in visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `map'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:53:in `visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:27:in `block in visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:39:in `with_environment'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:26:in `visit_children'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:37:in `block in visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:47:in `visit_root'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/base.rb:37:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:18:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/visitors/perform.rb:7:in `visit'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/tree/root_node.rb:20:in `render'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/engine.rb:300:in `_render'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-3.1.11/lib/sass/engine.rb:247:in `render'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sass-rails-3.1.5/lib/sass/rails/compressor.rb:8:in `compress'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/compressors.rb:18:in `compress'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/processing.rb:243:in `block in css_compressor='\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/processor.rb:29:in `call'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/processor.rb:29:in `evaluate'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/tilt-1.3.3/lib/tilt/template.rb:76:in `render'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/context.rb:175:in `block in evaluate'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/context.rb:172:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/context.rb:172:in `evaluate'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/bundled_asset.rb:242:in `block in build_source'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/caching.rb:30:in `cache_hash'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/bundled_asset.rb:235:in `build_source'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/bundled_asset.rb:71:in `digest'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/asset.rb:95:in `digest_path'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/static_compiler.rb:58:in `path_for'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/static_compiler.rb:35:in `write_asset'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/static_compiler.rb:21:in `block in compile'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:151:in `block in each_logical_path'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:139:in `block (2 levels) in each_file'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:129:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:129:in `each_entry'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:137:in `block in each_file'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:136:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:136:in `each_file'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/sprockets-2.0.3/lib/sprockets/base.rb:149:in `each_logical_path'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/static_compiler.rb:18:in `compile'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:52:in `internal_precompile'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:66:in `block (3 levels) in <top (required)>'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `call'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `block in execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:158:in `block in invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:151:in `invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:144:in `invoke'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:56:in `block (3 levels) in <top (required)>'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `call'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `block in execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:158:in `block in invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:151:in `invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:144:in `invoke'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:116:in `invoke_task'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `block (2 levels) in top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `block in top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:133:in `standard_exception_handling'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:88:in `top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:66:in `block in run'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:133:in `standard_exception_handling'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:63:in `run'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/rake-0.9.2.2/bin/rake:32:in `<top (required)>'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/bin/rake:19:in `load'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/bin/rake:19:in `<main>'\r\nTasks: TOP => assets:precompile:primary\r\nrake aborted!\r\nCommand failed with status (1): [/Users/me-myself/.rbenv/versions/1.9....]\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils.rb:53:in `block in create_shell_runner'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils.rb:45:in `call'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils.rb:45:in `sh'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils_ext.rb:39:in `sh'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils.rb:80:in `ruby'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/file_utils_ext.rb:39:in `ruby'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:9:in `ruby_rake_task'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:17:in `invoke_or_reboot_rake_task'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/actionpack-3.1.3/lib/sprockets/assets.rake:25:in `block (2 levels) in <top (required)>'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `call'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:205:in `block in execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:200:in `execute'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:158:in `block in invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:151:in `invoke_with_call_chain'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/task.rb:144:in `invoke'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:116:in `invoke_task'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `block (2 levels) in top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `each'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:94:in `block in top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:133:in `standard_exception_handling'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:88:in `top_level'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:66:in `block in run'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:133:in `standard_exception_handling'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/1.9.1/rake/application.rb:63:in `run'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/rake-0.9.2.2/bin/rake:32:in `<top (required)>'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/bin/rake:19:in `load'\r\n/Users/me-myself/.rbenv/versions/1.9.3-p0/bin/rake:19:in `<main>'\r\nTasks: TOP => assets:precompile\r\n\r\n"
4053,'drogus','No uniform replacement for \'config.relative_url_root\'\nSupplying\r\nconfig.action_controller.relative_url_root = "/subdir"\r\nin environment.rb is not possible anymore (at least in rails 3.1.3)\r\n\r\nBut what is the \'official\' replacement to let your Rails app know it\'s running in a subdirectory and should prefix generated paths and urls with a subdirectory name.\r\n\r\nProblem is that ENV[\'RAILS_RELATIVE_URL_ROOT\'] is not honored in the url-helpers or path-helpers like: url_for() and path_for()\r\nThe asset pipeline and asset urls still make use of this environment variable.\r\n\r\nI think supplying the relative root for deployment in a subdirectory should be done via environment variables, because it is installation/server specific.\r\nI believe wrapping all your routes in a namespace is not a viable solution. (I\'m not hard-coding my domain-name either)'
4044,'guilleiguaran',"Identity Map doesn't play nicely with Postgres' schema search path\nSomewhere between 3.1 and 3.2, the Postgres adapter got a lot of love in terms of supporting the schema search path. This is awesome. I'm using schema separation heavily in my app, and it looks like I'm able to remove 4/5 of the hacks I have in place to make 3.1 do what I need. Great work on this!\r\n\r\nThe Identity Map still doesn't work with the new search path support though -- if a (table_name, id) pair exists in two schemas, they clobber each other in the identity map.\r\n\r\nThis is the somewhat inelegant solution I came up with for my own app: https://gist.github.com/1dbdb44bdb077edfa2ca . I don't really propose this as a drop-in solution, but perhaps it's a starting point. It is unfortunate that this solution adds overhead for the 99% case where the search path is irrelevant. Perhaps if it were an option? `config.identity_map.key_by_schema_search_path` or similar?\r\n\r\nThoughts? I'm happy to implement this, but I'd like some guidance on how to go about it."
4042,'tenderlove','instance of IO needed (Rails 3.2.0.rc1)\nI\'m keep getting this error in Rails 3.2.0.rc1 (previously using Rails 3.1.3 without errors):\r\n\r\n```\r\ninstance of IO needed\r\n```\r\nExtracted source (around line #17):\r\n\r\n```\r\n14:     = favicon_link_tag asset_path(\'apple-touch-icon.png\'), rel: \'apple-touch-icon\', type: \'image/png\'\r\n15: \r\n16:     /[if lt IE 9]\r\n17:       = javascript_include_tag "html5"\r\n18:       = javascript_include_tag "chrome_frame"\r\n19: \r\n20:     = stylesheet_link_tag "application"\r\n```'
4038,'drogus',"http_digest_authentication error - fails with trailing slash - rails 3.1.3\n* `http://localhost:3000/posts` works as expected\r\n* `http://localhost:3000/posts/` will never validate authentication\r\n\r\nverified on chrome and firefox against webrick, thin, and unicorn\r\n\r\n```\r\nclass ApplicationController < ActionController::Base\r\n  protect_from_forgery\r\n\r\n  before_filter :authenticate\r\n\r\n  private\r\n\r\n  def authenticate\r\n    authenticated = authenticate_or_request_with_http_digest('mysite') do |username|\r\n      USERS[username]\r\n    end\r\n    request_http_digest_authentication if !authenticated\r\n  end\r\nend\r\n```\r\n\r\n\r\n`ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin11.2.0]`\r\n\r\npossibly related to #3228"
4037,'tenderlove','AR SQL escaping issue\nHey Guys,\r\n\r\nUsing the following code:\r\n\r\n    Repository.where("repositories.name ~* ? OR repositories.owner_name ~* ?", query, query)\r\n\r\nIf the query is: josh/\r\nit is outputted as \'josh/\'\r\nwhich escapes the \' and causes:\r\n\r\n    ActiveRecord::StatementInvalid: PGError: ERROR: invalid regular expression: invalid escape \\ sequence : SELECT "repositories".* FROM "repositories" WHERE ("repositories"."last_build_started_at" IS NOT NULL) AND (repositories.name ~* \'cap\\\' OR repositories\r\n\r\nThanks,\r\n\r\nJosh'
4004,'jonleighton','serialized attribute returns ActiveRecord::AttributeMethods::Serialization::Attribute in subclass\n    class SubClass < MyClass\r\n      serialize :search_params, Hash\r\n\r\n    1.9.3p0 :030 > SubClass.last.search_params\r\n     => #<struct ActiveRecord::AttributeMethods::Serialization::Attribute coder=#<ActiveRecord::Coders::YAMLColumn:0x007fd46b639a10 @object_class=Hash>, value="---\\n:test: hi\\n", state=:serialized> \r\n\r\nAFAIK it should return the typecasted value. Maybe related: https://github.com/rails/rails/commit/f4853dc17490c88966721ca1ad422baf6ae49745\r\n\r\nEdited title and example.'
3995,'rafaelfranca',"f.check_box do not work inverting the checked and unchecked value\nHello,\r\n\r\nI want to invert the logic of _destroy attribute on a specific nested form and I found a bug.\r\n\r\nSee this input:\r\n\r\n``` ruby\r\nf.check_box :_destroy, {}, false, true\r\n```\r\n\r\nI need this:\r\n\r\n* If check box is checked, keep the record on database\r\n* If check box is unchecked, destroy the record\r\n\r\nThe issue happens on this piece:\r\n\r\n``` ruby\r\ndef check_box_checked?(value, checked_value)\r\n  case value\r\n  when TrueClass, FalseClass\r\n    value\r\n  when NilClass\r\n    false\r\n  when Integer\r\n    value != 0\r\n  when String\r\n    value == checked_value\r\n  when Array\r\n    value.include?(checked_value)\r\n  else\r\n    value.to_i != 0\r\n  end\r\nend\r\n```\r\n\r\nNote if the value is a boolean value, this code do not compare with checked value, just returns the value.\r\n\r\nThe same will happens if nil means checked, or 0 means checked.\r\n\r\nAlso, the else seems strange for me.\r\n\r\nWhy not compare with checked_value on all cases?\r\n\r\nI didn't tested but this seems more obvious:\r\n\r\n``` ruby\r\ndef check_box_checked?(value, checked_value)\r\n  if value.is_a?(Array)\r\n    value.include?(checked_value)\r\n  else\r\n    value == checked_value\r\n  end\r\nend\r\n```\r\n\r\nWhat you think?"
3987,'jonleighton','ActiveRecord >=3.1 / setting primary_key to an column defined in the db as auto-increment but not primary key\nWhen using a legacy database or when writing to a view, if a column is set to auto-increment, but the schema doesn\'t define it as a "primary key", then active record fails to properly set the primary_key column in the schema_cache early enough.\r\n\r\nIt looks like by calling #create, the schema_cache\'s colums are filled before AR:Base#columns gets called. #columns being the method that sets the primary_key in the cache\r\n\r\nI\'ve included a failing test as well as a proposed fix in [this gist](https://gist.github.com/1410534). \r\n\r\nIn my opinion #columns is probably not the place to be putting the primary_key in the cache though since clearly the column definitions in the cache are filled before #columns is called. A better fix would be to either 1. find a better time earlier in the query life cycle to cache the primary_key as set by AR, or 2. cache the column definitions later in the query cycle.'
3980,'guilleiguaran','Assets precompiling not respecting sprocket cache\nIt has occurred to me that Sprockets can use several caching strategies. The default one is filesystem, but others can be implemented easily.\r\n\r\nEvent rails is providing a (not documented) configuration setter to change the Sprocket caching (https://github.com/rails/rails/blob/a5589db063e0f527357f6be338adecf4716e6b47/actionpack/lib/sprockets/railtie.rb#L28).\r\n\r\nHowever when looking at the pre compilation tasks, we see that Rails is not keeping this into account. It is just removing the temporary cache folder (https://github.com/rails/rails/blob/a5589db063e0f527357f6be338adecf4716e6b47/actionpack/lib/sprockets/assets.rake#L65).\r\n\r\nIdeally the assets rake tasks should use a dedicated clear cache function, that will clear the Sprockets cache.'
3935,'drogus','\'form_for\' seems lost \'scope\' message.\nIn my rails(3.1.3),\r\n\r\nI have defined a Group model  using:\r\n```\r\n$ rails g scaffold group name:string\r\n```\r\n\r\nThen I add the following in routes.rb\r\n\r\n```ruby\r\nscope ":network",:constraints => {:network => /[^\\/]+/} do\r\n    resources :users\r\n    resources :groups\r\nend\r\n```\r\nNext, I access the webpage with the url \'http://localhost:3000/abc.com.cn/groups/1/edit\',  the returned form\'s action url as following\r\n\r\n&lt;form accept-charset="UTF-8" action="/1/groups/1" class="es-form-group" id="edit_group_1" method="post"&gt;\r\n.....\r\n\r\n### but, what I expect is  /abc.com.cn/groups/1,as the following\r\n&lt;form accept-charset="UTF-8" action="/abc.com.cn/groups/1" class="es-form-group" id="edit_group_1" method="post"&gt;\r\n.....\r\n\r\nrails seams lost the scope information in params[:network].\r\nI checked the source code of route_set.rb\r\n\r\n```ruby\r\ndef define_hash_access(route, name, kind, options)\r\n    selector = hash_access_name(name, kind)\r\n\r\n            # We use module_eval to avoid leaks\r\n            @module.module_eval <<-END_EVAL, __FILE__, __LINE__ + 1\r\n              remove_possible_method :#{selector}\r\n              def #{selector}(*args)\r\n                options = args.extract_options!\r\n                result = #{options.inspect}\r\n                if args.any?\r\n                  result[:_positional_args] = args\r\n                  result[:_positional_keys] = #{route.segment_keys.inspect}\r\n                end\r\n                result.merge(options)\r\n              end\r\n              protected :#{selector}\r\n            END_EVAL\r\n            helpers << selector\r\n          end\r\n```\r\n\r\nIn my case ,The result[:_positional_keys]  seems not match the result[:_positional_args] in array size.\r\nThe result[:_positional_keys] has three entries,but result[:_positional_args] only has one,the debug message as the following:\r\n\r\n```ruby\r\n:_positional_args=>[#<Group id: 1, name: "my group", created_at: "2011-12-09 08:43:19", updated_at: "2011-12-09 08:43:19">], :_positional_keys=>[:network, :id, :format]\r\n```\r\nI think this maybe a bug for rails \'s route, someone can give me an advice?\r\n\r\nPS: I\'m a ruby/rails beginner…I still not understand how the rails\'route works, hope the information will be helpful.'
3921,'lifo',"Added method ActiveRecord::Base#load kinda screwed the pooch\nCommit 378ce0e89c498e2844aef0b184c4fe8610d53b72 added a `load` method to AR::Base.\r\n\r\nFirst of all, it was snuck into what was supposed to be a security patch (3.0.11), which definitely wasn't very semver friendly.\r\n\r\nWe have an app that has a Load model (referring to truckloads n stuff), so you can imagine the wonkiness that came up with our `belongs_to` relationships when updating to this.  Is there any way this method name can be changed (and backported to 3-0 and 3-1 stable)?"
3919,'drogus',"Asset Pipeline and Sass - Incorrect documentation or bug\nIn the RailsGuide, it says this about precompiling for the asset pipeline:\r\n\r\n`The default matcher for compiling files includes application.js, application.css and all files that do not end in js or css`\r\n\r\nI had some problems recently with Rails not precompiling additional root level .css.scss files unless they are specified in config.assets.precompile. Even more confusing is that in order to precompile these files, they must be specified with .css as the extension instead of css.scss\r\n\r\nFor example, if I have a file in `/app/assets/stylesheets/` called `layout.css.scss`, it will not precompile unless this is added:\r\n\r\n    config.assets.precompile += ['layout.css']\r\n\r\nI think the documentation needs to be updated or Rails needs to actually do what it says and compile all .scss files automatically."
3917,'guilleiguaran','ActiveResource attributes removed if they\'re in prefix_options\nA similar bug was posted in [lighthouse](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2230) but was marked stale and I can\'t find an equivalent here on github. So I\'m creating a new one.\r\n\r\nIf an ActiveResource has attributes that are also used on the URL (i.e. in the prefix params) they will not be in the object\'s attributes, but will instead be in the prefix_options. They should also be in the attributes.\r\n\r\n# Example\r\n\r\nIn this example, the Chapter object retrieved from the remote REST API has a book_id on it.\r\n\r\n```ruby\r\nclass chapter < ActiveResource::Base\r\n  self.prefix = "/book/:book_id/"\r\nend\r\n\r\nchapter = Chapter.find(:first, :params => { :book_id => 123 })\r\nchapter.book_id\r\n```\r\n\r\nThe call to `chapter.book_id` will return undefined method book_id.\r\n\r\nIf you inspect the chapter, the book_id is in the prefix_options, but not the attributes. Since the book_id comes back in the response from the REST API, I\'d expect it to be in both the prefix_options and the attributes. '
3837,'jonleighton','to_xml fails on master\nTo reproduce, go into rails console and call <code>to_xml</code> on pretty much any <code>ActiveRecord::Base</code> object.  All that is required is a <code>datetime</code> attribute like <code>created_at</code> or <code>updated_at</code>.\r\n\r\nTest case: http://intertwingly.net/stories/2011/12/02/toXml.html\r\n\r\nf1a534af98950efd9969deea1540717c4516d673 is the first bad commit:\r\n\r\n<code>\r\nAuthor: Jon Leighton <j@jonathanleighton.com>\r\nDate:   Thu Dec 1 17:55:27 2011 +0000\r\n\r\n    Remove the need for type_cast_attribute.\r\n    \r\n    This is good because it reduces duplication.\r\n</code>\r\n'
3798,'sgrif','has_many :through join model created twice in after_create in Rails 3.1.3\nWhen new has_many :through join model created from after_create filter, the SQL to create join model is executed twice.\r\n\r\nThe correct behaviour is that it should be executed once.\r\n\r\nThis problem only occurs when join model created in an after_create filter. When created from a after_save filter, the SQL to create join model is executed only once, which is the correct behaviour.\r\n\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n\r\n  has_many :user_groups\r\n  has_many :groups, :through => :user_groups\r\n\r\n  after_create :assign_role\r\n\r\n  def assign_role\r\n    Rails.logger.info "User assign_role called with: #{group_name}"\r\n    self.groups << Group.find_by_name(group_name)\r\n    Rails.logger.info "Finished user assign_role called with: #{group_name}"\r\n  end\r\nend\r\n```\r\n\r\nFor example, when new User created the SQL to create UserGroup is executed twice, when it should be executed once.\r\n\r\nFrom the log:\r\n\r\n   (0.5ms)  BEGIN\r\n\r\n   (0.6ms)  SELECT 1 FROM "user" WHERE "user"."username" = \'u\' LIMIT 1\r\n  SQL (0.7ms)  INSERT INTO "user" ("algorithm", "created_at", "is_active", "is_super_admin", ...\r\n\r\nUser assign_role called with: Borrowers\r\n\r\n  Group Load (0.5ms)  SELECT "group".* FROM "group" WHERE "group"."name" = \'Borrowers\' LIMIT 1\r\n\r\n  User Load (0.8ms)  SELECT "user".* FROM "user" WHERE "user"."id" = 10336 LIMIT 1\r\n\r\n  SQL (0.8ms)  INSERT INTO "user_group" ("created_at", "group_id", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "user_id"  [["created_at", Tue, 29 Nov 2011 11:44:57 UTC +00:00], ["group_id", 1], ["updated_at", Tue, 29 Nov 2011 11:44:57 UTC +00:00], ["user_id", 10336]]\r\n\r\nFinished user assign_role called with: Borrowers\r\n\r\n  User Load (0.5ms)  SELECT "user".* FROM "user" WHERE "user"."id" = 10336 LIMIT 1\r\n  SQL (0.9ms)  INSERT INTO "user_group" ("created_at", "group_id", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "user_id"  [["created_at", Tue, 29 Nov 2011 11:44:57 UTC +00:00], ["group_id", 1], ["updated_at", Tue, 29 Nov 2011 11:44:57 UTC +00:00], ["user_id", 10336]]\r\n\r\nPGError: ERROR:  duplicate key value violates unique constraint "user_group_pkey"\r\n\r\nDETAIL:  Key (user_id, group_id)=(10336, 1) already exists.\r\n\r\n: INSERT INTO "user_group" ("created_at", "group_id", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "user_id"\r\n   (0.3ms)  ROLLBACK'
3778,'guilleiguaran','Rails.cache.fetch behaving inconsistently\nI\'m trying to get memcached working with rails 3.0.9 and ruby 1.9.3, and the following code running inside a controller produces inconsistent results. Essentially, the fetch method is returning an Array when there is a cache miss and a String when there is a cache hit. \r\n\r\n```ruby\r\n@the_results = Rails.cache.fetch("a_key") do\r\n  TheModel.all \r\nend\r\n    \r\nlogger.info("@the_results.class = #{@the_results.class}")\r\n```\r\n\r\nThis seems to occur when I have `config.cache_classes = false` (in the development environment). Turning on cache_classes fixes the issue, but I don\'t want that in development.\r\n\r\nHere is my cache configuration\r\n\r\n```ruby\r\nmemcache_options = {\r\n  :compression => false,\r\n  :debug => true,\r\n  # :namespace => \'default\',\r\n  :readonly => false,\r\n  :urlencode => false\r\n}\r\n\r\nmemcache_servers = "localhost"\r\n\r\nconfig.cache_store = :mem_cache_store, memcache_servers, memcache_options\r\n```\r\n\r\nIs this a known issue? I found some related tickets that are closed, but they didn\'t look exactly the same.'
3774,'drogus','Namespaced migration files\nAfter copying migration files of many namespaced rails engines can become confusing in the mainapp.\r\nYou can have 100+ files there, without knowing which file belongs to which engine.\r\n(Example: How to delete the correct files if not using the engine anymore?)\r\n\r\nMy proposal is to create folders for namespacing these migration files, like this is done everywhere else for namespaced engines. Its just for a clearer view.\r\n\r\nThis means every process for migration must take care of possible subfolders.'
3766,'drogus','url helper with relative_url_root\nthe gist is https://gist.github.com/1390486\r\n\r\n```ruby\r\n# So I was trying to use named route helpers in sprockets, and the app was hosted in a subdirectory.\r\n# This is what I came up with. Please share your hackeries.\r\n#\r\n# using named routes in sprocket Rails 3.1\r\n# you can use this in app/assets/javascripts/bam.js.erb\r\n# or any other erb sprocket asset\r\n\r\nRails.application.routes.url_helpers.bam_path(\r\n  :script_name => ApplicationController.config.relative_url_root\r\n)\r\n```\r\n\r\nany neater solution?'
3722,'rafaelfranca',"'Join Model' Observer callbacks are not called when using collections methods to create/remove relationships.\nThe issue can be understood more correctly here: \r\n\r\nhttps://github.com/leandrosts/rails_active_record_callback_issue/blob/master/spec/observers/permission_observer_spec.rb\r\n\r\nIs it really a bug or an expected behavior?\r\n\r\nThanks!"
3704,'jonleighton','Railties generating sass-rails dependency as ~> 3.1.5.rc.2, should be ~> 3.1.5\n'
3677,'guilleiguaran','asset_path raising exception when asset_host is a Proc\nUsecase: \r\n\r\nMy app with 2mio daily users uses a CDN to deliver assets. 80% of users use HTTP and 20% HTTPS. Therefor the request protocol should be reflected in the CDN url as SSL CDN traffic at a certain volume is much more expensive.\r\n\r\n```ruby\r\nconfig.action_controller.asset_host = Proc.new do |source, request|\r\n  if request.ssl?\r\n    "https://my.cdn.com"\r\n  else\r\n    "http://my.cdn.com"\r\n  end\r\nend\r\n```\r\n\r\n\r\nNow when I precompile assets like stylesheets which contain asset_path( source ) calls, it crashes because at that point no request object for the proc is present. I think this unnecessary because if stylesheets are loaded from the CDN than assets referenced in them with relative urls will use the CDN host automatically so I don\'t need the host within stylesheets / js files.\r\n\r\nSo instead of raising an exception I\'d rather not set the host in the stylesheets and use relative urls as if the asset host wasn\'t set at all.\r\n\r\n'
3672,'jonleighton',':dependent => :delete_all malfunctioning in 3.1\nHere\'s the set up\r\n\r\n    class Discussion < ActiveRecord::Base\r\n        has_many :posts, :dependent => :delete_all\r\n    end\r\n\r\n    class Post < ActiveRecord::Base\r\n        belongs_to :discussion\r\n    end\r\n\r\nIn Rails 3.0, calling Discussion.find(1).destroy will perform an sql delete as follows\r\n\r\n    DELETE FROM "posts" WHERE ((discussion_id = 1))\r\n    DELETE FROM "discussions" WHERE ("discussion"."id" = 1)\r\n\r\nIn Rails 3.1, calling the same thing will perform the following\r\n\r\n    Post Load (247.1ms)  SELECT "posts".* FROM "posts" WHERE "posts"."discussion_id" = 1\r\n    DELETE FROM "posts" WHERE "posts"."discussion_id" = 1 AND "posts"."id" IN (778876, 778928, 779125, 779175, 779223, 788836, etc...)\r\n    DELETE FROM "discussions" WHERE "discussions"."id" = $1  [["id", 1]]\r\n\r\nYou can create a new Rails 3.1 app and this strange behaviour will happen. This is broken because if you have many posts, ruby eats your CPU alive.'
3662,'fxn','Titlecase replaces "::" with "/"\n`String#titlecase` is replacing all instances of "::" with "/" (since it\'s aliased from `#titleize`). I understand this is to format Ruby class names, but could somebody tell me the rationale behind this?\r\n\r\nShouldn\'t `titlecase` be similar to `upcase` and `downcase`? If somebody wants to format a class name through `humanize` first, shouldn\'t they just do that?\r\n\r\n```ruby\r\n"foo :: bar".titlecase # => "Foo / Bar"\r\n\r\n# Expected "Foo :: Bar"\r\n```\r\n\r\nAt least, if this is intentional for some reason, the documentation should say that "Titlecase is made for formatting class names, and nothing else".\r\n\r\n[EDIT: Changed the title and body of this issue to be more in line with the discussion. It talked about `titleize` previously since they are aliases with each other, but that muddied the discussion. The main point here is that the alias should not be there.]'
3614,'jonleighton',"Rails 3.1.1: STI type column reader is not defined on ruby 1.8.7-p352 until you access the column directly\nUsing a vanilla app via rails new with a simple STI between User and SubUser with rails 3.1.1 with ruby 1.8.7-p352: SubUser#type raises a deprecation warning on ruby 1.8.7-p352 ((irb):1: warning: Object#type is deprecated; use Object#class)  until I access the user's type column via user[:type], or read_attribute or manually create a new user.\r\n\r\nThis issue does not occur with ruby 1.9.2-p290.\r\n\r\nIt appears that since ruby 1.8.7 has a type method, the rails column reader type is not being defined early on and some other code path defines it later on although too late if I only ever go through the type reader.  \r\n\r\nBecause 1.9.2 does not have this type column, my type reader method is defined in the earlier code path and everything works.\r\n\r\nAny ideas where I should look in the code to propose a fix?\r\n\r\nSee this gist for a basic app and overview:\r\nhttps://gist.github.com/1359653"
3571,'pixeltrix','<route>_url helpers should know if they should be using https or http\nIf I specify in my routes that a given URL should be using https, then using the <code>_url</code> route helper should output a https url.\r\n\r\nExample:\r\n\r\n\r\n    scope :constraints => { :protocol => "https" } do\r\n      match \'/login\' => \'controller#action\', :as => \'login\'\r\n    end\r\n\r\n    match \'/\' => \'welcome#index\', :as => \'index\'\r\n\r\n<code>login_url</code> should output <code>https://domain.com/login</code> , even if I\'m on a http page.\r\n\r\n<code>index_url</code> should output <code>http://domain.com/</code>, even if I\'m on a https page.\r\n\r\n\r\nSee http://stackoverflow.com/questions/3993651/rails-3-ssl-routing-redirects-from-https-to-http and http://stackoverflow.com/questions/6699881/getting-rails-url-helpers-to-automatically-output-https-urls for a discussion of this issue.'
3559,'fxn',"Outdated documentation should be invisible to Google\nWhen you search for 'ruby starts_with' (sans quotes) with Google, http://as.rubyonrails.org/classes/ActiveSupport/CoreExtensions/String/StartsEndsWith.html comes up as the tenth hit, and is the first hit providing documentation. The documentation in as.rubyonrails.org is horribly out of date - it was last updated in 2008.\r\n\r\nas.rubyonrails.org should ideally be deleted with users encouraged to use api.rubyonrails.org , but failing that, the domain should be made invisible to Google, possibly via robots.txt, so that Rails newbies don't end up using outdated documentation."
3538,'guilleiguaran','Replace memcache-client with dalli\n"Reopening" #722.\r\n\r\nmemcache-client is deprecated in favor of [dalli](https://github.com/mperham/dalli). In #722 it was suggested to maybe not ship mem_cache_store in Rails and require the user to include this if they want it.\r\n\r\nAlso, memcache-client throws warnings when running the tests.'
3520,'tenderlove','Migrations do not support :precision for postgres timestamp.\nWithout this, it is very difficult to retrieve datetime fields in Rails.  The database holds a higher precision than the time as a string.  See #3519.\r\n\r\nThis is for Rails 3.1.1.\r\n\r\nTried both create_table and change_column.\r\n\r\n``` ruby\r\ncreate_table :test do |t|\r\n    t.datetime :sent_at, :precision => 0 #ignore fractions of seconds\r\nend\r\n```\r\n\r\n```\r\n                                   Table "public.test"\r\n Column  |            Type             |                     Modifiers                     \r\n---------+-----------------------------+---------------------------------------------------\r\n id      | integer                     | not null default nextval(\'test_id_seq\'::regclass)\r\n sent_at | timestamp without time zone | \r\n```\r\n\r\nThat *should* be `timestamp(0) without time zone`.\r\n\r\nI am working on a patch, but I felt I should announce the issue first.  \r\n\r\nInput is encouraged.'
3519,'rafaelfranca','Unable to retrieve record using datetime/timestamp column.\nRails 3.1.1\r\n\r\nI have a table called :emails.  \r\n\r\n``` ruby\r\n\r\nclass CreateEmails < ActiveRecord::Migration\r\n  def self.up\r\n    create_table :emails do |t|\r\n      t.datetime :sent_at\r\n      ...\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThe generated structure:\r\n\r\n``` t-sql\r\nCREATE TABLE emails (\r\n    id integer NOT NULL,\r\n    ...\r\n    sent_at timestamp without time zone,\r\n    created_at timestamp without time zone,\r\n    updated_at timestamp without time zone\r\n```\r\n\r\nI am unable to retrieve a record from Email using ether of the datetime fields.\r\n\r\n``` ruby\r\n> Email.create!(:sent_at => Time.now)\r\n=> #<Email id: 39, sent_at: "2011-11-04 14:21:57">  \r\n\r\n> Email.where(:sent_at => "2011-11-04 14:21:57")\r\n=> [] \r\n```\r\n\r\nThe same happens with created_at and updated_at.\r\n\r\nI believe it is a question of precision.\r\nIt finds the email where :sent_at is between 14:21:57 and 14:21:58.\r\n\r\nShouldn\'t we be able to retrieve this record using our normally formatted datetime strings?'
3489,'senny','ActiveRecord::Connection::SQLiteAdapter#copy_table_indexes incorrectly renames indexes\nWhile working on some migration issues, I discovered an issue with how the SQLite Adapater is handling the #change_column in migrations.  In the code I was working on here is the schema of the table before the migration. The index name is the important detail:\r\n\r\n    pcp070211pcs:profile delwateo$ sqlite3 db/development.sqlite3 \r\n    SQLite version 3.6.23.1\r\n    Enter ".help" for instructions\r\n    Enter SQL statements terminated with a ";"\r\n    sqlite> .schema resources\r\n    CREATE TABLE "resources" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255) NOT NULL,   "url" varchar(255) NOT NULL, "content_id" varchar(255) NOT NULL, "created_at" datetime, "updated_at" datetime, "image_url" varchar(255), "section_id" integer, "deleted" boolean DEFAULT \'f\');\r\n    CREATE INDEX "resources_by_sid_and_cid" ON "resources" ("section_id", "content_id", "deleted");\r\n\r\nThen I run the following offending migration:\r\n\r\n```ruby\r\nclass AddCategorySerializedDataToResource < ActiveRecord::Migration\r\n  def self.up\r\n    add_column :resources, :serialized_data, :text\r\n    add_column :resources, :category, :string\r\n    Resource.all.each {|r| r.update_attribute(:category, \'article\') }\r\n    change_column :resources, :category, :string, :null => false, :default => \'article\'\r\n  end\r\n\r\n  def self.down\r\n    remove_column :resources, :category\r\n    remove_column :resources, :serialized_data\r\n  end\r\nend\r\n```\r\n\r\nchecking the schema after the migration I get:\r\n\r\n    pcp070211pcs:profile delwateo$ sqlite3 db/development.sqlite3 \r\n    SQLite version 3.6.23.1\r\n    Enter ".help" for instructions\r\n    Enter SQL statements terminated with a ";"\r\n    sqlite> .schema resources\r\n    CREATE TABLE "resources" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255) NOT NULL, "url" varchar(255) NOT NULL, "content_id" varchar(255) NOT NULL, "created_at" datetime, "updated_at" datetime, "image_url" varchar(255), "section_id" integer, "deleted" boolean DEFAULT \'f\', "serialized_data" text, "category" varchar(255) DEFAULT \'article\' NOT NULL);\r\n    CREATE INDEX "altered_resources_by_sid_and_cid" ON "resources" ("section_id", "content_id", "deleted");\r\n\r\nThe index name has been incorrectly changed from \'resources_by_sid_and_cid\' to \'altered_resources_by_sid_and_cid\'. Which breaks future migrations that modify that index. Looking through the log/development.log file I see the following:\r\n\r\n\t[1m[35mSQL (0.7ms)[0m  CREATE TEMPORARY TABLE "altered_resources" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255) NOT NULL, "url" varchar(255) NOT NULL, "content_id" varchar(255) NOT NULL, "created_at" datetime, "updated_at" datetime, "image_url" varchar(255), "section_id" integer, "deleted" boolean DEFAULT \'f\', "serialized_data" text, "category" varchar(255)) \r\n\t[1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("resources")[0m\r\n\t[1m[35mSQL (0.1ms)[0m  PRAGMA index_info(\'resources_by_sid_and_cid\')\r\n\t[1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_resources")[0m\r\n\t[1m[35mSQL (0.1ms)[0m  CREATE INDEX "temp_altered_resources_by_sid_and_cid" ON "altered_resources" ("section_id", "content_id", "deleted")\r\n\t[1m[36mSQL (0.6ms)[0m  [1mDROP TABLE "resources"[0m\r\n\t[1m[35mSQL (0.4ms)[0m  CREATE TABLE "resources" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255) NOT NULL, "url" varchar(255) NOT NULL, "content_id" varchar(255) NOT NULL, "created_at" datetime, "updated_at" datetime, "image_url" varchar(255), "section_id" integer, "deleted" boolean DEFAULT \'f\', "serialized_data" text, "category" varchar(255) DEFAULT \'article\' NOT NULL) \r\n\t[1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_resources")[0m\r\n\t[1m[35mSQL (0.1ms)[0m  PRAGMA index_info(\'temp_altered_resources_by_sid_and_cid\')\r\n\t[1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("resources")[0m\r\n\t[1m[35mSQL (0.3ms)[0m  CREATE INDEX "altered_resources_by_sid_and_cid" ON "resources" ("section_id", "content_id", "deleted")\r\n\t[1m[36mSQL (0.5ms)[0m  [1mDROP TABLE "altered_resources"[0m\r\n\r\nAfter doing some hunting around I found the offending code in ActiveRecord::Connection::SQLiteAdapter. When a migration changes the default value of a column in SQLite DB, the migration uses #alter_table, which moves the current table to a temporary table and then moves it back to a normal table with the updated definition. So #alter_table calls #move_table twice which calls #copy_indexes each time its called. Here is the offending function:\r\n\r\n```ruby\r\n# file activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb line:339\r\n        def copy_table_indexes(from, to, rename = {}) #:nodoc:\r\n          indexes(from).each do |index|\r\n            name = index.name\r\n            if to == "altered_#{from}"\r\n              name = "temp_#{name}"\r\n            elsif from == "altered_#{to}"\r\n              name = name[5..-1]\r\n            end\r\n\r\n            to_column_names = columns(to).map { |c| c.name }\r\n            columns = index.columns.map {|c| rename[c] || c }.select do |column|\r\n              to_column_names.include?(column)\r\n            end\r\n\r\n            unless columns.empty?\r\n              # index name can\'t be the same\r\n              opts = { :name => name.gsub(/_(#{from})_/, "_#{to}_") }\r\n              opts[:unique] = true if index.unique\r\n              add_index(to, columns, opts)\r\n            end\r\n          end\r\n        end\r\n```\r\nThe effect of the first time this is called when from=\'resources\' and to=\'altered_resources\' is that the index \'resources_by_sid_and_cid\' is renamed twice within the function. First the line \r\n\r\n```ruby\r\nname = "temp_#{name}"\r\n```\r\n\r\nrenames the index from \'resources_by_sid_and_cid\' to \'temp_resources_by_sid_and_cid\'. The second time by the line\r\n\r\n```ruby\r\nopts = { :name => name.gsub(/_(#{from})_/, "_#{to}_") }\r\n```\r\n\r\nrenames the index to \'temp_altered_resources_by_sid_to_cid\'. This is expected behaviour.\r\n\r\nBut the second time this function is called (when moving the temp table back to the new definition) the index is not correctly renamed. The index name starts as "temp_altered_resources_by_sid_and_cid". The line\r\n\r\n```ruby\r\nname = name[5..-1]\r\n```\r\n\r\nchanges the name to "altered_resources_by_sid_to_cid". But the next line fails to rename the index. The line\r\n\r\n```ruby\r\nopts = { :name => name.gsub(/_(#{from})_/, "_#{to}_") }\r\n```\r\n\r\nis trying to match "\\_altered\\_resources\\_" when it should be trying to match "altered\\_resources\\_". So the index name remains "altered_resources_by_sid_and_cid"/\r\n\r\nBut the second rename seems superfluous to me as well. Why is a second rename required? You have already renamed the index "temp_#{index_name}" to guarantee a unique name. My recommendation would be to just change the offending line to\r\n\r\n```ruby\r\nopts = { :name => name}\r\n```'
3471,'tenderlove','ActiveSupport 3.0.10 Doesn\'t Load Under Ruby 1.9.3\nHere\'s what I get when I just try to require it:\r\n\r\n    $ ruby -ve \'require "active_support/all"\'\r\n    ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin10.8.0]\r\n    /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext/big_decimal/conversions.rb:14:in `<class:BigDecimal>\': yaml_as is deprecated, please use yaml_tag\r\n    /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36: warning: loading in progress, circular require considered harmful - /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext/module/deprecation.rb\r\n    \tfrom -e:1:in `<main>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:35:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:59:in `rescue in require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:59:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/all.rb:3:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext.rb:1:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext.rb:1:in `each\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext.rb:2:in `block in <top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext/module.rb:10:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/core_ext/module/deprecation.rb:1:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/deprecation.rb:3:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/deprecation/method_wrappers.rb:1:in `<top (required)>\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n    \tfrom /Users/james/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'\r\n\r\nI saw a different issue when Guard tried to run my tests in a Rails 3.0.10 project:\r\n\r\n    $ guard\r\n    Please install growl_notify or growl gem for Mac OS X notification support and add it to your Gemfile\r\n    Guard is now watching at \'/Users/james/Documents/subinterest\'\r\n    Bundle already up-to-date\r\n    Starting Redis\r\n    Redis is running with PID 47636\r\n    Starting a Resque worker\r\n    Guard::Test 0.4.0 is running, with Test::Unit 2.4.0!\r\n    Running all tests\r\n    /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load\': test/functional/subscriptions_controller_test.rb:19: syntax error, unexpected keyword_end (SyntaxError)\r\n    test/functional/subscriptions_controller_test.rb:139: syntax error, unexpected keyword_do_block, expecting keyword_end\r\n    test/functional/subscriptions_controller_test.rb:150: syntax error, unexpected keyword_do_block, expecting keyword_end\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency\'\r\n    \tfrom /Users/james/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load\'\r\n    \tfrom -e:1:in `block in <main>\'\r\n    \tfrom -e:1:in `each\'\r\n    \tfrom -e:1:in `<main>\'\r\n'
3457,'tenderlove',"Allow DateTime comparison to Infinity/-Infinity.\nA continuation of the fixes in #544 -- @tenderlove let ActiveRecord support Infinite timestamps, but you can't compare them to other DateTime values.  This commit fixes that."
3429,'pixeltrix','Rails master crashes on form submit\n<pre>\r\nError during failsafe response: can\'t modify frozen String\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:47:in `force_encoding\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:47:in `encode_params\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:59:in `block in encode_params\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:52:in `each\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:52:in `encode_params\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/http/parameters.rb:12:in `parameters\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb:3:in `__home_bug__rvm_gems_ruby_______rc__bundler_gems_rails__eaa_ee__b___actionpack_lib_action_dispatch_middleware_templates_rescues_diagnostics_erb__1193952008907258444_15131840\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/template.rb:143:in `block in render\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/activesupport/lib/active_support/notifications.rb:55:in `instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/template.rb:141:in `render\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/template_renderer.rb:39:in `block (2 levels) in render_template\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/abstract_renderer.rb:38:in `block in instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/activesupport/lib/active_support/notifications.rb:53:in `block in instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/activesupport/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/activesupport/lib/active_support/notifications.rb:53:in `instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/abstract_renderer.rb:38:in `instrument\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/template_renderer.rb:38:in `block in render_template\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/template_renderer.rb:46:in `render_with_layout\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/template_renderer.rb:37:in `render_template\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/template_renderer.rb:12:in `render\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/renderer.rb:36:in `render_template\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/renderer/renderer.rb:17:in `render\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_view/helpers/rendering_helper.rb:24:in `render\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/haml-2bc48af52f20/lib/haml/helpers/action_view_mods.rb:13:in `render_with_haml\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:90:in `rescue_action_locally\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:70:in `render_exception\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:60:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/railties/lib/rails/rack/logger.rb:26:in `call_app\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/railties/lib/rails/rack/logger.rb:16:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/request_id.rb:22:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/gems/rack-1.3.5/lib/rack/methodoverride.rb:24:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/gems/rack-1.3.5/lib/rack/runtime.rb:17:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/activesupport/lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/gems/rack-1.3.5/lib/rack/lock.rb:15:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/actionpack/lib/action_dispatch/middleware/static.rb:53:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/railties/lib/rails/engine.rb:459:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/gems/rack-1.3.5/lib/rack/content_length.rb:14:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/bundler/gems/rails-7eaa2ee07b60/railties/lib/rails/rack/log_tailer.rb:14:in `call\'\r\n  ~/.rvm/gems/ruby-1.9.3-rc1/gems/rack-1.3.5/lib/rack/handler/webrick.rb:59:in `service\'\r\n  ~/.rvm/rubies/ruby-1.9.3-rc1/lib/ruby/1.9.1/webrick/httpserver.rb:138:in `service\'\r\n  ~/.rvm/rubies/ruby-1.9.3-rc1/lib/ruby/1.9.1/webrick/httpserver.rb:94:in `run\'\r\n  ~/.rvm/rubies/ruby-1.9.3-rc1/lib/ruby/1.9.1/webrick/server.rb:191:in `block in start_thread\'\r\n\r\n\r\nStarted GET "/search?utf8=%E2%9C%93&q=d&commit=Search" for 127.0.0.1 at 2011-10-25 01:35:36 +0200\r\n\r\n</pre>'
3425,'jonleighton',"has_many :through behaves as if :uniq => true was set even when its not\nWhen I add the same object multiple times to a has_many :through collection, only one of those objects is actually committed instead of all three as if :uniq => true was set. I tested this with mysql, mysql2 and sqlite3 file and memory db so it seems to be rails related.\r\n\r\nI've created a proper test script to reproduce this: https://gist.github.com/1309797\r\n\r\nThis worked through all of rails 3.0.x but not in any 3.1.x including the beta1.\r\n\r\nYou have tests for this which pass but I suspect that fixtures or the fact that the tests run within transactions which are not committed prevent this bug from occurring.\r\n"
3417,'guilleiguaran',"Should RailsHelper really overwrite stylesheet_path/javascript_path?\nIn my 3.1.1 app `stylesheet_path('application')` throws `ActionView::Template::Error (application isn't precompiled)`. `stylesheet_include_tag` works fine, but in this case I need the path for the stylesheet.\r\n\r\nI think this happens because `Sprockets::Helpers::RailsHelper.stylesheet_path` calls `asset_path(source)` without specifying file extensions, asset type or anything.\r\n\r\n`stylesheet_tag_helpers.rb` seems to be doing it the proper way:\r\n\r\n    def stylesheet_path(source)\r\n      asset_paths.compute_public_path(source, 'stylesheets', :ext => 'css', :protocol => :request)\r\n    end\r\n\r\nThis method is included in Sprockets::Helpers::RailsHelper (through ActionView::Helpers::AssetTagHelper), but overridden afterwards with:\r\n\r\n\r\n    def stylesheet_path(source)\r\n      asset_path(source)\r\n    end\r\n\r\nIf I remove the stylesheet_path method from RailsHelper, everything works as expected.\r\n\r\nWith my level of understanding of Rails and Sprockets, it would seem that both javascript_path and stylesheet_path should be removed from RailsHelper as they are given through AssetTagHelper.\r\n\r\nI'd be glad if anyone with a greater insight would comment on this. Thank you!"
3383,'spastorino','Merge pull request #1796 into Rails 3.1 branch\nIt looks like a code change that effects the output of the "rel" attribute in the `link_to` method was not included in the Rails 3.1 branch.  This change was merged into master back on June 22 (4 months ago), but for some reason is not included in this branch (and as a result, the current gem release).\r\n\r\nIs it possible to get pull request #1796 included in the 3.1 branch?'
3348,'guilleiguaran','In Rails 3.1, ActionView::Template::Error (file name too long...)\nI\'m getting an error in production. It\'s similar to #138. It\'s happening only in production, not in development.\r\n\r\nIn my point of view, I did nothing that could cause the error. It was working fine, then I improved my tests, refactored a JS file today and redeployed.\r\n\r\nThe problem\r\n==========\r\n\r\n Now I get this:\r\n\r\n```\r\nActionView::Template::Error (File name too long - /var/rails/primero/releases/20111017013943/app/assets/images/form .columns {\r\n  display: table;\r\n  clear: both;\r\n  margin: 0 0 10px 0; }\r\n\r\ninput:focus {\r\n  background: #f1f1f1;\r\n\r\n(...almost whole css file is output...)\r\n\r\n/* inline_form FORMS *):\r\n    2: <html>\r\n    3: <head>\r\n    4:   \t<title><%= @company_name %><%= if yield(:title).blank?; ""; else ": "+yield(:title); end %></title>\r\n    5:   \t<%= stylesheet_link_tag "manifest_application" %>\r\n    6: \t<%= javascript_include_tag "manifest_application" %>\r\n    7: \t\r\n    8: \t<% # params[:controller] = \'deals\'; %>\r\n  app/views/layouts/application.html.erb:5:in `_app_views_layouts_application_html_erb___561691512_94090930\'\r\n```\r\n\r\nThe whole log is here: http://pastie.org/2709138\r\n\r\nUpon deployment, I\'m running assets:precompile (via capistrano). Everything was fine yesterday.\r\n\r\nWhat I did trying to solve\r\n====\r\n\r\n* I commented line 5 (loading css), and the error went to the line 6 (js).\r\n* Gemfile: `gem \'sprockets\', :git => \'https://github.com/sstephenson/sprockets.git\'`\r\n* Deployed from another branch, which has code from 2 days ago, and everything started working again. I presume something\'s wrong with my code, but I really did nothing, just refactored a JS file (and created some RSpec specs). How could source code throw in error \'file name too long\'?\r\n\r\nHave no clue what else I could do.\r\n\r\nMy environment\r\n=============\r\n\r\n```ruby\r\n# environments/production.rb\r\n\r\nconfig.serve_static_assets = false\r\nconfig.assets.compile = true\r\nconfig.assets.digest = true\r\n```\r\n\r\nSo, could anyone help me? I found nothing similar on Google, only #138 (which is not an ActionView::Template error).'
3347,'tenderlove','Rails 3.1 ActiveRecord performance regression\nHi.\r\n\r\nI\'ve ported a project to rails 3.1.1, and pushed it online after everything seemed OK. The 3.1 version overloaded the server and crashed it after 10 or so minutes. \r\n\r\nWhile debugging I\'ve noticed that even a simple query like "Affrequest.where(\'campaign_id in (?)\', Campaign.all).all" takes 200ms on rails 3.0 and 1200ms on rails 3.1. I thought it might be the mysql2 gem, so I tried with the mysql gem and that gave me 3000ms on rails 3.0 and 7000ms on rails 3.1.\r\n\r\nI\'ve attached two perftools reports:\r\nrails 3.0 http://i.imgur.com/tJGW3.gif\r\nrails 3.1 http://i.imgur.com/87zYl.gif\r\n\r\nIf there\'s any other information I can provide let me know.'
3335,'tenderlove','ConnectionPool cache not cleared automatically\nI don\'t know whether this is rails, pg or even heroku bug.. so I\'m not sure where to post this.\r\nWhat I do know is that it started when i upgraded from rails 3.1 to rails 3.1.1.\r\n\r\nWhenever I change my database schema through migrations, deploy it to the heroku bamboo stack,\r\nrun migrations remotely, my application crashes. It complains about "missing attribute" for specific model.\r\n\r\nI did some research through code base and found out that I can fix the problem by opening heroku console and running following command:\r\nActiveRecord::Base.connection_pool.clear_cache!\r\n\r\nMy table has around 50 columns.\r\n\r\nIt works fine on my local machine in development mode.\r\nProblem only appears when app is deployed.'
3333,'guilleiguaran','Asset pipeline is trying to compute public path of file contents\nI just upgraded from 3.1 to 3.1.1, and am running into issues with the asset pipeline. I get the following error:\r\n\r\n```\r\nFile name too long - /Users/maym/Projects/forkly/app/assets/images/Backbone.RailsJSON = {\r\n  // In order to properly wrap/unwrap Rails JSON data, we need to specify\r\n  // what key the object will be wrapped with.\r\n  _name : function() {\r\n    if (!this.name) throw new Error("A \'name\' property must be specified");\r\n    return this.name;\r\n  },\r\n{...}\r\n```\r\n\r\nPartial Stack trace:\r\n\r\n```\r\n/Users/maym/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/pathname.rb:963:in `open\'\r\n/Users/maym/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/pathname.rb:963:in `entries\'\r\n/Users/maym/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/pathname.rb:963:in `entries\'\r\nhike (1.2.1) lib/hike/index.rb:80:in `entries\'\r\nhike (1.2.1) lib/hike/index.rb:129:in `match\'\r\nhike (1.2.1) lib/hike/index.rb:113:in `block in find_in_paths\'\r\nhike (1.2.1) lib/hike/index.rb:112:in `each\'\r\nhike (1.2.1) lib/hike/index.rb:112:in `find_in_paths\'\r\nhike (1.2.1) lib/hike/index.rb:63:in `block in find\'\r\nhike (1.2.1) lib/hike/index.rb:57:in `each\'\r\nhike (1.2.1) lib/hike/index.rb:57:in `find\'\r\nsprockets (2.0.2) lib/sprockets/trail.rb:74:in `resolve\'\r\nsprockets (2.0.2) lib/sprockets/trail.rb:78:in `resolve\'\r\nsprockets (2.0.2) lib/sprockets/trail.rb:96:in `find_asset_in_path\'\r\nsprockets (2.0.2) lib/sprockets/base.rb:101:in `find_asset\'\r\nsprockets (2.0.2) lib/sprockets/index.rb:48:in `find_asset\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:141:in `digest_for\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:154:in `rewrite_asset_path\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/asset_include_tag.rb:64:in `path_to_asset\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb:19:in `asset_tag\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/asset_include_tag.rb:57:in `block in include_tag\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/asset_include_tag.rb:57:in `collect\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/asset_include_tag.rb:57:in `include_tag\'\r\nactionpack (3.1.1) lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb:187:in `javascript_include_tag\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:29:in `block (2 levels) in javascript_include_tag\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:28:in `map\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:28:in `block in javascript_include_tag\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:26:in `collect\'\r\nactionpack (3.1.1) lib/sprockets/helpers/rails_helper.rb:26:in `javascript_include_tag\'\r\n```\r\n\r\nUpon digging a little deeper, and inserting this code:\r\n\r\n```ruby\r\nmodule ActionView\r\n  class AssetPaths\r\n    def compute_public_path(source, dir, options = {})\r\n      Rails.logger.debug("COMPUTING PUBLIC PATH: #{source}|||#{dir}|||#{options}")\r\n      source = source.to_s\r\n      return source if is_uri?(source)\r\n\r\n      source = rewrite_extension(source, dir, options[:ext]) if options[:ext]\r\n      source = rewrite_asset_path(source, dir, options)\r\n      source = rewrite_relative_url_root(source, relative_url_root)\r\n      source = rewrite_host_and_protocol(source, options[:protocol])\r\n      source\r\n    end\r\n  end\r\nend\r\n\r\nmodule Sprockets\r\n  class Base\r\n    def [](*args)\r\n      Rails.logger.debug("NOW FINDING #{args}")\r\n      find_asset(*args)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nI can see that Rails is trying to find/compute the public path of the actual file contents of the my JS/CSS files in addition to their proper filenames.\r\n\r\nOutput excerpt:\r\n\r\n```\r\nCOMPUTING PUBLIC PATH: jquery.js|||/assets|||{:ext=>"js", :body=>true, :digest=>true}\r\nNOW FINDING ["jquery.js"]\r\nCOMPUTING PUBLIC PATH: /*!\r\n * jQuery JavaScript Library v1.6.2\r\n * http://jquery.com/\r\n *\r\n * Copyright 2011, John Resig\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n * http://jquery.org/license\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n * Copyright 2011, The Dojo Foundation\r\n * Released under the MIT, BSD, and GPL Licenses.\r\n *\r\n * Date: Thu Jun 30 14:16:56 2011 -0400\r\n */\r\n\r\n(function( window, undefined ) {\r\n\r\n// Use the correct document accordingly with window argument (sandbox)\r\nvar document = window.document,\r\n\tnavigator = window.navigator,\r\n\tlocation = window.location;\r\n{..}\r\n```\r\n\r\nThis seems to be a major issue, but I have no idea what\'s causing it. Any ideas?'
3323,'jeremy',"Controller should be responsible for choice to show exceptions\nIn Rails 2 we could override `local_request?` on the controller, so you had access to a wealth of info to decide whether to show exceptions like the current account, current user, etc.\r\n\r\nIn Rails 3 that moved to a middleware and the `local_request?` check moved to the Request itself, which can't see shit.\r\n\r\nIt'd be great to have a better way to tell `ShowExceptions` to actually show the exception. It's a patchwork of constructor args, rack env vars, and `Request#local?` right now. It shouldn't have to know about any of that except a rack env var, ideally.\r\n\r\nLeave it up to the controller to tell it whether to kick in or not.\r\n\r\nExample: on every request, set `env['action_dispatch.show_exceptions'] = show_exceptions?` and wrap up the typical local-request checks in a default `#show_exceptions?` that controllers can override and super to.\r\n\r\nTargeting 3.2 for a fix. Pull requests welcome!"
3301,'tenderlove','Regex with a period route fails\nI have a route file where a regex matcher works in a resource scope but not in the match method:\r\n\r\nroutes.rb:\r\n\r\n```\r\n  regex = /[\\w\\d\\s!\\.]+?/\r\n  resources :pages, :id => regex do\r\n    member do\r\n      get \'embed\'\r\n    end\r\n  end\r\n  match "/embed/:id" => "pages#embed", :id => regex\r\n```\r\n\r\npages_controller.rb:\r\n\r\n```\r\n  def embed\r\n    id = params[:id]\r\n    render :text => "id is #{id}"\r\n  end\r\n```\r\n\r\nThis route works:\r\nhttp://localhost:3000/pages/Edwin.Lee/embed\r\nid is Edwin.Lee\r\n\r\nThis one fails:\r\nhttp://localhost:3000/embed/Edwin.Lee\r\nid is Edwin\r\n'
3279,'rafaelfranca','[3.1.1] PGError: ERROR:  relation does not exist\nI am getting said \'PGError: ERROR:  relation "abstract_items" does not exist\' error with Rails 3.1.1/postgres 9.0.4 given a model that inherits from another class that is not abstract (setup actually extracted from an engine/gem I am using - [Omnipopulus](https://github.com/donfrancisco/omnipopulus)). With Rails 3.1.0 this was still fine.\r\n\r\nVery simple setup as follows:\r\n\r\n```ruby\r\n#models/item.rb\r\nclass Item < AbstractItem\r\nend\r\n\r\n#models/abstract_item.rb\r\nclass AbstractItem < ActiveRecord::Base\r\n  # no error when abstract...\r\n  # self.abstract_class = true \r\nend\r\n```\r\n\r\nA simple query triggers the error for me, irb + trace:\r\n<pre>\r\nirb(main):003:0> Item.count\r\nPGError: ERROR:  relation "abstract_items" does not exist\r\nLINE 4:              WHERE a.attrelid = \'"abstract_items"\'::regclass\r\n                                        ^\r\n:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull\r\n              FROM pg_attribute a LEFT JOIN pg_attrdef d\r\n                ON a.attrelid = d.adrelid AND a.attnum = d.adnum\r\n             WHERE a.attrelid = \'"abstract_items"\'::regclass\r\n               AND a.attnum > 0 AND NOT a.attisdropped\r\n             ORDER BY a.attnum\r\n\r\nActiveRecord::StatementInvalid: PGError: ERROR:  relation "abstract_items" does not exist\r\nLINE 4:              WHERE a.attrelid = \'"abstract_items"\'::regclass\r\n                                        ^\r\n:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull\r\n              FROM pg_attribute a LEFT JOIN pg_attrdef d\r\n                ON a.attrelid = d.adrelid AND a.attnum = d.adnum\r\n             WHERE a.attrelid = \'"abstract_items"\'::regclass\r\n               AND a.attnum > 0 AND NOT a.attisdropped\r\n             ORDER BY a.attnum\r\n\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:1003:in `async_exec\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:1003:in `exec_no_cache\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:591:in `block in exec_query\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract_adapter.rb:244:in `block in log\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activesupport-3.1.1/lib/active_support/notifications/instrumenter.rb:21:in `instrument\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract_adapter.rb:239:in `log\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:590:in `exec_query\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:1102:in `column_definitions\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/postgresql_adapter.rb:781:in `columns\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:95:in `block (2 levels) in initialize\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:185:in `with_connection\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:92:in `block in initialize\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:106:in `yield\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:106:in `default\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:106:in `block in initialize\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:717:in `yield\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:717:in `default\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:717:in `columns_hash\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:827:in `descends_from_active_record?\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:833:in `finder_needs_type_condition?\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:978:in `relation\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/named_scope.rb:36:in `scoped\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.1/lib/active_record/base.rb:445:in `count\'\r\n\tfrom (irb):3\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/railties-3.1.1/lib/rails/commands/console.rb:45:in `start\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/railties-3.1.1/lib/rails/commands/console.rb:8:in `start\'\r\n\tfrom /Users/carhartl/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/railties-3.1.1/lib/rails/commands.rb:40:in `<top (required)>\'\r\n\tfrom script/rails:6:in `require\'\r\n\tfrom script/rails:6:in `<main>\'\r\n</pre>\r\n'
3271,'jonleighton','[Rails 3.1.x] - Nested Has Many Through Conditions being Cached in Unrelated Queries\nSchema & models & seeds:\r\n\r\n```ruby\r\n# Schema\r\n  create_table "categories", :force => true do |t|\r\n    t.integer "approved_count"\r\n  end\r\n\r\n  create_table "categorizations", :force => true do |t|\r\n    t.integer "category_id"\r\n    t.integer "categorizable_id"\r\n    t.string  "categorizable_type"\r\n  end\r\n\r\n  create_table "certifications", :force => true do |t|\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "courses", :force => true do |t|\r\n    t.integer "certification_id"\r\n  end\r\n\r\n#Models\r\n\r\nclass Categorization < ActiveRecord::Base\r\n  belongs_to :categorizable, :polymorphic => true\r\n  belongs_to :category\r\nend\r\nclass Category < ActiveRecord::Base\r\n  has_many :categorizations\r\nend\r\nclass Certification < ActiveRecord::Base\r\n  has_many :courses\r\n  has_many :categories,\r\n    :through => :courses,\r\n    :conditions => ["approved_count > 0"]\r\nend\r\nclass Course < ActiveRecord::Base\r\n  belongs_to :certification\r\n  has_many :categorizations, :as => :categorizable\r\n  has_many :categories,\r\n    :through => :categorizations\r\nend\r\n\r\n# SEEDS:\r\n    cert = Certification.create\r\n    cert.categories.length #this causes the \'approved_count\' condition to be cached\r\n\r\n    course = Course.create\r\n    category = course.categories.create(:approved_count => 0)\r\n\r\n    course.categories.to_sql #this includes the \'approved_count\' condition even though it shouldn\'t\r\n    assert_equal category, course.categories.first\r\n```\r\n\r\nThere is a workaround to getting this working and that is specifying the EXACT path through the associations. Namely:\r\n\r\n```ruby\r\nclass Certification < ActiveRecord::Base\r\n  has_many :courses\r\n  has_many :categorizations,\r\n    :through => :courses\r\n  has_many :categories,\r\n    :through => :categorizations,\r\n    :conditions => ["approved_count > 0"]\r\nend\r\n```\r\n\r\nI\'m not exactly sure if this is intended behaviour. Either way there should be an error if you\'re using an invalid nest...\r\n\r\nHow can I help to get this fixed?'
3268,'guilleiguaran','ActiveResource generates wrong XML when no attributes are set\nHi, I came around this issue just now.\r\n\r\nI have in client app AR model like this:\r\n\r\n``` ruby\r\nclass Cm::Addresslist < ActiveResource::Base\r\n  self.site = "http://localhost:3000"\r\n  self.prefix = "/api/"\r\n  self.format = ActiveResource::Formats::XmlFormat\r\nend\r\n```\r\n\r\nLaunching Rails console and typing this:\r\n\r\n```ruby\r\nree-1.8.7-2011.03 :066 > a = Cm::Addresslist.new\r\n => #<Cm::Addresslist:0x111141920 @prefix_options={}, @persisted=false, @attributes={}> \r\nree-1.8.7-2011.03 :067 > a.save\r\nActiveResource::ServerError: Failed.  Response code = 500.  Response message = Internal Server Error.\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/connection.rb:148:in `handle_response\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/connection.rb:115:in `request\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/connection.rb:98:in `post\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/connection.rb:218:in `with_auth\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/connection.rb:98:in `post\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/base.rb:1353:in `create_without_notifications\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/observing.rb:19:in `create\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/base.rb:1148:in `save_without_validation\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/validations.rb:79:in `save_without_notifications\'\r\n\tfrom /Users/daliborfilus/.rvm/gems/ree-1.8.7-2011.03/gems/activeresource-3.1.1/lib/active_resource/observing.rb:19:in `save\'\r\n\tfrom (irb):67\r\nree-1.8.7-2011.03 :068 > \r\n```\r\n\r\nFrom the service log I can see this:\r\n\r\n```\r\nStarted POST "/api/addresslists.xml" for 127.0.0.1 at Sun Oct 09 15:33:12 +0200 2011\r\n  Processing by Api::AddresslistsController#create as XML\r\n  Parameters: {"addresslist"=>"\\n"}\r\n  User Load (0.2ms)  SELECT `users`.* FROM `users` WHERE `users`.`email` = \'noice@email.cz\' LIMIT 1\r\n  Account Load (0.2ms)  SELECT `accounts`.* FROM `accounts` WHERE `accounts`.`id` = 1 LIMIT 1\r\n   (0.1ms)  BEGIN\r\n   (0.1ms)  ROLLBACK\r\nCompleted 500 Internal Server Error in 286ms\r\n\r\nNoMethodError (undefined method `stringify_keys\' for "\\n":String):\r\n  app/controllers/api/addresslists_controller.rb:37:in `create\'\r\n```\r\n\r\nNotice the " {"addresslist"=>"\\n"}" in there.\r\nWhen I supply at least one parameter before save, it passes.\r\n\r\nclient:\r\n\r\n```ruby\r\nree-1.8.7-2011.03 :068 > a.name = "test"\r\n => "test" \r\nree-1.8.7-2011.03 :069 > a.save\r\n => true \r\n```\r\n\r\nserver:\r\n\r\n```\r\nStarted POST "/api/addresslists.xml" for 127.0.0.1 at Sun Oct 09 15:35:02 +0200 2011\r\n  Processing by Api::AddresslistsController#create as XML\r\n  Parameters: {"addresslist"=>{"name"=>"test"}}\r\n```\r\n\r\nUsing Rails 3.1.1 (both server and client)\r\nruby 1.8.7 (2011-02-18 patchlevel 334) [i686-darwin11.0.0], MBARI 0x6770, Ruby Enterprise Edition 2011.03\r\n\r\nDon\'t know if this is AResource issue or if its Rack issue, but it\'s a bug for sure.\r\n '
3247,'jonleighton','After upgrading from 3.1 to 3.1.1 has_many ... :source changed its behaviour\n```ruby\r\nclass Cmodule < ActiveRecord::Base\r\n  has_many :items_cmodules\r\n  has_many :cycles, :order => :position, :through => :items_cmodules, :source_type => "Cycle", :source => :item\r\n  has_many :techniques, :order => :position, :through => :items_cmodules, :source_type => "Technique", :source => :item\r\nend\r\n\r\nclass ItemsCmodule < ActiveRecord::Base\r\n  belongs_to :cmodule\r\n  belongs_to :item, :polymorphic => true\r\nend\r\n\r\nclass Technique < ActiveRecord::Base\r\n  has_many :items_cmodules, :as => :item\r\nend\r\n```\r\n\r\nBefore upgrading to 3.1.1 following worked fine:\r\n\r\n```ruby\r\nCmodule.first.techniques.create(:name => "blip")\r\n```\r\n\r\nRight after upgrading it gives following output:\r\n\r\n```ruby\r\nruby-1.9.2-p180 :003 > Cmodule.first.techniques.create(:name => "blip")\r\n  Cmodule Load (0.0ms)  SELECT "cmodules".* FROM "cmodules" LIMIT 1\r\n   (0.0ms)  BEGIN\r\n  SQL (0.0ms)  INSERT INTO "techniques" ("annotation", "created_at", "icon_content_type", \r\n"icon_file_name", "icon_file_size", "icon_updated_at", "instruction", "name", "status", \r\n"updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"  \r\n[["annotation", nil], ["created_at", Sat, 08 Oct 2011 03:59:37 FET +03:00], \r\n["icon_content_type", nil], ["icon_file_name", nil], ["icon_file_size", nil], \r\n["icon_updated_at", nil], ["instruction", nil], ["name", "blip"], ["status", "draft"], \r\n["updated_at", Sat, 08 Oct 2011 03:59:37 FET +03:00]]\r\n   (0.0ms)  ROLLBACK\r\nNameError: uninitialized constant ItemsCmodule::Item\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/base.rb:1341:in \r\n`compute_type\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/reflection.rb:173:in \r\n`klass\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/reflection.rb:228:in \r\n`association_primary_key\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/through_association.rb:47:in \r\n`block in construct_join_attributes\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/through_association.rb:46:in \r\n`map\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/through_association.rb:46:in \r\n`construct_join_attributes\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/has_many_through_association.rb:54:in \r\n`through_record\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/has_many_through_association.rb:45:in \r\n`insert_record\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:425:in \r\n`block (2 levels) in create_record\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:337:in \r\n`add_to_target\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:423:in \r\n`block in create_record\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:147:in \r\n`block in transaction\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/connection_adapters/abstract/database_statements.rb:192:in \r\n`transaction\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/transactions.rb:208:in \r\n`transaction\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:146:in \r\n`transaction\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:422:in \r\n`create_record\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_association.rb:111:in \r\n`create\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/activerecord-3.1.1/lib/active_record/associations/collection_proxy.rb:54:in \r\n`create\'\r\n\tfrom (irb):3\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/railties-3.1.1/lib/rails/commands/console.rb:45:in \r\n`start\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/railties-3.1.1/lib/rails/commands/console.rb:8:in \r\n`start\'\r\n\tfrom /home/stanislaw/.rvm/gems/ruby-1.9.2-p180@310/gems/railties-3.1.1/lib/rails/commands.rb:40:in \r\n`<top (required)>\'\r\n\tfrom script/rails:6:in `require\'\r\n\tfrom script/rails:6:in `<main>\'\r\n\r\n```\r\n\r\nSorry for not providing more qualitative material. I don\'t know, how to spot it right now.'
3224,'tenderlove','Routes that start with a number are invalid\nThe Rails 3 router (in 3.0.10 at least) doesn\'t seem to like routes that start with a number.\r\n\r\nFor example:\r\n\r\n  match "1test" => "home#show"\r\n\r\nWhen I run "rake routes" I get:\r\n\r\nrake aborted!\r\nInvalid route name: \'1test\'\r\n\r\nand a trace that starts with:\r\n/gems/actionpack-3.0.10/lib/action_dispatch/routing/route_set.rb:298:in `add_route\'\r\n\r\nI\'ve tried this with a few different routes starting with numbers and all of them result in the same error.  \r\n\r\nI\'m guessing this is a bug, unless there is a reason why this is necessary in the Rails 3.x router?'
3215,'drogus','Trailing slash removed from env[\'PATH_INFO\'] on mounted app\nThe trailing slash is being removed from env when mounting it in routes using `Rails 3.1.1.rc2`. This same class works fine in pure Rack.\r\n\r\nGiven the following routes\r\n\r\n```ruby\r\nclass RackTest\r\n  def call(env)\r\n    [200, {}, [env[\'PATH_INFO\']]]\r\n  end\r\nend\r\n\r\nRackMountRaiilsBug::Application.routes.draw do\r\n  mount RackTest.new => "/testing"\r\nend\r\n```\r\n\r\nWhen I access http://localhost:3000/testing/blah/ the output I see is\r\n\r\n```\r\n/blah\r\n```\r\n\r\nWhat\'s interesting is that https://github.com/rails/rails/blob/master/railties/lib/rails/rack/logger.rb outputs PATH_INFO with the trailing /. You can clone this project to see it in action https://github.com/jmazzi/rack_mount_rails_bug.'
3207,'jonleighton','Regression between 3.1.1.rc1 and 3.1.1.rc2\nBetween 3.1.1.rc1 and 3.1.1.rc2, something is broken in activerecord. It seems that I have to specify the primary key on an association so that it knows how to build the proper query. Here is an example.\r\n\r\nTwo models in question are: App (has many permissions) and Permission (belongs_to app)\r\n\r\nThis is the rails code:\r\npermission = Permission.joins(:app).where("permissions.user_id = ? AND apps.name = ? AND permissions.name = ? OR (permissions.role_id = ? AND apps.name = ? AND permissions.name = ?)", current_user.id, app_initials, permission, current_user.role_id, app_initials, permission).first\r\n\r\nTurns into:\r\nSELECT "permissions".* FROM "permissions" INNER JOIN "apps" ON "apps"."" = "permissions"."app_id" WHERE (permissions.user_id = 1 AND apps.name = \'syncdekadmin\' AND permissions.name = \'user\' OR (permissions.role_id = 1 AND apps.name = \'syncdekadmin\' AND permissions.name = \'user\')) LIMIT 1\r\n\r\nThe issue is on the first INNER JOIN "apps" ON "apps"."" \r\nIt needs to be INNER JOIN "apps" ON "apps"."id"\r\n\r\nOn the permission.rb model, I add:\r\nbelongs_to :app, :primary_key => :id\r\n\r\nThe query then comes out just fine.\r\n\r\nI\'ve checked rails 3.1.0, 3.1.1.rc1 and they don\'t seem to have this issue.\r\n\r\nI\'m using Postgresql for my db.'
3148,'josevalim','Disabling eager loading in application.rb prevents autoloading\nUsing rails 3.1.1rc1, creating a new application, and disabling the eager loading via config.eager_load_paths = [] in application.rb effectively disables autoloading of models and most likely everything else.\r\n\r\nI can workaround it by setting the autoload_paths to the eager_load_paths prior to disabling eager loading:\r\n   config.autoload_paths = config.eager_load_paths.dup\r\n   config.eager_load_paths = []\r\n\r\nFull details here: https://gist.github.com/1245456'
3129,'tenderlove','Skip Re-Saving Session Cookies\nThe `ActionDispatch::Flash` middleware causes the session to be loaded [in every request](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/flash.rb#L239).\r\n\r\nIf the session is loaded, then [it will be re-saved](https://github.com/rack/rack/blob/master/lib/rack/session/abstract/id.rb#L265) in the response.\r\n\r\nThere should be a way to specify per-controller or per-action that the flash should not be loaded (by loading it lazily unless a before_filter blocks it) or, barring that, that the session cookie should not be re-saved.\r\n'
3126,'spastorino',"Latest 3.1.1.rc1 uses /images/ instead of /assets/ for image_tag helper\nVerified by going back to 3.1.0, not changing any other gems or any code.\r\n\r\nUsing this in my Gemfile, last pulled today 5.minutes.ago:\r\ngem 'rails', :git => 'git://github.com/rails/rails.git', :branch=>'3-1-stable'\r\n\r\nUsing this image_tag:\r\n<%= image_tag 'fortythree-logo-small.png' %>"
3110,'jonleighton','has_many with through option breaks building associations\nAssociation is set to nil when using through option on a has_many association.\r\n\r\nThis worked on Rails 3.0 and is broken in Rails 3.1 and Rails 3.1.1.rc1.\r\n\r\nGist: https://gist.github.com/1237660\r\n\r\n````ruby\r\nrequire "sqlite3"\r\n#gem "rails", "~> 3.0.10"\r\n#gem "rails", "3.1.0"\r\ngem "rails", "3.1.1.rc1"\r\n\r\nrequire "logger"\r\nrequire "active_record"\r\nrequire "test/unit"\r\n\r\nputs "Active Record #{ActiveRecord::VERSION::STRING}"\r\n\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Base.establish_connection(:adapter  => \'sqlite3\', :database => \':memory:\')\r\n\r\nActiveRecord::Schema.define do\r\n  create_table "people", :force => true do |t|\r\n    t.string   "project_id"\r\n    t.string   "user_id"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "projects", :force => true do |t|\r\n    t.string   "name"\r\n    t.integer  "user_id"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "users", :force => true do |t|\r\n    t.string   "name"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\nend\r\n\r\nclass Project < ActiveRecord::Base\r\n  belongs_to :user\r\n  has_many :users, :through => :people\r\nend\r\n\r\nclass Person < ActiveRecord::Base\r\n  belongs_to :project\r\n  belongs_to :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :people\r\n  has_many :projects, :through => :people\r\nend\r\n\r\nclass HasManyThrough < Test::Unit::TestCase\r\n\r\n  def test_user_projects_build_assigns_project_to_user\r\n    user = User.create(:name => "Francesc")\r\n    project = user.projects.build\r\n    assert !project.user.nil?\r\n  end\r\n\r\nend\r\n````'
3104,'jonleighton','Active record 3.1 does not respect set_primary_key.\n\r\nWhen trying to access a polymorphic association activerecord 3.1 does not respect the non default primary key (set by set_primary_key), but instead uses default primary key (id) in the generated sql.\r\n\r\nThis is not an issue on 3.0.10\r\n\r\nSingle file example app available: https://github.com/ZmartGroup/active_record_bug_report\r\n\r\n**Quick paste and reproduce:**\r\ngit clone git://github.com/ZmartGroup/active_record_bug_report.git && cd active_record_bug_report && bundle install && bundle exec ruby program.rb'
3051,'pixeltrix',"ActionController doesn't handle TypeError in Rack parameter parsing\nParsing a query string using `Rack::Utils.parse_nested_query` raises a `TypeError` when query parameters are ambiguous in that they seem to represent an Array and a Hash with the same name (e.g. `f[]=&f[4]=`). This is not handled by ActionController and so unparseable parameters result in a 500 error in a new app. (v3.1.0)\r\n\r\nSince this happens pretty deep in the Rack code and `TypeError` is rather general it seems wrong to have to handle this in the rails app layer to prevent a 500.\r\n\r\nIt's easy to find examples of this issue in the wild:\r\nhttps://github.com/?f[]=&f[4]=\r\nhttp://twitter.com/?f[]=&f[4]=\r\n\r\nI initially filed this bug against Rack (https://github.com/rack/rack/issues/222) but it seems that ActionController may be the place to handle this."
3022,'jonleighton',"AR preload_associations not available anymore\nEither the ActiveRecord method preload_associations has been removed or renamed. What's the alternative? An explanation why this has been removed, would be much appreciated."
3020,'jonleighton','AR association.replace does not work properly in Rails 3.1.0\nReplace call leaves old record and inserts new with NULL foreign key:\r\n<pre>\r\nD:\\Tools\\InstantRails\\rails_apps\\hitech&gt;rails c\r\nLoading development environment (Rails 3.1.0)\r\nirb(main):001:0&gt; p = Product.new({:name =&gt; \'Motorola Defy+\'})\r\n=&gt; #&lt;Product id: nil, name: "Motorola Defy+", code: nil, comments_count: 0, reports_count: 0, user_rating: 0.0, created_at: nil, updated_at: nil&gt;\r\nirb(main):002:0&gt; p.specifications.build({:feature_id =&gt; 26, :text_value =&gt; \'111\'})\r\n=&gt; #&lt;Specification id: nil, product_id: nil, feature_id: 26, text_value: "111"&gt;\r\nirb(main):003:0&gt; p.save\r\n\t [1m [36m (0.0ms) [0m   [1mBEGIN [0m\r\n\t [1m [35m (1.0ms) [0m  SELECT 1 FROM `products` WHERE (`products`.`code` = BINARY \'\' AND `products`.`name` = \'Motorola Defy+\') LIMIT 1\r\n\t [1m [36mSQL (0.0ms) [0m   [1mINSERT INTO `products` (`code`, `comments_count`, `created_at`, `name`, `reports_count`, `updated_at`, `user_rating`) VALUES (NULL, 0, \'2011-09-14 11:05:17\', \'Motorola Defy+\', 0, \'2011-09-14 11:05:17\', 0.0) [0m\r\n\t [1m [35mSQL (1.0ms) [0m  INSERT INTO `specifications` (`feature_id`, `product_id`, `text_value`) VALUES (26, 546, \'111\')\r\n\t [1m [36m (20.5ms) [0m   [1mCOMMIT [0m\r\n=&gt; true\r\nirb(main):004:0&gt; specs = []\r\n=&gt; []\r\nirb(main):005:0&gt; specs &lt;&lt; Specification.create({:feature_id =&gt; 26, :text_value =&gt; \'Feature 2\'})\r\n\t [1m [35m (0.0ms) [0m  BEGIN\r\n\t [1m [36mSQL (0.0ms) [0m   [1mINSERT INTO `specifications` (`feature_id`, `product_id`, `text_value`) VALUES (26, NULL, \'Feature 2\') [0m\r\n\t [1m [35m (16.6ms) [0m  COMMIT\r\n=&gt; [#&lt;Specification id: 22794, product_id: nil, feature_id: 26, text_value: "Feature 2"&gt;]\r\nirb(main):006:0&gt; specs &lt;&lt; Specification.create({:feature_id =&gt; 26, :text_value =&gt; \'Feature 3\'})\r\n\t [1m [36m (0.0ms) [0m   [1mBEGIN [0m\r\n\t [1m [35mSQL (0.0ms) [0m  INSERT INTO `specifications` (`feature_id`, `product_id`, `text_value`) VALUES (26, NULL, \'Feature 3\')\r\n\t [1m [36m (2.9ms) [0m   [1mCOMMIT [0m\r\n=&gt; [#&lt;Specification id: 22794, product_id: nil, feature_id: 26, text_value: "Feature 2"&gt;, #&lt;Specification id: 22795, product_id: nil, feature_id: 26, text_value: "Feature 3"&gt;]\r\nirb(main):007:0&gt; p.specifications.replace specs\r\n\t [1m [35mSpecification Load (13.7ms) [0m  SELECT `specifications`.* FROM `specifications` WHERE `specifications`.`product_id` = 546\r\n=&gt; [#&lt;Specification id: 22794, product_id: nil, feature_id: 26, text_value: "Feature 2"&gt;, #&lt;Specification id: 22795, product_id: nil, feature_id: 26, text_value: "Feature 3"&gt;]\r\nirb(main):008:0&gt; p\r\n=&gt; #&lt;Product id: 546, name: "Motorola Defy+", code: nil, comments_count: 0, reports_count: 0, user_rating: 0.0, created_at: "2011-09-14 11:05:17", updated_at: "2011-09-14 11:05:17"&gt;\r\nirb(main):009:0&gt; p.save\r\n\t [1m [36m (0.0ms) [0m   [1mBEGIN [0m\r\n\t [1m [35m (1.0ms) [0m  SELECT 1 FROM `products` WHERE (`products`.`code` = BINARY \'\' AND `products`.`id` != 546 AND `products`.`name` = \'Motorola Defy+\') LIMIT 1\r\n\t [1m [36m (0.0ms) [0m   [1mCOMMIT [0m\r\n=&gt; true\r\nirb(main):010:0&gt; p = Product.last\r\n\t [1m [36mProduct Load (0.0ms) [0m   [1mSELECT `products`.* FROM `products` ORDER BY `products`.`id` DESC LIMIT 1 [0m\r\n=&gt; #&lt;Product id: 546, name: "Motorola Defy+", code: nil, comments_count: 0, reports_count: 0, user_rating: 0.0, created_at: "2011-09-14 11:05:17", updated_at: "2011-09-14 11:05:17"&gt;\r\nirb(main):011:0&gt; p.specifications\r\n\t [1m [35mSpecification Load (13.7ms) [0m  SELECT `specifications`.* FROM `specifications` WHERE `specifications`.`product_id` = 546\r\n=&gt; [#&lt;Specification id: 22793, product_id: 546, feature_id: 26, text_value: "111"&gt;]\r\nirb(main):012:0&gt;\r\n</pre>'
2961,'jonleighton','ActiveRecord::HasManyThroughNestedAssociationsAreReadonly error even when no modification is made\n# Summary \r\n\r\nWhen accessing an has_many :through association while creating a new model, this exception is thrown even if no changes are made to the association.  \r\n\r\nThis was encountered in Rails 3.1.\r\n\r\n# Schema\r\n\r\n  create_table "book_posts", :force => true do |t|\r\n    t.integer  "post_id"\r\n    t.integer  "book_id"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "books", :force => true do |t|\r\n    t.integer  "post_id"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "post_users", :force => true do |t|\r\n    t.integer  "post_id"\r\n    t.integer  "user_id"\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "posts", :force => true do |t|\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n  create_table "users", :force => true do |t|\r\n    t.datetime "created_at"\r\n    t.datetime "updated_at"\r\n  end\r\n\r\n# ActiveRecord classes\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_many :readers, :through => :post, :source => :users, :readonly => true, :class_name => "User"\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many  :book_posts\r\n  has_many  :books, :through => :book_posts\r\n  \r\n  has_many  :post_users\r\n  has_many  :users, :through => :post_users\r\nend\r\n\r\nclass PostUser < ActiveRecord::Base\r\n  belongs_to  :post\r\n  belongs_to  :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\n\r\n# Steps to recreate issue\r\n\r\nirb(main):001:0> User.create\r\nirb(main):003:0> Post.create\r\nirb(main):004:0> Post.first.users << User.first\r\nirb(main):007:0> a=Book.new\r\nirb(main):008:0> a.post = Post.first\r\nirb(main):009:0> a.readers\r\n\r\n=> [#<User id: 1, created_at: "2011-09-09 18:20:06", updated_at: "2011-09-09 18:20:06">, #<User id: 2, created_at: "2011-09-09 18:20:07", updated_at: "2011-09-09 18:20:07">]\r\n\r\nirb(main):010:0> a.save\r\n\r\nActiveRecord::HasManyThroughNestedAssociationsAreReadonly: Cannot modify association \'Book#readers\' because it goes through more than one other association.\r\n\r\n# Comments\r\nIf you run the same steps without accessing a.readers, it will save successfully.  The expected behavior is to be able to access the association without making a modification, and then save the model.\r\n\r\nFor a work around, I\'m going to re-create the model after accessing the associations that are causing this issue to occur.'
2944,'guilleiguaran','ActiveResource 3.1.0 data loss on ActiveResource::Base#get\nIf I have a method on my server that vends JSON like the following:\r\n\r\n{ \'hello\': { \'world\': \'from kyle\'} }\r\n\r\nOn ActiveResource 3.0.10, I would get the following:\r\n\r\n>>MyResouce.get(:hello_world_from_kyle)\r\n=> {"hello" => {"world" => "from_kyle"}}\r\n\r\nOn ActiveResource 3.1.0, I get the following:\r\n=> "from kyle"\r\n\r\nLooking at the source, this is an explicit and undocumented behavior change in custom_methods.rb. I lost important data describing my structure. Imagine I used this for statistical summaries { "3.1": {"pass": 20}, "3.0":{"pass": 10}, if I don\'t have 2 keys in every hash, I\'ve lost structural data on the client.\r\n\r\n3.1.10\r\n      def get(method_name, options = {})\r\n        connection.get(custom_method_element_url(method_name, options), self.class.headers)\r\n      end\r\n\r\n3.1.0\r\n        def get(custom_method_name, options = {})\r\n          hashified = format.decode(connection.get(custom_method_collection_url(custom_method_name, options), headers).body)\r\n          derooted  = Formats.remove_root(hashified)\r\n          derooted.is_a?(Array) ? derooted.map { |e| Formats.remove_root(e) } : derooted\r\n        end\r\n\r\nThis behavior is clearly over-generalized to "fix" the problem of {"model_name": attributes}, does not have any way to change its behavior, and breaks anything that can vend a hash of data since the new behavior is impossible to predict on the client side.\r\n\r\nIf anything, the easiest fix is:\r\n\r\n        def get(custom_method_name, options = {})\r\n          hashified = format.decode(connection.get(custom_method_collection_url(custom_method_name, options), headers).body)\r\n          if self.include_root_in_json || options[:include_root]\r\n                hashified\r\n          else\r\n                derooted  = Formats.remove_root(hashified)\r\n                derooted.is_a?(Array) ? derooted.map { |e| Formats.remove_root(e) } : derooted\r\n           end\r\n        end\r\n\r\nThis would allow the user to keep the root in json, and have a per-get override.\r\n\r\nThe current workaround I\'ve found is to use Net::HTTP#get and parse the JSON using ActiveSupport\'s JSON library.'
2902,'pixeltrix',"Request paramaters being shared across independent requests\nI first saw this issue with trying the various Rails 3.1 release candidates and I can verify its still happening in Rails 3.1 proper \r\n\r\nIn my integration tests I am seeing parameters, specifically File uploads, from one test request leak into other requests. Basically:\r\n\r\n```\r\npost photos_path, {:foo => :bar}, headers \r\nassert_response :success\r\n# do something else\r\npost users_path, {:baz => :alice}, headers \r\nassert_response :success\r\n```\r\n\r\nIn the 2nd ```POST``` I can still see still data from the first ```POST``` deep in the Rack ```env``` variable.\r\n\r\nI've traced it down to this line in ```actionpack-3.1.0/lib/action_dispatch/testing/integration.rb:284```\r\n\r\n```\r\nenv.reverse_merge!(default_env)\r\n```\r\n\r\nIf I replace it with\r\n\r\n```\r\nenv = default_env.merge(env)\r\n```\r\n\r\nthen all is well.\r\n\r\n\r\n\r\n"
2887,'tenderlove',"test_column_types in sqlite3_adapter_test.rb fails on 1.9.3 due to datetimes being inserted as BLOBs\n[This test](https://github.com/rails/rails/blob/master/activerecord/test/cases/adapters/sqlite3/sqlite3_adapter_test.rb#L23-36) is failing on Ruby 1.9.3, but not on 1.9.2.\r\n\r\nIt is not failing due to the 'name' column being inserted as a blob. The 'owners' table also has an updated_at datetime column. This ends up getting inserted as a blob, causing the test to fail.\r\n\r\nThe `quoted_date` method in `connection_adapters/abstract/quoting` returns a string for the datetime. The string is encoded as ASCII-8BIT, but force encoding it to something else does not seem to make a difference.\r\n\r\nAt this point I am stuck, help me ;)"
2840,'fxn','The docs about fixtures seem to be gone\nThe documentation about fixtures should appear in\r\n\r\n    http://api.rubyonrails.org/classes/ActiveRecord/Fixtures.html\r\n\r\nbut it is not there.\r\n\r\nThe link in the template of fixtures should be revised accordingly.'
2839,'fxn','The class LoadError appears twice in the left sidebar of the API\n'
2838,'fxn','Scroll does not work in the API for touch screens, eg the iPad\n'
2834,'pixeltrix','Ignore preload from scope when using through associations\nGiven the following models:\r\n\r\n``` ruby\r\nclass Manufacturer < ActiveRecord::Base; end\r\nclass ProductType < ActiveRecord::Base; end\r\n\r\nclass Product < ActiveRecord::Base\r\n  belongs_to :manufacturer\r\n  belongs_to :product_type\r\n  has_many :variants\r\n  default_scope preload(:manufacturer, :product_type)\r\nend\r\n\r\nclass Variant < ActiveRecord::Base\r\n  belongs_to :product\r\nend\r\n\r\nclass BasketItem < ActiveRecord::Base\r\n  belongs_to :variant\r\n  has_one :product, :through => :variant\r\n  has_one :manufacturer, :through => :product\r\n  has_one :product_type, :through => :product\r\nend\r\n```\r\n\r\nthen trying to load either `item.product_type` or `item.manufacturer` will raise an `ActiveRecord::ConfigurationError` due to the preload - the easiest fix is likely to be removing the preload from the join model scope.'
2828,'pixeltrix',"Unnecessary sql query when loading a belongs_to association\nWhen loading a belongs_to relationship the association code executes the query even if the foreign key is nil - I think we can safely assume that there isn't a record with a NULL primary key!"
2812,'rafaelfranca','3.0.10 - simple_format with :sanitize => false produces html unsafe string\n```\r\nruby-1.8.7-p352 :001 > a = ActionView::Base.new\r\n => #<ActionView::Base:0x7f61c08b6c70 @helpers=#<Module:0x7f61c08b39f8>, @output_buffer=nil, @lookup_context=#<ActionView::LookupContext:0x7f61c06a2650 @skip_default_locale=false, @details={:locale=>[:en, :en], :handlers=>[:rjs, :rhtml, :rxml, :builder, :haml, :erb], :formats=>[:html, :text, :js, :css, :ics, :csv, :xml, :rss, :atom, :yaml, :multipart_form, :url_encoded_form, :json]}, @frozen_formats=false, @view_paths=[], @details_key=nil>, @_virtual_path=nil, @_controller=nil, @controller=nil, @_content_for={}, @_config=#<OrderedHash {}>, @assigns={}> \r\nruby-1.8.7-p352 :004 > a.simple_format("foo", {}, :sanitize => false).html_safe?\r\n => false \r\nruby-1.8.7-p352 :005 > a.simple_format("foo", {}).html_safe?\r\n => true \r\n```\r\n\r\nAppears to be fixed in 3.1 so need to work out what fixed it and backport.'
2807,'jonleighton',"ActiveRecord 3.1 cannot load models with non-default PKs unless there's already a database connection\nUsing ActiveRecord 3.1, one cannot load a model class that calls `set_primary_key` unless there is already a database connection. This works with ActiveRecord 2.3 and 3.0. I've created a [minimal test case][gist] to demonstrate the issue.\r\n\r\n[gist]: https://gist.github.com/1187521\r\n\r\nThe failure looks like this:\r\n\r\n```\r\n/Users/rsutphin/.rvm/gems/ruby-1.9.2-p290@tmp/gems/activerecord-3.1.0/lib/active_record/attribute_methods/primary_key.rb:69:in `set_primary_key': undefined method `primary_keys' for nil:NilClass (NoMethodError)\r\nfrom /private/tmp/ar-cp-pk/models.rb:4:in `<class:Person>'\r\nfrom /private/tmp/ar-cp-pk/models.rb:3:in `<top (required)>'\r\nfrom example.rb:8:in `require'\r\nfrom example.rb:8:in `load_models'\r\nfrom example.rb:28:in `<main>'\r\n```"
2757,'jonleighton','Add first_or_create family of methods to Active Record\nThis pull request let\'s you write:\r\n\r\n    User.where(:first_name => "Scarlett").first_or_create!(:last_name => "Johansson", :hot => true)\r\n\r\nTake a look at #2420 for the discussion about this.'
2755,'jonleighton','HasManyAssociation#inverse_updates_counter_cache? fails to match custom counter cache column symbol\nSay you have a parent AR object with a has_many association with :dependent => :destroy, and the child object has a belongs_to association specifying a counter_cache column using a symbol (as the API docs example shows). If you do a #clear on the has_many collection, each child causes the counter to decrement when it is destroyed, then an additional update query decrements it by the number of objects that were in the collection because HasManyAssociation#inverse_updates_counter_cache? is matching a string version of the counter column against the symbol that was specified in the belongs_to association.\r\n\r\nExample:\r\n\r\n```ruby\r\nclass ParentThing < ActiveRecord::Base\r\n  has_many :kids, :class_name => "KidThing", :foreign_key => "parent_id", :dependent => :destroy\r\nend\r\n\r\nclass KidThing < ActiveRecord::Base\r\n  belongs_to :parent, :class_name => "ParentThing", :foreign_key => "parent_id", :counter_cache => :kids_count\r\nend\r\n\r\nparent = ParentThing.create\r\n3.times{ parent << KidThing.create }\r\nparent.kids.clear\r\n\r\n# now parent.kids_count == -3\r\n```\r\n\r\nSpecifying the counter_cache as a string in the belongs_to association fixes the problem, but if a symbol is accepted there and the example in the documentation uses a symbol, then shouldn\'t HasManyAssociation#inverse_updates_counter_cache? support that?\r\n'
2733,'fxn','Improve the performance of #delegate\nRemove the use of `#__send__` in order to boost performance. This also means that you can no longer delegate to private methods on the target object.\r\n\r\nThe merits of this pull request is being discussed [on the mailing list](http://groups.google.com/group/rubyonrails-core/browse_thread/thread/c47a7d7c93ae5eea). Please let it remain open so the diff can be easily browsed.'
2731,'tenderlove','rc8: Obscure error message with invalid YAML in fixtures\nHi there, \r\n\r\nWhen putting invalid YAML into the files in test/fixtures, the errors are reported fine when using Syck as the YAML parser: \r\n\r\n    MainPageTest:\r\n        ERROR should correctly determine languages (0.00s) \r\n              ActiveRecord::Fixture::FormatError: a YAML error occurred parsing some/path/here/test/fixtures/users.yml. Please note that YAML must be consistently indented using spaces. Tabs are not allowed. Please have a look at http://www.yaml.org/faq.html\r\n    The exact error was:\r\n      ArgumentError: syntax error on line 28, col -1: `  first_name: "Foo"\r\n\r\nHowever, when Psych (the default) is in action, the error message looks like this: \r\n\r\n    MainPageTest:\r\n        ERROR should correctly determine languages (0.03s) \r\n              Psych::SyntaxError: couldn\'t parse YAML at line 29 column 2\r\n              /opt/rubies/ruby-1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.1.0.rc8/lib/active_record/fixtures.rb:719:in `parse_yaml_string\'\r\n\r\nThe latter is not really informative as it doesn\'t give me any clue in which file I have misformatted YAML code. It shouldn\'t be too hard to capture the Psych::SyntaxError exception the same way Syck errors are cought and formatted?\r\n\r\nruby -v: `ruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-linux]`\r\nOS: Arch Linux\r\nrails -v: `Rails 3.1.0.rc8`\r\n\r\nMarvin'
2708,'tenderlove','Typos in column type silently corrupt table using SQLITE3\nRunning a migration like this:\r\n\r\n    class ScrewUpTable < ActiveRecord::Migration\r\n       def self.up\r\n           add_column :table, :flag, :bool\r\n       end\r\n\r\n       def self.down\r\n          remove_column :table, :flag\r\n       end\r\n    end\r\n\r\n`rake db:migrate` will execute this migration without complain, but in your schema.rb will have the following error message in it.\r\n   \r\n    # Could not dump table "table" because of following StandardError\r\n    #   Unknown type \'bool\' for column \'flag\'\r\n\r\nWill prevent you from running any future migrations on that table.  You will not be able to rollback this migration, or further address the table in any  way short of dropping it.\r\n\r\nThis is Rails 3.0.7 with SQLITE3'
2680,'drogus','Engines Models not working with cache_classes = true\nWe have a namespaced engine with some models.\r\n\r\n``` ruby\r\nPerson::Person.table_name\r\n#=> person_person in development\r\n#=> person in production or test\r\n```\r\n\r\nIf I do\r\n\r\n``` ruby\r\nPerson::Person.reset_table_name\r\nPerson::Person.table_name\r\n#=> person_person\r\n```\r\n\r\nThis happens in Rails-3.1-stable.'
2676,'tenderlove','Pls merge require/load to 3.1 rel branch\nTitle says it all'
2663,'tenderlove','task dependencies for assets:precompile are run twice\nOn Rails 3.1.rc6, Ruby 1.9.2 p290, and Rake 0.9.2, declaring a task as a dependency of `assets:precompile` causes that task to be run twice when compiling assets.\r\n\r\nTo replicate:\r\n\r\n```ruby\r\n# in lib/tasks/foo.rake\r\n\r\ntask :foo do\r\n  puts "Foo!"\r\nend\r\n\r\nnamespace :assets do\r\n  task :precompile => \'foo\'\r\nend\r\n```\r\n\r\n```bash\r\nrake assets:precompile\r\n```\r\n\r\nOutput:\r\n\r\n```txt\r\n** Invoke assets:precompile (first_time)\r\n** Invoke foo (first_time)\r\n** Execute foo\r\nFoo!\r\n** Execute assets:precompile\r\nFoo!\r\n```'
2661,'tenderlove',"Backport fixes for #2654 \n@tenderlove can you please backport [these commits][1] to 3-1-0 as it's a regression from 2.3.x and 3.0.x.\r\n\r\n[1]: https://github.com/rails/rails/compare/13400ac...68a13ed\r\n"
2658,'pixeltrix','Make ActionController::TestCase#recycle! set @protocol to nil\nThis ensures that the protocol does not get carried over when there are\r\ntwo or more requests in functional tests. This was a problem when e.g.\r\nthe first request was HTTP and the second request was HTTPS.\r\n\r\nCloses #2654.'
2654,'pixeltrix','ActionController::TestRequest#recycle! should set @protocol to nil\n`ActionController::TestRequest#recycle!` should set `@protocol` to `nil`. Currently it does not do so and the protocol gets carried over when there are two or more requests in functional tests. This is a problem when e.g. the first request is HTTP and the second request is HTTPS:\r\n\r\n    def test_foo\r\n      get :foo # Calling request.protocol in the controller\'s "foo" action returns "http://".\r\n      \r\n      @request.env["HTTPS"] = "on"\r\n      get :foo # Calling request.protocol in the controller\'s "foo" action still returns "http://"!\r\n    end\r\n\r\nTested with Rails 3.1 RC6. This is aregression against 2.3.x.'
2645,'tenderlove',"Fixtures YAML Exception Handing is Incorrect\nAround line 720 in activerecord/lib/active_record/fixtures.rb:\r\n\r\ndef parse_yaml_string(fixture_content)\r\nYAML::load(erb_render(fixture_content))\r\nrescue error\r\n...\r\nend\r\n\r\nThat should be a rescue Exception => error since a psych syntax error inherits from a e_rbSyntaxError and thus is not a StandardException and won't get caught.\r\n"
2624,'tenderlove','ActionController::TestCase::Behavior#process can modify its parameter\nThe `ActionController::TestCase::Behavior#process` method calls `paramify_values` on its `parameters` parameter. That method can modify the passed value (e.g. converting all values in a hash that are fixnums to strings). This behavior propagates to `post`, `get` and other methods that call `process` internally.\r\n\r\nThis behavior is unexpected and makes tests like this fail:\r\n\r\n    bug = { :id => 42, :title => "My bug" }\r\n    \r\n    post :add_bug, :bug => bug\r\n    \r\n    added_bug = Bug.find(:last)\r\n    assert_equal bug[:id],    added_bug.id    # Fails because bug[:id] is now "42", not 42.\r\n    assert_equal bug[:title], added_bug.title\r\n\r\nThe `process` method should probably duplicate `parameters` before modifying it.\r\n\r\nTested with Rails 3.1 RC5. Note this is a regression from Rails 2.3.x. (Not sure about 3.0.x.)'
2598,'josh','Fix sprockets warnings\nJust released sprockets beta 14 and forget I deprecated some stuff that I need to update in Rails.\r\n\r\nEverything should still be working, just need to change some things around in Rails to shut up the warnings.'
2594,'drogus',"Engine install migration error in Rails 3.1.0.rc6\nEngine install migrations task is not working in Rails 3.1.0.rc6. While running the install task (rake app:foo_engine:install:migrations) the following is produced:\r\n\r\n  rake aborted!\r\n  Don't know how to build task 'railties:install:migrations'\r\n  Tasks: TOP => app:foo_engine:install:migrations\r\n\r\nSteps to reproduce:\r\n\r\nWith Rails 3.1.0.rc6, create a new engine:\r\n\r\n  rails plugin new foo --full\r\n\r\nGenerate a model:\r\n\r\n  rails g model post title:string\r\n\r\nRun install migration rask:\r\n\r\n  rake app:foo_engine:install:migrations\r\n"
2592,'spastorino','Performance regression in 3.1.0rc6\nI can see significant performance regression in our application test suite after upgrading from rc5 to rc6. \r\n\r\nRails rc5: Finished in 5.587095 seconds.\r\nRails rc6: Finished in 12.997916 seconds.\r\n\r\nAnd average response time down to ~180-200ms from ~70-100ms. \r\n\r\n'
2582,'tenderlove',"[3.1.0.rc6] Asset pipeline can't find files with multibyte file names\nFor files named with multibyte characters (e.g.  日本語.jpg) placed under the assets directory, Rails will return a 404 error as it tries to find the url encoded representation of the unicode characters instead (.e.g /assets/%E6%97%A5%E6%9C%AC%E8%AA%9E.jpg ).\r\n\r\nFiles named with multibyte characters are served correctly when placed under /public though (which is my current fix for the issue)\r\n\r\nNot sure if this is intended behavior or not, so please close if its supposed to work this way."
2575,'pixeltrix','Leading slash on :controller param in url_for \nVarious documentation around the web states that the :controller param can start with a leading slash to ignore namespaces.\r\n\r\nThis is not working for me and I cannot see any reference to it in the current codebase.\r\n\r\nIs this a feature that has been removed, or is it something that has just slipped through the net.\r\n\r\nAs an example. If I am currently on "/x/y/z" and I say url_for(:controller => "/a"), I expect a url generated as "/a". Instead I get "/x/a".\r\n\r\nPatching actionpack/lib/action_dispatch/routing/route_set.rb line 434 as follows fixes this:\r\n`if !named_route && different_controller? && !controller.starts_with?(\'/\')`\r\n\r\nI can put together a pull request etc, but I just want to know whether this has been deliberately removed from Rails before I move forward.\r\n\r\nThanks, \r\niHiD'
2574,'josevalim','[3.1.0.rc6] hello_w*rld.erb in ActionPack breaks git on Windows\nIt looks like commit 09ad48f22 introduced actionpack/test/fixtures/test/hello_w*rld.erb which breaks git on Windows, where you can\'t create a file with an asterisk in the name, even with "reserved name" checking turned off (e.g. the UNC path trick shown here: http://support.microsoft.com/kb/315226)'
2567,'jonleighton','Some autoloads are missing from 0d5a6f68dfb930816392f9711f0a6a52872bc72f\nSee https://github.com/rails/rails/commit/0d5a6f68dfb930816392f9711f0a6a52872bc72f#commitcomment-535082'
2566,'jonleighton',"Module#delegate non-public deprecation doesn't work with method_missing\nSee https://github.com/rails/rails/commit/aa1d1e4962ba218f34defd0e7f0b665c795eb12b#commitcomment-535924\r\n\r\nAlso need to make sure the `Object#public_send` backport handles this correctly."
2561,'spastorino','Broken tests with 3.1.\nHello. I tested new RC6 on our app. Everyting looks OK until i runs tests.\r\nFrom 110seconds and 3 failures it is\r\n660 seconds and 20 failures.'
2560,'dhh','[Rails 3.1.0.rc6] Missing rake task "rake db:test:prepare"?\nHello!\r\n\r\nI am experimenting with Rails 3.1.0.rc6.\r\n\r\nOn running `rake -T`, I get a list of tasks but don\'t see `rake db:test:prepare`. Has the rake task been dropped? What replaces it (if anything)?\r\n\r\nThanks in advance.\r\n\r\nSilumesii\r\n'
2556,'jonleighton','Duplicate joins on a has_many :through with a scope that also has a join\nIn Rails 3.1.rc5 i get ActiveRecord::StatementInvalid exceptions like\r\n\r\nActiveRecord::StatementInvalid: PGError: ERROR:  table name "pets" specified more than once\r\n: SELECT COUNT(*) FROM "toys" INNER JOIN "pets" ON "pets"."pet_id" = "toys"."pet_id" INNER JOIN "pets" ON   "toys"."pet_id" = "pets"."pet_id" WHERE "pets"."owner_id" = 1 AND (pet.created_at < \'2011-07-17 11:29:10.786533\')\r\n\r\nThis is a regression over 3.0.9 where the according query looks like that:\r\n\r\nSELECT COUNT(*) FROM "toys" INNER JOIN "pets" "pets_toys" ON "pets_toys"."pet_id" = "toys"."pet_id" INNER JOIN "pets" ON "toys".pet_id = "pets".pet_id WHERE (("pets".owner_id = 1)) AND (pet.created_at < \'2011-07-17 11:20:32.653116\')\r\n\r\nwhich also adds an superflous JOIN but in a way that doesn\'t break.\r\n\r\nHere\'s the patch which triggers the above error in the tests: https://gist.github.com/1151143'
2550,'rafaelfranca','HTML Scanner parser regression\n@tenderlove:\r\n\r\n586a944ddd4d03e66dea1093306147594748037a causes at least two different types of false-positive parse errors that did not exist in 3.0.9:\r\n\r\n```ruby\r\ndef test_xml_tag\r\n  assert_nothing_raised { HTML::Document.new(\'<?xml version="1.0" encoding="UTF-8"?>\', true, true) }\r\nend\r\n\r\ndef test_js\r\n  assert_nothing_raised { HTML::Document.new(\'<script>1<=2</script>\', true, true) }\r\nend\r\n```\r\n\r\n```\r\nLoaded suite test/template/html-scanner/document_test\r\nStarted\r\n......F........F\r\nFinished in 0.016336 seconds.\r\n\r\n  1) Failure:\r\ntest_js(DocumentTest)\r\n    [test/template/html-scanner/document_test.rb:153:in `test_js\']:\r\nException raised:\r\nClass: <RuntimeError>\r\nMessage: <"expected > (got \\"\\" for <=2, {})">\r\n---Backtrace---\r\n/Users/titanous/src/rails/actionpack/lib/action_controller/vendor/html-scanner/html/node.rb:194:in `parse\'\r\n/Users/titanous/src/rails/actionpack/lib/action_controller/vendor/html-scanner/html/document.rb:20:in `initialize\'\r\ntest/template/html-scanner/document_test.rb:153:in `new\'\r\ntest/template/html-scanner/document_test.rb:153:in `test_js\'\r\ntest/template/html-scanner/document_test.rb:153:in `test_js\'\r\n---------------\r\n\r\n  2) Failure:\r\ntest_xml_tag(DocumentTest)\r\n    [test/template/html-scanner/document_test.rb:149:in `test_xml_tag\']:\r\nException raised:\r\nClass: <RuntimeError>\r\nMessage: <"expected > (got \\"?>\\" for <?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>, {\\"encoding\\"=>\\"UTF-8\\", \\"version\\"=>\\"1.0\\"})">\r\n---Backtrace---\r\n/Users/titanous/src/rails/actionpack/lib/action_controller/vendor/html-scanner/html/node.rb:194:in `parse\'\r\n/Users/titanous/src/rails/actionpack/lib/action_controller/vendor/html-scanner/html/document.rb:20:in `initialize\'\r\ntest/template/html-scanner/document_test.rb:149:in `new\'\r\ntest/template/html-scanner/document_test.rb:149:in `test_xml_tag\'\r\ntest/template/html-scanner/document_test.rb:149:in `test_xml_tag\'\r\n---------------\r\n\r\n16 tests, 30 assertions, 2 failures, 0 errors\r\n```\r\n\r\n '
2510,'pixeltrix',"Calling request.params in a constraint class causes subsequent routes to be broken\nhttps://github.com/joevandyk/rails/commit/f5a9d6572de026e1960d79d96ba67c2dff449cbb is a failing test case.\r\n\r\n    class RouteMatcher\r\n      def self.matches? request\r\n        request.params \r\n        return false\r\n      end\r\n    end\r\n\r\n    Routes::Application.routes.draw do\r\n      match '/:id' => 'categories#show', :constraints => RouteMatcher\r\n\r\n      # For a URL of /about, params[:id] will == 'about'\r\n      # You'd expect params[:path] == 'about'\r\n      # If you remove 'request.params' up above, it behaves as expected.\r\n      match '*path' => 'pages#find' \r\n    end"
2498,'tenderlove','Single transformation API for both xml and json representations\nI have an app that provides json and xml views of a database table, but with a subset of columns and some pre-processing (different column names and a couple of value transformations). In order to apply the same transformations to the json and xml output, I have to do the same thing twice:\r\n\r\n```ruby\r\n  def as_json(options={})\r\n    super((options || {}).merge(serialization_options))\r\n  end\r\n\r\n  def to_xml(options={})\r\n    super((options || {}).merge(serialization_options))\r\n  end\r\n\r\n  def serialization_options\r\n    {\r\n     :only => [:first_name, :last_name],\r\n     :methods => [:id, :username]\r\n    }\r\n  end\r\n```\r\n\r\nThe fact that we have to use `to_xml` for xml and `as_json` for json is confusing, and imposes redundancy.\r\n\r\nI propose a new method named `serialization_options` (as in my example above), which affects both xml and json (and can be used by other serializers like csv, etc).\r\n\r\nI realize that there is already `serializable_hash`, but overriding that only impacts `render :json => ...`. Changing `render :xml => ...` to use `serializable_hash` would solve the problem, but it might well break existing apps in the process.\r\n'
2488,'pixeltrix',"Add an assertion for testing redirect in routes.rb\nI'd like to use the redirect method in my routes configuration, but I'd also like to be able to cover it with unit tests for the routing.\r\n\r\nI can't see an assertion for the routing in [1] that will test a redirect in the routes. Did I miss something?\r\n\r\n[1] https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/testing/assertions/routing.rb\r\n"
2459,'josevalim','3-1-stable i18n.t regressions\nunpack depot.tgz\r\ncd depot\r\nrails server\r\n\r\npoint brower to http://localhost:3000/en\r\nclick on any Add to Cart button\r\nclick on Checkout\r\nleaving the fields blank, click on Place Order\r\nNote "4 errors prohibited this order from being saved."\r\n\r\nLeaving the server up, edit config/locales/en.yml.\r\n\r\nFirst, remove:\r\n\r\n      order:       "order"\r\n\r\nAgain, attempt to place an order with blank fields.  Result:\r\n\r\n    4 errors prohibited this <span class="translation_missing" title="translation\r\n    missing: en.activerecord.models.order">Order</span> from being saved.\r\n\r\nNote two problems: one a html_safe issue (escaped markup) and another being\r\nthat the English translation for the model name is missing.  In prior versions\r\nof Rails, such translations were not required.\r\n\r\nNext, remove:\r\n\r\n      header:\r\n        one:       "1 error prohibited this %{model} from being saved"\r\n        other:     "%{count} errors prohibited this %{model} from being saved"\r\n\r\nAgain, attempt to place an order with blank fields.  Result:\r\n\r\n    Header.\r\n\r\nIt used to be that one did not have to supply the English versions of built-in Rails error messages. It might be that the names one needs to use changed (intentionally or otherwise). At a minimum, I think that requires mention mention in the announce. It could also be a bug that needs to be fixed.'
2453,'pixeltrix',"Fix TimeWithZone#to_time to return self instead of utc\nA previous change to TimeWithZone#to_time returned utc. This is unexpected and doesn't match the comment above the method. The original change was made to simplify the <=> override on Time. Using a different technique achieves the same result while preserving the expected to_time behaviour.\r\n\r\nAlso added better tests for the temporal classes when they should return self i.e. Time#to_time, Date#to_date and DateTime#to_datetime.\r\n\r\nInexplicably Ruby 1.9 does not return self from Time#to_time, but getlocal instead. I wonder if we should override this?"
2449,'tenderlove',"Rails 3.0 - Time objects broken by marshalling-unmarshalling\nIn Rails 3.0.9 fractional seconds aren't preserved when marshalling-unmarshalling a Time object.  (Hence breaking Times that I stored in a session.)  \r\n\r\nThis bug has already been fixed in master (https://github.com/rails/rails/commit/96546bb63bd5f1b24f5126e7a3314580bc59584f) can we get this backported to Rails 3-0-stable?"
2440,'spastorino',"dom_id doesn't work for destroyed objects anymore\nTested with 3.1.0.rc4\r\n\r\n     @comment = Comment.first\r\n     dom_id(@comment)\r\n     => 'comment_1'\r\n\r\n     @comment.destroy\r\n     dom_id(@comment)\r\n     => 'new_comment'  # still should be 'comment_1'\r\n\r\nCan somebody confirm that this is a problem? Thanks."
2431,'jonleighton','Rails 3.1 Problems with marshalling ActiveRecord Objects\nHi all,\r\n\r\nWe\'re seeing 2 major regressions (features?) when serializing ActiveRecord objects in Rails 3.1. We\'ve tested against rc5, 3.1-stable HEAD and master HEAD. The below examples work as expected in Rails 2.x.\r\n\r\n"a code example paints 1000 words" so here goes:\r\n\r\nProblem 1\r\n--------------\r\n\r\n  p = Post.new\r\n  puts p.new_record? # => true\r\n  q = Marshal.load( Marshal.dump( p ) )\r\n  puts q.new_record? # => false\r\n\r\nThe outcome of this is that when loading a serialized AR object AR tries to go off and grab a record from the DB (we\'re guessing because it thinks it\'s not a new_record, but id is nil so the results are undefined).\r\n\r\nProblem 2\r\n--------------\r\n\r\n  p = Post.new\r\n  p.comments << c\r\n  p.comments << c\r\n  p.comments.size # => 2\r\n  p.comments[0].id # => nil\r\n  Marshal.dump( p ) # => (does NOT include child associations, to me this is a **huge** change from 2.x, where many people use dump/load to deep copy\r\n  q = Marshal.load( Marshal.dump( p ) )\r\n  q.comments.size # => 1 (based on a random SQL query that grabs the first one with a user_id of 0 or whatever, depending on your model)\r\n  q.comments[0].id # => some random record id (see the bug above)\r\n\r\n\r\nAny help hugely appreciated.\r\n\r\n//matt\r\n  \r\n'
2420,'jonleighton','Add a ActiveRecord::Base#find_or_create method\nTo replace the dynamic `find_or_create_by` methods accepting a hash. See https://github.com/rails/rails/issues/2404 for explanation.'
2418,'rafaelfranca','simple_selector: attributes with brackets in double quotes not recognized\nsimple_selector: attributes with brackets in double quotes not recognized\r\n\r\nHTML::Selector#simple_selector can recognize attributes in single and\r\ndouble quotes. But when the attribute value contains square brackets,\r\nand the value is enclosed in double quotes, an exception\r\n`ArgumentError: Invalid selector: "]` is thrown.\r\n\r\nRelated to issue #2412.'
2404,'sikachu','Dynamic Finder Deprecation Notice on documented behavior\nI upgraded a project from rc4 to rc5 and got a new deprecation notice.\r\n\r\nWhen I call a dynamic finder with one argument that is a hash, eg:\r\n\r\n```ruby\r\n  Post.find_or_create_by_title_and_author :title => some_title, :author => some_author\r\n```\r\n\r\nI get a warning about it\r\n\r\n```\r\nDEPRECATION WARNING: Calling dynamic finder with less number of arguments than the number of attributes in method name is deprecated and will raise an ArguementError in the next version of Rails. Please passing `nil\' to the argument you want it to be nil.\r\n```\r\n\r\nCalling a dynamic finder with a hash is a documented behavior:\r\n\r\n```\r\n  # To find by a subset of the attributes to be used for instantiating a new object, pass a hash instead of\r\n  # a list of parameters.\r\n  #\r\n  # Tag.find_or_create_by_name(:name => "rails", :creator => current_user)\r\n```\r\nhttps://github.com/sikachu/rails/blob/fa7dd345c306f2a3605c8148c30194d9b721e1a3/activerecord/lib/active_record/base.rb#L215\r\n\r\nThe warning was added in https://github.com/rails/rails/pull/2129'
2403,'tenderlove','rails 2.3.12 missing requires on rdoc gem and rake >= 0.9.2\n```\r\n$ rake --tasks\r\n(in ${RAILS_ROOT})\r\nrake aborted!\r\nuninitialized constant RDoc\r\n```\r\nit seems that rails-2.3.12/lib/tasks/documentation.rake is missing something like \r\n\r\n```ruby\r\nbegin\r\n   require \'rdoc/task\'\r\nrescue LoadError\r\n  $stderr.puts "install the rdoc gem to generate documentation"\r\nend\r\n```\r\n\r\nor the rails:update task should update the Rakefile to change the requires there.\r\n\r\nthis happens with rake 0.8.7. on newer rake versions there seems to be a workaround in place that make the task just work.\r\n\r\nto solve the issue:\r\n1. require rdoc gem in the gemspec.\r\n2. require either a newer rake or fix the requires in the lib/tasks/documentation.rake'
2400,'tenderlove','bin/rails provided twice now\nI know it is kind of my fault that rails 3.0 still had the rails package. but with rc4 the bin/rails was provided by the rails gem. now railties and rails install it.\r\n\r\nis this intentional?'
2394,'josevalim',".js files are still run through erb filter without .erb extension\nWasn't sure if this was intentional but if you remove the `erb` extension from a `views/view/*.js.erb` file, the ruby code is still evaluated when the `js` file is rendered. "
2383,'spastorino','3.1.0.rc5 on jruby in production tries to load sass/coffee_script gems\nFresh rails 3.1.0.rc5 app. With a scaffold called `products`.\r\n\r\nPrecompiled assets and running in production. Works with 1.9.2 but fails on jruby-1.6.3 and jruby-head.\r\n\r\n```\r\n=> Booting WEBrick\r\n=> Rails 3.1.0.rc5 application starting in production on http://0.0.0.0:3000\r\n=> Call with -d to detach\r\n=> Ctrl-C to shutdown server\r\n[2011-07-31 23:48:56] INFO  WEBrick 1.3.1\r\n[2011-07-31 23:48:56] INFO  ruby 1.9.2 (2011-07-31) [java]\r\n[2011-07-31 23:48:56] INFO  WEBrick::HTTPServer#start: pid=90868 port=3000\r\nWARN: tilt autoloading \'sass\' in a non thread-safe way; explicit require \'sass\' suggested.\r\ncache: [GET /products/] miss\r\n\r\n\r\nStarted GET "/products/" for 0:0:0:0:0:0:0:1%0 at 2011-07-31 23:49:05 -0400\r\n  Processing by ProductsController#index as HTML\r\nRendered products/index.html.erb within layouts/application (7.0ms)\r\nCompiled ~/Projects/Rails/app/app/assets/stylesheets/application.css  (11ms)  (pid 90868)\r\nCompleted 500 Internal Server Error in 122ms\r\n\r\nActionView::Template::Error (no such file to load -- sass\r\n  (in /Users/samuelkadolph/Projects/Rails/app/app/assets/stylesheets/products.css.scss)):\r\n    2: <html>\r\n    3: <head>\r\n    4:   <title>App</title>\r\n    5:   <%= stylesheet_link_tag    "application" %>\r\n    6:   <%= javascript_include_tag "application" %>\r\n    7:   <%= csrf_meta_tags %>\r\n    8: </head>\r\n  app/views/layouts/application.html.erb:5:in `_app_views_layouts_application_html_erb__1388531255_5984\'\r\n  app/controllers/products_controller.rb:7:in `index\'\r\n```'
2367,'spastorino','3.1.0.rc5 rails new generated application.rb comments and actual behavior don\'t match\nfrom railties/lib/rails/generators/rails/app/templates/config/application.rb\r\n\r\n```\r\n# If you have a Gemfile, require the default gems, the ones in the\r\n# current environment and also include :assets gems if in development\r\n# or test environments.\r\nBundler.require *Rails.groups(:assets) if defined?(Bundler)\r\n```\r\n\r\nIn reality :assets always gets loaded\r\n\r\n```\r\nLoading production environment (Rails 3.1.0.rc5)\r\nruby-1.9.2-p180 :005 > Rails.groups(:assets)\r\n => [:default, "production", :assets]\r\n```\r\n\r\nLooking at railties/lib/rails.rb there doesn\'t seem to be any production specific code in groups. So is the documentation wrong or groups buggy?'
2362,'spastorino','Errno::ENAMETOOLONG: File name too long when serving assets\nI\'m trying to serve an asset:\r\n\r\n    /assets/yui/build/querystring-stringify-simple/querystring-stringify-simple.js\r\n\r\nin Rails 3.1.0.rc4 it worked well, but now (Rails 3.1.0.rc5) I get:\r\n\r\n    Started GET "/assets/yui/build/querystring-stringify-simple/querystring-stringify-simple.js" for 127.0.0.1 at 2011-07-30 13:29:44 +0200\r\n    Compiled ~/dev/bridge/app/assets/javascripts/yui/build/querystring-stringify-simple/querystring-stringify-simple.js  (0ms)  (pid 3803)\r\n    Error compiling asset yui/build/querystring-stringify-simple/querystring-stringify-simple.js:\r\n    Errno::ENAMETOOLONG: File name too long - /home/kuba/dev/bridge/tmp/cache/assets/sprockets%2Fapp%2Fassets%2Fjavascripts%2Fyui%2Fbuild%2Fquerystring-stringify-simple%2Fquerystring-stringify-simple.js%3Asource20110730-3803-v44je9.lock\r\n    Served asset /yui/build/querystring-stringify-simple/querystring-stringify-simple.js - 500 Internal Server Error\r\n'
2334,'tenderlove','Error creating a record when the model has no id column\nHere\'s an edge case for you:\r\n\r\njruby-1.6.3\r\noracle\r\nrails-3.0.8\r\nactiverecord-jdbc-adapter-1.1.2.1\r\n\r\nAt this point I\'m not sure where the problem lies so I\'m documenting it here - might be a bug in activerecord, arel, or the activerecord-jdbc-adapter. \r\n\r\nOur app has a model with no primary key column (e.g. id). When trying to create a record, I get the following error:\r\n\r\n```\r\nThing.create!\r\nNoMethodError: undefined method `name\' for nil:NilClass\r\n\tfrom org/jruby/RubyKernel.java:238:in `method_missing\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/activesupport-3.0.8/lib/active_support/whiny_nil.rb:48:in `method_missing\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/to_sql.rb:56:in `visit_Arel_Nodes_InsertStatement\'\r\n\tfrom org/jruby/RubyArray.java:2336:in `collect\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/to_sql.rb:55:in `visit_Arel_Nodes_InsertStatement\'\r\n\tfrom org/jruby/RubyKernel.java:2096:in `send\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/visitor.rb:15:in `visit\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/visitor.rb:5:in `accept\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/to_sql.rb:18:in `accept\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/activerecord-3.0.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:111:in `with_connection\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/visitors/to_sql.rb:16:in `accept\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/tree_manager.rb:20:in `to_sql\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/arel-2.0.10/lib/arel/select_manager.rb:217:in `insert\'\r\n\tfrom org/jruby/RubyKernel.java:2096:in `send\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/activerecord-3.0.8/lib/active_record/relation.rb:14:in `insert\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/activerecord-3.0.8/lib/active_record/persistence.rb:274:in `create\'\r\n... 19 levels...\r\n\tfrom org/jruby/RubyKernel.java:1088:in `eval\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/ruby-debug-0.10.4/cli/ruby-debug/commands/irb.rb:99:in `evaluate\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:158:in `eval_input\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:271:in `signal_status\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:155:in `eval_input\'\r\n\tfrom org/jruby/RubyKernel.java:1419:in `loop\'\r\n\tfrom org/jruby/RubyKernel.java:1191:in `catch\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:154:in `eval_input\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:71:in `start\'\r\n\tfrom org/jruby/RubyKernel.java:1191:in `catch\'\r\n\tfrom /Users/dchelimsky/.rvm/rubies/jruby-1.6.3/lib/ruby/1.8/irb.rb:70:in `start\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/railties-3.0.8/lib/rails/commands/console.rb:44:in `start\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/railties-3.0.8/lib/rails/commands/console.rb:8:in `start\'\r\n\tfrom /Users/dchelimsky/.rvm/gems/jruby-1.6.3@vera/gems/railties-3.0.8/lib/rails/commands.rb:23:in `(root)\'\r\n\tfrom org/jruby/RubyKernel.java:1038:in `require\'\r\n\tfrom script/rails:6:in `(root)\'jruby-1.6.3\r\n```\r\n\r\nTo reproduce:\r\n\r\n```\r\nrails new example\r\ncd example\r\nrails g model things name:string\r\n```\r\n\r\nUpdate the migration to exclude an id column:\r\n\r\n```ruby\r\n\r\nclass CreateThings < ActiveRecord::Migration\r\n  def self.up\r\n    create_table :things, :id => false do |t|\r\n      t.string :name\r\n\r\n      t.timestamps\r\n    end\r\n  end\r\n\r\n  def self.down\r\n    drop_table :things\r\n  end\r\nend\r\n```\r\n\r\nBack to the shell:\r\n\r\n```\r\nrake db:migrate\r\nrails runner "Thing.create"\r\n```'
2333,'tenderlove','Rails 3.1.0.rc5 and ActiveRecord::QueryCache\nI have two files of tests, model with email uniqueness validation and an empty Users controller.\r\n\r\nModel test /spec/models/user_spec.rb\r\n\r\n```` ruby\r\nrequire \'spec_helper\'\r\n\r\ndescribe User do\r\n  before(:each) do\r\n    @attr = { name: "aaaaa", fullname: "aaaaa", \r\n      email: "aaaa@a.pa" }\r\n  end\r\n\r\n  it "test1" do\r\n    User.create!(@attr)\r\n    a = User.new(@attr)\r\n    a.should_not be_valid # [1] line\r\n  end\r\n  it "test2" do\r\n    User.create!(@attr)\r\n  end\r\nend\r\n````\r\n\r\nand an integration test  spec/requests/user.rb\r\n\r\n```` ruby\r\n\r\nrequire \'spec_helper\'\r\n\r\ndescribe "Users" do\r\n    it "failure" do\r\n      visit new_user_path\r\n    end\r\nend\r\n\r\n````\r\n\r\nSome output from running these tests:\r\n\r\n````\r\n\r\n~ rspec spec/models \r\n..\r\n\r\n2 examples, 0 failures\r\n\r\n\r\n~rspec spec/      \r\nF.F\r\n\r\nFailures:\r\n\r\n  1) Users failure\r\n     Failure/Error: visit new_user_path\r\n     ActionView::Template::Error:\r\n       undefined method `model_name\' for NilClass:Class\r\n     # ./app/views/users/new.html.erb:3:in `_app_views_users_new_html_erb__3759576835775003496_34244780\'\r\n     # ./spec/requests/users_spec.rb:5:in `block (2 levels) in <top (required)>\'\r\n\r\n  2) User test2\r\n     Failure/Error: User.create!(@attr)\r\n     ActiveRecord::RecordInvalid:\r\n       Validation failed: Email has already been taken\r\n     # ./spec/models/user_spec.rb:15:in `block (2 levels) in <top (required)>\'\r\n\r\n3 examples, 2 failures\r\n````\r\n\r\nFirst error in the second output is obvious (there is an empty controller only)  but the second error appeared unexpectedly. It appears only when running both tests or the [1] line isn\'t commented. The first and the second example differ in sql logs:\r\nFor model tests:\r\n\r\n```` sql\r\n   (0.1ms)  SAVEPOINT active_record_1\r\n   (0.1ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n  SQL (3.6ms)  INSERT INTO "users" ("created_at", "email", "fullname", "name", "password_digest", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["created_at", Thu, 28 Jul 2011 19:52:40 UTC +00:00], ["email", "aaaa@a.pa"], ["fullname", "aaaaa"], ["name", "aaaaa"], ["password_digest", nil], ["updated_at", Thu, 28 Jul 2011 19:52:40 UTC +00:00]]\r\n   (0.1ms)  RELEASE SAVEPOINT active_record_1\r\n   (0.1ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n   (0.0ms)  SAVEPOINT active_record_1\r\n   (0.1ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n  SQL (0.4ms)  INSERT INTO "users" ("created_at", "email", "fullname", "name", "password_digest", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["created_at", Thu, 28 Jul 2011 19:52:40 UTC +00:00], ["email", "aaaa@a.pa"], ["fullname", "aaaaa"], ["name", "aaaaa"], ["password_digest", nil], ["updated_at", Thu, 28 Jul 2011 19:52:40 UTC +00:00]]\r\n   (0.0ms)  RELEASE SAVEPOINT active_record_1\r\n````\r\n\r\nFor both tests:\r\n\r\n```` sql\r\nStarted GET "/users/new" for 127.0.0.1 at 2011-07-28 21:52:53 +0200\r\n  Processing by UsersController#new as HTML\r\nRendered users/new.html.erb within layouts/application (78.4ms)\r\nCompleted 500 Internal Server Error in 127ms\r\n   (0.1ms)  SAVEPOINT active_record_1\r\n   (0.1ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n  SQL (4.0ms)  INSERT INTO "users" ("created_at", "email", "fullname", "name", "password_digest", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["created_at", Thu, 28 Jul 2011 19:52:54 UTC +00:00], ["email", "aaaa@a.pa"], ["fullname", "aaaaa"], ["name", "aaaaa"], ["password_digest", nil], ["updated_at", Thu, 28 Jul 2011 19:52:54 UTC +00:00]]\r\n   (0.1ms)  RELEASE SAVEPOINT active_record_1\r\n   (0.1ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n   (0.0ms)  SAVEPOINT active_record_1\r\n  CACHE (0.0ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'aaaa@a.pa\') LIMIT 1\r\n   (0.0ms)  ROLLBACK TO SAVEPOINT active_record_1\r\n````\r\n\r\nI don\'t know why, but in the second situation AR uses cache and that causes validation error.\r\n\r\nI cannot reproduce this bug in rc4. Also it works in rc5 when this is set to false.\r\n    config.cache_classes = false\r\n\r\n'
2328,'spastorino',"(undefined method `mtime' for nil:NilClass)\nHi\r\n\r\nI ran into a problem deploying 'rails', '3.1.0.rc5' to heroku. When rendering the templates, I get \r\n\r\nActionView::Template::Error (undefined method `mtime' for nil:NilClass). \r\n\r\nWhen I try to run rake assets:precompile locally, I get the same error. Here is the trace after running the rake task:\r\n\r\n```\r\nrake assets:precompile --trace\r\n** Invoke assets:precompile (first_time)\r\n** Invoke assets:ensure_env (first_time)\r\n** Execute assets:ensure_env\r\n** Execute assets:precompile\r\n** Invoke environment (first_time)\r\n** Execute environment\r\nrake aborted!\r\nundefined method `mtime' for nil:NilClass\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/activesupport-3.1.0.rc5/lib/active_support/whiny_nil.rb:48:in `method_missing'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/bundled_asset.rb:203:in `block in build_dependencies_paths_and_assets'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `block in each'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `each_key'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/bundled_asset.rb:200:in `build_dependencies_paths_and_assets'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/bundled_asset.rb:141:in `dependency_paths'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/bundled_asset.rb:61:in `mtime'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/asset.rb:58:in `block in encode_with'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/asset.rb:57:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/asset.rb:57:in `encode_with'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/bundled_asset.rb:43:in `encode_with'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/caching.rb:48:in `cache_asset'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/environment.rb:84:in `build_asset'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/trail.rb:111:in `find_asset_in_path'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/base.rb:102:in `find_asset'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/environment.rb:74:in `find_asset'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/static_compilation.rb:44:in `block (2 levels) in precompile'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `block in each'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `each_key'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/set.rb:222:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/static_compilation.rb:35:in `block in precompile'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/static_compilation.rb:34:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/sprockets-2.0.0.beta.12/lib/sprockets/static_compilation.rb:34:in `precompile'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@mosaic/gems/actionpack-3.1.0.rc5/lib/sprockets/assets.rake:14:in `block (2 levels) in <top (required)>'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:205:in `call'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:205:in `block in execute'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:200:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:200:in `execute'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:158:in `block in invoke_with_call_chain'\r\n/Users/timstephenson/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:151:in `invoke_with_call_chain'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/task.rb:144:in `invoke'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:112:in `invoke_task'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:90:in `block (2 levels) in top_level'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:90:in `each'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:90:in `block in top_level'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:129:in `standard_exception_handling'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:84:in `top_level'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:62:in `block in run'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:129:in `standard_exception_handling'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/lib/rake/application.rb:59:in `run'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/gems/rake-0.9.2/bin/rake:32:in `<top (required)>'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/bin/rake:19:in `load'\r\n/Users/timstephenson/.rvm/gems/ruby-1.9.2-p180@global/bin/rake:19:in `<main>'\r\nTasks: TOP => assets:precompile\r\n```\r\n\r\nThanks in advance for any advice on how to resolve the issue. If it helps here's my ticket on heroku as well: https://support.heroku.com/requests/27952\r\n\r\nBest\r\n\r\nTim\r\n\r\n\r\n\r\n"
2304,'jonleighton','Backport #1969 to 3-1-stable\n'
2299,'spastorino',"rails3.1 rc5 and images problem - 200 OK but they don't show (css and js works fine)\nI've got problem with images after upgrade (from rc4 to rc5). They just don't show in the browser. There's no 404 when I go to the url /asset/image_name.jpg, not 404 in logs.\r\n\r\nlog fragment: http://pastie.org/2279109"
2294,'josh',"Asset digest fingerprinting should be a config option\n(Bear with me, this might get long)\r\n\r\nWhilst I love the benefits that the new asset pipeline brings, I have become convinced over the last few weeks that the MD5 asset fingerprinting in production mode should be an optional feature. Although I feel it should be disabled by default, I would be just as happy if it was easily disabled with an environment option.\r\n\r\nAsset fingerprinting adds a rather high barrier to entry for writing or integrating JavaScript and CSS. Typically a developer must ensure that all url()'s in their CSS/SASS files are using the relevant asset helpers (which will probably require renaming and adding a <code>.erb</code> extension), as well as ensuring that their JavaScript files do not hardcode any asset paths. Moreover it adds an inconsistency between development & production mode that can be difficult to debug.\r\n\r\nThese aren't insurmountable issues but they are definitely going to be the cause of a large number of support queries once 3.1 drops.\r\n\r\nThe problem gets worse when you consider adding in third-party code. Packages such as TinyMCE, which load in JS and CSS files dynamically, break completely when asset fingerprinting is taken into account. At the very least, for simpler imported code, CSS will need to be rewritten to reference the assets correctly.\r\n\r\nFor such code, moving the assets into <code>public/</code> is an option. However this seems like a case of throwing the baby out with the bathwater. It removes the ability to include those packages within the main <code>application.css/js</code>, as well as other features such as minification. In my particular situation I want to be able to incorporate such code within distributable themes (which use the asset pipeline), making the <code>public/</code> approach infeasible.\r\n\r\nI do understand the reasons for adding the fingerprints and the problems it solves. However it seems like a feature that the developer would enable if they need it and once they know all of their JS/CSS is conformant. Not everyone is using a CDN or caching proxy.\r\n\r\nCurrently the <code>config.action_controller.perform_caching</code> variable is used to control whether fingerprints are added to asset filenames. However this obviously controls unrelated caching functionality too.\r\n\r\nMy proposal is to add a <code>config.assets.fingerprint</code> boolean variable that enables or disables fingerprinting. This would be set to false in <code>config/environments/development.rb</code> and (possibly) true in <code>config/environments/production.rb</code>.\r\n\r\nThis would mainly require (relatively small) changes in Sprockets to add a per-environment <code>fingerprint</code> variable/method and to conditionally add digests to filenames when precompiling. It would also touch the <code>Sprockets::RailsHelper</code> code.\r\n\r\nApologies for the essay. I do want to make sure I'm on the right track before I contribute some patches.\r\n"
2242,'fxn','RailsGuides: GettingStarted: ActiveModel description needs work\n\r\nCurrent Description:\r\n=====================================================================================================\r\nActive Model provides a defined interface between the Action Pack gem services and Object Relationship Mapping gems such as Active Record. Active Model allows Rails to utilize other ORM frameworks in place of Active Record if your application needs this.\r\n=====================================================================================================\r\n\r\nIf I look at this from a beginner\'s viewpoint, there are lots of "scary" words here.  Can we come up with a good, basic overview of what Active Model does?\r\n\r\nFirst stab:\r\n=====================================================================================================\r\nActive Model provides a common interface to all the database back ends that Rails can talk to.  For example, Active Model allows you to pull data from the database and work with that data.  Because Rails uses Active Model, you don\'t need to know how to ask for MySQL data vs. Sqlite3 data, etc.\r\n=====================================================================================================\r\n\r\nComments?  Suggestions?\r\n\r\nQuestions:\r\n    How does Active Model differ from Active Record?\r\n    Why would I use one over the other?\r\n'
2211,'josh','Extending asset pipeline with custom pre-processors\nPerhaps this already exists, in which case someone can point me to an appropriate example... \r\n\r\nWhen you\'re working with Google\'s Closure JS libraries, there is the following workflow: first you reference the `base.js` file in your header, and then in your JS you can just call `goog.require(\'name_of_package\')` and Closure will automatically figure out which files to pull and serve from its source. This is all great, except that if you leave it at that then you\'ll likely end up serving 10+ JS files to satisfy all the deps - and, after all, this is what asset pipeline is supposed to fix!\r\n\r\nFor a quick intro to closure to see this pattern, check out: http://code.google.com/closure/library/docs/gettingstarted.html\r\n\r\n```html\r\n<script src="closure-library/closure/goog/base.js"></script>\r\n<script>\r\n  goog.require(\'goog.dom\');\r\n</script>\r\n<script>\r\n  var newHeader = goog.dom.createDom(\'h1\');\r\n</script>\r\n```\r\n\r\n\r\nTo address the above issue, Closure ships with a `calcdeps.py` which basically runs a regex on all your files looking for goog.require\'s, assembles a dependency tree and then concats all the right files into a single output file. For sake of cleanliness, it would\'t be hard to rewrite the above in Ruby, but the point is: this step needs to run **prior to the compiler within the asset pipeline**. \r\n\r\n```\r\n# scan hello.js for requires and output to hello-calc.js\r\nclosure-library/closure/bin/calcdeps.py -i hello.js -p closure-library/-o script > hello-calc.js\r\n```\r\n\r\nIf you currently try changing the JS compiler from `:uglifier` to `:closure` and you create a closure "Hello World", you\'ll find that the compiler will error out and report that it can\'t find any of the imports. First, `calcdeps.py` needs to run, then the compiler can do its job and compress the file.\r\n\r\n**Question:** What\'s the best way to tackle this within the current asset pipeline? I guess one way around this is to use the precompile stage, but this obviously breaks in dev mode where you\'ll be forced to rerun calcdeps everytime you update your javascript.\r\n\r\n---\r\n\r\nFWIW: Found this rake script trying to solve this problem, but its not really what we\'re after here: http://code.google.com/p/webos-goodies/source/browse/trunk/cms/rails/lib/tasks/closure.rake?r=551 - \r\n\r\ncalcdeps.py: http://code.google.com/p/closure-library/source/browse/trunk/closure/bin/calcdeps.py?r=134'
2177,'josh',"using 'stylesheet_link_tag' within mailer view causes NoMethodError\nHi,\r\nI use Ruby 1.9.2 and Rails 3.1 RC4 and have a `stylesheet_include_tag` in my mailer layout file. Trying to send an email will raise following error:\r\n\r\n    NoMethodError: undefined method `params' for #<UserMailer ... >\r\n\r\n    vendor/rails/actionpack/lib/action_view/helpers/controller_helper.rb:8:in `params'\r\n    vendor/rails/actionpack/lib/sprockets/helpers/rails_helper.rb:64:in `debug_assets?'\r\n    vendor/rails/actionpack/lib/sprockets/helpers/rails_helper.rb:41:in `stylesheet_link_tag'\r\n\r\nThis happens here: https://github.com/rails/rails/blob/master/actionpack/lib/sprockets/helpers/rails_helper.rb#L72 where `stylesheet_link_tag` checks for a debug flag in `params`. Obviously, `ActionMailer` has no `params` hash. I'd be happy to submit a patch, but i'm not quite sure what the desired behavior is."
2174,'tenderlove',"Error retrieving object with TIME column (mysql2)\nI am building an API to open up a legacy MySQL database to our Rails apps. This legacy database has a table with 2 TIME columns that represents a time offset (call them fragment_start and fragment_end). Rails seems to have trouble retrieving objects that have offsets larger than 24 hours. Part of the stack trace:\r\n\r\n\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:671:in 'utc'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:671:in 'each'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:671:in 'to_a'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:671:in 'block in exec_query'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract_adapter.rb:222:in 'block in log'\r\n/activesupport-3.1.0.rc4/lib/active_support/notifications/instrumenter.rb:21:in 'instrument'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract_adapter.rb:217:in 'log'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:660:in 'exec_query'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/mysql2_adapter.rb:654:in 'select'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract/database_statements.rb:9:in 'select_all'\r\n/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in 'select_all'\r\n/activerecord-3.1.0.rc4/lib/active_record/base.rb:473:in 'find_by_sql'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation.rb:109:in 'to_a'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation/finder_methods.rb:370:in 'find_first'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation/finder_methods.rb:122:in 'first'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation/finder_methods.rb:328:in 'find_one'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation/finder_methods.rb:304:in 'find_with_ids'\r\n/activerecord-3.1.0.rc4/lib/active_record/relation/finder_methods.rb:107:in 'find'\r\n/activerecord-3.1.0.rc4/lib/active_record/base.rb:444:in 'find'\r\n\r\nThis happens whenever I retrieve an object using a regular AR find:\r\n\r\nFragment.find(20)\r\n\r\nFor that particular record, the offsets are:\r\n\r\nfragment_start: '23:10:00'\r\nfragment_end: '27:35:00'\r\n\r\nThe MySQL docs specify that a valid TIME column should have a value between '-838:59:59' to '838:59:59'. I think this would be related to the typecasting that AR does whenever you retrieve something from the database."
2162,'tenderlove','SQLite3 Decimals being inserted as blobs\nDecimals seem to be inserted incorrectly as blobs in sqlite3, and as a result I am unable to do > or < comparisons on decimals. I have reproduced it by doing the following:\r\n\r\nrails new decimal_bug\r\ncd decimal_bug/\r\nrails g scaffold my_number amount:decimal\r\n\r\nI then created a "my_number" through the UI with an amount of 100.0. After firing up the dbconsole I executed the following:\r\n\r\nselect *, typeof(amount) from my_numbers where amount > 200;\r\n1|100.0|2011-07-20 01:58:13.119675|2011-07-20 01:58:13.119675|blob\r\n\r\n\r\nI added a line to the active_record/test/cases/base_test.rb test_numeric_fields test that reproduces the issue:\r\n\r\ndef test_numeric_fields\r\n   m = NumericData.new(\r\n      :bank_balance => 1586.43,\r\n      :big_bank_balance => BigDecimal("1000234000567.95"),\r\n      :world_population => 6000000000,\r\n      :my_house_population => 3 \r\n    )    \r\n    assert m.save\r\n\r\n   ...\r\n\r\n   assert_equal 0, NumericData.where("bank_balance > ?", 2000.0).count\r\nend\r\n'
2153,'tenderlove','Problems with threads(fibers) and autoloading in 3.1\nHi there,\r\n\r\nat the moment I\'m spending some time trying to reproduce this issue in a clean way (2 days for now).\r\n\r\nUsing the following stack\r\n* 3.1 stable branch (```config.threadsafe!``` active)\r\n* rack-fiber-pool\r\n* thin\r\n\r\nI get random "stack trace too deep" messages which seem to occur in the autoloader context and are very hard to track down.\r\nI\'ll try to continue on searching but it might be useful to get some debugging tips (dependency logging is a thing i\'ve already discoved) for autoloading or any hints on parts/settings that might have changed.\r\n\r\nBTW: those issues just came up after upgrading a production app to 3.1.\r\nIf I disable the fiber pool everything seems to run smoothly.\r\n\r\n\r\nBest,\r\n\r\nTobias'
2132,'dhh','make skip_bundle default to true\nHi,\r\n\r\nThis is probably just my personal preference and (given my ruby/rails noob status) probably a not a good idea to make the default, but I use rvm, with per project rvm files and so the default of running bundle install for new projects is not my ideal.\r\n\r\nI would prefer either that:\r\n\r\n - skip_bundle defaults to true ( or change it to run_bundle with a default of false)\r\n\r\n - or (keep the current skip_bundle setting/default and) make it a default to create a "per project" .rvmrc file, gemset set to project name and to run bundle install from within the new project new directory.  If rvm is not installed, then it will do nothing.\r\n\r\nJust an idea...\r\n\r\nRegards,\r\nChris '
2126,'tenderlove',"When precompiling assets, --trace is swallowed unless RAILS_GROUPS is set\n`$ bundle exec rake assets:precompile --trace`\r\n\r\nThat will swallow errors unless the `RAILS_GROUPS` environment variable is set. Somewhere between the shell and the task, the `--trace` option is lost so that it isn't passed to `Kernel.exec`, making it difficult for people to debug issues with precompiling assets."
2125,'josh','UTF-8 JavaScript files fail to compress on OS X\nThe asset pipeline makes the assumption that JavaScript files are ISO8859-1 when compressing using the JavaScriptCore runtime and forces a character set conversion to UTF-8, which fails when the file is already UTF-8. Simply adding this to `application.js` and compressing will trigger the issue. Seeing UTF-8 in existing JavaScript files is common on sites handling international content.\r\n\r\n```js\r\nvar message = "“Curly quoted string”";\r\n```\r\n'
2109,'fxn','ERROR:  While generating documentation for activerecord-3.0.9\nI got this error when installing rails for the first time on windows XP:\r\n\r\nInstalling ri documentation for activerecord-3.0.9...\r\nERROR:  While generating documentation for activerecord-3.0.9\r\n... MESSAGE:   Invalid argument - ./</cdesc-<.ri\r\n... RDOC args: --ri --op C:/Ruby192/lib/ruby/gems/1.9.1/doc/activerecord-3.0.9/r\r\ni --main README.rdoc lib README.rdoc --title activerecord-3.0.9 Documentation --\r\nquiet\r\n\r\n'
2107,'spastorino',"xml_http_request fails in IntegrationTests with 3-1-stable\nRecent regression in 3-1-stable with Ruby 1.8.7 (works in 3.0.9 with either 1.8.7 or 1.9.2; and works in 3-1-stable with 1.9.2).\r\n\r\nSteps to reproduce:\r\n\r\n1) Create `test/integration/user_stories_test.rb` with the following content:\r\n\r\n```ruby\r\nrequire 'test_helper'\r\nclass ProductIntegrationTest < ActionDispatch::IntegrationTest\r\n  test 'xhr' do\r\n    xml_http_request :post, '/products', :id => 1\r\n  end\r\nend\r\n````\r\n\r\n2) Execute the following command:\r\n\r\n    rake --trace test:integration\r\n\r\n[expected output (1.9.2)](http://intertwingly.net/stories/2011/07/16/xhrint-192.html)\r\n[actual output (1.8.7)](http://intertwingly.net/stories/2011/07/16/xhrint-187.html)"
2106,'tenderlove',"Ruby 1.9.2p180 Symbol.to_i problem in assign_nested_attributes_for_collection_association with\nHi,\r\n\r\nin ruby 1.9.2 symbols are no longer internally represented as integers and the Symbol.to_i was removed. It is a problem at least in the *assign_nested_attributes_for_collection_association(association_name, attributes_collection)* method of *activer_record/nested_attributes*.\r\n\r\nYou can pass attributes_collection as a Hash and that hash would be converted into an array:\r\n\r\n```ruby\r\nif attributes_collection.is_a? Hash\r\n  keys = attributes_collection.keys\r\n  attributes_collection = if keys.include?('id') || keys.include?(:id)\r\n    Array.wrap(attributes_collection)\r\n  else\r\n     attributes_collection.sort_by { |i, _| i.to_i }.map { |_, attributes| attributes }\r\n  end\r\nend\r\n```\r\n\r\nSo if you pass a Hash like this:\r\n\r\n```ruby\r\n{ :children_attributes => { :child_0 => { }, :child_1 => { } } }\r\n```\r\n\r\nThe method fails on i.to_i with NoMethodError: undefined method 'to_i' for :child_0:Symbol. In ruby 1.8.X the symbol would be converted to a number 43233, :child_1 to 43241 etc. so a correctly sorted array would be the result and would meet the code expectation.\r\n\r\nI run across this problem while porting my 3.0.9 application to ruby 1.9.2. I was also looking to the 3.1.rc4 source and there is no change nor was I able to find any core extension for Symbol that would solve this so I guess there should be a bugfix made for this?\r\n\r\nPS. Thank you all for your hard work on rails!"
2100,'tenderlove','Migration fails to rollback when add_index called with custom name\nIn __Rails 3.1rc4__, create a new project then create the following migration:\r\n\r\n    class CreateFoos < ActiveRecord::Migration\r\n      def change\r\n        create_table :foos do |t|\r\n          t.string :name\r\n\r\n          t.timestamps\r\n        end\r\n\r\n        add_index :foos, :name, :name => "custom_index_name"\r\n      end\r\n    end\r\n\r\nRun "rake db:migrate" then run "rake db:rollback". You get the following:\r\n\r\n\r\n    ==  CreateFoos: reverting =====================================================\r\n    -- remove_index("foos", {:column=>:name})\r\n    rake aborted!\r\n    An error has occurred, this and all later migrations canceled:\r\n\r\n    Index name \'index_foos_on_name\' on table \'foos\' does not exist\r\n\r\n    Tasks: TOP => db:rollback\r\n    (See full trace by running task with --trace)\r\n\r\nI get the same thing with Sqlite3 and PostgreSQL. I\'m using a Mac with Ruby 1.9.2.'
2093,'spastorino',"Rails 3.1pre4 engine gemspec broken\nThe generated gemspec in rails 3.1pre doesn't package correctly resulting in the following:\r\n\r\nmounting the engine doesn't do anything as the app  folder and config (routes) has not been packaged.\r\nthe copying of migrations does not work with the railties rake task.\r\n\r\nI have patched the generator and submitted the following pull request:\r\n\r\nhttps://github.com/rails/rails/pull/2092"
2088,'josevalim',"Can't get middleware in front of Sprockets\nI have a number of header changes I need to make on static assets for CDN purposes. I can't, however, find a way to get a middleware wrapped around Sprockets since it's mounted as a Rack app in a config.after_initialize block.\r\n\r\nIs there an easy/supported way to do this that I'm missing? I've tried mounting my own app in a config.after_initialize, but Sprockets runs after mine no matter where I put it."
2087,'josh',"Assets precompiled twice?\nWhen I check the log output for `rake assets:precomile` it looks as though everything is being precompiled twice.\r\n\r\nAnyone else getting the same?\r\n\r\nIf so, I'll investigate\r\n\r\n``` ruby\r\n\r\nCompiled ~/Sites/MySite/app/assets/javascripts/shared/jquery.livequery.js  (0ms)  (pid 21678)\r\nCompiled ~/Sites/MySite/app/assets/javascripts/shared/jquery.livequery.js  (0ms)  (pid 21678)\r\nCompiled ~/.rvm/gems/ruby-1.9.2-p180-patched@MySite/gems/jquery-rails-1.0.11/vendor/assets/javascripts/jquery-ui.min.js  (0ms)  (pid 21678)\r\nCompiled ~/.rvm/gems/ruby-1.9.2-p180-patched@MySite/gems/jquery-rails-1.0.11/vendor/assets/javascripts/jquery-ui.min.js  (0ms)  (pid 21678)\r\nCompiled ~/.rvm/gems/ruby-1.9.2-p180-patched@MySite/gems/jquery-rails-1.0.11/vendor/assets/javascripts/jquery.min.js  (0ms)  (pid 21678)\r\nCompiled ~/.rvm/gems/ruby-1.9.2-p180-patched@MySite/gems/jquery-rails-1.0.11/vendor/assets/javascripts/jquery.min.js  (0ms)  (pid 21678)\r\n```"
2083,'pixeltrix','Order clause dropped from has_many :through\nGiven the following model:\r\n\r\n``` ruby\r\nclass Menu < ActiveRecord::Base\r\n  belongs_to :parent, :class_name => \'Link\'\r\n  has_many :links, :order => \'links.name\'\r\nend\r\n\r\nclass Link < ActiveRecord::Base\r\n  belongs_to :menu\r\n  has_one :child, :class_name => \'Menu\', :foreign_key => \'parent_id\'\r\n  has_many :child_links, :through => :child, :source => :links\r\nend\r\n```\r\n\r\nWhen you try and fetch the `child_links` association then the order clause from the `links` association in `Link` is ignored, e.g:\r\n\r\n```\r\n>> link.child_links.scoped.to_sql\r\n=> "SELECT links.* FROM links INNER JOIN menus ON links.menu_id = menus.id WHERE menus.parent_id = 1\r\n```\r\n\r\nThis isn\'t a regression - Rails 3.0.9 has the same behaviour, but I\'m wondering whether it should be changed for Rails 3.2. What do you think @jonleighton?'
2078,'spastorino','Eager loading has_many :through => association postgreSQL typo?\nIn 3.1.0.rc4 Given this model:\r\n\r\n```\r\nclass User < ActiveRecord::Base\r\n    has_many :memberships\r\n    has_many :teams, :through => :memberships, :foreign_key => \'\'member_id\r\n    default_scope :include => :teams\r\nend\r\n```\r\nI get the following anytime I try to load a user\r\n```\r\nUser Load (0.4ms)  SELECT DISTINCT "users".id, FROM "users" LEFT OUTER JOIN "memberships" ON "memberships"."member_id" = "users"."id" LEFT OUTER JOIN "teams" ON "teams"."id" = "memberships"."team_id" WHERE "users"."email" = \'user@user.com\' LIMIT 1\r\nPGError: ERROR:  syntax error at or near "FROM"\r\nLINE 1: SELECT  DISTINCT "users".id,  FROM "users" LEFT OUTER JOIN "...\r\n                                      ^\r\n: SELECT  DISTINCT "users".id,  FROM "users" LEFT OUTER JOIN "memberships" ON "memberships"."member_id" = "users"."id" LEFT OUTER JOIN "teams" ON "teams"."id" = "memberships"."team_id" WHERE "users"."email" = \'user@user.com\' LIMIT 1\r\nCompleted 500 Internal Server Error in 187ms\r\n\r\nActiveRecord::StatementInvalid (PGError: ERROR:  syntax error at or near "FROM"\r\nLINE 1: SELECT  DISTINCT "users".id,  FROM "users" LEFT OUTER JOIN "...\r\n                                  ^\r\n: SELECT  DISTINCT "users".id,  FROM "users" LEFT OUTER JOIN "memberships" ON "memberships"."member_id" = "users"."id" LEFT OUTER JOIN "teams" ON "teams"."id" = "memberships"."team_id" WHERE "users"."email" = \'user@user.com\' LIMIT 1): \r\n```\r\n\r\nSame code works fine with the sqlite3 adaptor.\r\n\r\nLet me know if you need anything else. I\'m new to this whole issue submission stuff! (fml can\'t figure out syntax highlighting)'
2072,'fxn','Add ActiveSupport::Inflector.ordinal and Integer#ordinal\nI needed to format an ordinalized number with markup, like so:\r\n\r\n1&lt;sup&gt;st&lt;/sup&gt;\r\n\r\nI found that there was no way to get just the suffix from ActiveSupport short of gsubbing out the original number.\r\n\r\nThis patch adds ActiveSupport::Inflector.ordinal(number) and Integer#ordinal to support this functionality:\r\n\r\n1&lt;sup&gt;#{1.ordinal}&lt;/sup&gt;\r\n\r\nTests and docs are included, all tests are passing.'
2069,'pixeltrix',"write_cookies! in ActionDispatch::TestRequest won't write nil value\nRack::Utils.escape(str) breaks when cookie value is nil.\r\n\r\n```\r\nNoMethodError: private method `gsub' called for nil:NilClass\r\n    activesupport (3.1.0.rc4) lib/active_support/whiny_nil.rb:48:in `method_missing'\r\n    rack (1.3.1) lib/rack/backports/uri/common.rb:24:in `encode_www_form_component'\r\n    rack (1.3.1) lib/rack/utils.rb:23:in `escape'\r\n    actionpack (3.1.0.rc4) lib/action_dispatch/testing/test_request.rb:86:in `escape_cookie'\r\n    actionpack (3.1.0.rc4) lib/action_dispatch/testing/test_request.rb:81:in `write_cookies!'\r\n```"
2059,'spastorino','Cache keys for records with update_at are timezone dependent\nruby-1.9.2-p180-patched :016 > Time.zone = "UTC"\r\n => "UTC" \r\nruby-1.9.2-p180-patched :017 > Post.find(514).cache_key\r\n => "posts/514-20110713185059" \r\nruby-1.9.2-p180-patched :018 > Time.zone = User.last.time_zone\r\n => "Eastern Time (US & Canada)" \r\nruby-1.9.2-p180-patched :019 > Time.zone = "Eastern Time (US & Canada)"\r\n => "Eastern Time (US & Canada)" \r\nruby-1.9.2-p180-patched :020 > Post.find(514).cache_key\r\n => "posts/514-20110713145059" \r\n\r\nThis behavior exists in 3.0.7.  ActiveRecord::Base#cache_key uses record#updated_at if its present.  However, this value is timezone dependent.  Looks like adding a call to "utc" to the result of "updated_at" should fix the problem.'
2054,'jonleighton','Preloading of through associations can fail to set assoc.loaded?\nWhen loading models in the following manner:\r\n\r\n```ruby\r\n# from models/entry.rb:\r\nhas_many :users, :through => :ownerships\r\n\r\n# from models/ownership.rb\r\nbelongs_to :entry\r\nbelongs_to :user\r\n\r\n# loading code\r\nentries = Entry.where("<whatever>").includes(:users)\r\n```\r\n\r\nThe expectation is that `entries.first.users.loaded?` will return true. However, this fails when all of the associated ownership objects have user_id set to NULL. The preload does actually occur - it simply doesn\'t return any results, which is correct.\r\n\r\nThis works as expected when the `where` AREL call is omitted and the preloading occurs as two separate SQL queries (without the LEFT OUTER JOIN clauses).\r\n\r\nI believe that the issue arises because of the following line at active_record/associations/join_dependency.rb:191:\r\n\r\n```ruby\r\n# Should first call record.association(join_part.reflection.name).loaded!\r\nreturn if row[join_part.aliased_primary_key].nil?\r\n```\r\n\r\nThe obvious fix would be to check for a collection association and call `loaded!` even if no records are found to make preloading behavior consistent across the board and in line with expectations - calling `include(:users)` and then having `entry.users.loaded?` return false is obviously unexpected.\r\n\r\nCan anyone see any problems with fixing the issue in the way I outlined above?'
2015,'josevalim',"sprockets master is failing on heroku's cedar stack\nWhen testing against sprockets master, I'm running into issues on our new cedar stack. I'm running the assets precompile task before, but am getting this during runtime: \r\n\r\nhttps://gist.github.com/5d0a035d49cb99a68cb8\r\n\r\n@josh mentioned a sprockets/ folder, but I'm not seeing it. It looks like it's trying to recompile the assets. I assume because it can't find the md5 sums.\r\n\r\nHere's a link to the repo I'm using: https://github.com/hone/rails-31-heroku"
1984,'tenderlove',"3.1.rc4 migration is unable to load fixtures anymore\nSame fixture-loading migration that worked in 2.x and 3.0 is failing in 3.1.rc4 with error\r\n\r\n     You have a nil object when you didn't expect it!\r\n    You might have expected an instance of Array.\r\n    The error occurred while evaluating nil.any?\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:641:in `has_primary_key_column?'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:590:in `table_rows'\r\n    /Users/olek/.rvm/rubies/ruby-1.8.7-p334/lib/ruby/1.8/erb.rb:719:in `map'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activesupport-3.1.0.rc4/lib/active_support/ordered_hash.rb:157:in `each'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activesupport-3.1.0.rc4/lib/active_support/ordered_hash.rb:157:in `each'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:573:in `map'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:573:in `table_rows'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:488:in `create_fixtures'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:486:in `each'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:486:in `create_fixtures'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract/database_statements.rb:183:in `transaction'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:485:in `create_fixtures'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/postgresql_adapter.rb:453:in `disable_referential_integrity'\r\n    /Volumes/Foo/src/mediaport/vendor/bundle/ruby/1.8/gems/activerecord-3.1.0.rc4/lib/active_record/fixtures.rb:470:in `create_fixtures'\r\n\r\nNot sure if this is related, but fixture is loaded using migration's private model classes, and 'name to class' mapping is passed to the create_fixture method like this:\r\n\r\n```ruby\r\nFixtures.create_fixtures(data_dir, fixture_names, fixture_classes)\r\n```"
1976,'jonleighton','Backport #1968 to 3-1-stable\nDo this after 3.1.0 has been released.'
1961,'pixeltrix','link_to_function: double-encoded ampersands in url\nRails 3.0.9, but from code inspection it seems, that the problem is also present on master.\r\n\r\nI\'ve stumbled upon the bug using ```link_to_function(text, remote_function({:url => url_hash, ...}))``` - the url parameters in the resulting html are separated by double-encoded ampersands.\r\n\r\nExample using rails console:\r\n\r\nUnpatched rails 3.0.9:\r\n\r\n    irb(main):012:0> ApplicationController.helpers.link_to_function(\'hi\', "new Ajax.Updater(\'ooo\', \'/some/ooo?id=38537&amp;howmany=5\', {asynchronous:true, evalScripts:true, method:\'post\'}")\r\n    => "<a href=\\"#\\" onclick=\\"new Ajax.Updater(\'ooo\', \'/some/ooo?id=38537&amp;amp;howmany=5\', {asynchronous:true, evalScripts:true, method:\'post\'}; return false;\\">hi, there</a>"\r\n\r\nWith the attached patch:\r\n\r\n    irb(main):001:0> ApplicationController.helpers.link_to_function(\'hi\', "new Ajax.Updater(\'ooo\', \'/some/ooo?id=38537&amp;howmany=5\', {asynchronous:true, evalScripts:true, method:\'post\'}")\r\n    => "<a href=\\"#\\" onclick=\\"new Ajax.Updater(\'ooo\', \'/some/ooo?id=38537&amp;howmany=5\', {asynchronous:true, evalScripts:true, method:\'post\'}; return false;\\">hi, there</a>"\r\n\r\n\r\nPatch:\r\n\r\n    --- actionpack-3.0.9/lib/action_view/helpers/javascript_helper.rb-orig  2011-07-04 16:22:37.000000000 +0200\r\n    +++ actionpack-3.0.9/lib/action_view/helpers/javascript_helper.rb       2011-07-04 16:15:34.000000000 +0200\r\n    @@ -173,7 +173,7 @@\r\n             html_options = args.extract_options!.symbolize_keys\r\n     \r\n             function = block_given? ? update_page(&block) : args[0] || \'\'\r\n    -        onclick = "#{"#{html_options[:onclick]}; " if html_options[:onclick]}#{function}; return false;"\r\n    +        onclick = "#{"#{html_options[:onclick]}; " if html_options[:onclick]}#{function}; return false;".html_safe\r\n             href = html_options[:href] || \'#\'\r\n     \r\n             content_tag(:a, name, html_options.merge(:href => href, :onclick => onclick))\r\n'
1960,'jonleighton',"3.1.0.rc4: Generated create and create! belongs_to association constructors no longer assign new foreign key to parent\nIn Rails 3.0 using the `create_#{association.name}` method to construct a belongs_to association resulted in the new foreign key being assigned on the parent record. This no longer happens in Rails 3.1:\r\n\r\n    class Client < ActiveRecord::Base\r\n      belongs_to :account\r\n    end\r\n    \r\n    c = Client.create!\r\n    c.create_account!\r\n    c.account_id # => nil\r\n\r\nI've forked and added a possible fix.\r\n\r\nhttps://github.com/jviney/rails/commit/dd961fba168a94b0b8c6f2387b43823e1635c3f5"
1958,'pixeltrix','Warnings while installing rails 3.1-rc4\nRuby 1.9.2. Log file:\r\n\r\n```\r\n\r\nDB:~/ruby $ sudo gem install rails --pre\r\n(...)\r\n20 gems installed\r\nInstalling ri documentation for activesupport-3.1.0.rc4...\r\nInstalling ri documentation for builder-3.0.0...\r\nunable to convert "\\xF1" from ASCII-8BIT to UTF-8 for README, skipping\r\nunable to convert "\\xF1" from ASCII-8BIT to UTF-8 for README.rdoc, skipping\r\n(...)\r\nInstalling ri documentation for rails-3.1.0.rc4...\r\nfile \'lib\' not found\r\nInstalling RDoc documentation for activesupport-3.1.0.rc4...\r\nInstalling RDoc documentation for builder-3.0.0...\r\nunable to convert "\\xF1" from ASCII-8BIT to UTF-8 for README, skipping\r\nunable to convert "\\xF1" from ASCII-8BIT to UTF-8 for README.rdoc, skipping\r\n(...)\r\nInstalling RDoc documentation for rails-3.1.0.rc4...\r\nfile \'lib\' not found\r\n```\r\n\r\nI realize the first is builder related. But the `file \'lib\' not found seems to be rails related.'
1953,'pixeltrix',"check_box :disabled => true doesn't work as expected in Rails 3.0.7 or 3.0.9\nIn the case of:\r\n\r\n        <%=  fields_for some_model[some_new_model], foo do |form| %>\r\n          <%= form.check_box :bar, :disabled => true %>\r\n        <% end %>\r\n\r\nCorrectly generates a disabled checkbox for this field; but the automatically generated hidden form field is not disabled as one would expect. "
1937,'tenderlove','Module#delegate (ActiveSupport) is slow\nProfiling reveals that `Module#delegate` (from ActiveSupport) is unnecessarily slow in development mode.\r\n\r\nIn particular, on a mid-sized project, it can consume nearly 50ms/req by creating a new regexp object complete with interpolation and Regexp.escape thousands of times per request.\r\n\r\nThe problematic line is: https://github.com/rails/rails/blob/v3.0.9/activesupport/lib/active_support/core_ext/module/delegation.rb#L130.\r\n\r\nThe reason this is problematic is that it calls `#instance_variables(false)` once for each delegated method in the Rails project, for each request in development mode. This can get a little bit slow.\r\n\r\nRecommended solution: check using `method_defined?("#{prefix}#{method}")` rather than `instance_methods(false).map(&:to_s).include?("#{prefix}#{method}")`.\r\n'
1936,'tenderlove',"ActiveSupport::Dependencies#load_missing_constant is slow\nProfiling reveals that `ActiveSupport::Dependencies#load_missing_constant` is unnecessarily slow in development mode.\r\n\r\nIn particular, on a mid-sized project, it can consume upwards of 50ms/req by creating a new regexp object complete with interpolation and `Regexp.escape` thousands of times per request.\r\n\r\nThe problematic line is: https://github.com/rails/rails/blob/v3.0.9/activesupport/lib/active_support/dependencies.rb#L484.\r\n\r\nThe recommended solution is: pull the regexp out into a module-level constant. Or, better yet, get a `Method` object from the regexp's `#method(:=~)` out into a module-level constant and pass that directly into the block argument of `#reject`.\r\n"
1893,'tenderlove','fragment caching concurrency issue on 3-0-stable\nHey! Could you please backport commit 7dab186fded971e69f9d8bf5db524c20da326b83 to 3-0-stable? It\'s not only a performance issue - it\'s actually a concurrency issue (in case the fragment expires right after that "fragment_exist?" call).\r\n\r\nI have a website with a fair amount of traffic and I get a few "(ActionView::Template::Error) can\'t convert nil into String" errors per day caused by this issue (it\'s a fragment cached for only 60 seconds with plenty of pageviews hitting the website the moment it expires):\r\n\r\nA ActionView::Template::Error occurred in home#[action]:\r\n can\'t convert nil into String\r\n actionpack (3.0.9) lib/action_view/helpers/text_helper.rb:56:in `concat\'\r\n\r\nBacktrace:\r\n actionpack (3.0.9) lib/action_view/helpers/text_helper.rb:56:in `concat\'\r\n actionpack (3.0.9) lib/action_view/helpers/text_helper.rb:56:in `safe_concat\'\r\n actionpack (3.0.9) lib/action_view/helpers/cache_helper.rb:38:in `cache\'\r\n app/views/home/[template].erb:1:in ...\r\n'
1873,'tenderlove',"Perfomance regression using 'includes' on 3.1-stable and master\nI have complex hmt associations and using 'includes' to load it. Every request takes about 15 seconds to complete. In logs i see not slow queries (max 100ms), but high cpu and memory load. When i removed 'includes' it responses in about 200ms (vs 15s).\r\n\r\nP.S. Identity map enabled. Postgres adapter\r\n\r\nIf you need sample app with data, i can povide it."
1858,'tenderlove','AR models tell they are comparable (have a <=>) but in fact they are not:\nI found this while running my specs. For a full description of the problem please have a look here https://github.com/rspec/rspec-core/issues/413 and here https://github.com/rspec/rspec-expectations/issues/80'
1823,'pixeltrix',"Log instrumentation name for exists? queries\nHi,\r\n\r\nI noticed that as of 3.1 exists? queries stopped reporting an instrumentation name in their log entry.  Here's a proposed patch for that.\r\n\r\nThanks,\r\nJon\r\nRuby Agent Engineer\r\nNew Relic"
1822,'spastorino','Rails 3.1 image assets not working\nOkay I really don\'t know what else to do...\r\nEverything seems to be correct, and works perfectly on development\r\nbut on production the images are all broken.\r\n\r\nI have this on my Gemfile\r\n\r\n    gem \'rails\', :git => \'https://github.com/rails/rails.git\', :branch => \'3-1-stable\'\r\n    gem "sprockets", "2.0.0.beta.10"\r\n\r\nthe template\r\n\r\n    <%= image_tag( \'categories/default_admin_thumb.png\' ) %>\r\n\r\nOn my log\r\n\r\n    Started GET "/assets/categories/default_admin_thumb-f3b01ba52d3e16ea3f7393d751ccaaf7.png" for 127.0.0.1 at 2011-06-22 13:53:42 -0300\r\n    Served asset /categories/default_admin_thumb-f3b01ba52d3e16ea3f7393d751ccaaf7.png - 200 OK  (1ms)  (pid 54202)\r\n\r\nOn a curl -I  request\r\n\r\n    HTTP/1.1 200 OK \r\n    Content-Type: image/png\r\n    Content-Length: 0\r\n    Content-Md5: 4d53581812509e71ef37d9c17ac4fe1f\r\n    Cache-Control: public, max-age=31536000\r\n    Last-Modified: Wed, 15 Jun 2011 17:53:11 GMT\r\n    Etag: "4d53581812509e71ef37d9c17ac4fe1f"\r\n    X-Ua-Compatible: IE=Edge,chrome=1\r\n    X-Sendfile: /Users/draiken/projects/rails/eujafui/public/assets/categories/search-a0fe834ebf531ab99122ef4b08584560.png\r\n    X-Runtime: 0.130783\r\n    Date: Wed, 22 Jun 2011 16:48:36 GMT\r\n    X-Content-Digest: da39a3ee5e6b4b0d3255bfef95601890afd80709\r\n    Age: 551\r\n    X-Rack-Cache: fresh\r\n    Server: WEBrick/1.3.1 (Ruby/1.9.2/2011-02-18)\r\n    Connection: Keep-Alive\r\n\r\nApparently content-length is zero. Please I could even try and fix it, but I really don\'t even know where.'
1810,'spastorino','Assets not found - 404 Error\nRuby: 1.9.2-p180\r\nRails: 3.1.0.rc4\r\n\r\nBefore writing this up, I searched around the issues to see if it has already been reported, however I didn\'t find it. The issue is Rails 3.1.0.rc4 appears to be failing to supply assets to the remote web client. I have attempted this on two different development systems both with Ruby 3.0.1.rc4 installed. I created a simple scaffold to interface with the Person model. First visiting the Welcome Aboard page the rails.png logo does not get loaded with the following error:\r\n\r\n> Started GET "/assets/rails.png" for 70.134.91.77 at 2011-06-16 17:59:33 -0700\r\n> Served asset /rails.png - 404 Not Found (0ms)\r\n> \r\n> ActionController::RoutingError (No route matches [GET] "/assets/rails.png"):\r\n> \r\n> Rendered /usr/local/rvm/gems/ruby-1.9.2-p180@railspre/gems/actionpack 3.1.0.rc4/lib/action_dispatch/middleware/templates/rescues/routing_error.erb within rescues/layout (0.6ms)\r\n\r\nThen when visiting /people a similar error appears failing to load the CSS and Javascript files:\r\n\r\n> Started GET "/assets/application.js" for 70.134.91.77 at 2011-06-16 17:58:14 -0700\r\n> Served asset /application.js - 404 Not Found (0ms)\r\n> \r\n> ActionController::RoutingError (No route matches [GET] "/assets/application.js"):\r\n>  \r\n> Rendered /usr/local/rvm/gems/ruby-1.9.2-p180@railspre/gems/actionpack-3.1.0.rc4/lib/action_dispatch/middleware/templates/rescues/routing_error.erb within rescues/layout (0.7ms)\r\n> \r\n> Started GET "/assets/application.css" for 70.134.91.77 at 2011-06-16 17:58:14 -0700\r\n> Served asset /application.css - 404 Not Found (0ms)\r\n> \r\n> ActionController::RoutingError (No route matches [GET] "/assets/application.css"):\r\n> \r\n> Rendered /usr/local/rvm/gems/ruby-1.9.2-p180@railspre/gems/actionpack-3.1.0.rc4/lib/action_dispatch/middleware/templates/rescues/routing_error.erb within rescues/layout (0.5ms)\r\n'
1742,'spastorino','invalid update json response with generated controller scaffolding  \nThe generated controller update method responds to successful json requests with head :ok. This renders a response with an empty body, which jquery fails to parse. All successful update request made by jquery will end up executing an error callback. Rendering of an empty json object {} fixes this error.'
1732,'josh',".js.erb not running through erb first\nI am trying to dynamically include a javascript file based on a configuration option however I keep getting this error:\r\n\r\n    Error compiling asset application.js:\r\n    ArgumentError: wrong number of arguments (3 for 1)\r\n      (in c:/Users/Dieter/Documents/event_calendar/vendor/assets/javascripts/event_calendar.js.erb:1)\r\n\r\nwhen trying to run this code:\r\n\r\n```javascript\r\n//<% require 'event_calendar' %>\r\n//= require <%= EventCalendar.config.javascript %>-calendar\r\n```\r\nI am currently using Rails 3.1.0.rc4"
1717,'tenderlove','AR Performance regression in 3.1\n    >> require \'active_record\'\r\n    => true\r\n    >> ActiveRecord::Base.establish_connection(\r\n    ?>       :adapter => "sqlite3",\r\n    ?>       :database  => "benchmark.db"\r\n    >>   )\r\n    >> ActiveRecord::Base.connection.execute("DROP TABLE IF EXISTS active_record_models")\r\n    >> ActiveRecord::Base.connection.execute("CREATE TABLE active_record_models (id INTEGER UNIQUE, title STRING, text STRING)")\r\n    >> class ActiveRecordModel < ActiveRecord::Base\r\n    >>   end\r\n    >> ActiveRecordModel.new\r\n    >> require \'benchmark\'\r\n\r\n    # 3.0.7\r\n\r\n    >> Benchmark.measure { 100_000.times { ActiveRecordModel.new } }\r\n    =>   1.470000   0.000000   1.470000   1.474953\r\n\r\n    # 3.1.0.rc4\r\n\r\n    >> Benchmark.measure { 100_000.times { ActiveRecordModel.new } }\r\n    =>   7.910000   0.050000   7.960000   7.951169\r\n\r\n    >> Benchmark.measure { 100_000.times { ActiveRecordModel.new(:title => "foo", :text => "bar") } }\r\n    =>  15.380000   0.010000  15.390000  15.381160\r\n\r\nhttps://gist.github.com/fabfaf1bd8503fbf6d32'
1715,'mikel','ActionMailer docs indicate the wrong format for plain text templates\nThe docs indicate that the plain text template is still:  method.text.plain.erb, however, it seem that the template should be named method.text.erb, i.e., no "plain," because it will render an empty body if you use the .plain version of the template name  - http://api.rubyonrails.org/classes/ActionMailer/Base.html'
1682,'jonleighton','Rails 3.1 RC4 default_scope and count\nI\'ve run into an issue in Rails 3.1 RC4 where the count query is failing because of a default_scope.  The scope has an include and a condition on the included association but count is dropping the include.  This had previously worked in Rails < 3.1. Here\'s an example -\r\n\r\n```ruby\r\nclass Fund < ActiveRecord::Base\r\n  has_many :campaigns\r\n  default_scope where(\'campaigns.inactive = ?\', false).order(\'funds.name\').includes(:campaigns)\r\nend\r\n\r\nclass Campaign < ActiveRecord::Base\r\n  belongs_to :fund\r\nend\r\n```\r\n\r\n\r\nLoading development environment (Rails 3.1.0.rc4)\r\nruby-1.9.2-p180 :001 > Fund.count\r\n   (0.1ms)  SELECT COUNT(*) FROM "funds" WHERE (campaigns.inactive = \'f\')\r\nSQLite3::SQLException: no such column: campaigns.inactive: SELECT COUNT(*) FROM "funds"  WHERE (campaigns.inactive = \'f\')\r\nActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: campaigns.inactive: SELECT COUNT(*) FROM "funds"  WHERE (campaigns.inactive = \'f\')\r\n\r\n\r\nLoading development environment (Rails 3.0.8)\r\nruby-1.9.2-p180 :006 > Fund.count\r\n => 1\r\n\r\nSQL (0.2ms)  SELECT COUNT(DISTINCT "funds"."id") FROM "funds" LEFT OUTER JOIN "campaigns" ON "campaigns"."fund_id" = "funds"."id" WHERE (campaigns.inactive = \'f\')\r\n'
1677,'fxn',"Memory leak in ActionController::Metal (3.0.7)\nConsider the following class:\r\n<pre>\r\nclass Myclass &lt; ActionController::Metal\r\n  def myaction\r\n    huge_object.do_something\r\n    # etc.\r\n  end\r\n\r\n  private\r\n  def huge_object\r\n    @obj ||= begin\r\n      # allocate and initialize a ~10MB object\r\n    end\r\n  end\r\nend\r\n</pre>\r\n\r\nWhat I was amazed to find, is that even in production, each time the myaction is called, the object is allocated. Moreover, something is holding a reference to it, as the GC doesn't collect it. I made a workaround by wrapping the object in other class and including Singleton in that class. Still, I want to understand, what's going on here."
1673,'pixeltrix',"Scoped mass assignment and accepts_nested_attributes_for in Rails 3.1 RC4 not working\nUsing Rails 3.1 RC4.\r\n\r\nMy User model has the following:\r\n\r\n      has_many :emails, :dependent => :destroy\r\n      accepts_nested_attributes_for :emails\r\n\r\nMy Email model has the following:\r\n\r\n      belongs_to :user\r\n      attr_accessible :email, :email_confirmation, :as => :admin\r\n\r\nIn Rails console:\r\n\r\n    User.first.update_attributes!({:artist_name => 'foo', :emails_attributes => {0 => {:email => 'foo@blah.com', :email_confirmation => 'foo@foo.com'}}}, :as => :admin)\r\n\r\nI get:\r\n\r\n    WARNING: Can't mass-assign protected attributes: email, email_confirmation\r\n\r\nIn my Email model, if I remove `:as => :admin`. Everything works...\r\n\r\nShould I be assigning some kind of scope to `accepts_nested_attributes_for`? Anyone know how this can be fixed?"
1663,'pixeltrix','Rails 3.0.9.rc3 regression: url_for fails with html safe unicode params\nThe following code raises an exception in Rails v3.0.8, v3.0.9.rc3, 3-0-stable and v3.1.0.rc4, but not in v3.0.7. I\'m using ruby 1.9.2-p180, don\'t know about other rubies.\r\n\r\n    link_to "Günter", search_person_path(:name => "Günter".html_safe) # Raises exception\r\n\r\n    link_to "Günter", search_person_path(:name => "Guenter".html_safe) # works fine\r\n    link_to "Günter", search_person_path(:name => "Günter") # works fine\r\n\r\nThe exception is \r\n\r\n    undefined method `each_byte\' for nil:NilClass\r\n\r\n    activesupport (3.0.9.rc3) lib/active_support/whiny_nil.rb:48:in `method_missing\'\r\n    /home/igel/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/uri/common.rb:222:in `block in escape\'\r\n    activesupport (3.0.9.rc3) lib/active_support/core_ext/string/output_safety.rb:119:in `gsub\'\r\n    activesupport (3.0.9.rc3) lib/active_support/core_ext/string/output_safety.rb:119:in `gsub\'\r\n    /home/igel/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/uri/common.rb:219:in `escape\'\r\n    rack-mount (0.6.14) lib/rack/mount/utils.rb:72:in `escape_uri\'\r\n'
1662,'josevalim','Rails 3-1-stable fails to start\nrails-edc0b2b80b55/activerecord/lib/active_record/railtie.rb:102:in `block in <class:Railtie>\': undefined method `each\' for "[MISSING] activerecord.attributes":String (NoMethodError)\r\n\r\nMy key value backed automatically stores missing key with stub translation. For example here I18n.t(:"activerecord.attributes") stores and returns "[MISSING] activerecord.attributes" translation. So it returns string, and each method fails. Code that fails added in c19bd4f88ea5cf56b2bc8ac0b97f59c5c89dbff7. before this commit it was ok.'
1660,'pixeltrix','has_many :thought order ordering problems\nMy problem is:\r\n\r\nA default_scope :order => "position ASC"\r\n\r\nB has_many BJoinA\r\nB has_many A :through BJoinA, :order => "BJoinA.position ASC"\r\n\r\nI have A to ordered in a certain way.\r\nand I have B\'s As ordered in a different way (though the join model).\r\n\r\nBut B.first.as does not return me As ordered by BJoinA position because the select include A\'s default_scope ordering first.\r\n\r\nIs there a way to ignore default_scope (order) in has_many :through association?\r\nOr should the join order be respected first?\r\n\r\nthe resulted select is:\r\nSELECT "AS".* FROM "AS" INNER JOIN "B_AS" ON "AS".id = "B_AS".A_ID WHERE (("B_AS".B_ID = 3)) ORDER BY position ASC, B_AS.position ASC\r\n\r\nI would like the B_AS.position AS to be the first condition\r\n\r\nUsing 3.0.4 or 3.0.7\r\n\r\nThanks\r\n'
1656,'josh','Asset pipeline — bundling plugin assets\nI\'m using rails from master and sprockets-2.0.0.beta.10.\r\nI\'ve tried to use jQueryUI theme in a project but have no luck. What I\'ve done:\r\n\r\n— placed all assets in the /vendor/assets/stylesheets folder, so it looks like:\r\n\r\n    /stylesheets\r\n    --/ui-darkness\r\n    ----/images\r\n    ----jquery-ui-1.8.13.custom.css\r\n\r\n— created index.css with the following content:\r\n\r\n    /*\r\n    *= require ./jquery-ui-1.8.13.custom\r\n    *= provide ./images\r\n    */\r\n\r\nand put it in the /ui-darkness folder.\r\n\r\n— required in the application.css:\r\n\r\n    *= require_self\r\n    *= require ui-darkness\r\n    *= require_tree .\r\n\r\nFor now I\'ve got  index.css and jquery-ui-1.8.13.custom.css compiled into the application.css but other assets remained unreachable:\r\n\r\n    Started GET "/assets/images/ui-bg_glass_20_555555_1x400.png" for 127.0.0.1 at 2011-06-11 19:16:54 +0300  \r\n    Served asset /images/ui-bg_glass_20_555555_1x400.png - 404 Not Found  (4ms)  (pid 5822)\r\n\r\n'
1646,'tenderlove',"file 'lib' not found Rails 3.1.0.rc4\nUsing latest rvm (1.6.20) and an empty gemset trying to install rc4 and got the following error:\r\n\r\n```$ gem install rails --pre\r\nSuccessfully installed rails-3.1.0.rc4\r\n1 gem installed\r\nInstalling ri documentation for rails-3.1.0.rc4...\r\nfile 'lib' not found\r\nInstalling RDoc documentation for rails-3.1.0.rc4...\r\nfile 'lib' not found```\r\n\r\nI've tried install rdoc first as I read on many websites but the error still appears.\r\n\r\n```RubyGems Environment:\r\n  - RUBYGEMS VERSION: 1.8.5\r\n  - RUBY VERSION: 1.9.2 (2011-02-18 patchlevel 180) [x86_64-linux]\r\n  - INSTALLATION DIRECTORY: /home/arch/.rvm/gems/ruby-1.9.2-p180@rails31\r\n  - RUBY EXECUTABLE: /home/arch/.rvm/rubies/ruby-1.9.2-p180/bin/ruby\r\n  - EXECUTABLE DIRECTORY: /home/arch/.rvm/gems/ruby-1.9.2-p180@rails31/bin\r\n  - RUBYGEMS PLATFORMS:\r\n    - ruby\r\n    - x86_64-linux\r\n  - GEM PATHS:\r\n     - /home/arch/.rvm/gems/ruby-1.9.2-p180@rails31\r\n     - /home/arch/.rvm/gems/ruby-1.9.2-p180@global\r\n  - GEM CONFIGURATION:\r\n     - :update_sources => true\r\n     - :verbose => true\r\n     - :benchmark => false\r\n     - :backtrace => false\r\n     - :bulk_threshold => 1000\r\n  - REMOTE SOURCES:\r\n     - http://rubygems.org/```\r\n\r\nThe debug output is here: https://gist.github.com/1020197"
1633,'sikachu',"render :inline broken in 3.0.9.rc3\nThe SafeBuffer fixes have broken render :inline in rails 3.0.8 and 3.0.9.rc3.  I did not try 3.1.\r\n\r\n```ruby\r\nrender :inline => raw @content\r\n```\r\n\r\n    ActionView::Template::Error (Cannot modify SafeBuffer in place):\r\n      app/views/pages/show.html.erb:1:in `_app_views_pages_show_html_erb___400914214750921592_17192981340__1418047418121329627'\r\n\r\n\r\n    activesupport (3.0.9.rc3) lib/active_support/core_ext/string/output_safety.rb:123:in `sub!'\r\n    actionpack (3.0.9.rc3) lib/action_view/template.rb:198:in `compile'\r\n    actionpack (3.0.9.rc3) lib/action_view/template.rb:134:in `block in render'\r\n    activesupport (3.0.9.rc3) lib/active_support/notifications.rb:54:in `instrument'\r\n    actionpack (3.0.9.rc3) lib/action_view/template.rb:127:in `render'\r\n    actionpack (3.0.9.rc3) lib/action_view/render/rendering.rb:59:in `block in _render_template'\r\n    activesupport (3.0.9.rc3) lib/active_support/notifications.rb:52:in `block in instrument'\r\n    activesupport (3.0.9.rc3) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\r\n    activesupport (3.0.9.rc3) lib/active_support/notifications.rb:52:in `instrument'\r\n    actionpack (3.0.9.rc3) lib/action_view/render/rendering.rb:56:in `_render_template'\r\n    actionpack (3.0.9.rc3) lib/action_view/render/rendering.rb:26:in `render'\r\n\r\nPlease see the following gist for the full trace\r\n\r\nhttps://gist.github.com/1018921"
1598,'tenderlove','uninitialized constant when running rake\nIn my project, any rake invocation (eg. "rake -T --trace") yields the error below. \r\n\r\nThis does **not** happen in a fresh app. Here is my Gemfile.lock: https://gist.github.com/1016634\r\nI\'m not sure what other info to provide? \r\n\r\n    rake aborted!\r\n    uninitialized constant RubyToken::AlreadyDefinedToken\r\n    /Users/jtj/.rvm/rubies/ree-1.8.7-2011.03/lib/ruby/1.8/rdoc/parsers/parse_rb.rb:273:in `def_token\'\r\n    /Users/jtj/.rvm/rubies/ree-1.8.7-2011.03/lib/ruby/1.8/rdoc/parsers/parse_rb.rb:300\r\n    /Users/jtj/.rvm/rubies/ree-1.8.7-2011.03/lib/ruby/1.8/rdoc/parsers/parse_rb.rb:299:in `each\'\r\n    /Users/jtj/.rvm/rubies/ree-1.8.7-2011.03/lib/ruby/1.8/rdoc/parsers/parse_rb.rb:299\r\n    /Users/jtj/.rvm/rubies/ree-1.8.7-2011.03/lib/ruby/1.8/rdoc/rdoc.rb:8\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/tasks/documentation.rake:4\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/tasks.rb:15\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/tasks.rb:6:in `each\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/tasks.rb:6\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/application.rb:215:in `initialize_tasks\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/application.rb:139:in `load_tasks\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/application.rb:77:in `send\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/railties-3.0.9.rc1/lib/rails/application.rb:77:in `method_missing\'\r\n    /Users/jtj/wb/foobar/Rakefile:7\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/rake_module.rb:25:in `load\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/rake_module.rb:25:in `load_rakefile\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:495:in `raw_load_rakefile\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:78:in `load_rakefile\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:129:in `standard_exception_handling\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:77:in `load_rakefile\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:61:in `run\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:129:in `standard_exception_handling\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/lib/rake/application.rb:59:in `run\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/gems/rake-0.9.2/bin/rake:32\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/bin/rake:19:in `load\'\r\n    /Users/jtj/.rvm/gems/ree-1.8.7-2011.03@foobar/bin/rake:19\r\n'
1592,'tenderlove','magic comment should be included when dumping db schema\nI have a table that includes a UTF-8 default value for a column\r\n\r\n    ActiveRecord::Schema.define(:version => 20110609012941) do\r\n      create_table "invoices", :force => true do |t|\r\n        t.string   "recipient_title",     :default => "御中"\r\n      end\r\n    end\r\n\r\nBecause the dumped schema does not include an encoding magic comment, this creates an error. It should have a magic comment indicating the encoding following from the db encoding.'
1575,'arunagw',"Ruby 1.9.2 minitest is not applying our backtrace cleaner in tests\nWhen Turn is off, you get the full backtrace when a test fails. It's not scrubbed with the backtrace cleaner."
1573,'sikachu','partial layouts and collections\n```ruby\nrender :partial => "item", :collection => @items, :layout => "item_layout"\n```\n\nI would expect that item_layout would be rendered once and that each partial would be rendered inside the yield call. It appears that the layout value is being ignored due to the separation of render_collection and render_partial in ActionView::PartialRenderer\n\nI\'m happy to take a stab at patching this, but I had two questions:\n\n* Is this behavior intended as part of the ActionView api? \n* If not, is the behavior I\'m describing above what you would expect?\n'
1571,'jonleighton','ActiveRecord::Relation#order no longer works with arel ordering nodes\nInitially reported in #1272:\r\n\r\nThis has introduced a new problem:\r\n\r\n```\r\n>> Fuu.order(Fuu.arel_table[:name].desc).reverse_order.to_sql\r\n=> "SELECT \\"fuus\\".* FROM \\"fuus\\"  ORDER BY #<Arel::Nodes::Ordering:0x0000010319dc88> DESC"\r\n```\r\n\r\nVersus:\r\n\r\n```\r\n>> Fuu.order(Fuu.arel_table[:name].desc.to_sql).reverse_order.to_sql\r\n=> "SELECT \\"fuus\\".* FROM \\"fuus\\"  ORDER BY \\"fuus\\".\\"name\\" ASC"\r\n```\r\n\r\nNotice the to_sql call in Fuu.arel_table[:name].desc'
1529,'pixeltrix','Functional test get method ignores session variables from setup when given a hash of new session variables\nI believe this is a functional test bug:\r\n\r\n```ruby\r\nclass SomeControllerTest < ActionController::TestCase\r\n  setup do\r\n    @request.session["user_id"] = 1\r\n  end\r\n\r\n  test "some action" do\r\n    get :some_action, { }, { "another_var" => 2 }\r\n    # expected: @request.session == { "user_id" => 1, "another_var" => 2 }\r\n    # actual:  @request.session == { "another_var" => 2 }\r\n  end\r\nend\r\n```\r\n\r\nAfter the `get` line, the session will only have `another_var`, not `user_id`. To get the latter, you have to do:\r\n`@request.session.merge({ "another_var" => 5 })` as the third argument to `get`. It does not seem to matter whether the session keys are strings or symbols, both fail without a merge.\r\n\r\nShouldn\'t merging with the current `@request.session` be done as part of `get`? Happy to start a patch if we agree this is a bug.'
1525,'tenderlove','Exception in View Freezes Rails\nHi,\r\n\r\nsince I installed rails 3.1.0, when some bugs occur, Webrick freezes for a couple of minutes when some bugs occur (not all bugs, apparently the 500 ones).\r\n\r\nMy gemfile looks like this:\r\n\r\n\r\nsource \'http://rubygems.org\'\r\n\r\ngem "rails", "3.1.0.rc1"\r\n\r\n#Asset template engines\r\ngem \'sass\'\r\ngem \'coffee-script\'\r\ngem \'uglifier\'\r\ngem \'jquery-rails\'\r\n\r\ngem "simple-navigation"\r\ngem \'ranked-model\' #, :git => \'git@github.com:harvesthq/ranked-model.git\'\r\ngem \'formtastic\'\r\ngem \'validation_reflection\'\r\ngem "paperclip", "~> 2.3"\r\ngem \'devise\'\r\ngem \'heroku\'\r\ngem "aws-s3"\r\ngem "scoped_search"\r\ngem "meta_search", :git => \'git://github.com/ernie/meta_search.git\'\r\ngem "kaminari"\r\n\r\ngroup :production do\r\n  gem "pg", "~> 0.11.0"\r\n  gem \'therubyracer-heroku\', \'0.8.1.pre3\'\r\n  gem \'exception_notification\', :require => \'exception_notifier\'\r\nend\r\n\r\ngroup :development, :test do\r\n  gem \'mysql2\'\r\nend\r\n\r\nrequire \'csv\'\r\n\r\nCan anyone help me on this? Thanks,\r\n\r\nNicolas\r\n'
1520,'dhh','Javascript/Stylesheet assets with same name in subdirectories not generated\nHi there,\n\ni\'ve got an application with several engines in it.\nThe main application has a javascript asset called "application.js" aswell as some of the engines do have a "application.js"\n\nThe engines file is called "ENGINE_PATH/app/assets/javascripts/ENGINE_NAME/application.js", the main file is called\n"app/assets/javascripts/application.js".\n\n"rake assets:precompile" wont compile the engine file (to public/assets/ENGINE_NAME/application.js), just the main application.js.\n\nRenaming the javascript to "ENGINE_NAME.js" doesn\'t work too (not generated), renaming it to "ENGINE_NAME.engine.js" works though.\n\nThis just occurs with Javascript-files & Stylesheets. If two engines have the same "submit.png" in images/ENGINE_NAME/submit.png" everything is being generated just fine.\n\nI tried todays 3-1-stable.\n\nAm I getting this wrong or is it a bug?\n\n-Tobias'
1489,'josh','Helpers dont respect config.assets.prefix\nIn RC1 if you do this:\r\n\r\nTestApp::Application.config.assets.prefix     = "/something"\r\n\r\nThe helpers still output:  /assets/whatever instead of /something/whatever\r\n\r\nThe content is correctly available at  /something/whatever\r\n\r\n(I have an app that already uses /assets for paperclip and a bunch of other stuff)'
1486,'josh','Release Sprockets 2.0\nResolve remaining issues under https://github.com/sstephenson/sprockets/issues?milestone=2&state=open'
1477,'tenderlove','Reduce memory bloat in ActiveRecord transactions\nI just ran into this with AR 3.0.7 on jruby and im not quite sure if this is fixed in master.\r\nCan someone shed some light on this?\r\n\r\nfollow up of #776'
1471,'jonleighton',"[Rails3.1.0.rc1] attributes= method explodes when assigning nil parent object but only if counter_cache is enabled (breaks acts_as_tree)\nHere's a simple model you normally have when dealing with tree structures:\r\n\r\n    class Foo < ActiveRecord::Base\r\n      \r\n      belongs_to :parent,\r\n        :class_name     => 'Foo',\r\n        :counter_cache  => :children_count\r\n      \r\n      has_many :children,\r\n        :class_name   => 'Foo',\r\n        :foreign_key  => 'parent_id'\r\n        \r\n    end\r\n\r\nAnd here's the test:\r\n\r\n    class FooTest < ActiveSupport::TestCase\r\n      \r\n      def test_this_works\r\n        foo = Foo.create\r\n        foo.attributes = { :parent_id => nil }\r\n      end\r\n      \r\n      def test_this_blows_up\r\n        foo = Foo.create\r\n        foo.attributes = { :parent => nil }\r\n      end\r\n      \r\n    end\r\n    \r\nSeems that assigning a nil object triggers counter_cache refresh on that nil. No such problem when assigning a foreign key.\r\n\r\nI didn't see a filed issue for this, which is rather odd as this is pretty common functionality.\r\n\r\nBroken in 3.1.0.rc1 and master branch.\r\n  "
1456,'tenderlove','[rails 3.1.rc1] accepts_nested_attributes_for does not respect timezones on update\nHaving some issues with times passed through accepts_nested_attributes_for they are being converted incorrectly when using a different timezone.\n\nI\'m using the \'London\' timezone.\n\nI have a field where I\'m storing a time, called publish_at\nI have passing the time through into the controller like so:\n\nHere are the params:\n\n    "email_conversation" => {"email_messages_attributes" => {"0" => {"publish_at" => "2011-07-28 21:00:00", "id" => "1"}}, "id" => "1"}\n\nI have setup a before save to log out the value that will be saved that\'s saving as ive inputted it:\n\n    UPDATE `email_messages` SET `publish_at` = \'2011-07-28 21:00:00\', `updated_at` = \'2011-06-02 11:06:59\' WHERE `email_messages`.`id` = 1\n\nrails should be converting the time to UTC before sending it to mysql\n\n    UPDATE `email_messages` SET `publish_at` = \'2011-07-28 20:00:00\', `updated_at` = \'2011-06-02 11:06:59\' WHERE `email_messages`.`id` = 1\n\ntherefore when it get the record back out of mysql, because it assumes the time stored is UTC the time is displayed as: `2011-07-28 22:00:00`\n\n**Something to note...**\n - It works fine if i update the model directly\n - When creating records via the email_messages_attributes has it works fine, this only happens on updates to existing records.\n\n**record.attributes =**\nDoing this in a console using `attributes =` seems to work fine....\n\n    em = EmailMessage.find(1)\n    em.attributes = {"publish_at" => "2011-07-28 21:00:00"}\n    em.save!\n\nresults in the correct query to mysql:\n\n    UPDATE `email_messages` SET `updated_at` = \'2011-06-02 11:57:32\', `publish_at` = \'2011-07-28 20:00:00\' WHERE `email_messages`.`id` = 1\n\n\n'
1455,'jonleighton','[Rails 3.1.rc1] Invalid SQL generated for nested has_many :through with STI\n`Unit#managers_properties` generates invalid SQL. The `WHERE` clause contains condition: `"business_objects"."type" IN (\'Position\')` however it is invalid. It should states `"business_objects"."type" IN (\'Person\')`.\r\n\r\nThe query for: `Unit#managers_people` is ok.\r\n\r\nHere are the full queries:\r\n\r\nQuery for `Unit.first.managers_properties` :\r\n\r\n``` sql\r\nSELECT "person_attributes".* FROM "person_attributes"\r\nINNER JOIN "business_objects" ON "person_attributes"."person_id" = "business_objects"."id"\r\nINNER JOIN "contractings" ON "business_objects"."id" = "contractings"."person_id"\r\nINNER JOIN "business_objects" "managers_contracts_managers_properties_join" ON "contractings"."contract_id" = "managers_contracts_managers_properties_join"."id"\r\nINNER JOIN "contract_refers_to_positions" ON "managers_contracts_managers_properties_join"."id" = "contract_refers_to_positions"."contract_id"\r\nINNER JOIN "business_objects" "managers_managers_properties_join" ON "contract_refers_to_positions"."position_id" = "managers_managers_properties_join"."id"\r\nINNER JOIN "managements" ON "managers_managers_properties_join"."id" = "managements"."position_id"\r\nWHERE "business_objects"."type" IN (\'Position\') AND "managements"."unit_id" = \'123\'\r\n```\r\n\r\nQuery for `Unit.first.managers_people`:\r\n\r\n``` sql\r\nSELECT "business_objects".* FROM "business_objects"\r\nINNER JOIN "contractings" ON "business_objects"."id" = "contractings"."person_id"\r\nINNER JOIN "business_objects" "managers_contracts_managers_people_join" ON "contractings"."contract_id" = "managers_contracts_managers_people_join"."id"\r\nINNER JOIN "contract_refers_to_positions" ON "managers_contracts_managers_people_join"."id" = "contract_refers_to_positions"."contract_id"\r\nINNER JOIN "business_objects" "managers_managers_people_join" ON "contract_refers_to_positions"."position_id" = "managers_managers_people_join"."id"\r\nINNER JOIN "managements" ON "managers_managers_people_join"."id" = "managements"."position_id"\r\nWHERE "business_objects"."type" IN (\'Person\') AND "managements"."unit_id" = \'123\'\r\n```\r\n\r\nSchema & models & seeds:\r\n\r\n```ruby\r\n# SCHEMA:\r\n\r\n# Unit, Person, Position\r\ncreate_table "business_objects", :id => false, :force => true do |t|\r\n  t.string   "id",          :null => false\r\n  t.string   "type",        :null => false\r\nend\r\n\r\n# Unit => Position\r\ncreate_table "managements", :force => true do |t|\r\n  t.string   "unit_id",     :null => false\r\n  t.string   "position_id", :null => false\r\nend\r\n\r\n\r\n# Position => Contract\r\ncreate_table "contract_refers_to_positions", :force => true do |t|\r\n  t.string   "contract_id", :null => false\r\n  t.string   "position_id", :null => false\r\nend\r\n\r\n# Contract => Person\r\ncreate_table "contractings", :force => true do |t|\r\n  t.string   "contract_id", :null => false\r\n  t.string   "person_id",   :null => false\r\nend\r\n\r\n# Person properties\r\ncreate_table "person_attributes", :force => true do |t|\r\n  t.string   "person_id",  :null => false\r\n  t.string   "first_name", :null => false\r\n  t.string   "last_name",  :null => false\r\nend\r\n\r\n# MODELS:\r\n\r\nclass BusinessObject < ActiveRecord::Base\r\n  set_primary_key :id\r\nend\r\n\r\nclass Unit < BusinessObject\r\n  has_many :managements, :foreign_key => :unit_id\r\n  has_many :managers, :through => :managements, :source => :position\r\n\r\n  has_many :managers_contracts,  :through => :managers,           :source => :contracts\r\n  has_many :managers_people,     :through => :managers_contracts, :source => :people\r\n  has_many :managers_properties, :through => :managers_people,    :source => :properties\r\nend\r\n\r\nclass Position < BusinessObject\r\n  has_many :managements\r\n  has_many :managed_units, :through => :managements\r\n\r\n  has_many :contract_refers_to_position\r\n  has_many :contracts, :through => :contract_refers_to_position, :source => :contract\r\nend\r\n\r\nclass Contract < BusinessObject\r\n  has_many :contractings\r\n  has_many :people, :through => :contractings\r\n\r\n  has_many :contract_refers_to_position\r\n  has_many :positions, :through => :contract_refers_to_position\r\nend\r\n\r\nclass PersonAttribute < ActiveRecord::Base\r\n  belongs_to :person, :inverse_of => :properties\r\nend\r\n\r\nclass Person < BusinessObject\r\n  has_many :contractings\r\n  has_many :contracts, :through => :contractings\r\n\r\n  has_many :properties, :class_name => "PersonAttribute"\r\nend\r\n\r\nclass Management < ActiveRecord::Base\r\n  belongs_to :unit\r\n  belongs_to :position\r\nend\r\n\r\nclass ContractRefersToPosition < ActiveRecord::Base\r\n  belongs_to :position\r\n  belongs_to :contract\r\nend\r\n\r\nclass Contracting < ActiveRecord::Base\r\n  belongs_to :contract\r\n  belongs_to :person\r\nend\r\n\r\n# SEEDS:\r\n\r\nu = Unit.new\r\nu.id = "123"\r\nu.save!\r\n```'
1452,'spastorino',"[Rails 3.1 edge] ActionDispatch::ClosedError: Cannot modify cookies because it was closed. This means it was already streamed back to the client or converted to HTTP headers.\nThis is related to the new streaming.\r\n\r\nWhenever I post to user_session (using authlogic) via request specs (or for that matter cucumber or controller specs rendering views) For now I have pended these things. I'm betting this is going to be similar to the flash issue.\r\n\r\nI don't have time just now to look into this more then I have, maybe this weekend if no one gets to it."
1451,'jonleighton',"3-1-stable import to java_import\nI should be putting this in previous pull request. \r\n\r\nIt's already in master.\r\n\r\nSorry for sending again. I will try to fix all the places in one pull request.\r\n\r\n\r\nYou can see this also. https://github.com/rails/rails/pull/1426\r\n\r\n:-)"
1447,'spastorino',"Fix creating an empty route on 1.8. Closes #1210\nRuby 1.8 doesn't accepts empty strings to be converted to symbols.\r\nAn empty route would therefore generate an error.\r\n\r\nSee, as a use case of this, the issue #1210."
1442,'josh','sprockets #= require doesn\'t work with subdirs\nMy (Javascript) assets dir looks like this:\n\n```\napplication.js\nblah/foo.js.coffee\nblah/bar.js.coffee\n```\n\nIn `bar.js.coffee`, there is a line `#= require "foo"`, but visiting `http://localhost:3000/assets/blah/bar` shows the compiled `foo.js.coffee` Javascript, but it did not include the JS from `bar.js.coffee`.\n\nIf I move both the files out of the `blah` dir, then `#= require "foo"` works as expected.\n\nI\'ve tried `#= require "./foo"`, `#= require "blah/foo"`, `#= require "/foo"`.\n\nI put some debug statements in Sprockets gem, and it doesn\'t look like it\'s processing the require statement at all.\n\nThanks.'
1441,'tenderlove',"Don't add .rb in requires\n"
1440,'dhh','Custom attribute name in has_secure_password\nAdded code to allow users to pass a custom attribute name to has_secure_password.\r\n\r\nExample:\r\n\r\n<pre>\r\nclass User\r\n   has_secure_password :encrypted_password\r\nend\r\n</pre>'
1436,'tenderlove','#364 composed_of: Access record information from converter\nAR#composed_of can now access the associated record\n\n```ruby\n    class User < ActiveRecord::Base\n      composed_of :some_aggregation, ...,  :converter => Proc.new { |record, values| ... }\n    end\n```\n\nTested against REE and 1.9.2-p180.'
1431,'josh',"Verify that the therubyracer and uglifier plays nice\nLast I saw there were a few open issues on therubyracer. Adding it here so we don't forget for 3.1 final."
1429,'dhh','proper support for namespaced models\nAssume the following two models:\r\n\r\n    class Invoice < ActiveRecord::Base\r\n      has_many :invoice_items\r\n    end\r\n\r\n    class InvoiceItem < ActiveRecord::Base\r\n      belongs_to :invoice\r\n    end\r\n\r\nAnd the routes likes this:\r\n\r\n    resources :invoices do\r\n      resources :invoice_items\r\n    end\r\n\r\nThe name InvoiceItem has the huge disadvantage that one has to use invoice.invoice_items instead of a intuitive invoice.items. Also the generated url helpers look real ugly, for example "new_invoice_invoice_item_path(invoice)" (notice the double invoice_invoice). The paths in the urls are ugly too ;)\r\n\r\nSo I changed to namespaced models like this:\r\n\r\n    class Invoice < ActiveRecord::Base\r\n      has_many :items, :class_name => "Invoice::Item"\r\n    end\r\n\r\n    class Invoice::Item < ActiveRecord::Base\r\n      belongs_to :invoice\r\n    end\r\n\r\nAnd the routes likes this:\r\n\r\n    resources :invoices do\r\n      resources :items, :module => "invoice"\r\n    end\r\n\r\nNow the assocation is named nicely and also the url helpers look pretty. But I can\'t use dynamic urls (ex. [:new, invoice, :item]) anymore, because the :controller in the path hash is set to "invoice_item" instead of "invoice/item" and so I get a route not found exception. I suspect this being a bug....or at least something that should be improved.\r\n'
1426,'josevalim',' sprockets gem update to beta9\n sprockets gem update to beta9'
1420,'jonleighton','names with \'ia\' as end of word have problems with pluralize\nGiven:\n\nclass Pizzerias < ActiveRecord::Base\nend\n\nI have the following error:\nMysql2::Error: Table \'pizza_development.pizzeria\' doesn\'t exist: SHOW FIELDS FROM `pizzeria`.\n\nI tried to pluralize other names and it works fine, except names with  "ia" as end of word . \nruby 1.9.2-p180, rails 3.1.0.rc1\n'
1419,'sikachu','A method on association proxy sometimes caches old target\nOn ActiveRecord 3.0.x, a method defined on association proxy illegally caches outdated `target`, only when the method calls the target\'s scope.\r\n\r\nHere\'s an example.\r\n\r\n```ruby\r\nclass Author < ActiveRecord::Base\r\n  has_many :books do\r\n    def newest\r\n      # calling Book\'s scope\r\n      published.last\r\n    end\r\n  end\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  scope :published  # any kind of scope\r\nend\r\n```\r\n\r\n```ruby\r\na = Author.first\r\na.books.create :title => \'book 1\'\r\n#=> #<Book id: 1, author_id: 1, title: "book 1">\r\n# you see the scope works\r\na.books.newest\r\n#=> #<Book id: 1, author_id: 1, title: "book 1">\r\n\r\n# create a new book\r\na.books.create :title => \'book 2\'\r\n#=> #<Book id: 2, author_id: 1, title: "book 2">\r\n# "newest" still returns the old model\r\na.books.newest\r\n#=> #<Book id: 1, author_id: 1, title: "book 1">\r\n```\r\n\r\n```ruby\r\n# correctly returns the newest one when reloaded\r\na.books.reload\r\na.books.newest\r\n#=> #<Book id: 2, author_id: 1, title: "book 2">\r\n```\r\nI confirmed this happens on **3.0.0..3.0.8.rc4**, and does **NOT** happen on master (3.1.rc1) and 2.3.11 (changing "scope => named_scope").'
1414,'josevalim',"Use instance_of? in #fields_for to check specifically for a Hash (excluding subclasses)\n`ActionView::Helpers::FormBuilder#fields_for` was refactored recently (f0479cbbd52961c75906022003d4f03aa39556e0). It now checks whether the second parameter `is_a? Hash`, and if so, it assumes that it's an options hash (not a record object).\n\nUnfortunately, if your record object is a subclass of Hash, `#fields_for` now mistakenly tries to interpret your record as an options hash. This is a real-world problem for the [admittedly fringe] case of [Casted Models in CouchRest Model](http://www.couchrest.info/model/casted_models.html), which are subclassed from Hash with a mix-in.\n\nI don't think anybody who really intends to pass in an options hash is doing so with anything but a real Hash, so this can be fixed easily by using `instance_of?` (which will be false for casted models) instead of `is_a?`."
1413,'jonleighton','Fix issue #1272\nSet reverse_order_value when asked to reverse_order().\r\nDo the actual reversal in build_arel.\r\n\r\nAnd take in code review comments from @jonleighton:\r\n\r\n- Add tests to ensure expectations of how `reverse_order` should work'
1406,'tenderlove',"Fix test warnings\nThis commit fixes a few warnings when running the tests.\r\n\r\n* In Active Record for @cesario's fix in #inspect last week, when `@attributes` is not defined.\r\n* In whiny_nil, where it's not useful to stub object_id of nil."
1402,'tenderlove','Alternative I18n convention for namespaced models is not supported in Rails 3.1\nDuring Rails 3.0.6 release it was decided that 2 conventions for storing translations for namespaced models should be supported. The alternative convention was added. It is not supported anymore in Rails 3.1.0.rc1 currently.\r\n\r\nhttp://groups.google.com/group/rubyonrails-core/browse_thread/thread/eca57305b1a3ea0d\r\n\r\nAlso. The convention was not fully established for Rails 3.0.* . It could be used for \r\nNamespaced::Model.model_name.human\r\nNamespaced::Model.human_attribute_name\r\nbut not for\r\nNamespaced::Model.new.errors.add(...)\r\n\r\nI think we should keep and expand the support for alternative translation convention that uses dots instead of slashes.'
1401,'dhh','Apply sprocket helpers refactor to 3-1-Stable\nThese commits were never applied to 3-1-stable and were causing uninitialized constant Sprockets::Helpers when running <code>rake assets:precompile</code>. All tests passing and browser tested. This would invalidate pull request https://github.com/rails/rails/pull/1387.\n'
1399,'sikachu','case_sensitive_equality_operator including BINARY is slow on MySQL\nIt\'s about time we should fix this - right now `ActiveRecord::ConnectionAdapters::MysqlAdapter` has this code block:\n\n    def case_sensitive_equality_operator\n      "= BINARY"\n    end\n\nwhich renders `validates_uniqueness_of` prohibitively slow. With 7M records, it takes 3+ seconds in our case. It really should be:\n\n    def case_sensitive_equality_operator\n      "="\n    end\n\nThat way, we benefit from MySQL\'s collation for case sensitivity in the index (like `utf8_unicode_ci` or `utf8_bin`), which is FAST. Or we could add `:case_sensitive => nil` as a new option particularly for that case.\n\nIt\'s a known problem for a long time actually, and patches have been around:\n\n* http://grosser.it/2009/12/11/validates_uniqness_of-mysql-slow/\n* http://techblog.floorplanner.com/2009/11/17/case-insensitive-validates_uniqueness_of-slowness/'
1395,'jonleighton','default_scope select("name") breaks aggregation on 3.1\nThis is a regression from 3.0.7\r\n\r\nI have got to learn pull reqs one day but here\'s a failing test and example output for now https://gist.github.com/997882\r\n\r\nI don\'t have the time to look into fixing the issue until thursday next week\r\n'
1385,'tenderlove','#drop_table accepts no options now.\nThis commit removes the options hash from #drop_column: https://github.com/rails/rails/commit/bcb466c543451dce69403aaae047295758589d8e\r\n\r\nThis test was making use of it, so I removed it.'
1381,'dhh',"Preserve compiled assets file structure\nCurrently Rails/Sprockets dump everything form `app/assets/javasctips/`, `app/assets/stylesheets/`, `app/assets/images/` into one single bin `public/assets/`. Even files in different subfolders are dumped there.\n\n\nWhat is the reason for flattening everything into one directory?\nShouldn't it maintain the same structure? Otherwise it is a pain to go through all existing references and update them using `asset_path`.\n"
1374,'fxn','incompatible character encodings: UTF-8 and ASCII-8BIT\nWhen installing `gem install rails --pre` I am getting the error when generating RDoc:\r\n\r\n    ERROR:  While generating documentation for activesupport-3.1.0.rc1\r\n    ... MESSAGE:   incompatible character encodings: UTF-8 and ASCII-8BIT\r\n    ... RDOC args: --op /home/dima/.rvm/gems/ruby-1.9.2-p180@rc1/doc/activesupport-3.1.0.rc1/rdoc lib --title activesupport-3.1.0.rc1 Documentation --quiet\r\n\r\n\r\nFull log is at https://gist.github.com/996813\r\n\r\n\r\n\r\n\r\n'
1363,'sikachu',"Symbol-type class_names in associations doesn't work\nI've two models:\n\n```ruby\nclass User < ActiveRecord::Base\nend\n\nclass Deal < ActiveRecord::Base\n  belongs_to :owner, :class_name = >:User # or :user\nend\n```\n\nSuch code in controller:\n\n```ruby\n@deal.owner = current_user\n```\n\ncauses an error message: ` undefined method `match' for :user:Symbol `\nbut simplу changing `:class_name => 'User'` solves the issue. I think it's Rails-style to make both string and symbolic types acceptable."
1360,'jonleighton','Double save with record.association.create! in Rails 3.1.0.rc1\nHere\'s a fun one I found this morning. Took about 4 hours to pinpoint this sucker.\r\nThis problem exists in both rc1 and the master branch.\r\n\r\n    class Foo < ActiveRecord::Base\r\n      has_many :bars\r\n    end\r\n    \r\n    class Bar < ActiveRecord::Base\r\n      belongs_to :foo\r\n      \r\n      before_save :hi\r\n      after_save :bye\r\n      \r\n      def hi\r\n        p "HI #{self.id}"\r\n      end\r\n      \r\n      def bye\r\n        p "BYE #{self.id}"\r\n      end\r\n    end\r\n    \r\nHere\'s little test to run:\r\n      \r\n    class BarTest < ActiveSupport::TestCase\r\n      def setup\r\n        @foo = Foo.create!\r\n      end\r\n      \r\n      def test_direct_create\r\n        Bar.create!\r\n      end\r\n      \r\n      def test_save\r\n        bar = @foo.bars.new\r\n        bar.save!\r\n      end\r\n      \r\n      def test_create_via_association\r\n        @foo.bars.create\r\n      end\r\n      \r\n      def test_create_via_association_gone_bad\r\n        @foo.bars.create!\r\n      end\r\n    end\r\n    \r\nFew sanity checks, but the meat of the problem is at the last two. When you run the `test_create_via_association` this is the debug output:\r\n\r\n    "HI "\r\n    "BYE 980190963"\r\n   \r\nThat\'s expected. Next test should have exactly the same output. But:\r\n\r\n    "HI "\r\n    "BYE 980190963"\r\n    "HI 980190963"\r\n    "BYE 980190963"\r\n    \r\nFor some reason `create!` will trigger save twice, but only via association. Any thoughts how this is happening?\r\n'
1331,'josevalim','Fixed starting Rails::Server when using a Rack::URLMap in 3.1.0.rc1\nhttps://github.com/rails/rails/tree/19c763f7831e08606e6b4fa516f5ad3b00c6428f broke using a Rack::URLMap in your config.ru, rails would simply not start.\r\n\r\nThe use case is something like this in config.ru:\r\n\r\n    run Rack::URLMap.new "/"       => Deploytracking::Application,\r\n                         "/resque" => Resque::Server.new\r\n\r\nI\'ve fixed it to get it starting again and added some tests to a piece which previously had no tests, which are similar to how rack tests Rack::Server: https://github.com/rack/rack/blob/master/test/spec_server.rb#L52\r\n\r\nThe only thing that I couldn\'t do was silence the server output in the tests.'
1326,'tenderlove','collection_singular_ids= setter broken when keys are strings on postgresql [Rails 3.0.8.rc1]\nString column values are escaped improperly in SQL queries.\r\n\r\n```ruby\r\nclass Function < ActiveRecord::Base {\r\n    :short_name => :string,\r\n          :path => :string,\r\n        :hidden => :boolean,\r\n    :created_at => :datetime,\r\n    :updated_at => :datetime\r\n}\r\n\r\nclass Role < ActiveRecord::Base {\r\n    :short_name => :string,\r\n        :system => :boolean,\r\n    :created_at => :datetime,\r\n    :updated_at => :datetime\r\n}\r\nf = Function.first\r\n\r\n#<Function:0xd40d8d4> {\r\n    :short_name => "ManagePermissions",\r\n          :path => "permissions",\r\n        :hidden => false,\r\n    :created_at => Mon, 23 May 2011 08:43:04 UTC +00:00,\r\n    :updated_at => Mon, 23 May 2011 08:43:04 UTC +00:00\r\n}\r\nruby-1.9.2-p136 :013 > f.role_ids\r\n[\r\n    [0] "Administrator"\r\n]\r\nruby-1.9.2-p136 :014 > f.role_ids= f.role_ids\r\n```\r\n```\r\nActiveRecord::StatementInvalid: PGError: ERROR:  column "managepermissions" does not exist\r\nLINE 1: ...s".role_id WHERE (("function_roles".function_id = ManagePerm...\r\n                                                             ^\r\n: SELECT "roles".* FROM "roles" INNER JOIN "function_roles" ON "roles".short_name = "function_roles".role_id WHERE (("function_roles".function_id = ManagePermissions))\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `rescue in log\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/abstract_adapter.rb:199:in `log\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/postgresql_adapter.rb:514:in `execute\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/postgresql_adapter.rb:1004:in `select_raw\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/postgresql_adapter.rb:997:in `select\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/base.rb:473:in `find_by_sql\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/relation.rb:64:in `to_a\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/relation/finder_methods.rb:143:in `all\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/relation/finder_methods.rb:105:in `find\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/base.rb:444:in `find\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations/has_many_through_association.rb:84:in `block in find_target\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/base.rb:1127:in `with_scope\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations/association_proxy.rb:207:in `with_scope\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations/has_many_through_association.rb:84:in `find_target\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations/association_collection.rb:410:in `load_target\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations/association_collection.rb:356:in `replace\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations.rb:1515:in `block in collection_accessor_methods\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/activerecord-3.0.8.rc1/lib/active_record/associations.rb:1523:in `block in collection_accessor_methods\'\r\n\tfrom (irb):14\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/railties-3.0.8.rc1/lib/rails/commands/console.rb:44:in `start\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/railties-3.0.8.rc1/lib/rails/commands/console.rb:8:in `start\'\r\n\tfrom /home/rupert/.rvm/gems/ruby-1.9.2-p136/gems/railties-3.0.8.rc1/lib/rails/commands.rb:23:in `<top (required)>\'\r\n\tfrom script/rails:6:in `require\'\r\n\tfrom script/rails:6:in `<main>\'ruby-1.9.2-p136 :015 > \r\n```'
1306,'jonleighton',"default_scope is applying too broadly\n    class Todolist < ActiveRecord::Base\r\n      default_scope where(trashed: false)\r\n  \r\n      has_many   :todos\r\n      has_many   :comments, through: :todos\r\n    end\r\n\r\n    class Todo < ActiveRecord::Base\r\n      default_scope where(trashed: false)\r\n\r\n      belongs_to :todolist\r\n      has_many   :comments, as: :commentable\r\n    end\r\n\r\n    class Comment < ActiveRecord::Base\r\n      belongs_to :commentable, polymorphic: true\r\n    end\r\n\r\n    todolist.comments.update_all trashed: true\r\n    # => ActiveRecord::StatementInvalid: Mysql2::Error: Unknown column 'todos.trashed' in 'where clause': UPDATE `comments` SET `trashed` = 1 WHERE `comments`.`trashed` = 0 AND `todos`.`trashed` = 0 AND `todos`.`todolist_id` = 968316918 ORDER BY created_at"
1295,'tenderlove','Rails 3.1.0rc1 - ActiveRecord find does not prepend the table name to queries\nSay I have a User model.\n\n```ruby\nUser.find(1)\n```\n\nproduces the following query:\n\n```sql\nSELECT "accounts".* FROM "accounts" WHERE "accounts"."id" = ? LIMIT 1  [["id", 1]]\n```\n\nThe issue is that in more complex queries involving joins, the "id" at the end is applying to any table being queried, not just accounts. That is, "id" should be "users.id." \n\nThis isn\'t noticeable when Rails breaks includes(...) queries up, but in complex queries such as\n\n```ruby\nUser.includes({grandparent:{parent: :child}}).find(1)\n```\nthe grandparent, parent, and child\'s ids must all be 1 as well.'
1291,'tenderlove','non error output to the error.log\nwhy rails 3.1.rc1 output cache status messages to the error.log under apache/passenger in production env?\r\n\r\n```\r\ncache: [GET /assets/application-1b389ecea1e529cffec30aa571c63564.css] fresh\r\ncache: [GET /assets/application-7f146761fbe283240feff8b0e773d7fa.js] fresh\r\ncache: [GET /institute/] miss\r\ncache: [GET /angebote/] miss\r\ncache: [GET /angebote/] miss\r\n```'
1289,'tenderlove','Sqlite3+DevEnv+Rails-3.1rc1 = leaks memory and craps out in seconds!\nSteps to reproduce:\n\nStep 1\n=====\nFrom 192.168.0.7 - running Rails 3.1rc1 on a clean Ubuntu 11.04 with Ruby installed with rvm install 1.9.2\n\n```\nrails new blankapp\ncd blankapp\nrails g scaffold myapp myfield:string\nrake db:migrate\nrails s\n```\n\nStep 2\n=====\nFrom 192.168.0.1 (on the same network\n\n```\ncurl -d \'{"myfield":"test value"}\' -H \'Content-Type: application/json\' -H \'Accept: application/json\' http://192.168.0.7:3000/myapps\n{"created_at":"2011-05-25T05:23:49Z","id":1,"myfield":"test value","updated_at":"2011-05-25T05:23:49Z"}\n...\nwhile true; do curl http://192.168.0.7:3000/myapps/1; done\n...\n```\n\nStep 3\n=====\nFrom 192.168.0.7 - Memory use climbs to around 350MB... rails craps out after as little as a few seconds of requests!\n\n```\ncurl http://192.168.0.7:3000/myapps/1\n<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="utf-8" />\n  <title>Action Controller: Exception caught</title>\n  <style>\n    body { background-color: #fff; color: #333; }\n\n    body, p, ol, ul, td {\n      font-family: helvetica, verdana, arial, sans-serif;\n      font-size:   13px;\n      line-height: 18px;\n    }\n\n    pre {\n      background-color: #eee;\n      padding: 10px;\n      font-size: 11px;\n    }\n\n    a { color: #000; }\n    a:visited { color: #666; }\n    a:hover { color: #fff; background-color:#000; }\n  </style>\n</head>\n<body>\n\n<h1>\n  LoadError\n    in MyappsController#show\n</h1>\n<pre>no such file to load -- /home/xanview2/blankapp/app/controllers/myapps_controller.rb</pre>\n\n\n<p><code>Rails.root: /home/xanview2/blankapp</code></p>\n\n<div id="traces">\n    <a href="#" onclick="document.getElementById(\'Framework-Trace\').style.display=\'none\';document.getElementById(\'Full-Trace\').style.display=\'none\';document.getElementById(\'Application-Trace\').style.display=\'block\';; return false;">Application Trace</a> |\n    <a href="#" onclick="document.getElementById(\'Application-Trace\').style.display=\'none\';document.getElementById(\'Full-Trace\').style.display=\'none\';document.getElementById(\'Framework-Trace\').style.display=\'block\';; return false;">Framework Trace</a> |\n    <a href="#" onclick="document.getElementById(\'Application-Trace\').style.display=\'none\';document.getElementById(\'Framework-Trace\').style.display=\'none\';document.getElementById(\'Full-Trace\').style.display=\'block\';; return false;">Full Trace</a> \n\n    <div id="Application-Trace" style="display: block;">\n      <pre><code></code></pre>\n    </div>\n    <div id="Framework-Trace" style="display: none;">\n      <pre><code>activesupport (3.1.0.rc1) lib/active_support/dependencies.rb:452:in `load\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:452:in `block in load_file\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:639:in `new_constants_in\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:451:in `load_file\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:338:in `require_or_load\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:489:in `load_missing_constant\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:181:in `block in const_missing\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:179:in `each\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:179:in `const_missing\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:124:in `block in constantize\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:123:in `each\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:123:in `constantize\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:527:in `block in initialize\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `yield\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `default\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `[]\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:61:in `controller_reference\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:46:in `controller\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:25:in `call\'\nrack-mount (0.8.1) lib/rack/mount/route_set.rb:152:in `block in call\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:93:in `block in recognize\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:89:in `optimized_each\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:92:in `recognize\'\nrack-mount (0.8.1) lib/rack/mount/route_set.rb:141:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:531:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call\'\nrack (1.3.0) lib/rack/etag.rb:23:in `call\'\nrack (1.3.0) lib/rack/conditionalget.rb:25:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/head.rb:14:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/params_parser.rb:21:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/flash.rb:243:in `call\'\nrack (1.3.0) lib/rack/session/abstract/id.rb:195:in `context\'\nrack (1.3.0) lib/rack/session/abstract/id.rb:190:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/cookies.rb:321:in `call\'\nactiverecord (3.1.0.rc1) lib/active_record/query_cache.rb:54:in `call\'\nactiverecord (3.1.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:448:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call\'\nactivesupport (3.1.0.rc1) lib/active_support/callbacks.rb:392:in `_run_call_callbacks\'\nactivesupport (3.1.0.rc1) lib/active_support/callbacks.rb:81:in `run_callbacks\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/callbacks.rb:28:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/reloader.rb:68:in `call\'\nrack (1.3.0) lib/rack/sendfile.rb:102:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:48:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/logger.rb:13:in `call\'\nrack (1.3.0) lib/rack/methodoverride.rb:24:in `call\'\nrack (1.3.0) lib/rack/runtime.rb:17:in `call\'\nactivesupport (3.1.0.rc1) lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\nrack (1.3.0) lib/rack/lock.rb:34:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/static.rb:53:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/content_length.rb:16:in `call\'\nrailties (3.1.0.rc1) lib/rails/engine.rb:438:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/log_tailer.rb:14:in `call\'\nrack (1.3.0) lib/rack/handler/webrick.rb:59:in `service\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread\'</code></pre>\n    </div>\n    <div id="Full-Trace" style="display: none;">\n      <pre><code>activesupport (3.1.0.rc1) lib/active_support/dependencies.rb:452:in `load\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:452:in `block in load_file\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:639:in `new_constants_in\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:451:in `load_file\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:338:in `require_or_load\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:489:in `load_missing_constant\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:181:in `block in const_missing\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:179:in `each\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:179:in `const_missing\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:124:in `block in constantize\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:123:in `each\'\nactivesupport (3.1.0.rc1) lib/active_support/inflector/methods.rb:123:in `constantize\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:527:in `block in initialize\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `yield\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `default\'\nactivesupport (3.1.0.rc1) lib/active_support/dependencies.rb:549:in `[]\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:61:in `controller_reference\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:46:in `controller\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:25:in `call\'\nrack-mount (0.8.1) lib/rack/mount/route_set.rb:152:in `block in call\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:93:in `block in recognize\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:89:in `optimized_each\'\nrack-mount (0.8.1) lib/rack/mount/code_generation.rb:92:in `recognize\'\nrack-mount (0.8.1) lib/rack/mount/route_set.rb:141:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/routing/route_set.rb:531:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call\'\nrack (1.3.0) lib/rack/etag.rb:23:in `call\'\nrack (1.3.0) lib/rack/conditionalget.rb:25:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/head.rb:14:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/params_parser.rb:21:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/flash.rb:243:in `call\'\nrack (1.3.0) lib/rack/session/abstract/id.rb:195:in `context\'\nrack (1.3.0) lib/rack/session/abstract/id.rb:190:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/cookies.rb:321:in `call\'\nactiverecord (3.1.0.rc1) lib/active_record/query_cache.rb:54:in `call\'\nactiverecord (3.1.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:448:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call\'\nactivesupport (3.1.0.rc1) lib/active_support/callbacks.rb:392:in `_run_call_callbacks\'\nactivesupport (3.1.0.rc1) lib/active_support/callbacks.rb:81:in `run_callbacks\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/callbacks.rb:28:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/reloader.rb:68:in `call\'\nrack (1.3.0) lib/rack/sendfile.rb:102:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:48:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/logger.rb:13:in `call\'\nrack (1.3.0) lib/rack/methodoverride.rb:24:in `call\'\nrack (1.3.0) lib/rack/runtime.rb:17:in `call\'\nactivesupport (3.1.0.rc1) lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\nrack (1.3.0) lib/rack/lock.rb:34:in `call\'\nactionpack (3.1.0.rc1) lib/action_dispatch/middleware/static.rb:53:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/content_length.rb:16:in `call\'\nrailties (3.1.0.rc1) lib/rails/engine.rb:438:in `call\'\nrailties (3.1.0.rc1) lib/rails/rack/log_tailer.rb:14:in `call\'\nrack (1.3.0) lib/rack/handler/webrick.rb:59:in `service\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run\'\n/usr/local/rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread\'</code></pre>\n    </div>\n</div>\n\n\n\n<h2 style="margin-top: 30px">Request</h2>\n<p><b>Parameters</b>: <pre>{&quot;id&quot;=&gt;&quot;1&quot;}</pre></p>\n\n<p><a href="#" onclick="document.getElementById(\'session_dump\').style.display=\'block\'; return false;">Show session dump</a></p>\n<div id="session_dump" style="display:none"><pre></pre></div>\n\n<p><a href="#" onclick="document.getElementById(\'env_dump\').style.display=\'block\'; return false;">Show env dump</a></p>\n<div id="env_dump" style="display:none"><pre>GATEWAY_INTERFACE: &quot;CGI/1.1&quot;\nHTTP_ACCEPT: &quot;*/*&quot;\nREMOTE_ADDR: &quot;192.168.0.7&quot;\nREMOTE_HOST: &quot;192.168.0.7&quot;\nSERVER_NAME: &quot;192.168.0.7&quot;\nSERVER_PROTOCOL: &quot;HTTP/1.1&quot;</pre></div>\n\n\n<h2 style="margin-top: 30px">Response</h2>\n<p><b>Headers</b>: <pre>None</pre></p>\n\n\n\n</body>\n</html>\n```\n\nAny ideas?'
1272,'jonleighton','Relation#last has issues with existing order_clauses\nOn rc1, if a model has a default_scope with an order clause, #last does not generate the correct sql query, resulting in the same object as #first being returned.\r\n\r\nFor example, lets say I have a User model with a default_scope with created_at ASC:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  def self.default_scope\r\n     order(\'created_at ASC\')\r\n  end\r\nend\r\n```\r\n\r\nThen User.last generates this sql:\r\n\r\n```\r\nSELECT "users".* FROM "users" ORDER BY created_at ASC, created_at DESC LIMIT 1\r\n```\r\n\r\nSo:\r\n\r\n```\r\n>> User.first == User.last\r\n  User Load (3.1ms)  SELECT "users".* FROM "users" ORDER BY created_at ASC LIMIT 1\r\n  User Load (1.1ms)  SELECT "users".* FROM "users" ORDER BY created_at ASC, created_at DESC LIMIT 1\r\n=> true\r\n```\r\n\r\nIt looks like it only happens with order clauses in the default_scope. (also effects #last in a relationship call e.g. ```project.users.last```)'
1264,'jonleighton',"Declaring default_scope as class_method cause stack level too deep error\nGiven the following model:\r\n\r\n``` ruby\r\nclass Manufacturer < ActiveRecord::Base\r\n  scope :visible, where(:visible => true)\r\n  def self.default_scope\r\n    visible\r\n  end\r\nend\r\n```\r\n\r\nthen trying to create a model raises an error:\r\n\r\n    >> Manufacturer.create!(:name => 'Yonex')\r\n    SystemStackError: stack level too deep\r\n\r\nDefining the default_scope as `default_scope visible` doesn't raise an error. Isn't a regression as defining default scope as a class method is new to 3.1 however I'd consider it a blocker.\r\n"
1242,'jonleighton','Block in a loop: huge memory allocation in view (lighthouse#6794)\nRails 3.0.7 allocates a lot of memory if you do benchmark{}/silence{}/any_helper_with_yield{} in a loop:\n\n    <%= 20.times do %>\n        <%= benchmark("test") { %>\n            hello world\n         <% } %>\n    <% end %>\n\nThis one eats about 300MB RAM. 100.times{} easily killed our shared development server with 2GB RAM.\n\nEasy to reproduce:\n1. rails new railstest --skip-active-record && rails g controller test\n2. fill config/routes.rb\n3. put that sample into app/views/test/index.html.erb\n4. rails server\n5. wget\n\nIt\'s not problem for 2.3.11.\n'
1233,'jonleighton',"Default scope includes(:association) is ignored\nGiven the following models:\r\n\r\n``` ruby\r\nclass Menu < ActiveRecord::Base\r\n  has_many :links, :as => :owner\r\n  default_scope includes(:links)\r\nend\r\n\r\nclass Link < ActiveRecord::Base\r\n  belongs_to :menu, :polymorphic => true\r\nend\r\n```\r\n\r\nthen doing a `Menu.first` doesn't load the links. Pretty sure this is a regression from 3.0.x. There's a related issue with has_many :through as well where it tries to execute the default scope but can't find the association reflection. I'll add some more details later and provide some failing tests."
1196,'wycats',"Cannot Set default_form_builder=() in after_initialize()\nIt seems Rails 3.0.7 silently ignores this code (in my config/application.rb):\r\n\r\n    config.after_initialize do\r\n      config.action_view.default_form_builder = MyFormBuilder\r\n    end\r\n\r\nIt works fine if I don't put it in an after_initialize() block, but that means I need to make sure any requires for the builder happen before configuration.  This means you can put the require statement in config/initializers/*.rb, for example.\r\n\r\nNothing critical, but annoying.  I can't think of a good reason for it either.  Surely Rails would still have it before it needs to render a page."
1163,'tenderlove','Sexier migrations\nLet me propose a new Rails-3-ish cooler syntax for the database migrations.\nThis pull request enables you to remove the block parameter and t. t. t. t. t. t. t. ... from your migration code.\n\nThis is actually the same thing with what I posted here in January, so please refer to this ticket for details.\nhttps://rails.lighthouseapp.com/projects/8994/tickets/6339\n\nThe reasons why I made another pull request today are:\n\n* The attached patch on the ticket does not apply anymore to the current master\n* The proposal got many +1s from people\n* The ticket is in "wontfix" state (by mistake?), and maybe because of that, was not copied to GH issues\n* I think 3.1 is the best timing for including another change on the migration syntax\n* I guess @tenderlove have not looked at it yet\n\nSo, @tenderlove, can you please take a look at [the former ticket](https://rails.lighthouseapp.com/projects/8994/tickets/6339) and this pull request, then give me your thoughts?\nThanks in advance!'
1149,'josh','url_for() raising exceptions when HTTP streaming enabled\n...and this is not the only case when url_for() raising exception\r\n\r\nrender :stream => true or class method\r\nstream effect is same\r\n\r\n#unicorn config line\r\nlisten :tcp_nopush => false\r\n\r\n#stack trace\r\nActionView::Template::Error (No route matches {}):\r\n\r\n11:             <ul class="additional_locales">\r\n12:                 <% Language.active.reject {|l| l.code == I18n.locale.to_s }.each do |lang| %>\r\n13:                     <li>\r\n14:                         <%= link_to url_for( :host => lang.code + \'.\' + request.host_with_port ) do %>\r\n15:                       <%= image_tag("/images/flags/png/#{lang.code}.png") %>    \r\n16:                             <%=raw lang.name %>\r\n17:                     <% end %>\r\n/Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/route_set.rb:464:in raise_routing_error\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/route_set.rb:460:inrescue in generate\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/route_set.rb:452:in generate\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/route_set.rb:493:ingenerate\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/route_set.rb:518:in url_for\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_dispatch/routing/url_for.rb:143:inurl_for\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/helpers/url_helper.rb:107:in url_for\' /Users/andriytyurnikov/Code/futubox/app/views/shared/_nav.html.erb:14:inblock in app_views_sharednav_html_erb3474679066074452885_2165049460\' /Users/andriytyurnikov/Code/futubox/app/views/shared/nav.html.erb:12:in each\' /Users/andriytyurnikov/Code/futubox/app/views/shared/_nav.html.erb:12:in_app_views_sharednav_html_erb3474679066074452885_2165049460\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/template.rb:144:in block in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/activesupport/lib/active_support/notifications.rb:57:ininstrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/template.rb:142:in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/partial_renderer.rb:265:inrender_partial\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/partial_renderer.rb:237:in block (2 levels) in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/abstract_renderer.rb:33:inblock in instrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/activesupport/lib/active_support/notifications.rb:55:in block in instrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/activesupport/lib/active_support/notifications/instrumenter.rb:21:ininstrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/activesupport/lib/active_support/notifications.rb:55:in instrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/abstract_renderer.rb:33:ininstrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/partial_renderer.rb:236:in block in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/abstract_renderer.rb:22:inwrap_formats\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/partial_renderer.rb:228:in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/renderer.rb:41:inrender_partial\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/renderer.rb:15:in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/helpers/rendering_helper.rb:24:inrender\' /Users/andriytyurnikov/Code/futubox/app/views/layouts/application.html.erb:17:in _app_views_layouts_application_html_erb___3265135085123127531_2169541100\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/template.rb:144:inblock in render\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/activesupport/lib/active_support/notifications.rb:57:in instrument\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/template.rb:142:inrender\' /Users/andriytyurnikov/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-505defc27ead/actionpack/lib/action_view/renderer/streaming_template_renderer.rb:73:in `block (2 levels) in delayed_render\''
1148,'jonleighton','Association Extension - Association proxy missing\nMethod\r\n\r\n  def proxy_owner\r\n    @owner\r\n  end\r\nis simply not there anymore.\r\n\r\nHow we should extend associations now?'
1144,'josevalim','Rails middleware stack should include Rack::ContentLength\nI am working on this but this is causing some conflicts with the Rack::Sendfile middleware.'
1143,'drogus',"Relative Paths on render :partial => \nCurrently all relative paths on the partial path are relative to the `app/view` directory, however let's suppose we have the following directory structure:\r\n\r\n\r\n    app/view\r\n      > layouts\r\n        > shared\r\n          - _header.html.erb\r\n          - _some_header_stuff.html.erb\r\n          - _footer.html.erb\r\n          - _navigation.html.erb\r\n        - application.html.erb\r\n\r\nFrom `application.html.erb` you would the partial via:\r\n  - `./shared/header` or `layouts/shared/header`.\r\n  \r\nFrom `header` you could render the partial `_some_header_stuff.html.erb`  via:\r\n  - `./some_header_stuff` or `layouts/shared/some_header_stuff`.\r\n\r\nThis would allow to have a more organized view directory, with less than 13 files bouncing around root directories, without having to write incredible long paths every time.\r\n\r\nOrganization is good, according to @dhh - and this would support that goal."
1125,'josh',"CoffeeScript files are bare\nI noticed that in Rails 3.1 beta 1, you can do things like this:\r\n\r\n    # A.coffee\r\n    foo = 'bar'\r\n\r\n    # B.coffee\r\n    alert foo\r\n\r\nThat's kind of scary. The way CoffeeScript does scoping assumes that different files are isolated from one another, with specific resources shared by exporting to `window` (or other global objects). My first thought was that Sprockets was concatenating the .coffee files before compiling them, but no, there's no wrapper at all: `foo` is in the global scope.\r\n\r\nI'm having a hard time tracking down whether this is a Rails issue, a Sprockets issue, or a Tilt issue; the `ruby-coffee-script` gem definitely has `bare = false` as its default. Where is it getting overridden, and why?"
1101,'josevalim',"Sass doesn't need to include Rack middleware if Sprockets is on\n/cc @chriseppstein"
1093,'josevalim',"Using the correct CSS compressor for the yui-compressor gem.\nUsing the `CssCompressor` instead of `JavaScriptCompressor` just like Jammit does. \r\n\r\n[]'s\r\nLucas."
988,'senny',"Allow after_commit :do_something, :on => [:update, :create]\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6660\nCreated by **Ary Borenszweig** - 2011-03-31 17:48:22 UTC\n\nIt's very common to want to do the same thing on an update/create callback after commit (example: create/update a related file, but if the file was there then it is just overwritten).\n\nI tried:\n\n```\nafter_commit :do_something, :on => [:update, :create]\n```\n\nbut I get:\n\n```\n/Users/asterite/.rvm/gems/ruby-1.9.2-p136@verbo/gems/activesupport-3.0.3/lib/active_support/callbacks.rb:400:in `class_eval': /Users/asterite/.rvm/gems/ruby-1.9.2-p136@verbo/gems/activesupport-3.0.3/lib/active_support/callbacks.rb:414: syntax error, unexpected '[', expecting tSTRING_CONTENT or tSTRING_DBEG or tSTRING_DVAR or tSTRING_END (SyntaxError)\nif (transaction_include_action?(:[:create, :update]))\n                                  ^\n```\n\nI tried doing this:\n\n```\nafter_commit :do_something, :on => :create\nafter_commit :do_something, :on => :update\n```\n\nbut the second callback overrides the first one. So for now I'm using two different methods, or just using an alias_method, but I think the :on => [...] is more DRY, useful and it also similar to the controllers :before_filter, :only => [...]"
954,'jonleighton','Inconsistent behavior of collection.new vs collection.build\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6618\nCreated by **Szymon Nowak** - 2011-03-24 19:42:56 UTC\n\nI\'m not sure how exactly collection.new should behave, as it\'s not really documented (at least not here: http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html), but it\'s behavior is inconsistent:\n\n``` ruby\nclass User < ActiveRecord::Base\n  has_many :friendships\n  has_many :friends, :through => :friendships\nend\n\nclass Friendship < ActiveRecord::Base\n  belongs_to :user\n  belongs_to :friend, :class_name => "User"\nend\n\nuser.friendships.new\nuser.friendships # => []\nuser.friendships.build\nuser.friendships # => [#<Friendship id: nil, user_id: 1, friend_id: nil>]\n\n# but\nuser.friends # => []\nuser.friends.new\nuser.friends # => [#<User id: nil...>]\n```\n\nI\'m not sure how it should behave, but it would be great if it always behaved like for non-through associations. It works like this in Rails 3.0.5 and master.'
950,'jonleighton','ActiveRecord query changing when a dot/period is in condition value\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6611\nCreated by **Corey Ward** - 2011-03-24 03:00:22 UTC\n\nI have created a barebones Rails app demonstrating this bug: https://github.com/coreyward/bug-demo\n\nI also have a Question open on StackOverflow about this: http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value\n\nI don\'t have the skills/knowledge to know A) where this is coming from or B) how to fix it. Any help would be very much appreciated.\n\n---\n\nThis bug occurs when you have a "child" model (one that `belongs_to` another model) with an `order` scope on it and you try to set a `where` condition.\n\nSo for the following models:\n\n    class Person < ActiveRecord::Base\n      has_many :items\n    end\n    \n    class Item < ActiveRecord::Base\n      belongs_to :person\n      default_scope order(:ordinal)\n    end\n\nWith the following calls:\n\n    Person.includes(:items).where(:name => \'John\')\n    # or\n    Person.includes(:items).find_by_name \'John\'\n    \nThe items loaded are ordered by the `ordinal` on each `Item`. \n\nIf you introduce a period into the name, though (e.g. "John.Smith"), the order scope is ignored.\n\nTo see this in action...\n\n    $ git clone git://github.com/coreyward/bug-demo.git\n    $ cd bug-demo\n    $ rake db:create db:migrate db:seed\n    $ rails s\n\nAnd then fire up [http://localhost:3000/](http://localhost:3000/) and see for yourself.'
882,'fxn','[PATCH] Constant loading when running rake task (expected x.rb to define X)\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6493\nCreated by **Ludo van den Boom** - 2011-03-01 15:23:06 UTC\n\nCopied most of the info from ticket #5074. The problem I encounter is the same as in that ticket, except I don\'t have issues with rails console (that has already been resolved in ticket #5074), but with running rake tasks. Attached patch resolves this issue for rake tasks as well.\n\n**Versions used**\n\nI am using Ruby 1.8.7 and Rails 3.0.5\n\n**Steps to reproduce**\n\n1) rails new foo\n2) cd foo\n3) rails generate model bar\n4) rails generate observer bar\n5) rake db:migrate\n6) in config/application.rb file:\n\n``` ruby\nconfig.active_record.observers = :bar_observer\n```\n\n6) touch lib/tasks/qux.rake\n7) in lib/tasks/qux.rake:\n\n``` ruby\ndesc "Qux"\ntask :qux => :environment do\n  Bar\nend\n```\n\n8) rake qux\n\nResults in an error:\n\n``` ruby\nExpected /Users/ludo/src/foo/app/models/bar.rb to define Bar\n```'
869,'pixeltrix','ActionDispatch::Http:Parameters force encoding of all params but filename of an uploaded file\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6470\nCreated by **Franck** - 2011-02-25 15:37:10 UTC\n\nI run into a problem when I submit a form with a text field and a filename of an uploaded file both containing special chars.\n\nTracking down the issue it seems that while ActionDispatch force the encoding of all string paramaters to UTF-8 (see ActionDispatch::Http:Parameters encode_params private method), it does not do at to the filename of the uploaded file.\n\nparams is then filled with two different encoding (UTF-8 and ASCII-8BIT) causing an Encoding::CompatibilityError later on Arel-2.0.8 (to_sql.rb visit_Arel_Nodes_Values method).\n\nI monkey patched ActionDispatch::Http:UploadedFile like so and it works :\n\n``` ruby\n  def initialize(hash)\n    @original_filename = hash[:filename].force_encoding("UTF-8")        \n    @content_type      = hash[:type]\n    @headers           = hash[:head]\n    @tempfile          = hash[:tempfile]\n    raise(ArgumentError, \':tempfile is required\') unless @tempfile\n  end\n```\n\nMy computing skill stop here. I let you guys decide if this is a bug or if I\'m doing something wrong.'
796,'tenderlove','has_many :through associations are created with .create! even if the parent is created with .create\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6217\nCreated by **Greg Hazel** - 2010-12-23 11:10:27 UTC\n\nWhen saving a model with a has_many :through association using .create, a validation exception can be raised when none is expected.\n\n``` ruby\nclass Address < ActiveRecord::Base\n  belongs_to :user\n\n  def validate\n    errors.add :user, "This is a test."\n  end\nend\n\nclass User < ActiveRecord::Base\n  has_many :addresses, :validate => true\n  has_many :admins, :through => :addresses, :source => :user\nend\n\n# (BUG) this raises a ActiveRecord::RecordInvalid (and I did not expect it to since I used .create)\nUser.create(:admins => [User.find(1)])\n\n# (OK) this raises a ActiveRecord::RecordInvalid (and I expect it to since I used .create!)\nUser.create!(:addresses => [Address.find(1)])\n\n# (OK) this does not raise anything (and I did not expect it to since I used .create)\nUser.create(:addresses => [Address.find(1)])\n```\n\nI\'m using Rails 2.3.10, but I believe the same applies to Rails 3.'
776,'tenderlove',"Reduce memory bloat in ActiveRecord transactions\n*Imported from Lighthouse.* Original ticket at: http://rails.lighthouseapp.com/projects/8994/tickets/6129\nCreated by **Brian Durand** - 2011-04-14 10:17:34 UTC\n\nThis patch reduces memory bloat in ActiveRecord transactions. With the introduction after_commit and after_rollback callbacks references are kept to all records updated in a transaction until the transaction completes. This can lead to memory bloat with large transactions.\n\nThe code change replaces the references to weak references unless the objects implement these callbacks. This allows the garbage collector to reclaim objects that won't be executing a callback."
567,'josevalim','ParamsWrapper should use a well-defined API and not rely on AR methods\nWe propose to use attribute_names instead of column_names and the default implementation in AR should be careful to check if the table exists or not to avoid breaking the controller. /cc @sikachu'
562,'josh','actionpack test fails under rack-mount 0.8.0\n'
559,'jonleighton','Deprecate ActiveSupport::SecureRandom\nBecause SecureRandom ships with Ruby 1.8.7+. See https://github.com/rails/rails/commit/1fac9c74ab0ebedb60fd57cadf0042b040938da8#commitcomment-383499.'
558,'josevalim',"ActionController::ParamsWrapper conflicting with similarly named abstract model\nFrom: https://github.com/rails/rails/pull/359#issuecomment-1160382\r\n\r\nAfter working with Rails 3.1.0beta, I found there to be a problem with the ActionController::ParamsWrapper when dealing with an abstract class and a similarly named controller. My scenario is as follows:\r\n\r\n* User is an abstract model with two subclasses, Student and Professor\r\n* UsersController is a resourceful controller used to edit either a Student or Professor (depending on who is logged in)\r\n\r\n```ruby\r\n# app/models/user.rb\r\nclass User < ActiveRecord::Base\r\n  self.abstract_class = true\r\nend\r\n\r\n# app/controllers/users_controller.rb\r\nclass UsersController < ApplicationController\r\nend\r\n\r\n# config/initializers/wrap_parameters.rb\r\nActionController::Base.wrap_parameters :format => [:json]\r\n```\r\n\r\nHaving the base configurations, with no additional definitions in UsersController, when you try and go to /user/edit (it is a resource not resources, so no ID is passed), the following error appears:\r\n\r\n```\r\nActiveRecord::StatementInvalid\r\n\r\nMysql2::Error: Table 'uclass.users' doesn't exist: SHOW FIELDS FROM `users`\r\n```\r\n\r\nHere is the backtrace:\r\n\r\n```\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:279:in `query'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:279:in `block in execute'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:222:in `block in log'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:217:in `log'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:279:in `execute'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:469:in `columns'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:93:in `block (2 levels) in initialize'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:174:in `with_connection'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:90:in `block in initialize'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/base.rb:694:in `yield'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/base.rb:694:in `default'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/base.rb:694:in `columns'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/base.rb:704:in `column_names'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_controller/metal/params_wrapper.rb:167:in `_set_wrapper_defaults'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_controller/metal/params_wrapper.rb:128:in `inherited'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/abstract_controller/railties/routes_helpers.rb:7:in `block (2 levels) in with'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_controller/railties/paths.rb:7:in `block (2 levels) in with'\r\napp/controllers/users_controller.rb:1:in `<top (required)>'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:452:in `load'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:452:in `block in load_file'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:639:in `new_constants_in'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:451:in `load_file'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:338:in `require_or_load'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:489:in `load_missing_constant'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:181:in `block in const_missing'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:179:in `each'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:179:in `const_missing'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/inflector/methods.rb:124:in `block in constantize'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/inflector/methods.rb:123:in `each'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/inflector/methods.rb:123:in `constantize'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:527:in `block in initialize'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:549:in `yield'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:549:in `default'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/dependencies.rb:549:in `[]'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/routing/route_set.rb:61:in `controller_reference'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/routing/route_set.rb:46:in `controller'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/routing/route_set.rb:25:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/routing/mapper.rb:41:in `call'\r\nrack-mount (0.8.0) lib/rack/mount/route_set.rb:153:in `block in call'\r\nrack-mount (0.8.0) lib/rack/mount/code_generation.rb:93:in `block in recognize'\r\nrack-mount (0.8.0) lib/rack/mount/code_generation.rb:75:in `optimized_each'\r\nrack-mount (0.8.0) lib/rack/mount/code_generation.rb:92:in `recognize'\r\nrack-mount (0.8.0) lib/rack/mount/route_set.rb:141:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/routing/route_set.rb:531:in `call'\r\noa-core (0.2.5) lib/omniauth/strategy.rb:44:in `call!'\r\noa-core (0.2.5) lib/omniauth/strategy.rb:30:in `call'\r\noa-core (0.2.5) lib/omniauth/strategy.rb:44:in `call!'\r\noa-core (0.2.5) lib/omniauth/strategy.rb:30:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\r\nrack (1.3.0.beta) lib/rack/etag.rb:23:in `call'\r\nrack (1.3.0.beta) lib/rack/conditionalget.rb:25:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/head.rb:14:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/params_parser.rb:21:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/flash.rb:243:in `call'\r\nrack (1.3.0.beta) lib/rack/session/abstract/id.rb:195:in `context'\r\nrack (1.3.0.beta) lib/rack/session/abstract/id.rb:190:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/cookies.rb:321:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/query_cache.rb:54:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:448:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activerecord/lib/active_record/identity_map.rb:152:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/callbacks.rb:392:in `_run_call_callbacks'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/callbacks.rb:28:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/reloader.rb:68:in `call'\r\nrack (1.3.0.beta) lib/rack/sendfile.rb:102:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:47:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/rack/logger.rb:13:in `call'\r\nrack (1.3.0.beta) lib/rack/methodoverride.rb:24:in `call'\r\nrack (1.3.0.beta) lib/rack/runtime.rb:17:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/activesupport/lib/active_support/cache/strategy/local_cache.rb:72:in `call'\r\nrack (1.3.0.beta) lib/rack/lock.rb:34:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/actionpack/lib/action_dispatch/middleware/static.rb:53:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/engine.rb:438:in `call'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/rack/log_tailer.rb:14:in `call'\r\nthin (1.2.11) lib/thin/connection.rb:84:in `block in pre_process'\r\nthin (1.2.11) lib/thin/connection.rb:82:in `catch'\r\nthin (1.2.11) lib/thin/connection.rb:82:in `pre_process'\r\nthin (1.2.11) lib/thin/connection.rb:57:in `process'\r\nthin (1.2.11) lib/thin/connection.rb:42:in `receive_data'\r\neventmachine (0.12.10) lib/eventmachine.rb:256:in `run_machine'\r\neventmachine (0.12.10) lib/eventmachine.rb:256:in `run'\r\nthin (1.2.11) lib/thin/backends/base.rb:61:in `start'\r\nthin (1.2.11) lib/thin/server.rb:159:in `start'\r\nrack (1.3.0.beta) lib/rack/handler/thin.rb:13:in `run'\r\nrack (1.3.0.beta) lib/rack/server.rb:265:in `start'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/commands/server.rb:70:in `start'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/commands.rb:54:in `block in <top (required)>'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/commands.rb:49:in `tap'\r\n/Users/alex/.rvm/gems/ruby-1.9.2-p180@uclass/bundler/gems/rails-cbe6e09f6a02/railties/lib/rails/commands.rb:49:in `<top (required)>'\r\nscript/rails:6:in `require'\r\nscript/rails:6:in `<main>'\r\n```\r\n\r\nThanks, let me know if there's anything else you need to help track down this issue!"
557,'tenderlove','symbol for has_many association has broken if ActiveRecord::Base.pluralize_table_names  is false\nif there is a model defined like this:\r\n\r\n```ruby\r\nclass Foo < ActiveRecord::Base\r\n  self.pluralize_table_names = false\r\n  has_many :bars\r\nend\r\n```\r\n\r\nIt will return an error when calling Foo.first.bars, says "NoMethodError: undefined method `<<\' for :bars:Symbol", the bug is:\r\n\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/join_helper.rb#L35, there is function\r\n\r\n```ruby\r\n      def table_alias_for(reflection, join = false)\r\n        name = alias_tracker.pluralize(reflection.name)\r\n        name << "_#{alias_suffix}"\r\n        name << "_join" if join\r\n        name\r\n      end\r\n```\r\nand it calls https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/alias_tracker.rb#L53\r\n\r\n```ruby\r\n      def pluralize(table_name)\r\n        ActiveRecord::Base.pluralize_table_names ? table_name.to_s.pluralize : table_name\r\n      end\r\n```\r\n\r\nIf ActiveRecord::Base.pluralize_table_names is false, alias_tracker.pluralize will return a symbol value, then table_alias_for raises an error because it\'s trying to call << "_#{alias_suffix}" for a symbol.\r\n'
555,'fxn',"bundler raises an exception on plugin generation\nI have just tried to run this:\r\n\r\n    rails plugin new multisite -O --dev /Users/Papipo/Projects/rails/  --old-style-hash --full --mountable\r\n\r\nand got this output:\r\n\r\n```\r\n      create  \r\n      create  README.rdoc\r\n      create  Rakefile\r\n      create  multisite.gemspec\r\n      create  MIT-LICENSE\r\n      create  .gitignore\r\n      create  Gemfile\r\n      create  app\r\n      create  app/controllers/multisite/application_controller.rb\r\n      create  app/helpers/multisite/application_helper.rb\r\n      create  app/models\r\n      create  app/views/layouts/multisite/application.html.erb\r\n      create  app/assets/images\r\n      create  app/assets/images/.gitkeep\r\n      create  config/routes.rb\r\n      create  lib/multisite.rb\r\n      create  lib/tasks/multisite_tasks.rake\r\n      create  lib/multisite/engine.rb\r\n      create  app/assets/stylesheets/application.css\r\n      create  app/assets/javascripts/application.js\r\n      create  script\r\n      create  script/rails\r\n      create  test/test_helper.rb\r\n      create  test/multisite_test.rb\r\n      append  Rakefile\r\n      create  test/integration/navigation_test.rb\r\n  vendor_app  test/dummy\r\nFetching source index for http://rubygems.org/\r\nUsing rake (0.8.7) \r\nUsing multi_json (1.0.2) \r\nUsing activesupport (3.1.0.beta1) \r\nUsing bcrypt-ruby (2.1.4) \r\nUsing builder (3.0.0) \r\nUsing i18n (0.6.0beta1) \r\nUsing activemodel (3.1.0.beta1) \r\nUsing erubis (2.7.0) \r\nUsing rack (1.3.0.beta) \r\nUsing rack-cache (1.0.1) \r\nUsing rack-mount (0.7.4) \r\nUsing rack-test (0.6.0) \r\nUsing hike (1.0.0) \r\nUsing tilt (1.3) \r\nUsing sprockets (2.0.0.beta.2) \r\nUsing tzinfo (0.3.27) \r\nUsing actionpack (3.1.0.beta1) \r\nUsing mime-types (1.16) \r\nUsing polyglot (0.3.1) \r\nUsing treetop (1.4.9) \r\nUsing mail (2.3.0) \r\nUsing actionmailer (3.1.0.beta1) \r\nUsing arel (2.1.0) \r\nUsing activerecord (3.1.0.beta1) \r\nUsing activeresource (3.1.0.beta1) \r\nUsing ansi (1.2.5) \r\nUsing bundler (1.0.10) \r\nUsing coffee-script-source (1.1.0) \r\nUsing execjs (0.3.4) \r\nUsing coffee-script (2.2.0) \r\nUsing rack-ssl (1.3.2) \r\nUsing thor (0.14.6) \r\nUsing railties (3.1.0.beta1) \r\nUsing jquery-rails (1.0.2) \r\nUsing rails (3.1.0.beta1) \r\nUsing sass (3.1.1) \r\nUsing turn (0.8.2) \r\nYour bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.\r\n         run  bundle install\r\n     failure  bundler raised an exception, are you offline?\r\n```\r\n\r\nThen I cd'ed into the dir, and running bundle install from there went just fine."
552,'jonleighton',"Polymorphic associations within abstract class not assigned the right type\nWhen a polymorphic association is defined within an abstract class, all subclasses of that class cannot access it correctly. As an example:\n\n```ruby\n# app/models/user.rb\nclass User < ActiveRecord::Base\n  self.abstract_class = true\n\n  has_many :settings, :as => :resource\nend\n\n# app/models/student.rb\nclass Student < User\nend\n\n# app/models/professor.rb\nclass Professor < User\nend\n\n# app/models/setting.rb\nclass Setting < ActiveRecord::Base\n  belongs_to :resource, :polymorphic => true\nend\n```\n\nThe resulting SQL queries when looking for Professor.find(1).settings are:\n\n```\nSELECT `professors`.* FROM `professors` WHERE `professors`.`id` = 1 LIMIT 1\nSELECT `settings`.* FROM `settings` WHERE `settings`.`resource_id` = 1 AND `settings`.`resource_type` = 'User'\n```\n\nNote how `resource_type` = 'User' instead of 'Professor'.\n\nI'm brand new to posting to the Rails core, and would love some input here. Thanks!"
546,'josevalim','can\'t set default_url_options for integration tests\nWhen writing integration tests, it would be preferable if url generation automatically made use of default_url_options as specified in ApplicationController. That said, the next best thing would be for default_url_options to be settable in the test environment, but I can\'t find any way to do that. This makes it impossible (or at least extremely awkward) to run integration tests when using a scope with a parameter in it.\r\n\r\nHere\'s a simplified use case:\r\n\r\n1. in routes.rb: \r\n\r\n        scope \':path_prefix\' do \r\n          resources :foos \r\n        end \r\n\r\n2. in application_controller.rb \r\n\r\n        def default_url_options \r\n          { :path_prefix => \'test\' } \r\n        end \r\n\r\n    foos_path will now resolve to /test/foos when referenced within controllers and views.\r\n\r\n3. in test/integration/prefix_test.rb: \r\n\r\n        require \'test_helper\' \r\n        class PrefixTest < ActionDispatch::IntegrationTest \r\n          test "path prefix" do \r\n            foos_path \r\n          end \r\n        end \r\n\r\n4. When running the test (rake test:integration), I get the following error:\r\n\r\n        test_path_prefix(PrefixTest): \r\n        ActionController::RoutingError: No route matches {:controller=>"foos"} \r\n            /test/integration/prefix_test.rb:5:in `test_path_prefix\' \r\n\r\n\r\nIn my real case, path_prefix gets its value from params[:path_prefix] unless no prefix is specified. For example, something like this:\r\n\r\n    def default_url_options \r\n      { :path_prefix => params[:path_prefix] || \'test\' } \r\n    end '
545,'josevalim','ActionDispatch::RailsMetaStore returns corrupt Rack responses with MemoryStore\nThis bug causes cached asset responses to be invalid after two successful requests. This means that with ActionController caching enabled in production, assets will not be returned correctly to clients. To us, this seems to be an RC-stopping issue.\r\n\r\nIn the Rails 3.1.0.beta1, using:\r\n\r\n* rails (3.1.0.beta1)\r\n* rack (1.3.0.beta)\r\n* rack-cache (1.0.1)\r\n\r\nThere is a reproducible bug when ActionController caching is enabled (in production), where `ActionDispatch::RailsMetaStore`, along with `ActiveSupport::Cache::MemoryStore`, will ultimately cause `Rack::Cache` to return an `HTTP 0` (invalid!) response to Rack.\r\n\r\nThe implementation of Rack::Cache works by storing hashes into the cache to retrieve on future requests. Those hashes are written and pulled as necessary for invalidation.\r\n\r\nThe basic lifecycle looks like this:\r\n\r\n1. First request, cache empty, find file, generate fingerprint, append to file name, store request response hash information to cache, serve content back to client with a miss, store header response on the cache,\r\n2. Second request, identify matching file request based on name and fingerprint, read from cache, read and drop the `X-Status` header from the cached hash and return that hash forward to Rack.\r\n3. Third request, identify matching file request based on name and fingerprint, read from cache, read and drop the `X-Status` header (except it\'s already been DELETED!), find no status, return HTTP 0 to rack.\r\n4. All subsequent matches follow #3.\r\n\r\nSo, it seems to be that because the MemoryStore cache is handing back the hash object directly, Rack::Cache is then manipulating it before handing it upstream to Rack. In most cases, that\'s fine, except that because MemoryStore is handing back the actual object, and Rack::Cache is manipulating it, the cache object is ultimately, unknowingly being manipulated. So, subsequent finds are returning the "bad" object.'
544,'tenderlove','AR should handle timestamp values of \'Infinity\'\nRuby 1.8.7 and 1.9.2 understand the concept of \'infinity\'.\r\n\r\n$ irb\r\nruby-1.8.7-p334 :001 > infinity = 1.0/0\r\n => Infinity\r\nruby-1.8.7-p334 :002 > ninfinity = -1.0/0\r\n => -Infinity\r\nruby-1.8.7-p334 :003 >\r\n\r\nFurther,  ActiveRecord::Migration, perhaps inadvertently, supports the concept of infinity as recognized by the PostgreSQL pg adapter:\r\n\r\n  def self.up\r\n    create_table :ca_customs_shipments do |t|\r\n      t.datetime  :expected_at,\r\n                    :default => \'infinity\',\r\n                    :null => false\r\n\r\nResults in:\r\n\r\n-- Column: expected_at\r\n\r\n-- ALTER TABLE ca_customs_shipments DROP COLUMN expected_at;\r\n\r\nALTER TABLE ca_customs_shipments ADD COLUMN expected_at timestamp without time zone;\r\nALTER TABLE ca_customs_shipments ALTER COLUMN expected_at SET STORAGE PLAIN;\r\nALTER TABLE ca_customs_shipments ALTER COLUMN expected_at SET NOT NULL;\r\nALTER TABLE ca_customs_shipments ALTER COLUMN expected_at SET DEFAULT \'infinity\'::timestamp without time zone;\r\n\r\n\r\nHowever, when obtaining default values from its PostgreSQL adapter, postgresql.rb, AR evidently treats \'infinity\' as nil.  This appears to be a defect caused by the Ruby implementation of the Date class.  \r\n\r\nThe coercion of Infinity to a date raises the following exceptions:\r\n\r\nruby-1.8.7-p334 :016 > x = 1.0/0\r\n => Infinity \r\nruby-1.8.7-p334 :017 > x.to_date\r\nNoMethodError: undefined method `to_date\' for Infinity:Float\r\n        from (irb):17\r\nruby-1.8.7-p334 :018 > y = -1.0/0\r\n => -Infinity \r\nruby-1.8.7-p334 :019 > y.to_date\r\nNoMethodError: undefined method `to_date\' for -Infinity:Float\r\n        from (irb):19\r\n\r\nSince these are distinctively related to infinity values it seems reasonable that one could trap them and override the exception by assigning 1.0/0 and -1.0/0 to the receiver instead.  The effect of this is consistent with current behaviour inside Rails\r\n\r\nruby-1.8.7-p334 :003 > x = "19920101000000".to_date\r\n => Wed, 01 Jan 1992 \r\nruby-1.8.7-p334 :004 > x.class\r\n => Date \r\nruby-1.8.7-p334 :005 > x < 1\r\n => false \r\nruby-1.8.7-p334 :006 > x < 1.0/0\r\n => true \r\nruby-1.8.7-p334 :007 > x < -1.0/0\r\n => false \r\n\r\nInfinity and -Infinity are acceptable values for timestamp columns in current versions of PostgreSQl.  Evidence suggests that the pg gem handles this. It seems that the ORM of Rails also should support this in some fashion.'
543,'jonleighton','Duplicate joins on a has_many :through\nOriginally reported by @Fonsan in #533.\r\n\r\nDemonstrated here: https://gist.github.com/970227'
539,'tenderlove','joins across tables in different databases generates invalid SQL\nHere is a failing test case:\r\n\r\n    def test_join_across_tables_in_different_databases\r\n      history    = Course.create! :name => "History of the American Automobile"\r\n      death_mech = Course.create! :name => "Classical Mechanics"\r\n      boss       = Entrant.create! :name => "Charles Kettering", :course => history\r\n      isaac      = Entrant.create! :name => "Sir Isaac Newton",  :course => death_mech\r\n  \r\n      assert_equal [history], Course.joins(:entrants).where(:entrants => {:name => "Charles Kettering"}).to_a\r\n    end\r\n\r\nThis test fails because the generated SQL, which looks like this:\r\n\r\n    SELECT "courses".* FROM "courses" INNER JOIN "entrants" ON "entrants"."course_id" = "courses"."id" WHERE "entrants"."name" = \'Charles Kettering\'\r\n\r\ndoes not fully qualify the table names with the database name.\r\n\r\nHere is the patch for the failing test case:\r\n\r\n    diff --git a/activerecord/test/cases/associations/join_model_test.rb b/activerecord/test/cases/associations/join_model_test.rb\r\n    index 49a1c11..7d49452 100644\r\n    --- a/activerecord/test/cases/associations/join_model_test.rb\r\n    +++ b/activerecord/test/cases/associations/join_model_test.rb\r\n    @@ -13,6 +13,8 @@ require \'models/vertex\'\r\n     require \'models/edge\'\r\n     require \'models/book\'\r\n     require \'models/citation\'\r\n    +require \'models/course\'\r\n    +require \'models/entrant\'\r\n     \r\n     class AssociationsJoinModelTest < ActiveRecord::TestCase\r\n       self.use_transactional_fixtures = false unless supports_savepoints?\r\n    @@ -704,6 +706,15 @@ class AssociationsJoinModelTest < ActiveRecord::TestCase\r\n         assert_equal [9, 10, new_comment.id], authors(:david).sti_post_comments.map(&:id).sort\r\n       end\r\n     \r\n    +  def test_join_across_tables_in_different_databases\r\n    +    history    = Course.create! :name => "History of the American Automobile"\r\n    +    death_mech = Course.create! :name => "Classical Mechanics"\r\n    +    boss       = Entrant.create! :name => "Charles Kettering", :course => history\r\n    +    isaac      = Entrant.create! :name => "Sir Isaac Newton",  :course => death_mech\r\n    +\r\n    +    assert_equal [history], Course.joins(:entrants).where(:entrants => {:name => "Charles Kettering"}).to_a\r\n    +  end\r\n    +\r\n       private\r\n         # create dynamic Post models to allow different dependency options\r\n         def find_post_with_dependency(post_id, association, association_name, dependency)\r\n'
529,'drogus','Mounted engines don\'t get route segment values\nSo I\'ve been playing with the 3.1 beta and I really want to package our code as an engine in a gem and also release a multitenant version that lets you mount the engine to `/:username`. This works fine but it doesn\'t pass the value of the segment into to controller that the route maps to inside of the engine.\r\n\r\n\r\n    Rails::Application.routes.draw do\r\n      mount Foo::Engine => "/:username"\r\n    end\r\n\r\n    Foo::Engine.routes.draw do\r\n      root :to => "home#home"\r\n    end\r\n\r\n    module Foo\r\n      class HomeController < ApplicationController\r\n        def home\r\n          render :text => params[:username].inspect\r\n        end\r\n      end\r\n    end\r\n\r\n    $ curl http://localhost:3000/username\r\n    nil'
528,'jonleighton',"Default scope breaks working of has_many :through\nAdding a default_scope to the end of a has_many :through relationship breaks a number of things.\r\n\r\nI've found it through a :uniq => true on the relationship, but the attached change to the tests seems to break a number of other things"
526,'jonleighton','Polymorphic type fields not set in Rails 3.1.0.beta1 with Identity Map enabled\nI believe the identity map functionality of Rails 3.1.0.beta1 has broken polymorphic associations.  This issue cross references Lighthouse ticket #6772 (https://rails.lighthouseapp.com/projects/8994/tickets/6772).\r\n\r\nSee below for steps to recreate\r\n\r\nApplication.rb\r\n\r\n```\r\nconfig.active_record.identity_map = true\r\nActiveRecord::IdentityMap.enabled = true\r\n```\r\n\r\nMigrations:\r\n\r\n```ruby\r\nclass CreatePhysicalAddresses < ActiveRecord::Migration\r\n  def change\r\n    create_table :physical_addresses do |t|\r\n      t.string :line1\r\n      t.string :line2\r\n      t.string :city\r\n      t.integer :state_id\r\n      t.string :zipcode\r\n      t.integer :county_id\r\n      t.string :latlong\r\n      t.references :physical_addressable, :polymorphic => true\r\n      t.timestamps\r\n    end\r\n    add_index :physical_addresses, [:physical_addressable_id, :physical_addressable_type], :name => \'physical_addressable\'\r\n    add_index :physical_addresses, :state_id\r\n    add_index :physical_addresses, :county_id\r\n  end\r\nend\r\n\r\nclass CreateLands < ActiveRecord::Migration\r\n  def change\r\n    create_table :lands do |t|\r\n      t.string :tax_map_reference\r\n      t.string :plat_number\r\n      t.text :location_comments\r\n      t.text :adverse_environmental_conditions\r\n      t.integer :created_by\r\n      t.integer :updated_by\r\n      t.integer :land_special_ownership_type_id\r\n      t.timestamps\r\n    end\r\n    add_index :lands, :land_special_ownership_type_id\r\n  end\r\nend\r\n```\r\n\r\nModels:\r\n\r\n```ruby\r\nclass Land < ActiveRecord::Base\r\n  has_one :address, :as => :physical_addressable, :dependent => :destroy, :class_name => "PhysicalAddress"\r\n  accepts_nested_attributes_for :address, :allow_destroy => true\r\n  attr_accessible :address_attributes\r\n  delegate :latlong, :to => :address, :prefix => true, :allow_nil => true\r\n  validates_associated :address\r\nend\r\n\r\nclass PhysicalAddress < ActiveRecord::Base\r\n  attr_accessible :line1, :line2, :city, :state_id, :zipcode, :county_id, :latlong\r\n  belongs_to :physical_addressable, :polymorphic => true\r\n  belongs_to :state\r\n  delegate :name, :to => :state, :prefix => true, :allow_nil => true\r\n  belongs_to :county\r\n  delegate :name, :to => :county, :prefix => true, :allow_nil => true\r\n\r\n\r\n  validates_presence_of :line1, :city, :state_id\r\n  validates_length_of :zipcode, :is => 5\r\nend\r\n```\r\n\r\nConsole output:\r\n\r\n```\r\nLoading development environment (Rails 3.1.0.beta1)\r\nruby-1.9.2-p180 :001 > Land.create({"address_attributes"=>{"line1"=>"10300 Little Patuxent Parkway", "line2"=>"", "city"=>"Columbia", "state_id"=>"1", "zipcode"=>"21044", "county_id"=>"14"}})\r\n   (0.1ms)  BEGIN\r\n   (0.1ms)  COMMIT\r\n   (0.1ms)  BEGIN\r\n  SQL (0.4ms)  INSERT INTO `lands` (`adverse_environmental_conditions`, `created_at`, `created_by`, `land_special_ownership_type_id`, `location_comments`, `plat_number`, `tax_map_reference`, `updated_at`, `updated_by`) VALUES (NULL, \'2011-05-10 19:50:11\', NULL, NULL, NULL, NULL, NULL, \'2011-05-10 19:50:11\', NULL)\r\n  SQL (0.2ms)  INSERT INTO `physical_addresses` (`city`, `county_id`, `created_at`, `latlong`, `line1`, `line2`, `physical_addressable_id`, `physical_addressable_type`, `state_id`, `updated_at`, `zipcode`) VALUES (\'Columbia\', 14, \'2011-05-10 19:50:11\', NULL, \'10300 Little Patuxent Parkway\', \'\', 4, NULL, 1, \'2011-05-10 19:50:11\', \'21044\')\r\n   (3.6ms)  COMMIT\r\n => #<Land id: 4, tax_map_reference: nil, plat_number: nil, location_comments: nil, adverse_environmental_conditions: nil, created_by: nil, updated_by: nil, land_special_ownership_type_id: nil, created_at: "2011-05-10 19:50:11", updated_at: "2011-05-10 19:50:11">\r\nruby-1.9.2-p180 :002 > Land.find(4).address\r\n  Land Loaded  From Identity Map (id: 4)\r\n => #<PhysicalAddress id: 4, line1: "10300 Little Patuxent Parkway", line2: "", city: "Columbia", state_id: 1, zipcode: "21044", county_id: 14, latlong: nil, physical_addressable_id: 4, physical_addressable_type: nil, created_at: "2011-05-10 19:50:11", updated_at: "2011-05-10 19:50:11">\r\n```\r\n\r\nNote that the SQL INSERT into physical addresses does not include a physical_addressable_type. Worked just fine in Rails 3.0.7.\r\n\r\nThe address is loaded from the identity map, but if I exit console and try to access the address record again, it is not available:\r\n\r\n```\r\nLoading development environment (Rails 3.1.0.beta1)\r\nruby-1.9.2-p180 :001 > Land.find(4).address\r\n  Land Load (0.6ms)  SELECT `lands`.* FROM `lands` WHERE `lands`.`id` = 4 LIMIT 1\r\n  PhysicalAddress Load (0.4ms)  SELECT `physical_addresses`.* FROM `physical_addresses` WHERE `physical_addresses`.`physical_addressable_id` = 4 AND `physical_addresses`.`physical_addressable_type` = \'Land\' LIMIT 1 => nil\r\n```'
522,'jonleighton',"Support for joins in ActiveRecord::Relation#update_all\n    class Todo < ActiveRecord::Base\n      default_scope where(trashed: false)\n      has_many :comments, as: :commentable\n    end\n\n    class Todolist < ActiveRecord::Base\n      default_scope where(trashed: false)\n      has_many   :todos\n      has_many   :comments, through: :todos\n    end\n\n    todolist.comments.update_all trashed: true\n\nProduces:\n\n    ActiveRecord::StatementInvalid: Mysql2::Error: Unknown column 'todos.trashed' in 'where clause': UPDATE `comments` SET `trashed` = 1 WHERE `comments`.`trashed` = 0 AND `todos`.`trashed` = 0 AND `todos`.`todolist_id` = 968316918 AND (`comments`.`commentable_type` = 'Todo') ORDER BY created_at"
508,'jonleighton','Default scope on the middle relation of has_one :through => breaks it\nTitle says it all. \n\nI\'ve attached a patch which causes tests to break in the ActiveRecord test suite. I\'m not really sure if this is the best way to discuss the error.\n\n    diff --git a/activerecord/test/models/membership.rb b/activerecord/test/models/membership.rb\n    index 905f948..8ed111e 100644\n    --- a/activerecord/test/models/membership.rb\n    +++ b/activerecord/test/models/membership.rb\n    @@ -6,4 +6,8 @@ end\n     class CurrentMembership < Membership\n       belongs_to :member\n       belongs_to :club\n    +\n    +  def self.default_scope\n    +    select("memberships.*").select("\'1\' as Active")\n    +  end\n     end\n\n\n\n\n'
497,'tenderlove','Encoding::UndefinedConversionError killed rails runner\nEncoding::UndefinedConversionError killed rails runner\r\n\r\napplication’s environment\r\n<pre>\r\nthin 1.2.11 codename Bat-Shit Crazy\r\nunicorn v3.6.2\r\npassenger 3.0.7\r\n:except => WEBrick\r\n\r\nRuby 1.9.2-p180\r\nrails 3.1.0.beta1\r\n</pre>\r\ntest.rb\r\n<pre>\r\n# coding: utf-8\r\n# test.rb\r\nrequire \'rubygems\'\r\nrequire \'socket\'\r\n\r\nhost = \'localhost\'\r\nport = 3000\r\npath = "/攻击"\r\n\r\n# This is the HTTP request we send\r\nrequest = "GET #{path} HTTP/1.0\\r\\n\\r\\n"\r\n\r\nsocket = TCPSocket.open(host, port)\r\nsocket.print(request)               # Send request\r\nresponse = socket.read              # Read complete response\r\n# Split response at first blank line into headers and body\r\nheaders,body = response.split("\\r\\n\\r\\n", 2)\r\nprint body                          # And display it\r\n</pre>\r\n\r\nunicorn.stderr.log\r\n<pre>\r\nI, [2011-05-11T02:06:06.616301 #28461]  INFO -- : listening on addr=0.0.0.0:3000 fd=4\r\nI, [2011-05-11T02:06:06.616907 #28461]  INFO -- : Refreshing Gem list\r\nI, [2011-05-11T02:06:16.147155 #28483]  INFO -- : worker=1 ready\r\nI, [2011-05-11T02:06:16.154233 #28482]  INFO -- : worker=0 ready\r\nI, [2011-05-11T02:06:16.155864 #28461]  INFO -- : master process ready\r\nI, [2011-05-11T02:06:16.168326 #28484]  INFO -- : worker=2 ready\r\nE, [2011-05-11T02:06:27.502119 #28482] ERROR -- : Read error: #<Encoding::UndefinedConversionError: "\\xE6" from ASCII-8BIT to UTF-8>\r\nE, [2011-05-11T02:06:27.502245 #28482] ERROR -- : /Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/buffered_logger.rb:104:in `write\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/buffered_logger.rb:104:in `block (2 levels) in flush\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/buffered_logger.rb:103:in `each\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/buffered_logger.rb:103:in `block in flush\'\r\n<internal:prelude>:10:in `synchronize\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/buffered_logger.rb:102:in `flush\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/log_subscriber.rb:84:in `block in flush_all!\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/log_subscriber.rb:84:in `each\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/log_subscriber.rb:84:in `flush_all!\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/railties-3.1.0.beta1/lib/rails/rack/logger.rb:29:in `after_dispatch\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/railties-3.1.0.beta1/lib/rails/rack/logger.rb:15:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-1.3.0.beta/lib/rack/runtime.rb:17:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/activesupport-3.1.0.beta1/lib/active_support/cache/strategy/local_cache.rb:72:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-1.3.0.beta/lib/rack/lock.rb:34:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-cache-1.0.1/lib/rack/cache/context.rb:132:in `forward\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-cache-1.0.1/lib/rack/cache/context.rb:243:in `fetch\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-cache-1.0.1/lib/rack/cache/context.rb:181:in `lookup\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-cache-1.0.1/lib/rack/cache/context.rb:65:in `call!\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/rack-cache-1.0.1/lib/rack/cache/context.rb:50:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/railties-3.1.0.beta1/lib/rails/engine.rb:438:in `call\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/railties-3.1.0.beta1/lib/rails/railtie/configurable.rb:28:in `method_missing\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:545:in `process_client\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:623:in `block in worker_loop\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:621:in `each\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:621:in `worker_loop\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:509:in `block (2 levels) in spawn_missing_workers\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:507:in `fork\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:507:in `block in spawn_missing_workers\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:503:in `each\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:503:in `spawn_missing_workers\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:516:in `maintain_worker_count\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn/http_server.rb:166:in `start\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/lib/unicorn.rb:30:in `run\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/gems/unicorn-3.6.2/bin/unicorn_rails:208:in `<top (required)>\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/bin/unicorn_rails:19:in `load\'\r\n/Users/Psli/.rvm/gems/ruby-1.9.2-p180/bin/unicorn_rails:19:in `<main>\'\r\n</pre>'
488,'dhh','Fix .js and .css templates generated with the application\nSee:\r\n\r\nhttps://github.com/rails/rails/blob/master/railties/lib/rails/generators/rails/app/templates/app/assets/javascripts/application.js.tt\r\nhttps://github.com/rails/rails/blob/master/railties/lib/rails/generators/rails/app/templates/app/assets/stylesheets/application.css'
481,'jonleighton',"Mass assignment warning when building associated model\nAfter Jose's patches everything seems to work fine, except of this little warning:\r\n\r\n    >> Goal.first.invitations.build(nil)\r\n    WARNING: Can't mass-assign protected attributes: goal_id\r\n    => #<Goal::Invitation id: nil, goal_id: 1>\r\n"
480,'josevalim','Mass assignment weirdness pt 2\n3.1.0.beta1:\r\n\r\n    >> Goal.first.invitations.build(nil)\r\n    => nil\r\n    >> Goal.first.invitations.new(nil)\r\n    => #<Goal::Invitation id: nil, goal_id: 1>\r\n\r\n3.0.7:\r\n\r\n    >> Goal.first.invitations.build(nil)\r\n    => #<Goal::Invitation id: nil, goal_id: 1>\r\n    >> Goal.first.invitations.new(nil)\r\n    => #<Goal::Invitation id: nil, goal_id: 1>\r\n\r\nMoreover "build" does not set goal_id attribute properly even if hash given (#479).'
479,'josevalim',"Mass assignment protection prevents associating new records\nRails 3.1.0.beta1:\n\n    >> Goal.first.invitations.build\n    WARNING: Can't mass-assign protected attributes: goal_id\n    => #<Goal::Invitation id: nil, goal_id: nil>\n\nRails 3.0.7.\n\n    >> Goal.first.invitations.build\n    => #<Goal::Invitation id: nil, goal_id: 1>"
478,'josevalim',"Mass assignment weirdness\nI'm not sure if it's intentional or not, but it's definitely quite confusing:\r\n\r\n    >> Goal.new(nil)\r\n    => #<Goal id: nil>\r\n    >> Goal.first.update_attributes(nil)\r\n    NoMethodError: undefined method `stringify_keys' for nil:NilClass\r\n    >> Goal.first.invitations.build(nil)\r\n    => nil\r\n    >> Goal.first.invitations.new(nil)\r\n    => #<Goal::Invitation id: nil, goal_id: 1>\r\n\r\nRuby 1.9.2p180, Rails 3.1.0.beta1."
477,'josevalim','Wrap Parameters Fails With Namespacing\nRunning into an issue where I have some controller namespacing that goes deeper than 1 level.  My best attempt at reproducing is modifying the params_wrapper_test.rb to the following: https://gist.github.com/963911\r\n\r\nThe error I get is: ArgumentError: NamespacedParamsWrapperTest::Admin is not missing constant User!'
476,'josevalim',"CookieStore session id being shared across different users\nOn rails 3.1.beta1 and rack 0.3.0.beta, using the cookie session store in production.   Here is what is happening:\r\n\r\nUser 1 logs into site, cookie is set and session id is set.\r\nUser 2 logs into site, same as above.\r\nUser 2 makes another request to site and the session_id is set to User 1's session_id, thus User 2 becomes logged in as User 1.\r\n\r\nWhen User 1 makes subsequent requests, they still get to be logged in as User 1.  But User 2's subsequent requests has User 1's session_id in the session.\r\n\r\nI've only seen this happen with the cookie store, and only in production (could not replicate locally, even with cache_class = true).   \r\n\r\nDoesn't seem to be a client issue (happens in Chrome, Safari, and Firefox).\r\n\r\nactive_record_store does not suffer this problem.\r\n\r\nUsing this devise:\r\n\r\ngem 'devise', :git => 'git://github.com/plataformatec/devise.git', ref: '50a5ad54ce0ccff'\r\n\r\nI haven't been able to pinpoint where the problem is happening, but I'm guessing its probably in the Rack::Session::Cookie implementation, although I can't be sure and I figured this would still be the best place to log the issue. \r\n\r\nIts a little tough to debug since it's only happening on production but I'm going to keep trying."
475,'josevalim',"content_for not working as expected?\nIt seems to me that content_for is not working as it should (in 3.1beta, at least), in a few different ways:\r\n\r\nMy understanding is that once a block has been stored, it can be recalled in a view using either yield() or content_for(). As far as I can tell, only yield is working. This also seems to be the case in helpers, where yield is unavailable. \r\n\r\nAlso, it seems it seems like creating a store directly in a view isn't working. \r\n    content_for(:foo){'bar'}\r\ndoes not produce the expected result when using yield(:foo), but moving it into a helper does.\r\n\r\nI can provide some examples of the behavior I'm seeing, but basically everything other than setting content_for in a helper and calling it in a view with yield is NOT working. Either I'm remember very incorrectly how this has worked in the past, or the documentation is way off (or both)."
474,'josevalim','Disable identity_map by default. Document it is safe for read.\n'
472,'jonleighton','"loaded_#{association}?" method removed from belongs_to association\nThere used to be a method on models with belongs_to associations that would tell you whether the association is loaded. This still works on has_many associations with collection.loaded? but no longer works for belongs_to'
470,'guilleiguaran','Stale data in Identity Map causes data to be destroyed.\nAll information needed to reproduce this can be found in http://intertwingly.net/stories/2011/05/09/\r\n\r\n        depot.tgz - complete Rails 3.1 application after the point of failure\r\n        development.log - Rails server log after the point of failure\r\n        relation-30.html - complete scenario run successfully on Rails 3.0\r\n        relation-31.html - same scenario with failure on Rails 3.1\r\n        relation.rb - script used to produce the results\r\n\r\nNote that a LineItem is created initially with an cart_id.  Later that cart_id is set to nil and that record is saved to disk.  After that point, a Cart.Destroy deletes that LineItem.\r\n\r\nKey parts of the development log:\r\n\r\n          ESC[1mESC[35mCart LoadedESC[0m  ESC[1mFrom Identity Map (id: 1)ESC[0m\r\n          ESC[1mESC[35mSQL (0.3ms)ESC[0m  DELETE FROM "line_items" WHERE "line_items"."id" = ?  [["id", 1]]     '
453,'josh',"Rails fails to start (rails master + sprockets master)\n<pre>\n=> Booting WEBrick\n=> Rails 3.1.0.beta1 application starting in development on http://0.0.0.0:3001\n=> Call with -d to detach\n=> Ctrl-C to shutdown server\nExiting\n/home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/actionpack/lib/sprockets/railtie.rb:37:in `block (2 levels) in <class:Railtie>': undefined method `context' for Sprockets::Environment:0x00000002535fa0 (NoMethodError)\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:36:in `instance_eval'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:36:in `execute_hook'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:26:in `on_load'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/actionpack/lib/sprockets/railtie.rb:36:in `block in <class:Railtie>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:34:in `call'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:42:in `each'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/application/finisher.rb:56:in `block in <module:Finisher>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/initializable.rb:25:in `instance_exec'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/initializable.rb:25:in `run'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/initializable.rb:50:in `block in run_initializers'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/initializable.rb:49:in `each'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/initializable.rb:49:in `run_initializers'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/application.rb:94:in `initialize!'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/railtie/configurable.rb:28:in `method_missing'\n\tfrom /home/user/work/testapp/config/environment.rb:5:in `<top (required)>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:237:in `require'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:237:in `block in require'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:223:in `block in load_dependency'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:639:in `new_constants_in'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:223:in `load_dependency'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/activesupport/lib/active_support/dependencies.rb:237:in `require'\n\tfrom /home/user/work/testapp/config.ru:4:in `block in <main>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/builder.rb:51:in `instance_eval'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/builder.rb:51:in `initialize'\n\tfrom /home/user/work/testapp/config.ru:1:in `new'\n\tfrom /home/user/work/testapp/config.ru:1:in `<main>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/builder.rb:40:in `eval'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/builder.rb:40:in `parse_file'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/server.rb:200:in `app'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/commands/server.rb:46:in `app'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/server.rb:301:in `wrapped_app'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rack-09433a26a9e6/lib/rack/server.rb:252:in `start'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/commands/server.rb:70:in `start'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/commands.rb:54:in `block in <top (required)>'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/commands.rb:49:in `tap'\n\tfrom /home/user/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-67c3469e6ff1/railties/lib/rails/commands.rb:49:in `<top (required)>'\n\tfrom script/rails:6:in `require'\n\tfrom script/rails:6:in `<main>'\n</pre>"
446,'josevalim','New test: setting response_body to a Proc should be supported.\nIt looks like commit a66c91723565d37969de4cb46baa50fb8865b02a "Do not inherit from Rack::Response, remove a shit-ton of unused code." removed the possibility for the user to set response_body to a Proc.  Here is a test that demonstrates this behavior working in 3.0.7 and breaking in edge.\r\n@ecoffey'
443,'tenderlove',"Fix deprecation warnings in ActiveSupport (Related to Lighthouse #4618)\n/Users/msgehard/Documents/Development/rubyDevelopment/rails_source/rails/activesupport/lib/active_support/core_ext/big_decimal/conversions.rb:21:in `to_yaml': YAML.quick_emit is deprecated\n\n/Users/msgehard/Documents/Development/rubyDevelopment/rails_source/rails/activesupport/lib/active_support/ordered_hash.rb:37:in `to_yaml': YAML.quick_emit is deprecated\n\nDoes anyone know what the replacement for quick_emit is?"
436,'josevalim',"Sprockets doesn't work alongside with catch-all routes\nThis is a copy of: https://rails.lighthouseapp.com/projects/8994/tickets/6768-assets-route-should-not-be-prefixed\r\n\r\nLong story short, the moment I introduce a catch-all route like this:\r\n\r\n    match '/*', :to => 'test#test'\r\n\r\nSprockets won't serve anything as /assets is taken over by my route. Before `rake routes` would actually show that sprockets relates routes come after my application routes. Now it won't show anything but I'm sure those routes are attached **after**. I think Sprockets routes have to be attached **before** any application/engines routes. \r\n\r\nI'd fix it myself, but I have no idea where to look. Thanks."
433,'tenderlove','Support setting of time_zone for mysql2 adapter.\nThe `time_zone` settings of the database is usually `"SYSTEM"`. This affects e.g. `UNIX_TIMESTAMP(field)` function, where `"field"` is of type `datetime`. Some examples (system settings for time zone here is `\'Europe/Berlin\'`):\r\n\r\n    mysql> SELECT @@global.time_zone, @@session.time_zone;\r\n    +--------------------+---------------------+\r\n    | @@global.time_zone | @@session.time_zone |\r\n    +--------------------+---------------------+\r\n    | SYSTEM             | SYSTEM              | \r\n    +--------------------+---------------------+\r\n    1 row in set (0.00 sec)\r\n    \r\n    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');\r\n    +---------------------------------------+\r\n    | unix_timestamp(\'2011-03-26 12:25:49\') |\r\n    +---------------------------------------+\r\n    |                            1301138749 | \r\n    +---------------------------------------+\r\n    1 row in set (0.00 sec)\r\n    \r\n    mysql> SET @@time_zone = \'utc\';\r\n    Query OK, 0 rows affected (0.00 sec)\r\n    \r\n    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');\r\n    +---------------------------------------+\r\n    | unix_timestamp(\'2011-03-26 12:25:49\') |\r\n    +---------------------------------------+\r\n    |                            1301142349 | \r\n    +---------------------------------------+\r\n    1 row in set (0.00 sec)\r\n    \r\n    mysql> SET @@time_zone = \'Canada/Yukon\';\r\n    Query OK, 0 rows affected (0.36 sec)\r\n    \r\n    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');\r\n    +---------------------------------------+\r\n    | unix_timestamp(\'2011-03-26 12:25:49\') |\r\n    +---------------------------------------+\r\n    |                            1301167549 | \r\n    +---------------------------------------+\r\n    1 row in set (0.00 sec)\r\n    \r\n\r\n\r\nI propose to enable to set time_zone in rails `database.yml` file.'
430,'josevalim','Logs should show overridden method; Issue 426\n'
429,'josevalim','Files from file_field coming through as Array, not File objects\nHello again,\n\nI have a project at https://github.com/rails3book/edge-ticketee/tree/chapter_8 which has the `features/creating_tickets.feature` feature failing because files are not being passed correctly. You can duplicate this by running:\n\n    bundle install\n    bundle exec cucumber features/creating_tickets.feature:38\n\nIt will give this error:\n\n    Then I should see "speed.txt" within "#ticket .asset"\n        Unable to find \'#ticket .asset\' (Capybara::ElementNotFound)\n        ./features/step_definitions/web_steps.rb:29:in `with_scope\'\n        ./features/step_definitions/web_steps.rb:36:in `/^(. within ([^:]+)$/\'\n        features/creating_tickets.feature:45:in `Then I should see "speed.txt" within "#ticket .asset"\'\n\nIf you inspect the parameters in the controller for ticket, namely the asset parameter, you\'ll see this:\n\n    "asset"=>["The blink tag can blink faster if you use the speed=\\"hyper\\" attribute."]\n\nIn previous versions of Rails, this always came through as a `Tempfile` object, and I think Paperclip is still expecting it to be that because it\'s not saving that file anywhere.'
426,'dhh','methodoverride does not appear anywhere in logs\nRight now, when you issue a PUT request using the <tt>_method</tt> param method override, it\'s not indicated anywhere in the logs. The <tt>_method</tt> parameter is stripped from the Parameters line, and the log says it was a POST request:\r\n\r\n```\r\nStarted POST "/post/1" for 127.0.0.1 at 2011-05-06 16:15:58 -0700\r\n  Processing by PostsController#update as HTML\r\n  Parameters: {"utf8"=>"✓", "authenticity_token"=>"pirld4RhMa0a3LRTVKGPg+KRa8Cr3To/aeyxsr4pXRI=", "name"=>"a", "commit"=>"Save changes", "id"=>"1"}\r\n```'
420,'josevalim','Accept single prefix in ActionView::MissingTemplate#initialize\nMade ActionView::MissingTemplate#initialize optionally accept a single string\r\nprefix to be converted to an array [as in ActionView::PathSet#find_all.](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/path_set.rb#L18)\r\n\r\nThis is minor, but it solved an issue I was having with a completely unrelated gem, and feels like a gain in consistency to me, given how these two methods are called on [line 14](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/path_set.rb#L14).\r\n'
417,'tenderlove','mysql2 bind variables need to be reworked\nbind variables with mysql2 may not work properly as [string literals could contain question marks](https://github.com/rails/rails/commit/00f030c6e107f92fc9ef13a8c77e31b5e5299e6e#commitcomment-371840).\r\n\r\nFigure out a different strategy for faking bind parameter support in mysql2.'
412,'josh',"ExecJS missing runtime message needs to be improved\nGot error when trying to start WebBrick\n\n<pre>\n\n/home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/execjs-0.3.2/lib/execjs.rb:32:in `runtime': Could not find a JavaScript runtime (ExecJS::RuntimeError)\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/execjs-0.3.2/lib/execjs.rb:44\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/coffee-script-2.2.0/lib/coffee_script.rb:1:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/coffee-script-2.2.0/lib/coffee_script.rb:1\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/coffee-script-2.2.0/lib/coffee-script.rb:1:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/coffee-script-2.2.0/lib/coffee-script.rb:1\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/actionpack-3.1.0.beta1/lib/sprockets/railtie.rb:4:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/actionpack-3.1.0.beta1/lib/sprockets/railtie.rb:4:in `using_coffee?'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/actionpack-3.1.0.beta1/lib/sprockets/railtie.rb:17\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/actionpack-3.1.0.beta1/lib/action_controller/railtie.rb:7:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/actionpack-3.1.0.beta1/lib/action_controller/railtie.rb:7\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/activerecord-3.1.0.beta1/lib/active_record/railtie.rb:9:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/activerecord-3.1.0.beta1/lib/active_record/railtie.rb:9\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/all.rb:11:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/all.rb:11\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/all.rb:5:in `each'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/all.rb:5\n\tfrom /home/mojo/Sites/hello/config/application.rb:3:in `require'\n\tfrom /home/mojo/Sites/hello/config/application.rb:3\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/commands.rb:51:in `require'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/commands.rb:51\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/commands.rb:48:in `tap'\n\tfrom /home/mojo/.rvm/gems/ree-1.8.7-2011.03@rails31/gems/railties-3.1.0.beta1/lib/rails/commands.rb:48\n\tfrom script/rails:6:in `require'\n\tfrom script/rails:6\n\n\n</pre>"
411,'tenderlove',"Cannot save record whose field contains '?'\nHow to reproduce:\r\n\r\n    u = User.first # any model with a string field is ok, use User as example\r\n    u.name = 'a?b'\r\n    u.save\r\n\r\nThe Error:\r\n\r\n    NoMethodError: You have a nil object when you didn't expect it!\r\n    You might have expected an instance of Array.\r\n    The error occurred while evaluating nil.reverse\r\n\tfrom /home/jan/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-785ee65ddfc3/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:302:in `block in exec_delete'\r\n\t    from /home/jan/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-785ee65ddfc3/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:302:in `gsub'\r\n    \tfrom /home/jan/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-785ee65ddfc3/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb:302:in `exec_delete'\r\n\t    from /home/jan/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-785ee65ddfc3/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:95:in `update'\r\n\r\nRelated to https://github.com/rails/rails/commit/00f030c6#L0R297"
406,'jonleighton','default_scope adds order clause to aggregation queries\nFor example:\r\n\r\n   class User\r\n      def self.default_scope; order(\'created_at DESC\'); end\r\n   end\r\n\r\n   User.count  # SELECT COUNT(*) FROM "users"  ORDER BY created_at DESC\r\n\r\nI\'ve only tested this using the postgresql adapter and rails 3.1.0.beta1\r\n'
402,'tenderlove','Destroying a record with habtm association using foreign keys on association table raises a exception\nHi,\r\n\r\nI have this case:\r\n\r\n````\r\nclass Profile < ActiveRecord::Base\r\n  has_and_belongs_to_many :roles\r\nend\r\n\r\nclass Role < ActiveRecord::Base\r\n  has_and_belongs_to_many :profiles\r\nend\r\n````\r\n\r\nAnd the association table:\r\n\r\n````\r\nclass CreateProfilesRoles < ActiveRecord::Migration\r\n  def self.up\r\n    create_table :profiles_roles, :id => false do |t|\r\n      t.integer :profile_id\r\n      t.integer :role_id\r\n    end\r\n\r\n    add_foreign_key :profiles_roles, :profiles\r\n    add_foreign_key :profiles_roles, :roles\r\n  end\r\n\r\n  def self.down\r\n    drop_table :profiles_roles\r\n  end\r\nend\r\n````\r\n\r\nWhen I try to destroy the profile, I receive an error from postgresql due to foreign keys on join table.\r\n\r\nThe join table is cleared after destroying the record and this should be done before (see: https://github.com/rails/rails/blob/3-0-stable/activerecord/lib/active_record/associations.rb#L1716)\r\n\r\nIf I change this after_destroy to before_destroy the issue is solved but breaks 4 tests on activerecord suite (using sqlite3 adapter).\r\n\r\nI checked this issue on 3.0.0, 3.0.7, and 3.1.0.beta1'
337,'josevalim','Parameter Filter not working\nI have a very simple testing app, containing login code only.\n\nOn the login action I added a debugger to check if Rails is filtering the parameters as it should.\nI did:\n\n```ruby\n(rdb:1) eval env["action_dispatch.parameter_filter"]\n[:password, :password, :password_confirmation, /RAW_POST_DATA/]\n```\n\nSo it should filter the password. Checking it like this works fine\n\n```ruby\neval ActionDispatch::Request.new(env).filtered_parameters\n{"commit"=>"Sign in", "action"=>"create", "utf8"=>"✓", "authenticity_token"=>"8VJfRG+0RHI2u1Lp0BvbP3ee9023TQFfdkVYmiaI6D4=", "controller"=>"devise/sessions", "user"=>{"remember_me"=>"0", "password"=>"[FILTERED]", "email"=>"user@test.com"}}\n```\n\nThe problem is when I do:\n\n```ruby\neval ActionDispatch::Request.new(env).filtered_env\n```\n\nIt shows the entire env that should be filtered, and in several places it is, but I see parts like this:\n\n```ruby\n[...]\n"action_dispatch.request.request_parameters"=>{"commit"=>"Sign in", "authenticity_token"=>"8VJfRG+0RHI2u1Lp0BvbP3ee9023TQFfdkVYmiaI6D4=", "utf8"=>"✓", "user"=>{"remember_me"=>"0", "password"=>"user123", "email"=>"user@test.com"}},\n"rack.request.form_vars"=>"utf8=%E2%9C%93&authenticity_token=8VJfRG%2B0RHI2u1Lp0BvbP3ee9023TQFfdkVYmiaI6D4%3D&user%5Bemail%5D=user%40test.com&user%5Bpassword%5D=user123&user%5Bremember_me%5D=0&commit=Sign+in"\n[...]\n```\nAs you can see, the password is right there in plain text.\nIs this ok? If so, how can I completely filter the password??\n\nYou can see more of this issue here: https://rails.lighthouseapp.com/projects/8994/tickets/6720'
269,'josevalim','Callback collision\nAdd unit test to demonstrate issue with similar callback methods overriding each other in distinct contexts'
230,'sikachu',"[Feature] ActiveResource - Associations through reflections\nMatthias Folz and I've added associations (has_many and has_one) via reflection classes to ActiveResources.\r\n\r\nHere is the link to the googlegroups discussion:\r\nhttp://groups.google.com/group/rubyonrails-core/browse_thread/thread/dd8d83955a7cf9e8/1f95a896887cd9a9#1f95a896887cd9a9 \r\n\r\nAnd the lighthouse ticket:\r\nhttps://rails.lighthouseapp.com/projects/8994/tickets/6473-activeresource-adding-associations-through-reflections#ticket-6473-1\r\n\r\nI hope, it's not impolite to open a pull request without an answer on the lighthouse ticket form a core member.\r\nIf it's so: I'm sorry... ;)\r\n\r\nGreetz\r\nMarkus Schwed"
200,'josevalim','Serialized methods that return nil should not be considered YAML\nThe way ActiveModel computes the type of serializable methods and attributes, any that return nil will be described as being YAML. \r\n\r\nThis produces XML like:\r\n\r\n    <person>\r\n      <name>John Doe</name>\r\n      <preferences type="yaml" nil="true"></preferences>\r\n    </person>\r\n\r\nHowever, in many cases, the \'type="yaml"\' part is unnecessary, and potentially misleading.\r\n\r\nWith this patch, the equivalent to the above XML would be:\r\n\r\n    <person>\r\n      <name>John Doe</name>\r\n      <preferences nil="true"></preferences>\r\n    </person>\r\n'
197,'tenderlove','Fixes #6073, #6383 - Postgres added tsvector type, and fixed money_precision= NoMethodError\nThis fixes a couple of issues that I have encountered while using postgres tesearch functionality:\n\n  #6073 - Patch by Robert Sosinski (www.robertsosinski.com) adding the tsvector data type\n\n  #6382 - Patch to fix money_precision= setting the variable in the wrong class\n\n '
17670,'chancancode','ActionMailer::Preview produces an iframe whose height is hard-coded at 800px.\nPreviewing emails using the newest rails caps the height of the mail preview iframe at 800px. \r\n\r\n<img src= "http://imgur.com/A3Tc7i5.png">\r\n\r\n<img src = "http://imgur.com/7qml9OA.png">\r\n\r\nThis is a small issue, but I\'m hitting a lot of dead-ends trying to find a fix and I think it\'s likely a simple config option that slipped past the docs.\r\n\r\n'
17622,'arthurnn',"before_save ignores on: option silently\n__Problem__\r\n\r\nIt looks like the following line will not do what users expect:\r\n\r\n    before_save :do_something, on: :create\r\n\r\nThe `on: :create` option will just get silently ignored and `do_something` will get called after _every_ save on the record, not just the initial create. Same goes for `after_save`.\r\n\r\nThis might cause some hard to trace bugs in your rails app. I just stumbled upon this today by accident, I asked around and a lot of my coworkers weren't aware either that this is how it works.\r\n\r\nInstead users have to do:\r\n\r\n    before_create :do_something\r\n\r\nsee also http://stackoverflow.com/questions/10640221/is-on-create-valid-for-a-before-save-callback-in-rails-3-2-3\r\n\r\n__Suggestion__\r\n\r\nEither have `before_save` with `on: :create` option behave like `before_create` or raise an error that the `:on` option is not allowed here."
17567,'arthurnn','Fix stale nested transaction records\nIf the parent transaction fails, records without callbacks need to be reloaded properly from their previous state.'
17475,'jeremy',"Add Active Job's assertions to ActiveSupport::TestCase\nHello,\r\n\r\nSince we should test job queuing/execution inside other components of the application like models and controllers, we should make the custom assertions provided by `ActiveJob::TestHelper` available directly from `ActiveSupport::TestCase`.\r\n\r\nThus, we don't need the `ActiveJob::TestCase` class anymore so we can remove it and avoid relying on it when we generate a job's test.\r\n\r\nThis has originally been requested [here](https://github.com/rails/rails/pull/16724#discussion_r16918263) but it turns out that this hasn't been addressed.\r\n\r\nHave a nice day."
17453,'chancancode','Pass route_name from use_route on path_for [4.2.0 regression]\nengines need it to be able to get a proper request uri on tests, the\r\nvalue was lost in https://github.com/rails/rails/commit/212057b912627b9c4056f911a43c83b18ae3ab34\r\n\r\nwill look into adding a regression test\r\n\r\n// @tenderlove '
17449,'arthurnn',"Transaction rollback should clear query cache\nToday I debugged code that rendered a page in an exception handler as if the rollback hadn't taken effect. Clearing the query cache fixed it. It was quite puzzling for a while. The database was SQLite.\r\n\r\nI think the query cache should be automatically cleared on rollback, especially as rollbacks are quite a rare occurrence in most apps.\r\n\r\nRelated: DatabaseCleaner/database_cleaner#178"
17282,'arthurnn','Children after_save exception does not rollback parent transaction\nHello,\r\nperhaps this is the expected behaviour, but consider this simple parent child relationship:\r\n```ruby\r\nclass Parent < ActiveRecord::Base\r\n  before_save :parent_callback\r\n  has_many :children\r\n\r\n  def parent_callback\r\n    logger.debug "Parent: before save!"\r\n  end\r\nend\r\n\r\n\r\nclass Child < ActiveRecord::Base\r\n  after_save :child_callback\r\n  belongs_to :parent\r\n\r\n  def child_callback\r\n    logger.debug "Child callback"\r\n    raise ActiveRecord::Rollback\r\n  end\r\nend\r\n```\r\n\r\nAnd this code (both Parent and Child have an attribute called name):\r\n```ruby\r\np = Parent.new name: \'John\'\r\n[\'Julian\', \'Sean\'].each  {|n| p.children.build(name: n)}\r\np.save\r\n```\r\n\r\nConsole output is:\r\n```\r\n   (0.2ms)  BEGIN\r\nParent: before save!\r\n  SQL (0.4ms)  INSERT INTO `parents` (`name`) VALUES (\'John\')\r\n  SQL (0.3ms)  INSERT INTO `children` (`name`, `parent_id`) VALUES (\'Julian\', 9)\r\nChild callback\r\n  SQL (0.3ms)  INSERT INTO `children` (`name`, `parent_id`) VALUES (\'Sean\', 9)\r\nChild callback\r\n   (35.4ms)  COMMIT\r\n=> true\r\n\r\n```\r\n\r\nAccording to http://guides.rubyonrails.org/active_record_callbacks.html#halting-execution, after_save should halt the callback chain and issue a rollback only with an exception (which is what my code does).\r\nAm I missing something? I am using Rails 4.1.6\r\n\r\n'
17186,'matthewd',"Allow authentication header to not have to specify 'token=' key.\nFixes: https://github.com/rails/rails/issues/17108."
17171,'senny','The `test:prepare` Task Might Be Useless Now?\nRelated to issue #17170, the `test:prepare` task is somewhat useless now? It is called before test helpers `ActiveRecord::Migration.maintain_test_schema!` so if anyone had to run prepare hooks "after" the schema is loaded, where do they do this?'
17108,'matthewd','Authentication Token is nil with header \'Authentication: Token token_secret\'\nAfter upgrading from v4.1.4 to v4.1.6, I noticed that all calls to my API was getting \'401 Unauthorized\'.\r\nI have been using Token based authentication for a while with the following authorization header:\r\n\r\n`\'Authorization: Token token_secret\'`\r\n\r\nLooking for recent changes, I\'ve found pull request #15683.\r\nNow I am wondering if this is a bug. Otherwise I have to change my client to use \r\n\r\n`\'Authentication: Token token="token_secret"\'` \r\n\r\nfor authenticating before updating to rails 4.1.6.\r\n\r\nRegards,\r\nFernando'
17094,'senny','support for db-specific options to add_foreign_key\n`:sql_options` can be used to pass along arbitrary clauses to the generated\r\n`ADD FOREIGN KEY` statement, e.g. `"DEFERRABLE INITIALLY DEFERRED"`\r\n\r\nalso include logic to infer `:sql_options` for postgres when dumping so that\r\nschema.rb is accurate. no such logic is needed for mysql, as it doesn\'t\r\nsupport any options beyond what\'s already on master.'
16971,'sgrif','"undefined method `accessor\'" after attempting to reverse an PG db with hstore\nPretty simple repro on Rails 4.1.5 and PostgreSQL:\r\n\r\n1. Add hstore to an app being sure to enable the hstore extension* and change the schema format to sql in application.rb\r\n2. Create a model and table that use hstore with store_accessor (i.e. `store_accessor :specs, :color, :material, :shape` \r\n3. Migrate your db\r\n\r\n(At this point everything works.)\r\n\r\n4. Rollback your db migrations (i.e. `rake db:migrate VERSION=0`)\r\n5. Migrate forward again\r\n\r\nAt this point anything that uses one of the `specs` causes and "undefined method `accessor\'" exception in activerecord lib/active_record/connection_adapters/postgresql_adapter.rb.\r\n\r\nIf between steps 3 and 4 you drop and recreate the database, everything works again.\r\n\r\nIt\'s possible I had this problem in Rails 4.1.2 but I just didn\'t encounter it.\r\n\r\n* I have a migration that runs first, it enables the hstore extension on up and disables it on down.'
16959,'tenderlove',"Query with 'exists' subquery fails to bind parameters on 4.2.0.beta1, raises error on master\nTrying execute a query with an 'exists' subquery breaks on 4.2.0.beta1 and master in different ways, both having to do with binding parameters:\r\n\r\nStandalone repro gists here:\r\n- master: undefined method 'first' for nil:NilClass: https://gist.github.com/seanwalbran/d1a99a8b83ed528a6737\r\n- 4.2.0.beta1: unbound parameter: https://gist.github.com/seanwalbran/fa4497016cbf498b4734\r\n- 4.1.6: works: https://gist.github.com/seanwalbran/6ff642b03d4e1bf291d8"
16958,'rafaelfranca','Rails 4.2 URL helper change of behaviour (possible bug?)\nI found a problem while trying out the master branch in an existing app. It seems URL helpers have a different behaviour compared to previous Rails versions regarding the "action" and "controller" arguments (when using strings instead of symbols).\r\n\r\nI wrote a gist to reproduce the issue: https://gist.github.com/victorarias/54d2e5e655dc71bb4e9b\r\n\r\nIs this a bug or a change of behaviour?'
16891,'seuros','Remove mysql adapter from activerecord\nWIP'
16831,'arthurnn',"Add test_with_transaction to easily test transaction callbacks etc\nTIL that you can actually easily transaction callbacks like after_commit, but it's a bit cumbersome. This is what you have to do today:\r\n\r\n```ruby\r\n  uses_transaction :test_completing_todo_will_cause_a_chat_relay\r\n  test 'completing todo will cause a chat relay' do\r\n    recordings(:design_todo).complete\r\n    assert last_relayed_recordable(:anniversary).completed?\r\n  end\r\n```\r\n\r\nI'd like to expose this as a more user-friendly and documented feature:\r\n\r\n```ruby\r\n  test_with_transaction 'completing todo will cause a chat relay' do\r\n    recordings(:design_todo).complete\r\n    assert last_relayed_recordable(:anniversary).completed?\r\n  end\r\n```"
16749,'robin850','Rely on NameError#name instead of its error message\nHello,\r\n\r\nThis pull request simply avoids assertions against error messages as they may change in the future and are different across implementations.\r\n\r\nHave a nice day.'
16698,'zzak','primary_key documentation for belongs_to\nfixes issue #16694'
16589,'fxn','Default url_to to a full URL in mailer when possible\n[close #16497]\r\n\r\nCurrently `link_to ..., @user` will generate a non working link inside of a mailer. This is because it delegates to url_for https://github.com/rails/rails/blob/master/actionview/lib/action_view/routing_url_for.rb#L95 which produces a path by default instead of a url. This PR defaults all output of `url_for` to be a full url (instead of a path) when possible.\r\n\r\nIt is important to note that there is a `url_for` inside of the mailer view (as referenced above) and there is also a `url_for` that can be called inside of a mailer method:\r\n\r\n```\r\nclass UrlTestMailer < ActionMailer::Base\r\n\r\n  def exercise_url_for(options)\r\n    @from_method = url_for(options)\r\n    mail(to: "foo@foo.com", subject: "Welcome",\r\n      from: "system@loudthinking.com", date: Time.local(2004, 12, 12))\r\n  end\r\nend\r\n```\r\n\r\nThis second `url_for`, called from a mailer method directly delegates to a __different__ `url_for` located in https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/url_for.rb. This second `url_for` produces a URL by default.\r\n\r\nThis PR merges both behaviors by having the view `url_for` invoke the `url_for` defined on the mailer (the "controller" in this case). This should prevent #16497 and provide seamless mailer experience'
16576,'chancancode','[HELP WANTED] Document Rails 4.2\nNow that 4.2.0.beta1 is out the door, it\'s a great time to work on the documentation!\r\n\r\nThis is a meta-issue for all the things we need to improve on the documentation side. Unless otherwise noted, please feel free to grab one of these items and work on it. (You don\'t have to tackle it all at once, of course. Incremental improvements are more than welcomed!) However, **please don\'t commit these changes to docrails directly**!\r\n\r\nOther than that, the usual guidelines applies here:\r\n* http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html\r\n* http://edgeguides.rubyonrails.org/api_documentation_guidelines.html\r\n* http://edgeguides.rubyonrails.org/ruby_on_rails_guides_guidelines.html\r\n\r\n## Release Notes\r\n\r\nThe goal of the release notes is to help our users figure out *what* was changed in the latest release, and help them decide their upgrade plan quickly (how likely is their app going to break, whether the new features are worth the risk, etc). The secondary audience is plugin maintainers who might want to quickly check what they need to do to support the latest version of Rails. Typically, these amounts to putting only new user-facing features/additions, deprecation and removals into this document, and keeping each item as brief as possible. Bug fixes are usually not included here.\r\n\r\nThe release notes can be found here: [source](https://github.com/rails/rails/blob/master/guides/source/4_2_release_notes.md) / [rendered](http://edgeguides.rubyonrails.org/4_2_release_notes.html). You can also render them locally by running `rake guides:generate` inside the `guides` directory.\r\n\r\nNote that this is targeted exclusively for viewing on the guides website ([http://edgeguides.rubyonrails.org/4_2_release_notes.html](http://edgeguides.rubyonrails.org/4_2_release_notes.html) for now, [http://guides.rubyonrails.org/4_2_release_notes.html](http://guides.rubyonrails.org/4_2_release_notes.html) eventually). Therefore, links do not work correctly when you [view it with the github browser](https://github.com/rails/rails/blob/master/guides/source/4_2_release_notes.md). **This is not a bug.** Please do not open issues about that.\r\n\r\nItems in release notes are generally inserted in the same order they appear in the CHANGELOGs, i.e. newer items on top. This is temporary and is intended to make collaborating on this document easier in the meantime. Each bullet point is usually a short verb phrase ("Introduced xxx", "Added yyy") describing *what* was changed with a link to the PR (if available) and/or commit for further details. In cases where there are important implications for existing apps that requires further explanation, it should be documented in the upgrade guide and cross linked from the release note ([example](https://github.com/rails/rails/blame/master/guides/source/4_1_release_notes.md#L357)).\r\n\r\n### Pending tasks\r\n\r\n- [x] Need a second pair of eyes going through the release notes, fix grammar, broken links, PR/commit references, etc.\r\n- [ ] Rewrite some of the "Major Features" sections. They were largely copied from David\'s blog post and are not necessarily in the right format/level of detail/"tone of voice" for documentation purposes. You can check the previous release notes for reference,\r\n- [ ] Go through the CHANGELOGs to make sure all note-worth changes are already included.\r\n- [ ] Remove any items that are not note-worthy,\r\n- [ ] Reword/expand anything that\'s unclear. (But keep in mind that items are supposed to be brief.)\r\n- [ ] Group related items into a single item (e.g. all the changes related to AR\'s dirty tracking for in-place changes should be mentioned in a single item).\r\n- [ ] Cross link to upgrade guides.\r\n- [x] Fix link (anchor) to upgrade guide when [this](https://github.com/rails/rails/pull/16545#issuecomment-52588884) is resolved. (~~#16581~~)\r\n- [ ] Right before we branch, update the links to point to the "4-2-stable" branch. (**I\'ll take care of this personally**)\r\n- [ ] Right before we release RC1, reorder the items by importance to the user instead of chronologically. (**I\'ll take care of this personally**)\r\n- [ ] Right before we release 4.2.0, update the links to point to guides.rubyonrails.org instead of edgeguides. (**I\'ll take care of this personally**)\r\n- [ ] Remove WIP tags. (**I\'ll take care of this personally**)\r\n\r\nIf you have to link to a commit on github, use the master branch for now. If you have to use absolute URLs to point to another page on the guides website (for some reason), use the `edgeguides.rubyonrails.org` hostname for now.\r\n\r\n## Upgrade guide\r\n\r\nThe goal of the upgrade guide is to help users prepare their upgrade to 4.2, and for them to look up solutions when things go wrong. We assume people are running the latest version 4.1 for our purpose, as we encourage people to upgrade their app one version at a time.\r\n\r\nThe upgrade guide can be found here: [source](https://github.com/rails/rails/blob/master/guides/source/upgrading_ruby_on_rails.md) / [rendered](http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-4.1-to-rails-4.2). You can also render them locally by running `rake guides:generate` inside the `guides` directory.\r\n\r\nNote that this is targeted exclusively for viewing on the guides website ([http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-4.1-to-rails-4.2](http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-4.1-to-rails-4.2) for now, [http://guides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-4.1-to-rails-4.2](http://guides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-4.1-to-rails-4.2) eventually). Therefore, links do not work correctly when you [view it with the github browser](https://github.com/rails/rails/blob/master/guides/source/4_2_release_notes.md). **This is not a bug.** Please do not open issues about that.\r\n\r\nItems are ordered by importance (e.g. what % of apps would that affect). Use your best judgement here when inserting new sections.\r\n\r\nIf you have to link to a commit on github, use the master branch for now. If you have to use absolute URLs to point to another page on the guides website (for some reason), use the `edgeguides.rubyonrails.org` hostname for now.\r\n\r\n### Pending tasks\r\n\r\n- [ ] Need a second pair of eyes going through the upgrade guide, fix grammar, broken links, PR/commit references, etc.\r\n- [ ] **Test this** in real applications and make sure the steps work.\r\n- [ ] Add whatever else you noticed when upgrading your app.\r\n- [ ] Fill in the placeholder sections.\r\n- [ ] Expand/reword existing sections.\r\n- [ ] Go through the CHANGELOGs to make sure all note-worth changes are already included.\r\n- [ ] Remove any items that are not note-worthy.\r\n- [ ] Group related items together.\r\n- [ ] Cross link from release notes.\r\n- [ ] Right before we branch, update the links to point to the "4-2-stable" branch. (**I\'ll take care of this personally**)\r\n- [ ] Right before we release 4.2.0, update the links to point to guides.rubyonrails.org instead of edgeguides. (**I\'ll take care of this personally**)\r\n- [ ] Remove WIP tags. (**I\'ll take care of this personally**)\r\n\r\n## Documentation\r\n\r\nThe API documentations can be found [here](http://edgeapi.rubyonrails.org/). They are generated based on the Ruby comments right above the module/class/method. See the usual guidelines for details.\r\n\r\nA lot of the new features have no documentation yet – Active Job is particularly suffering in that department.\r\n\r\nYou probably won\'t be linking to anything from here.\r\n\r\n### Pending tasks\r\n\r\n- [x] Document AJ adapters and add :nodoc:s\r\n- [ ] Need a second pair of eyes going through the docs, fix grammar, broken links, PR/commit references, etc.\r\n- [ ] Go through the CHANGELOGs to confirm that new additions are documented properly.\r\n- [ ] Go through the CHANGELOGs to confirm that changes to existing methods are documented as well.\r\n- [ ] Provide code example where appropriate.\r\n- [ ] Test the examples to make sure they actually work.\r\n- [ ] It might be good to ensure we have similar test cases for the examples we shown.\r\n- [ ] Make sure `:nodoc:`s are added for internal classes and APIs.\r\n\r\nThanks in advance for your contribution! :heart: :blue_heart: :yellow_heart: :green_heart: :purple_heart: \r\n'
16497,'fxn','`url_for(@user)` in a mailer view prints a deprecation warning instead of calling `user_url`\nI made a basic app with `rails new --edge` here: https://github.com/gabebw/url_for_bug\r\n\r\nI have this in `config/environments/development.rb`:\r\n\r\n```ruby\r\nconfig.action_mailer.default_url_options = {\r\n    host: "CUSTOM.com",\r\n    port: "3000"\r\n}\r\n```\r\n\r\nI have this in my mailer view:\r\n\r\n```erb\r\n<%= url_for(User.create) %>\r\n```\r\n\r\nI get this error:\r\n\r\n> DEPRECATION WARNING: The method `user_path` cannot be used here as a full URL is required. Use `user_url` instead. (called from url_for_with_xhr_referer at /Users/gabe/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/turbolinks-2.2.2/lib/turbolinks/xhr_url_for.rb:12\r\n\r\nI expect Rails to call `user_url` for me, instead of calling `user_path` and printing a deprecation warning.'
16473,'chancancode',"[WIP] New API for serialized attributes (and store)\nMotivations:\r\n\r\n* `load` and `dump` is too generic, we have more specific requirements in AR so some of the built-in objects that responds to `load` and `dump` doesn't work correctly here (#15594)\r\n* Break up the overloaded `class_name_or_coder` attribute\r\n\r\nTodo:\r\n\r\n* [x] Implement new API on `serialize`\r\n* [x] Pass existing tests for `serialize`\r\n* [x] Update documentations for `serialize`\r\n* [ ] Implement new API on `store`\r\n* [ ] Pass existing tests for `store`\r\n* [ ] Update documentations for `store`\r\n* [ ] Remove `YAMLColumn`\r\n* [ ] Remove deprecated code from existing tests\r\n* [ ] Test new additions, if any\r\n* [ ] Switch default to JSON (#16470)\r\n\r\ncc @jeremy @tenderlove @matthewd @rafaelfranca @senny @sgrif @zzak"
16464,'jeremy',"Speed up static file service by caching existence checks\nRails serves assets in development by default, in production this is turned off. The default rails guides require you be running behind nginx. In the last year 800,000+ developers don't want to run behind nginx: https://rubygems.org/gems/rails_serve_static_assets. This PR enables serving assets in Production by default and includes an optimization that makes this option dramatically faster for non-asset requests.\r\n\r\nCurrently the `ActionDispatch::Static` middleware hits disk on every `GET` and `HEAD` request to check if the given request maps to a file on disk. This means that all requests that do not involve serving an asset are slowed down. If you are using this middleware and serving assets via Nginx, no asset requests will ever reach the `ActionDispatch::Static` middleware so it makes sense as a performance optimization to turn off this middleware. This PR increases the speed of the middleware to the point where the difference on non-asset requests is trivial, so we can enable the middleware by default for all users with minimal (if any) impact.\r\n\r\nThe optimization works by getting the contents of `/public` (using one call to `Dir.glob`). We then store this information in a hash. Later on each request we check to see if the path of the request is in our hash for instance a request to `/users/new` would not be in the hash because there is no root level `users/` directory, however a request to `assets/application.css` would trigger the middleware because `assets/` is in the `public/` directory. This prevents us form checking the disk except on a request which is more than likely going to contain an asset.\r\n\r\nWhen benchmarked against the current `ActionDispatch::Static` we see roughly a ~68% improvement for non-asset requests:\r\n\r\n![](https://www.dropbox.com/s/dcsrhrfh7gb44dc/Screenshot%202014-08-08%2014.05.21.png?dl=1)\r\n\r\nWhile 68% is an impressive speed increase, this is only testing the middleware in isolation. When benchmarked with the entire Rails stack we still see an increase but it is roughly ~2.6% speed increase:\r\n\r\n![](https://www.dropbox.com/s/bhb0o3tbupw0hus/Screenshot%202014-08-08%2015.06.11.png?dl=1)\r\n\r\nNote: The scale on this one does not start at 0.\r\n\r\nThere is still a speed cost associated with using this improved middleware versus no middleware. In my benchmarks it resulted in a ~0.7% speed decrease though with a very high standard deviation. You can see in the graph that the speed of the improved middleware falls in-between the speed of the app without middleware. This means that the decrease is fairly trivial in the scope of your entire application stack. You can still disable this middleware for a performance optimization if you are deploying behind NGINX, but there is no reason why using a CDN with your Rails server as the origin server shouldn't work out of the box.\r\n\r\nFor more information about the purpose of ActionDispatch::Static and how it is currently used (or not used) to serve assets please see this reference document: https://gist.github.com/schneems/5dc42963fb3221a7a089."
16462,'chancancode',"Add expiration support for message_verifier and message_encryptor\nThe patch will bake the expiration into message_verifier's signed message and message_encryptor's encrypted message to prevent the expiration from being forged. It will check the expiration every time you try to verify a signed message or decrypt an encrypted message. If the message is expired, it will raise an exception ExpiredMessage.\r\n```ruby\r\nencrypted_message = encryptor.encrypt_and_sign( data, 1.hour.from_now)\r\nencryptor.decrypt_and_verify(encrypted_message) #=> data if not expired\r\nencryptor.decrypt_and_verify(encrypted_message) #> raise ExpiredMessage if expired\r\n```\r\ncc @rafaelfranca @chancancode"
16457,'NZKoz',"Harden http_basic_authenticate_with against timing attacks\nAs has been disclosed previously, the current implementation of `http_basic_authenticate_with` uses `String#==` on both the username and password values.  Because `String#==` eventually involves a call to `memcmp` an attacker could potentially flood the site with requests and derive valid credentials.\r\n\r\nTo mitigate this risk this pull request rejigs the implementation to avoid short circuiting and also uses bcrypt (with a low cost) to make the response timings immune to iterative guessing.  We can't just drop in `secure_compare` because it's designed for byte arrays of a known and fixed size.\r\n\r\nI'm submitting this for review because it would be good to hear from any security researchers whether:\r\n\r\n1) we should use bcrypt, or any other hashing function\r\n2) If there's anything else we should consider\r\n\r\n"
16433,'guilleiguaran','Rack::Runtime can only be disabled in an initializer\nThis is an extension of #1043\r\n\r\nNormally you load and unload Rack middlware inside `config/application.rb` or an environment config.\r\nHowever, `Rack::Runtime` can\'t be deleted inside `config/application.rb` because an internal part of `railties` assumes that it\'s there.\r\n\r\nHere\'s the an example stacktrace you get if you try to `config.middleware.delete Rack::Runtime` inside `config/application.rb`:\r\n\r\n```text\r\n/Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/stack.rb:125:in `assert_index\': No such middleware to insert before: "Rack::Runtime" (RuntimeError)\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/stack.rb:88:in `insert\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/configuration.rb:68:in `block in merge_into\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/configuration.rb:67:in `each\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/configuration.rb:67:in `merge_into\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/engine.rb:497:in `app\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/application/finisher.rb:36:in `block in <module:Finisher>\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/initializable.rb:30:in `instance_exec\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/initializable.rb:30:in `run\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/initializable.rb:55:in `block in run_initializers\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:226:in `block in tsort_each\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:348:in `block (2 levels) in each_strongly_connected_component\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:427:in `each_strongly_connected_component_from\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:347:in `block in each_strongly_connected_component\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:345:in `each\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:345:in `call\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:345:in `each_strongly_connected_component\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:224:in `tsort_each\'\r\n\tfrom /usr/local/var/rbenv/versions/2.1.2/lib/ruby/2.1.0/tsort.rb:205:in `tsort_each\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/initializable.rb:54:in `run_initializers\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/application.rb:300:in `initialize!\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/railtie.rb:194:in `public_send\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/railties-4.1.4/lib/rails/railtie.rb:194:in `method_missing\'\r\n\tfrom /Users/Csuhta/Projects/project-name/config/environment.rb:5:in `<top (required)>\'\r\n\tfrom config.ru:3:in `require\'\r\n\tfrom config.ru:3:in `block in <main>\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `instance_eval\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/rack-1.5.2/lib/rack/builder.rb:55:in `initialize\'\r\n\tfrom config.ru:1:in `new\'\r\n\tfrom config.ru:1:in `<main>\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn.rb:48:in `eval\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn.rb:48:in `block in builder\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:764:in `call\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:764:in `build_app!\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:137:in `start\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/bin/unicorn:126:in `<top (required)>\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/bin/unicorn:23:in `load\'\r\n\tfrom /Users/Csuhta/Projects/project-name/vendor/bundle/ruby/2.1.0/bin/unicorn:23:in `<main>\'\r\n```\r\n\r\nThe solution is to write an initializer such as\r\n```ruby\r\n# config/initalizers/disable_rack_runtime.rb\r\nRails.application.config.middleware.delete Rack::Runtime\r\n```\r\n\r\nbut this is counter-inutative and against the instructions in the [Rails Guide](http://guides.rubyonrails.org/rails_on_rack.html).\r\n\r\nI feel that `Rack::Runtime` shouldn\'t be considered essential by any part of Rails or assumed to exist.'
16423,'arthurnn',"NoMethodError: undefined method `reverse' for nil:NilClass\nI have an ActiveRecord class where \r\n`self.groups` is used for permissioning and returns an instance of Group::ActiveRecord_Associations_CollectionProxy.\r\n\r\nIn Rails 3  I could call:\r\n`User.joins(:user_groups).where(:user_groups => {:group_id => self.groups})` \r\nto find users with access to the resource.\r\n\r\nThe tables are as one would expect.\r\n\r\nIn Rails 4, the same call results in the stacktrace included below.\r\n\r\nI can be fixed by calling  \r\n`User.joins(:user_groups).where(:user_groups => {:group_id => self.groups.pluck(:id)})`\r\nwhich has the unfortunate effect of an extra trip to the database.\r\n\r\n\r\n------\r\n<pre>\r\nMinitest::UnexpectedError: NoMethodError: undefined method `reverse' for nil:NilClass\r\n    activerecord (4.1.4) lib/active_record/connection_adapters/abstract/database_statements.rb:14:in `block in to_sql'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/bind_visitor.rb:26:in `call'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/bind_visitor.rb:26:in `visit_Arel_Nodes_BindParam'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:515:in `visit_Arel_Nodes_Equality'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `block in visit_Arel_Nodes_And'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `map'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `visit_Arel_Nodes_And'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:204:in `block in visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `each'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `each_with_index'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/mysql.rb:41:in `visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `block in visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `each'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/mysql.rb:36:in `visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:482:in `visit_Arel_Nodes_In'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `block in visit_Arel_Nodes_And'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `map'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:496:in `visit_Arel_Nodes_And'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:204:in `block in visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `each'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `each_with_index'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:203:in `visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/mysql.rb:41:in `visit_Arel_Nodes_SelectCore'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `block in visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `each'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/to_sql.rb:163:in `visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/mysql.rb:36:in `visit_Arel_Nodes_SelectStatement'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:22:in `visit'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/visitor.rb:5:in `accept'\r\n    arel (5.0.1.20140414130214) lib/arel/visitors/bind_visitor.rb:11:in `accept'\r\n    activerecord (4.1.4) lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `to_sql'\r\n    activerecord (4.1.4) lib/active_record/connection_adapters/abstract/database_statements.rb:24:in `select_all'\r\n    activerecord (4.1.4) lib/active_record/connection_adapters/abstract/query_cache.rb:70:in `select_all'\r\n    activerecord (4.1.4) lib/active_record/querying.rb:39:in `find_by_sql'\r\n    activerecord (4.1.4) lib/active_record/relation.rb:604:in `exec_queries'\r\n    activerecord (4.1.4) lib/active_record/relation.rb:486:in `load'\r\n    activerecord (4.1.4) lib/active_record/relation.rb:231:in `to_a'\r\n    activerecord (4.1.4) lib/active_record/relation/delegation.rb:46:in `to_ary'\r\n\r\n</pre>"
16139,'sgrif','Through associations are not setting both parent IDs correctly\nPresent on 4-0-stable, 4-1-stable, and master. Gist to reproduce: https://gist.github.com/sgrif/fbb71923cb0bc35df57a -- Appears to be an edge case that was not handled by https://github.com/rails/rails/pull/15579. Originally reported as https://github.com/rails/protected_attributes/issues/39, and here https://github.com/rails/rails/commit/c6a8e097046d9cd2b565664748bb180714103429#commitcomment-6975794. \r\n\r\n/cc @peternash'
16032,'sgrif','Eager loading of habtm returns only one record (regression on rails 4.1)\nHowever, loading them without eager load returns all of them.\r\nIt was working on rails 4.0\r\n\r\nHere is a gist testing the issue: https://gist.github.com/scambra/59ee7c8db81c2bf87d09\r\nIf I try with active_record 4.0.6 it works.'
16019,'sgrif',"Habtm and update_all method\nI'm trying to use update_all in an after_create callback but it doesn't work if a before_create callback exists as well.\r\n\r\nThis is a gist with the template I'm using:\r\nhttps://gist.github.com/werner/1b707d875f1638fc44ab\r\n\r\nThanks"
15901,'arthurnn','redirect_to with second argument should not delete the "status" param of the url options\nHi!\r\n\r\nCurrently it is difficult to have a route with a parameter called ```status```.  When redirecting to such a route, the ```_extract_redirect_to_status``` will gobble it up.  Calling\r\n\r\n```ruby\r\nredirect_to(controller: \'foo\', action: \'bar\', status: \'baz\')\r\n```\r\n\r\nwill delete the ```status: baz``` value of the ```options``` and try to use it as an HTTP response status code.  For backwards compatibility, this must be kept.\r\n\r\nThere should be a way to avoid this using the second argument to ```redirect_to```:\r\n\r\n```ruby\r\nredirect_to({controller: \'foo\', action: \'bar\', status: \'baz\'}, status: 302)\r\n```\r\n\r\nThis will currently delete the ```status: baz``` value of the ```options``` and ignore the given ```status: 302``` value in the ```response_status```.  The given response status should have priority over a url option of the same name.\r\n\r\nIf the ```response_status``` hash is given, the ```status``` key of the url ```options``` should be left alone, even if the ```response_status``` hash does not include the ```status:``` key.  That way we can use the second argument as a switch to indicate that the first argument is a pure location argument.\r\n\r\nI guess the same should be true for ```flash``` options like ```notice```and ```alert```.\r\n\r\nTested with Rails 3.2.18.\r\n'
15884,'chancancode','Numeric#in_milliseconds returns an integer instead of a float\n> `Time` stores the number of nanoseconds since the Epoch.\r\n> `Time#in_milliseconds` should return the number of milliseconds since the\r\n> Epoch with a millisecond accuracy.\r\n\r\n**Edit:** I believed that this PR would fix a naïve implementation of `Time.in_milliseconds` while it actually changes the behaviour of `Numeric.in_milliseconds`. `Time#in_milliseconds` could be added via #15890.'
15777,'chancancode','Add Content Security Policy(CSP)\nThis middleware is going to add support for Content Security Policy(CSP) for Rails. CSP helps to detect and mitigate XSS attacks and data injection attacks by setting the content-security-policy HTTP header.\r\n\r\nThe value of content-security-policy header is made up of one or more directives and each directive come with a source whitelists to specify the trusted resources that can be load by the browser. Any resources that are not specified in the source whitelists will be blocked by the browser.\r\n\r\nFor more information about the directives and source whitelists, check out here http://content-security-policy.com/\r\n\r\nThe middleware provides convenient API to set the CSP:\r\n\r\n    config.csp = {\r\n      :enforce => true,\r\n      :default_src => \'self\',\r\n      :script_src => \'unsafe-inline unsafe-eval https://api.google.com"\r\n    }\r\n\r\nwill set the content-security-policy header like below:\r\n    \r\n    Content-Security-Policy:default-src \'self\';script-src \'unsafe-inline\' \'unsafe-eval\' https://api.google.com;\r\n\r\nThe option :enforce is used to indicate if the browser will block the untrusted resources. By default, the option is set to false. So the browser will only report violations of the policy rather than blocking untrusted resource. \r\n\r\nHere is also a good introduction, http://www.html5rocks.com/en/tutorials/security/content-security-policy/\r\n\r\ncc @rafaelfranca @chancancode'
15719,'pixeltrix','Collection Routing for Rails\nAs part of Google Summer of Code 2013, I worked on implementing a collection routing api for Rails under the mentorship of @pixeltrix.\r\nMajority of the work is over with enough stability to be considered for merging. I would like to open up the discussion on the api. The documentation still remains but this is on purpose considering the community might vote for changes.\r\n### Features\r\n#### Generate collection routes by including a collection option.\r\n```ruby\r\nresources :posts, collection: true\r\n# rake routes\r\n#     Prefix Verb   URI Pattern                Controller#Action\r\n#      posts GET    /posts(/:ids)(.:format)    posts#index {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            POST   /posts(.:format)           posts#create {:collection=>true}\r\n#            PUT    /posts/:ids(.:format)      posts#replace {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            PATCH  /posts/:ids(.:format)      posts#update_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#            DELETE /posts/:ids(.:format)      posts#destroy_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n# edit_posts GET    /posts/:ids/edit(.:format) posts#edit_many {:ids=>/(?:[^\\.\\/\\?]|\\.\\.)+/, :collection=>true}\r\n#   new_post GET    /posts/new(.:format)       posts#new\r\n#  edit_post GET    /posts/:id/edit(.:format)  posts#edit\r\n#       post GET    /posts/:id(.:format)       posts#show\r\n#            PATCH  /posts/:id(.:format)       posts#update\r\n#            PUT    /posts/:id(.:format)       posts#update\r\n#            DELETE /posts/:id(.:format)       posts#destroy\r\n```\r\n\r\n#### Pass ranges as parameters and filter them using the Strong Parameters API\r\nRanges can now be passed as url parameters. Following are some examples :-\r\n```\r\nhttp://example.com/posts/1..10,17,45...89 => 1 to 10, 17 and 45 to 88\r\nhttp://example.com/posts/1..10,7 => 1 to 10\r\nhttp://example.com/posts/1,5,9 => 1, 5 and 9\r\n```\r\n\r\n```ruby\r\nfiltered_params = params.permit ids: 1...768\r\nfiltered_params = params.permit ids: 69..420\r\n```\r\n\r\n#### Generate collection routing enabled controllers using scaffolds\r\n`rails generate scaffold Posts --collection`\r\n```ruby\r\nclass PostsController < ApplicationController\r\n  before_action :set_post, only: [:show, :edit, :update, :destroy]\r\n  \r\n  # GET /posts/1..10,17\r\n  def index\r\n    @posts = post_ids ? Post.find(post_ids) : Post.all\r\n  end\r\n\r\n  # Post ids\r\n  def post_ids\r\n    @posts_ids ||= params.permit(ids: 1..2**32-1)\r\n  end\r\n\r\n  # GET /posts/1\r\n  def show\r\n  end\r\n\r\n  # GET /posts/new\r\n  def new\r\n    @post = Post.new\r\n  end\r\n\r\n  # GET /posts/1/edit\r\n  def edit\r\n  end\r\n\r\n  # POST /posts\r\n  def create\r\n    posts_params ? create_many : create_one\r\n  end\r\n\r\n  def create_many\r\n    @posts = Post.create(posts_params)\r\n    redirect_to posts_url(@posts), notice: \'Posts were successfully updated.\'\r\n  end\r\n\r\n  def create_one\r\n    @post = Post.create(post_params)\r\n    redirect_to post_url(@post), notice: \'Post was successfully updated.\'\r\n  end\r\n\r\n  # PATCH/PUT /posts/1\r\n  def update\r\n    if @post.update(post_params)\r\n      redirect_to @post, notice: \'Post was successfully updated.\'\r\n    else\r\n      render action: \'edit\'\r\n    end\r\n  end\r\n\r\n  # DELETE /posts/1\r\n  def destroy\r\n    @post.destroy\r\n    redirect_to posts_url, notice: \'Post was successfully destroyed.\'\r\n  end\r\n  \r\n  # Collection routes\r\n  # PATCH /posts/1..10\r\n  def update_many\r\n    Post.find(post_ids).each do |post|\r\n      post.update(params[:posts][:"#{post.id}"])\r\n    end\r\n    redirect_to @post, notice: \'Posts were successfully updated.\'\r\n  end\r\n\r\n  # PUT /posts/1..10\r\n  def replace\r\n    Post.destroy_all\r\n    create\r\n  end\r\n\r\n  # DELETE /users/1..10\r\n  def destroy_many\r\n    @posts = Post.destroy(posts_ids)\r\n  end\r\n  \r\n  private\r\n    # Use callbacks to share common setup or constraints between actions.\r\n    def set_post\r\n      @post = Post.find(params[:id])\r\n    end\r\n\r\n    # Only allow a trusted parameter "white list" through.\r\n    def post_params\r\n      params[:post]\r\n    end\r\n    \r\n    # Only allow a trusted collection parameter "white list" through.\r\n    def posts_params\r\n      params[:posts]\r\n    end\r\nend\r\n```\r\nScaffold generators of dependencies like JBuilder need to be updated to incorporate collection routing.\r\nFuture work will include reducing `replace` and `update_many` to single line atomic database operations using ActiveRecord.'
15461,'tenderlove','Preserve user supplied JOIN order\nJOIN clauses order is important, previous implementation has always put string or arel joins at the end (after auto-generated association joins).\r\n\r\nFixes #12953, #15488, #16635.\r\n\r\n/cc @tenderlove'
15355,'rafaelfranca','Updated #14544 to work with `activerecord-deprecated_finders`\nSimply used older style of lambda definitions within a test.\r\nFixes Issue #13466. See #14544 for complete description.\r\n\r\nConflicts:\r\n\tactiverecord/CHANGELOG.md\r\n\tactiverecord/lib/active_record/scoping/named.rb'
15224,'rafaelfranca','ActionView::LookupContext js/html fallback (#10525 redo)\nI made pull request #10525 about a year ago and received comments recently. I messed up that merge from rails/rails master so that pull request somehow has an extra 100 commits or so.\r\n\r\n`ActionView::LookupContext` is hardcoded to append the :html format whenever :js is set as the format.  A user may want to extend this behavior to their own custom defined formats (for example a :mobile format could fallback to :html as well).  \r\n\r\nThis is what it was for:\r\n\r\n----\r\n\r\nThis current behavior is the magic behind allowing you to render an html partial within a javascript response.\r\n\r\n```ruby\r\n# in new.js.erb\r\n# will render the _form.html.erb partial\r\nrender partial: \'form\', locals: {object: @object}\r\n```\r\n\r\nThis change allows you to specify your own fallbacks easily.  In somewhere like `config/initializers/mime_types.rb`:\r\n```ruby\r\nMimeTypes.register_alias "text/html", :mobile\r\nActionView::LookupContext.format_fallbacks[:mobile] = [:html]\r\n```\r\nNow, if you have a request where the format is :mobile, it will try to render a mobile template first, and fallback to the html template.  Additionally, you could render an html partial within a mobile template.\r\n\r\nThis behavior is already being tested in `actionpack/test/template/lookup_context_test.rb`.\r\n'
15008,'matthewd',"ActiveRecord::QueryMethods.group() doesn't work if it's a MySQL keyword\n`ActiveRecord::QueryMethods.group()` throws a MySQL error if you're grouping by an SQL keyword (in this case: `key`).\r\n\r\n```\r\n>> Template.group :key\r\n!! #<ActiveRecord::StatementInvalid: Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key' at line 1: SELECT `templates`.* FROM `templates`  GROUP BY key>\r\n```\r\n\r\nThe problem is that the SQL statement needs backticks around the column name.\r\n\r\nA workaround which works (but will break some operations like `.count()`)\r\n\r\n```\r\nTemplate.order '`key`'\r\n```\r\n\r\nOther operations (`.where()`, `.order()`, etc.) work as expected.\r\n\r\n\r\n```\r\n$ rails --version\r\nRails 4.1.0\r\n```"
14938,'matthewd',"Reducing AR::ConPool's critical (synchronized) section\nThis is an alternative (much lighter in scope) PR to #14926, only the smallest possible amount of code is changed.\r\n\r\nThe objective is to:\r\n * move connection verification outside of `synchronized` section -> 3590eea\r\n * move connection establishment outside of the `synchronized` section -> 6eda088\r\n\r\nThis should allow for more concurrency (gist with benched concurrency improvements: https://gist.github.com/thedarkone/80f78dea697f2a7f4150). Related: #14891, #14919.\r\n\r\nAs per @matthewd's suggestion:\r\n * remove synchronization from around the `@reserved_connections` cache -> ca85c48"
14925,'robin850','Strings gets implicitly converted to a number on arjdbc/sqlite3\nThis test `test_converted_values_are_returned_after_assignment` is passes on CRuby but fails on JRuby with following message:\r\n\r\n```ruby\r\nruby 1.7.12 (1.9.3p392) 2014-04-15 643e292 on Java HotSpot(TM) 64-Bit Server VM 1.7.0_51-b13 Using jdbcsqlite3\r\nRun options: -n test_converted_values_are_returned_after_assignment --seed 60208\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFinished in 0.198000s, 5.0505 runs/s, 35.3535 assertions/s.\r\n\r\n  1) Failure:\r\nAttributeMethodsTest#test_converted_values_are_returned_after_assignment [test/cases/attribute_methods_test.rb:568]:\r\nExpected 1337 to be a kind of String, not Fixnum.\r\n\r\n1 runs, 7 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nso somewhere something similar to `"1337".to_i` is being done. The problem is that if I am expected value from column should be a `String`, it returns a Number. then things can blow up.\r\n\r\nAny idea why/how this is happening?\r\n\r\n\r\n#11700'
14698,'chancancode',"Explicit transactions not rolling back when validation fails on nested attributes\nIn certain situations, when a validation fails on a model referenced in nested attributes, when the update attributes is executed inside an explicit transaction, the transaction is not rolled back, and the database is left in a state that's different than it was before the transaction.\r\n\r\nExample:\r\n\r\nIn the controller: \r\n```ruby\r\n    User.transaction do\r\n      user.update(email: nil, user_setting_attributes: {favourite_color: 'red'})\r\n    end\r\n```\r\nNote that `user.update!` does *not* cause the issue.\r\n\r\nThe models:\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_one :user_setting\r\n  accepts_nested_attributes_for :user_setting\r\n  validates_presence_of :email\r\nend\r\n\r\nclass UserSetting < ActiveRecord::Base\r\n  belongs_to :user\r\nend\r\n```\r\nA complete file that shows a case that causes, and some cases that are similar but don't cause the issue:\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n  File.write('Gemfile', <<-GEMFILE)\r\nsource 'https://rubygems.org'\r\ngem 'activerecord', '4.1.0'\r\ngem 'sqlite3'\r\nGEMFILE\r\n\r\n  system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\n# Activate the gem you are reporting the issue against.\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users do |t|\r\n    t.string :email\r\n  end\r\n\r\n  create_table :user_settings do |t|\r\n    t.integer :user_id\r\n    t.string :favourite_color\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_one :user_setting\r\n  accepts_nested_attributes_for :user_setting\r\n  validates_presence_of :email\r\nend\r\n\r\nclass UserSetting < ActiveRecord::Base\r\n  belongs_to :user\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_update_without_transaction\r\n    user = User.create!(email: 'godfrey@example.com', user_setting_attributes: {favourite_color: 'orange'})\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n\r\n    assert ! user.update(email: nil, user_setting_attributes: {favourite_color: 'red'})\r\n\r\n    user.reload\r\n\r\n    assert user.user_setting.present?\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n  end\r\n\r\n  def test_update_with_transaction\r\n    user = User.create!(email: 'godfrey@example.com', user_setting_attributes: {favourite_color: 'orange'})\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n\r\n    User.transaction do\r\n      assert ! user.update(email: nil, user_setting_attributes: {favourite_color: 'red'})\r\n    end\r\n\r\n    user.reload\r\n\r\n    assert user.user_setting.present?\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n  end\r\n\r\n  def test_update_without_transaction!\r\n    user = User.create!(email: 'godfrey@example.com', user_setting_attributes: {favourite_color: 'orange'})\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n\r\n    assert_raises(ActiveRecord::RecordInvalid) do\r\n      user.update!(email: nil, user_setting_attributes: {favourite_color: 'red'})\r\n    end\r\n\r\n    user.reload\r\n\r\n    assert user.user_setting.present?\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n  end\r\n\r\n  def test_update_with_transaction!\r\n    user = User.create!(email: 'godfrey@example.com', user_setting_attributes: {favourite_color: 'orange'})\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n\r\n    assert_raises(ActiveRecord::RecordInvalid) do\r\n      User.transaction do\r\n        assert ! user.update!(email: nil, user_setting_attributes: {favourite_color: 'red'})\r\n      end\r\n    end\r\n\r\n    user.reload\r\n\r\n    assert user.user_setting.present?\r\n    assert_equal 'orange', user.user_setting.favourite_color\r\n  end\r\nend\r\n```\r\nIf the above is in a file called `repro.rb`, then:\r\n```sh\r\nruby repro.rb\r\n```\r\nshould produce output ending in:\r\n```\r\n4 runs, 15 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\nThe issues has been observed in 4.1 master and 4.0 master. I haven't yet checked how far back it might go.\r\n\r\nThe issue was shown to my by @chancancode . I'm documenting the issue here without much further research yet because I didn't want it to get dropped.\r\n"
14693,'spastorino','render_to_string regression in Rails 4 causes DoubleRenderError\nIn Rails 3, render_to_string ensured that the response body was set to nil after rendering so that using it to render something for purposes other than the body and then rendering or redirecting in a controller didn\'t raise a DoubleRenderError.\r\n\r\n In this commit https://github.com/rails/rails/commit/c27fde26166f71ec68a7fb501435b656f436a687 @spastorino removed that behavior. @rafaelfranca  responded on the core list that this change was unintentional.\r\n\r\nHistory: this exact problem was actually flagged as a bug back in the 3.x days here https://rails.lighthouseapp.com/projects/8994/tickets/5875-render_to_string-json-or-xml-or-update-before-render-results-in-doublerendererror which is where the "set body to nil" behavior came from originally.\r\n\r\nRelated bug reports:\r\n- #14173: response.content_type is being set by render_to_string.\r\n- #11623: response.stream isn\'t restored after a render_to_string call.\r\n'
14685,'matthewd','Make sure that JSON arrays as columns working\n<a>https://github.com/scuxiayiqian/rails/commit/a0453b8282ea6dcc54aa67ea112429fb919471fb</a> fixed the bug <a>https://github.com/rails/rails/issues/14484</a>'
14666,'pixeltrix','String to date conversions use current century\nPreviously, converting a String to Date with a 2 digit year would assume a year\r\nbetween AD00 and AD99. As most software does not deal with these years, and it\r\nis unlikely that this is considered expected behavior, `String#to_date` and\r\n`String#to_datetime` now use the same defaults as `Date#parse`.'
14663,'pixeltrix','Added request.script_name to Mailer Preview links\nThis helps correct links for apps running on a sub directory on the\r\nmailer index pages.'
14640,'matthewd','Refactored ActiveRecord Constants into ActiveRecord_Internals\nSuch that if you have an object User < ActiveRecord::Base and look at User.constants(false), rather than displaying all public constants, it yields User::ActiveRecord_Internals, which has those constants inside it'
14519,'pixeltrix',"Issue/14435 multipart mail preview\nMailPreviews with inline attachments error out. They try to render an HTML or\r\nplain text part, but it only sees the attachment part (`image/png` for\r\nexample) and a `multipart/relative`, returning an unexpected array when views\r\nexpect a `Message::Part`.\r\n\r\nIf email is of type 'multipart/relative', then we render the `text/html` part\r\ncontained in it.\r\n\r\nWe'd like to render the image using a URL like `http://localhost:3000/rails/mailers/dog_mailer/dog_view?part=image/png`, anyway submitting for review.\r\n\r\nFix for issue: https://github.com/rails/rails/issues/14435.\r\n\r\nPairing with @masonforest. cc @pixeltrix @sikachu."
14484,'matthewd','ActiveRecord JSON arrays as columns not working\nI\'m on 4.1.0.rc2.\r\n\r\n```ruby\r\ncreate_table :venues do |t|\r\n  # t.hstore :slots, array: true, :default => []\r\n  # HStore arrays seem to work after the https://github.com/rails/rails/pull/11444 patch\r\n\r\n  t.json :slots, array: true, :default => []\r\nend\r\n```\r\n\r\nMigrating results in the following:\r\n```\r\nPG::InvalidTextRepresentation: ERROR:  missing dimension value\r\n: CREATE TABLE "venues" ("id" serial primary key, "slots" json[] DEFAULT \'[]\') /Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/postgresql/database_statements.rb:128:in `async_exec\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/postgresql/database_statements.rb:128:in `block in execute\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract_adapter.rb:373:in `block in log\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.1.0.rc2/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract_adapter.rb:367:in `log\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/postgresql/database_statements.rb:127:in `execute\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract/schema_statements.rb:205:in `create_table\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:649:in `block in method_missing\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:621:in `block in say_with_time\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:621:in `say_with_time\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:641:in `method_missing\'\r\n/Users/alexanderhanhikoski/Code/gizlo/db/migrate/20140226060153_create_tables.rb:6:in `change\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:595:in `exec_migration\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:579:in `block (2 levels) in migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:578:in `block in migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract/connection_pool.rb:294:in `with_connection\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:577:in `migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:752:in `migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:992:in `block in execute_migration_in_transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:1038:in `block in ddl_transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract/database_statements.rb:211:in `block in transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract/database_statements.rb:219:in `within_new_transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/connection_adapters/abstract/database_statements.rb:211:in `transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/transactions.rb:208:in `transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:1038:in `ddl_transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:991:in `execute_migration_in_transaction\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:953:in `block in migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:949:in `each\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:949:in `migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:807:in `up\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/migration.rb:785:in `migrate\'\r\n/Users/alexanderhanhikoski/.rvm/gems/ruby-2.0.0-p247/gems/activerecord-4.1.0.rc2/lib/active_record/railties/databases.rake:34:in `block (2 levels) in <top (required)>\'\r\n```'
14465,'rafaelfranca','Pass AR::Relation instead of Array to find_in_batches block\nThis patch allows to operate a relation inside of `find_in_batches` that allows to have some additional flexibility.\r\n\r\nExample:\r\n\r\n`User.where(condition).update_all` will lock table for writing in MySQL if there are too many records (> 100k). But the following will be possible after this patch:\r\n\r\n``` ruby\r\nUser.where(condition).find_in_batches do |relation|\r\n  relation.update_all("disabled = true")\r\nend\r\n```'
14435,'pixeltrix','Rails 4.1.0.rc1 - Mailers#preview + inline attachment => NoMethodError\nI\'m getting a ```NoMethodError in Rails::Mailers#preview``` when I try to preview an email view that has an inline attachment (in my case, a .png image).\r\n\r\nMore precisely:\r\n```\r\n.../gems/ruby-2.0.0-p195@rails410rc1/gems/railties-4.1.0.rc1/lib/rails/templates/rails/mailers/email.html.erb where line #95 raised:\r\n\r\nundefined method `mime_type\' for #<Array:0xdd84674>\r\n```\r\n\r\nLine #95 is:\r\n\r\n```\r\n<iframe seamless name="messageBody" src="?part=<%= Rack::Utils.escape(@part.mime_type) %>"></iframe>\r\n```\r\n\r\nNote:\r\n\r\n- Removing this attachment from ```def my_mail [...] end``` makes the error vanish.\r\n- Setting this inline attachment to "not inline" does not make the error vanish.\r\n- ".deliver"-ing the email despite the preview error message does send it correctly (the inline attachment is rendered correctly).'
14300,'tenderlove','Support dynamic postgres column defaults \nI was surprised to find that I couldn\'t write the following migration when using postgresql:\r\n\r\n``` ruby\r\nclass CreateMessages < ActiveRecord::Migration\r\n  def change\r\n    create_table :messages do |t|\r\n      t.timestamp :received_at, default: "now()"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nDoing so will immediately evaluate `now()` such that a psql description of the table will report the default is something like `default \'2014-03-06 16:16:45.108266\'::timestamp without time zone`.\r\n\r\nI worked around this in my migration by using an alter statement immediately after creating the table:\r\n\r\n``` ruby\r\nActiveRecord::Base.connection.execute "ALTER TABLE messages ALTER COLUMN received_at SET DEFAULT now()"\r\n```\r\n\r\nThis seemed to solve our issue (the description of the column default was `default now()` and it worked fine).\r\n\r\nHowever, any rake command dependent on `db:schema:load` and the schema.rb file are causing exactly the same issue, because `db:schema:dump` records this into my `db/schema.rb` file:\r\n\r\n``` ruby\r\nt.datetime "received_at", default: "now()"\r\n```\r\n\r\nBecause `db/schema.rb` is generated and checked into source control, I\'m struggling to think of any graceful workarounds to the issue. '
14194,'rafaelfranca','Rails does not create non int primary keys\nrelated with: #10505\r\n\r\nwith the given migration:\r\n\r\n```ruby\r\nclass CreateBars < ActiveRecord::Migration\r\n  def change\r\n    create_table :bars, id: false, primary_key: :pk do |t|\r\n      t.primary_key :pk, :string\r\n    end\r\n\r\n    create_table :foos, id: false, primary_key: :pk do |t|\r\n      t.primary_key :pk\r\n    end\r\n\r\n    create_table :omgs, id: false, primary_key: :pk do |t|\r\n      t.primary_key :pk, :int\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nwill generates:\r\n\r\n```mysql\r\nfoo_rails$  desc bars;\r\n+-------+--------------+------+-----+---------+-------+\r\n| Field | Type         | Null | Key | Default | Extra |\r\n+-------+--------------+------+-----+---------+-------+\r\n| pk    | varchar(255) | YES  |     | NULL    |       |\r\n+-------+--------------+------+-----+---------+-------+\r\n1 row in set (0.00 sec)\r\n\r\nfoo_rails$  desc foos;\r\n+-------+---------+------+-----+---------+----------------+\r\n| Field | Type    | Null | Key | Default | Extra          |\r\n+-------+---------+------+-----+---------+----------------+\r\n| pk    | int(11) | NO   | PRI | NULL    | auto_increment |\r\n+-------+---------+------+-----+---------+----------------+\r\n1 row in set (0.00 sec)\r\n\r\nfoo_rails$  desc omgs;\r\n+-------+---------+------+-----+---------+-------+\r\n| Field | Type    | Null | Key | Default | Extra |\r\n+-------+---------+------+-----+---------+-------+\r\n| pk    | int(11) | YES  |     | NULL    |       |\r\n+-------+---------+------+-----+---------+-------+\r\n1 row in set (0.00 sec)\r\n```'
14169,'sgrif','rake db:schema:dump ignores type of non-numeric primary key\nWhen running `rake db:schema:dump` on a legacy schema with a table like the following:\r\n\r\n```sql\r\nCREATE TABLE `hashes` (\r\n  `recordcount` tinyint(4) NOT NULL,\r\n  `timecreated` datetime NOT NULL,\r\n  `sha` varchar(40) NOT NULL DEFAULT \'\',\r\n  PRIMARY KEY (`sha`),\r\n  KEY `timecreated` (`timecreated`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\r\n```\r\n\r\nRails produces the following schema information:\r\n\r\n```ruby\r\ncreate_table "hashes", primary_key: "sha", force: true do |t|\r\n  t.integer "recordcount", limit 1, null: false\r\n  t.datetime "timecreated", null: false\r\nend\r\n```\r\n\r\nThe string type of the `sha` field is lost, so when re-creating a database from the schema we wind up with an auto-incrementing integer field instead of a varchar.\r\n\r\nInterestingly, on another similar table where the hash key is part of a compound primary key, the information is preserved and the table is re-created correctly.'
14028,'chancancode',"Amended json_escape comments\nAs it stands, the security of `json_escape` is a bit misleading. Clarifying that user-generated content must still be html_escaped if being inserted into the DOM via JQuery's html() method, since this is such a common use case.\r\n\r\nDescribed here: https://github.com/rails/rails/pull/13073#issuecomment-34820097"
14003,'matthewd','Leaking unrelated scopes\nSee the repro:\r\n\r\n\r\n```ruby\r\ngem \'activerecord\', \'4.0.2\'\r\nrequire \'active_record\'\r\nrequire \'minitest/autorun\'\r\nrequire \'logger\'\r\n\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Base.establish_connection(\r\n  :adapter  => \'postgresql\',\r\n  :database => \'x\'\r\n)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users, :force => true do |t|\r\n  end\r\n  create_table :projects, :force => true do |t|\r\n    t.integer :user_id\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :projects\r\nend\r\n\r\nclass Project < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  def self.accessible_to(u)\r\n    where(id: u.projects.select(:id)) # simplified for this example only\r\n  end\r\nend\r\n\r\n\r\nclass TestMe < MiniTest::Unit::TestCase\r\n  def test_leaking_scope\r\n    user = User.create!\r\n    Project.where("1=1").accessible_to(user)\r\n    print user\r\n  end\r\n\r\n  def test_no_scope_thus_not_leaking\r\n    user = User.create!\r\n    print user\r\n  end\r\n\r\n\r\n  def print(user)\r\n    puts "-"*30, user.projects.to_sql, "-"*30\r\n  end\r\nend\r\n```\r\n\r\nwith the output:\r\n\r\n```\r\n-- create_table(:users, {:force=>true})\r\nD, [2014-02-10T17:04:02.461922 #8901] DEBUG -- :    (1.5ms)  DROP TABLE "users"\r\nD, [2014-02-10T17:04:02.464266 #8901] DEBUG -- :    (2.2ms)  CREATE TABLE "users" ("id" serial primary key) \r\n   -> 0.0188s\r\n-- create_table(:projects, {:force=>true})\r\nD, [2014-02-10T17:04:02.465910 #8901] DEBUG -- :    (0.8ms)  DROP TABLE "projects"\r\nD, [2014-02-10T17:04:02.467515 #8901] DEBUG -- :    (1.5ms)  CREATE TABLE "projects" ("id" serial primary key, "user_id" integer) \r\n   -> 0.0032s\r\nMiniTest::Unit::TestCase is now Minitest::Test. From tmp/test.rb:33:in `<main>\'\r\nRun options: --seed 33760\r\n\r\n# Running:\r\n\r\nD, [2014-02-10T17:04:02.532025 #8901] DEBUG -- :    (0.2ms)  BEGIN\r\nD, [2014-02-10T17:04:02.538572 #8901] DEBUG -- :   SQL (0.8ms)  INSERT INTO "users" DEFAULT VALUES RETURNING "id"\r\nD, [2014-02-10T17:04:02.539088 #8901] DEBUG -- :    (0.1ms)  COMMIT\r\n------------------------------\r\nSELECT "projects".* FROM "projects"  WHERE (1=1) AND "projects"."user_id" = $1\r\n------------------------------\r\n.D, [2014-02-10T17:04:02.549907 #8901] DEBUG -- :    (0.1ms)  BEGIN\r\nD, [2014-02-10T17:04:02.550536 #8901] DEBUG -- :   SQL (0.2ms)  INSERT INTO "users" DEFAULT VALUES RETURNING "id"\r\nD, [2014-02-10T17:04:02.550806 #8901] DEBUG -- :    (0.1ms)  COMMIT\r\n------------------------------\r\nSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1\r\n------------------------------\r\n.\r\n\r\nFinished in 0.025384s, 78.7898 runs/s, 0.0000 assertions/s.\r\n\r\n2 runs, 0 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\n**NOTE** the printed `WHERE` caluses in both tests. One includes the where conditions created on a totally unrelated scope.\r\n\r\n\r\nThis is potentially a critical bug (unless I\'m blind and don\'t see something important) which can affect the whole application by yielding some very unexpected results.\r\nThose issues may be extremely hard to track down with some data leaking out.\r\n\r\nSo I would probably even consider this a security issue.\r\n\r\nCan reproduce on all published Rails 4 versions, including `4.1.0.beta1`.'
13851,'pixeltrix','The request.path isn\'t reset across multiple calls to process in functional tests\nBecause of [this line][1], any further calls to `get`, `post`, etc. will use the first request\'s `PATH_INFO` environment variable because it isn\'t reset between requests. However it isn\'t as simple as deleting `PATH_INFO` from the environment in `recycle!` because someone may have set it directly before the request as part of the test setup.\r\n\r\nSimilarly, it can\'t be simply deleted after the request because someone may be asserting on it afterwards. Here\'s a failing example test:\r\n\r\n``` ruby\r\nrequire \'action_controller/railtie\'\r\nrequire \'minitest/autorun\'\r\nrequire \'rails/test_help\'\r\n\r\nclass TestApp < Rails::Application\r\n  config.eager_load = true\r\n  config.root = File.dirname(__FILE__)\r\n  config.session_store :cookie_store, key: \'cookie_store_key\'\r\n  config.secret_token    = \'secret_token\'\r\n  config.secret_key_base = \'secret_key_base\'\r\n\r\n  config.logger = Logger.new(\'/dev/null\')\r\n  Rails.logger  = config.logger\r\nend\r\n\r\nTestApp.initialize!\r\n\r\nTestApp.routes.draw do\r\n  get \'/foo\', to: \'test#foo\'\r\n  get \'/bar\', to: \'test#bar\'\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def foo\r\n    render text: \'foo\'\r\n  end\r\n\r\n  def bar\r\n    render text: \'bar\'\r\n  end\r\nend\r\n\r\nclass TestControllerTest < ActionController::TestCase\r\n  def test_path_reset_between_requests\r\n    get :foo\r\n    assert_equal "/foo", @request.path\r\n\r\n    get :bar\r\n    assert_equal "/bar", @request.path\r\n  end\r\nend\r\n```\r\n\r\nOne possible solution is to have an explicit `@request.recycle!` phase where `process` will recycle the request before processing the action unless it has been already called, e.g:\r\n\r\n``` ruby\r\n# request.recycle! called implicitly\r\nget :foo\r\n\r\n@request.recycle!\r\n@request.env[\'PATH_INFO\'] = \'/bar\'\r\n\r\n# request.recycle! not called as it\'s been called explicitly\r\nget :bar\r\n# request.recycled? flag reset here\r\n```\r\n\r\nWhilst this isn\'t ideal it\'s probably the easiest solution until a refactoring of `ActionController::TestCase` takes place for Rails 4.2. The reason that it isn\'t ideal is that we still don\'t know what the developer has set in the environment so it\'s hard to know whether something is the default or has been explicitly set.\r\n\r\n[1]: https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb#L631'
13677,'rafaelfranca',"Rails 4.0.2 ActiveRecord: has_many uniq through not removing order\nPostgresql doesn't accept DISTINCT selects with an ORDER. In Rails 3, this :users association would generate sql without an ORDER.\r\n```\r\nhas_many :comments, :order => :updated_at\r\nhas_many :users, :uniq => true, :through => :comments\r\n```\r\nIn Rails 4, ORDER is preserved (breaking postgresql).\r\n```\r\nhas_many :comments, -> {order(:updated_at)}\r\nhas_many :users, -> {uniq}, :through => :comments\r\n```\r\n\r\nExecutable testcase: https://gist.github.com/pekeler/8377939"
13599,'rafaelfranca',"Fix regression on has many association callback repeating records.\n3af4ae82e587b12664626e7b22bc6cc21ebbca2e introduced a regression on has many association, where calling a child from parent in child's callback\r\n\r\nresulted in same child records getting added repeatedly to target.\r\n\r\nFixes #13387."
13591,'rafaelfranca','`date_select` helper method extension\nThis PR is inspired by #13552\r\n\r\n`<%= f.date_select :dob, { :start_year => 1900 } %>`\r\n\r\nWhen we attempt to create a resource, the year range is `1900 to (Date.today.year + 5)`. But after creation (with `1900 as dob`), when resource is attempted to edit then the year range is rendered as `1900 to (selected year + 5)`. So if choose `dob` to:\r\n\r\n1. `1900` then in edit view, year range will be `1900-1905`.\r\n2. `1920` then in edit view, year range will be `1900-1925`.\r\n\r\nNow with this PR, the end year will be: `Date.today.year + 5`, i.e. `2019` when `dob` is created either with `1905` or `1920`. Same behaviour is implemented for `start_year`. And there is specially case for `infinity`.'
13523,'rafaelfranca','select tags and their hidden field counterparts are rendered in the wrong order\nCurrently if you render a select tag with the form helper you end up with a hidden field followed by the select tag. This is fine in most cases, but on older versions of IE, when you are wrapping said select tag with a label tag, the label will get associated with the hidden field rather than the select. Subtle, but it has caused us some usability bugs.\r\n\r\nThe culprit is here: \r\nhttps://github.com/rails/rails/blob/master/actionview/lib/action_view/helpers/tags/base.rb#L126\r\n\r\nThe solution is simply to swap the order of the `+` operands.'
13447,'rafaelfranca','Make possible rendering of a block with a layout and a collection.\nFixes #13354.'
13434,'carlosantoniodasilva',"Use local variables in _form.html.erb generated by scaffold.\nIt seems a good idea to use local variables in generated partials instead of using instance variables.\r\n\r\nBefore\r\n\r\n    <%= render 'form' %>\r\n\r\nAfter\r\n\r\n    <%= render 'form', product: @product %>"
13136,'rafaelfranca','Reindex bind params for sub-queries\nOn building where values in `where!` with relation as hash constraint\r\nadded reindexing of bind params positions to be linked with corresponded\r\nbind values\r\n\r\nFixes #12753'
13135,'pixeltrix','Sending JSON in functional tests does not populate the params hash\n```ruby\r\ntest \'sending raw JSON does not populate the params hash\' do\r\n  @request.headers[\'Content-Type\'] = \'application/json\'\r\n  post :create, { key: "value" }.to_json\r\n\r\n  assert_equal "value", params[\'key\'] # => Will fail!\r\nend\r\n```\r\n\r\nwill result in following `params` hash:\r\n\r\n```ruby\r\n{"controller"=>"posts", "action"=>"create"} # Hence the missing key-value pair.\r\n```\r\n\r\nHowever sending the corresponding request with curl or other apps, it works like intended. I even asked [on StackOverflow](http://stackoverflow.com/questions/20327627/functional-testing-of-a-json-rails-api), however no answer yet. Looks like a bug for me.'
12872,'pixeltrix','ActiveSupport::Multibyte::Unicode.unpack_graphemes uses legacy grapheme clusters rather than extended grapheme clusters\nAccording to [UAX29](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries):\r\n\r\n> …the extended grapheme cluster boundaries are recommended for general processing, while the legacy grapheme cluster boundaries are maintained primarily for backwards compatibility with earlier versions of this specification.\r\n\r\n`ActiveSupport::Multibyte::Unicode.unpack_graphemes` seems to use legacy grapheme clusters rather than extended grapheme clusters in opposition to the recommendation. This can be seen easily using an example from the [Unicode FAQ on characters and combining marks](http://www.unicode.org/faq/char_combmark.html#7). The following string:\r\n\r\n```ruby\r\n"\\u{0061}\\u{0928}\\u{093f}\\u{4e9c}\\u{10083}"\r\n```\r\n\r\nhas 4 grapheme clusters according to the FAQ (which is implicitly using the extended grapheme cluster definition) and to the human eye, but `unpack_graphemes` returns 5:\r\n\r\n```ruby\r\n[[97], [2344], [2367], [20124], [65667]]\r\n```\r\n\r\n`\\u093f` is a spacing mark. The extended grapheme cluster definition says not to break before a spacing mark, but `unpack_graphemes` does just that. If extended grapheme clusters were used instead the result would be:\r\n\r\n```ruby\r\n[[97], [2344, 2367], [20124], [65667]]\r\n```\r\n\r\nThis would better match UAX29\'s recommendation and the way the human eye interprets these characters.'
12805,'pixeltrix','Nested scope in route removes slash at the beginning of the url\nFirst example:\r\n\r\n```ruby\r\n# config/routes.rb\r\nscope "(:locale)" do\r\n  root_to "welcome#index"\r\nend\r\n```\r\nWhen i run `rake routes` result is:\r\n`web/welcome#index      root      /(:locale)(.:format)`\r\nand helper method returns\r\n`root_path #=>"/"`\r\n\r\nIf i add second scope:\r\n```ruby\r\n# config/routes.rb\r\nscope "(:locale)" do\r\n  scope "(:platform)" do\r\n    root_to "welcome#index"\r\n  end\r\nend\r\n```\r\n\r\nResult is:\r\n`web/welcome#index      root      (/:locale)(/:platform)(.:format)`\r\nand\r\n`root_path #=> ""` - empty string\r\n\r\nThe first slash in the url is inside the optional parameter. It is correct?'
12796,'rafaelfranca','Fixes #12423 - Additional select columns are removed when using includes\n'
12743,'tenderlove','`ActiveRecord::QueryMethods#order` support for nested hashes\nQuite often we have to order the query by attribute of the related table. We can\r\nuse a String to do this:\r\n\r\n```\r\nPost.order("comments.body ASC")\r\n```\r\n\r\nI really like the `#where` syntax when dealing with related\r\ntables/associations.\r\n\r\nThis commit adds support to `#order` for nested hashes as arguments.\r\nUsing the new syntax the query above looks like this:\r\n\r\n```\r\nPost.order(comments: {body: :asc})\r\n```'
12725,'rafaelfranca','Fix context of *_through association scope\nFix context of *_through association scope from through scope to target scope (as in other association)'
12659,'rafaelfranca','Fix merging conditions for *_througn with STI case\nFix #12474, by preventing merging of conditions of target_scope for *_through case with STI'
12509,'fxn','Fix ActiveSupport::Inflector.pluralize behavior for words that consist of non-ASCII characters\nThis PR fixes behavior of `ActiveSupport::Inflector.pluralize`.\r\n\r\nThe code below returns "猫" in 3.2, but "猫s" in 4.0.\r\n```ruby\r\nActiveSupport::Inflector.inflections do |inflect|\r\n  inflect.uncountable "猫"\r\nend\r\n"猫".pluralize\r\n```'
12178,'pixeltrix','Regression in rails 4 when generating routes with optional scope\nHi! I just upgraded one application to rails 4 and I\'m getting an error I didn\'t expect. I\'m sorry if I\'m missing something and this is an intentional change.\r\n\r\nWhen there\'s an optional scope, `link_to resource` doesn\'t seem to work properly in rails 4. I can change every link to `link_to resource_path(id: resource.id)` but that\'s a lot of links to change and that kind of shortcut seemed nice and readable...\r\n\r\nTo reproduce copy and paste the following into a terminal\r\n\r\n    rails new optional_scope_routes_rails4\r\n    cd optional_scope_routes_rails4\r\n    rails generate scaffold post title body:text published:boolean\r\n    rake db:migrate\r\n    echo \'Post.create(title: "Hi", body: "Hello", published: false)\' | rails c\r\n    cat <<EOF > config/routes.rb\r\n    OptionalScopeRoutesRails4::Application.routes.draw do\r\n      scope \'(:locale)\', locale: /en|es/  do\r\n        resources :posts\r\n        root \'posts#index\'\r\n      end\r\n    end\r\n    EOF\r\n    cat <<EOF > app/controllers/application_controller.rb\r\n    class ApplicationController < ActionController::Base\r\n      protect_from_forgery\r\n      before_filter :set_locale\r\n\r\n      private\r\n        def set_locale\r\n          I18n.locale = params[:locale] || I18n.default_locale\r\n          Rails.application.routes.default_url_options[:locale] = I18n.locale\r\n        end\r\n    end\r\n    EOF\r\n    rails s\r\n    \r\n\r\nWhen I open the browser at `0.0.0.0:3000` I get the error\r\n    \r\n    No route matches {:controller=>"posts", :action=>"show", :locale=>#<Post id: 1, title: "Hi", body: "Hello", published: false, created_at: "2013-09-09 18:44:45", updated_at: "2013-09-09 18:44:45">, :id=>nil, :format=>nil} missing required keys: [:id]\r\n\r\nin `optional_scope_routes_rails4/app/views/posts/index.html.erb` line `#21`\r\n\r\n    <td><%= link_to \'Show\', post %></td>\r\n\r\nBut in rails3 it works just fine... Open another terminal and try it with the following\r\n\r\n    rails _3.2.14_ new optional_scope_routes_rails3\r\n    cd optional_scope_routes_rails3\r\n    rails generate scaffold post title body:text published:boolean\r\n    rake db:migrate\r\n    echo \'Post.create(title: "Hi", body: "Hello", published: false)\' | rails c\r\n    cat <<EOF > config/routes.rb\r\n    OptionalScopeRoutesRails3::Application.routes.draw do\r\n      scope \'(:locale)\', locale: /en|es/  do\r\n        resources :posts\r\n        root :to => \'posts#index\'\r\n      end\r\n    end\r\n    EOF\r\n    cat <<EOF > app/controllers/application_controller.rb\r\n    class ApplicationController < ActionController::Base\r\n      protect_from_forgery\r\n      before_filter :set_locale\r\n\r\n      private\r\n        def set_locale\r\n          I18n.locale = params[:locale] || I18n.default_locale\r\n          Rails.application.routes.default_url_options[:locale] = I18n.locale\r\n        end\r\n    end\r\n    EOF\r\n    rm public/index.html\r\n    rails s -p3001\r\n    \r\n\r\nThanks a lot in advance!'
12124,'rafaelfranca','Closes #12115. Fix `simple_format` with sanitizing option when the text contains single line feed.\nIf we call `simple_format` method with sanitizing option, a single line feed (\\n) is replaced with unexpected characters .\r\n\r\n```\r\n&lt;br /&gt;\r\n```\r\nI think we should backport  to 4-0-stable.'
12111,'carlosantoniodasilva',"Setting config.action_view.default_form_builder to a String in application.rb gives undefined method `new' for the string\nThis is running the Rails 4.0.0 gem. [Example app](https://github.com/darkhelmet/broken-form-builder)\r\n\r\nIn `form_helper.rb` I can change `default_form_builder` to `default_form_builder_class` and make it work. When I step into `instantiate_builder` at the `default_form_builder` call it's just grabbing an instance variable in a generated method, probably set when I use `config.action_view.default_form_builder = 'MyBuilder'` via this code.\r\n\r\n```ruby\r\nActiveSupport.on_load(:action_view) do\r\n  cattr_accessor(:default_form_builder) { ::ActionView::Helpers::FormBuilder }\r\nend\r\n```\r\n\r\nI tried to make a PR, and started writing a test, but `test_default_form_builder` just sets `ActionView::Base.default_form_builder` so it doesn't actually break anything, and it works as it should. I'm not sure where to go from here in order to write the proper failing test. It needs to exercise the `cattr` setup by the `ActiveSupport` hook, and I'm not sure where to look, or how to properly setup a test to work the proper code path."
11911,'pixeltrix','Preserve DST boolean to fix marshalling Time in JRuby\nStore isdst as an instance variable to eliminate the one hour time\r\ndifference when doing Marshal.load(Marshal.dump(Time.now)) between\r\nactive_support/core_ext/time/marshal and JRuby Marshal.'
11884,'carlosantoniodasilva','I18n locale fallbacks for localized views don\'t work for mailers\nPull request #7368 recently fixed issues #3512 and #840 related to fallbacks for localized views for views rendered by controllers.\r\n\r\nHowever the locale fallbacks are still broken for mailer views.\r\n\r\nHaving the locale set to `de-at`, and a file called `app/views/mailer/demo.de.erb`, trying to build the mail results in an  `ActionView::MissingTemplate` exception:\r\n\r\n```\r\nActionView::MissingTemplate: Missing template mailer/demo with {:locale=>[:"de-at"], :formats=>[:text], :handlers=>[:erb, :builder, :coffee]}. Searched in:\r\n  * "/Users/benedikt/demo/app/views"\r\n```\r\n\r\nThe issue is related to `ActionView::LookupContext#skip_default_locale!`, which is only called from within `ActionMailer::Base`:\r\n\r\n```ruby\r\nI18n.locale = \'de-at\'\r\ncontext = Mailer(:new).lookup_context\r\ncontext.find_all "mailer/demo" # => [app/views/mailer/demo.de.markerb]\r\ncontext.skip_default_locale!\r\ncontext.find_all "mailer/demo" # => []\r\n```\r\n\r\n*However:* The issue is not related to the value `I18n.default_locale` is set to, changing this to something else (even nonsense), doesn\'t affect this issue.'
11867,'pixeltrix',"Don't raise when writing an attribute with and out of range time\nThe following code will raise an ``ArgumentError`` because of an out of range time:\r\n\r\n````ruby\r\nModel.new(:created_at => '2010-33-22T09:30:25Z')\r\n````\r\n\r\nHowever, this won't raise, this will set ``created_at`` to nil instead :\r\n\r\n````ruby\r\nModel.new(:created_at => 'Foobar')\r\n````\r\n\r\nI think the first example should act as the second one, hence this PR.\r\n\r\nWhat do you think ?\r\n"
11857,'carlosantoniodasilva','Refactor Class#subclasses methods.\nRefactored Class#subclasses methods to make use of #reject, #select and #delete_if rather than explicitly creating, populating, and returning Arrays.'
11853,'rafaelfranca','Attempt to connect the database during assets precompilation when using virtual attributes validation\nAssets precompilation requires database connection. Issue appears when using virtual attribute validation:\r\n```rails\r\nvalidates :agreement, acceptance: true\r\n```\r\nWith normal attributes validations (not virtual) assets precompilation goes without initializing database connection.\r\n\r\nSomeone on stackoverflow.com said that this may be a bug - http://stackoverflow.com/questions/18184937/assets-precompilation-requires-database-connection#comment26650242_18185239\r\n\r\nUpdate 1:\r\nRails 4.0, Ruby 2.0.0-p247.\r\n\r\nUpdate 2:\r\nDemo app - https://github.com/x3qt/validation_bug_demo'
11848,'robin850','Raise an extended version of NoMethodError in AS::TimeWithZone.\nAn error message can vary across Ruby implementations. This fix ensures an enhanced version of NoMethodError is raised, so that it can be inspected properly, instead of relying on the varying message.\r\n\r\nFixes issues with Rubinius and possibly JRuby.\r\n\r\n/cc @dbussink @headius'
11729,'NZKoz','Mask CSRF tokens to mitigate BREACH attack\nThe [BREACH attack](http://breachattack.com) described at Black Hat this year allows an attacker to recover plaintext from SSL sessions if they have some idea what they\'re looking for. One high-value thing to steal that has a predictable plaintext format is the CSRF token (because it always appears in a meta tag and frequently in form tags as well).\r\n\r\nThe researchers who discovered the attack suggest mitigating it by "masking" secret tokens so they are different on each request. This implements their suggested masking approach from section 3.4 of [the paper (PDF)](http://breachattack.com/resources/BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf). The authenticity token is delivered as a 64-byte string, instead of a 32-byte string. The first 32 bytes are a one-time pad, and the second 32 are an XOR between the pad and the "real" CSRF token. The point is not to hide the token from the client, but to make sure it is different on every request so it\'s impossible for an attacker to recover by measuring compressability.\r\n\r\nThe code should be backwards-compatible with existing Rails installs; the format of `session[:_csrf_token]` is unchanged, and unmasked tokens will still be accepted from clients (with a warning) so that you don\'t invalidate all your users\' sessions on deploy. However, if users have overridden `ActionController#verfied_request?`, this may break them (depending on whether or not they\'re calling `super`).\r\n\r\nThis is **not** a blanket fix for BREACH, just a way of protecting against one particular variant of attack. I am not a security expert; I\'ve just implemented the fix as suggested in the paper. This should be reviewed by someone who knows what they\'re doing.'
11594,'tenderlove','Added test cases and a fix for rails/rails#10865 - double incrementing of counter cache.\nAssuming Topic has_many Replies and Reply belongs_to Topic, the counter cache was incremented twice if reply is saved after reassignment, as follows:\r\n\r\n    reply.topic = topic  # triggers BelongsToAssocation#replace\r\n    reply.save           # triggers BelongsTo belongs_to_counter_cache_after_update\r\n\r\nThe problem is caused by duplicate work.\r\n\r\nConsider the following various ways to update a foreign key:\r\n\r\n### Case 1: new, assignment, save\r\n\r\n[example](https://github.com/rails/rails/blob/4-0-stable/activerecord/test/cases/associations/belongs_to_associations_test.rb#L273)\r\n\r\nThis is not affected because it is not an update and BelongsTo `belongs_to_counter_cache_after_update` is not triggered.\r\n\r\n### Case 2: new, assignment, save, assignment, save\r\n\r\n[example](https://github.com/rails/rails/blob/4-0-stable/activerecord/test/cases/associations/belongs_to_associations_test.rb#L283)\r\n\r\nThis is not affected because the `@_after_create_counter_called` flag does its work in [BelongsTo](https://github.com/rails/rails/blob/4-0-stable/activerecord/lib/active_record/associations/builder/belongs_to.rb#L44).\r\n\r\n### Case 3: find/create, assignment, save\r\n\r\n(Refer to new test case in this pull request.)\r\n\r\nIn the simplistic case, the save is superfluous, but because `BelongsToAssocation#replace` and `belongs_to_counter_cache_after_update` are both triggered, the counter is incremented twice.\r\n\r\n### Case 4: find/create, append, save\r\n\r\n(Refer to new test case in this pull request.)\r\n\r\n```ruby\r\nreply = Reply.find(1)\r\ntopic.replies << reply\r\nreply.save\r\n```\r\n\r\nSimilarly, the save is superfluous. This is not affected because `<<` does not trigger `BelongsToAssocation#replace`.\r\n\r\n### Case 5: find/create, append, assignment, save\r\n\r\n(Refer to new test case in this pull request.)\r\n\r\n```ruby\r\nreply.topic = t1    # not saved, but counter updated\r\nt2.replies << t2    # save! called, previous change needs to be undone\r\n```\r\n\r\n### Fix\r\n\r\nThis commit adds `@_dirty_but_updated_counter_cache` flag to `reply` if it has already triggered an increment, but has not been saved yet. Thus, when the reply is actually saved, the superfluous increment does not occur.\r\n\r\nNote that because of Case 5, the flag cannot be a simple boolean flag.'
11535,'rafaelfranca',"Use association scope attributes over default attributes/scope\nIn order to build/create associated objects with default attributes extracted from association scope neither use them from default scope/attributes if they has the same names.\r\n\r\nTest case:\r\n\r\n```ruby\r\nunless File.exists?('Gemfile')\r\n  File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '= 4.0.0'\r\n    gem 'sqlite3'\r\n  GEMFILE\r\n\r\n  system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.string :author, default: 'Test'\r\n    t.integer :post_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :admin_comments, -> { where author: 'Admin' }, class_name: 'Comment'\r\n\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < MiniTest::Unit::TestCase\r\n  def test_association_stuff\r\n    post          = Post.create\r\n    admin_comment = post.admin_comments.build\r\n\r\n    assert_equal 'Admin', admin_comment.author\r\n  end\r\nend\r\n```\r\n\r\nFor __master__ version this test case is failed.\r\n\r\nProblem investigation:\r\n\r\nby the order of attribute initialization we have:\r\n\r\n1. Initializing default attributes from column: https://github.com/rails/rails/blob/master/activerecord/lib/active_record/core.rb#L171\r\n2. Override column attributes by default scope attributes: https://github.com/rails/rails/blob/master/activerecord/lib/active_record/core.rb#L177\r\n3. And only then invoking initializing of association related data: https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/association.rb#L239\r\n4. But https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/association.rb#L164 in case to filter User defined attributes like `post.admin_comments.build(author: 'Another Admin')` there is `record.changed` which skip association scope attrbutes with same name with `default_scope` or default column attributes.\r\n\r\nI'd like to move `initialize_attributes` before default attributes initialized or refactor it to override default attributes, but some other classes use it and need more time to investigate how to complete refactoring. In same time I need to ask, do we need this feature, should I continue refactoring of `build_record ` and `initialize_attributes`?\r\n\r\nFor now I added fast fix.\r\n\r\n/cc @senny, @rafaelfranca, @carlosantoniodasilva "
11183,'rafaelfranca','Added / Edited ActiveModel::Errors test cases.\n- Added test cases to demo the difference between `include?` and `empty?`\r\n- Make `size` and `count` behave consistently.'
11085,'carlosantoniodasilva',"fix identifier error message of partial with unvalid charter\nThe partial should start with an underscore not with a underscore or letter.\r\nIt  possibile render an alias partial inside a view using the <%= render file: 'name/no_start_with_undescore' %>\r\nbut it is not a partial.\r\n\r\nbefore this PR IDENTIFIER_ERROR_MESSAGE could lead to misunderstand the convention of partial name.\r\nAdded OPTION_AS_ERROR_MESSAGE for unvalid charter in as option."
10900,'pixeltrix',"Time marshalling with jruby is broken\nEnvrionment\r\njruby 1.7.2\r\nMacbook pro with snow leapord\r\nActivesupport 3.2.12\r\n\r\nProblem\r\nMarshaling and un-marshaling a time object adds 1 hour\r\n\r\n```\r\n~/project/ » bundle exec irb\r\nirb(main):001:0> Marshal.load(Marshal.dump(Time.now))\r\n=> 2013-06-09 23:00:28 -0500\r\nirb(main):004:0>\r\nirb(main):005:0* require 'active_support/core_ext/time/marshal'\r\n=> true\r\nirb(main):006:0> Marshal.load(Marshal.dump(Time.now))\r\n=> 2013-06-10 00:00:34 -0500\r\n```"
10271,'pixeltrix','Respect custom primary keys for nested attributes\nActiveRecord allows us to specify custom primary keys, but does not properly accept them for nested attributes.\r\n\r\nFor example, with the models:\r\n\r\n```ruby\r\nclass Deck < ActiveRecord::Base\r\n  has_many :cards, autosave: true\r\n  accepts_nested_attributes_for :cards, allow_destroy: true\r\nend\r\n\r\nclass Card < ActiveRecord::Base\r\n  self.primary_key = "uuid"\r\n  belongs_to :deck\r\nend\r\n```\r\n\r\nThe primary key stored in the database (and presumably other related applications) as `uuid`, and the object is serialized as such:\r\n```ruby\r\nmy_deck.cards.inspect\r\n# => [{"uuid":"abcd","content":"Hello","deck_id":14,"created_at":"2013-04-17T22:05:09.623Z","updated_at":"2013-04-17T22:05:09.679Z"},{"uuid":"efgh","content":"World!","deck_id":14,"created_at":"2013-04-17T22:05:09.626Z","updated_at":"2013-04-17T22:05:09.681Z"}]\r\n\r\nmy_deck.cards.to_json\r\n#=> [{"uuid":"abcd","content":"Hello","deck_id":14,"created_at":"2013-04-17T22:05:09.623Z","updated_at":"2013-04-17T22:05:09.679Z"},{"uuid":"efgh","content":"World!","deck_id":14,"created_at":"2013-04-17T22:05:09.626Z","updated_at":"2013-04-17T22:05:09.681Z"}]\r\n```\r\n\r\nTo create a new instance of the model itself:\r\n```ruby\r\nmy_deck.cards.create(uuid:"abcdefg", content: "Sup?")\r\n```\r\n\r\nHowever, using the correct primary key in an update to nested attributes will fail in multiple ways:\r\n```ruby\r\n# Can\'t destroy nested objects\r\nmy_deck.update([{uuid:"abcd",content:"Hello", _destroy: true}},\r\n                {uuid:"efgh",content:"World!", _destroy: true}])\r\nmy_deck.cards.inspect\r\n#=> [{"uuid":"abcd","content":"Hello","deck_id":14,"created_at":"2013-04-17T22:05:09.623Z","updated_at":"2013-04-17T22:05:09.679Z"},{"uuid":"efgh","content":"World!","deck_id":14,"created_at":"2013-04-17T22:05:09.626Z","updated_at":"2013-04-17T22:05:09.681Z"}]\r\n\r\n# Attempting to modify an object creates a new one,\r\n# with the same primary key value (which will fail)\r\nmy_deck.update([{uuid:"abcd",content:"Something"}},\r\n                {uuid:"efgh",content:"Else!"}])\r\n#=> Throws ActiveRecord::RecordNotUnique error\r\n```\r\nInstead, we currently need to set up a hash like so:\r\n```ruby\r\nmy_deck.update([{id:"abcd",content:"All alone :("}},\r\n                {id:"efgh",content:"Else!", _destroy: true}])\r\nmy_deck.cards.inspect\r\n#=> [{"uuid":"abcd","content":"All alone :(","deck_id":14,"created_at":"2013-04-17T22:05:09.623Z","updated_at":"2013-04-17T22:05:09.679Z"}]\r\n```\r\n\r\nForcing the use of the arbitrary key `id` doesn\'t seem to make a lot of sense, and it forces anything interacting with Rails (and sometimes even Rails itself) to specially modify the object hash to use an otherwise unknown key.\r\n\r\nThe only tests that I needed to modify were two that specifically deal with custom primary keys in nested attributes (as these were verifying the old behavior), and all other tests pass.\r\n\r\nPlease let me know if you have any issues or if you think there is a better way to go about this.'
10169,'rafaelfranca','Make `.select()` query method accept a hash option for stating field selection on joined tables. \nHi,\r\n\r\nThe `.select` query method accepts multiple arguments. I added that when one of those arguments is a Hash, the key would be understood as the name of a table and each of its values as fields of said table.\r\n\r\nExample:  \r\n\r\n```\r\nUser.joins(:posts).select(:name, posts: [:id, :title, :body])\r\n#   => SELECT name, posts.id, posts.title, posts.body FROM "users" INNER JOIN "posts" ON "posts"."user_id" = "users"."id"\r\n```\r\n\r\nLet me know how can I help you to get this merged.\r\n\r\nThanks.'
10132,'pixeltrix',"Asset pipeline tries to serve non-assets when they start with the asset prefix\n### Actions\r\n- Start with a basic Rails 3.2.13 application\r\n- Change the asset prefix in `application.rb` to `'/a'`\r\n- Create an `apples` resource\r\n- Visit `/apples`\r\n\r\n### Expected Result\r\n- The index action for the apples resource is rendered\r\n\r\n### Actual Result\r\n- `Served asset /pples - 404 Not Found`\r\n\r\nThe asset pipeline tries to render an asset any time a route is accessed that starts with the prefix, regardless of whether there is a trailing slash after the prefix. We *should* render an asset only if there is a slash after the prefix. E.g. `/a/pples` should try to render the `pples` asset, but `/apples` should not. This occurs with the default `/assets` prefix, but its less apparent because its rare to have other routes that begin with 'assets'.\r\n\r\nFrom what I can tell, this is a result of the way that `Mapper::Base#mount` works (the sprockets application is mounted at the `config.assets.prefix` path). I was hoping to provide a patch, but I can't think of a clean way to do it. Any thoughts or tips would be appreciated.\r\n"
10091,'pixeltrix',"Running 'rake assets:precompile' in dev mode makes Rails include code twice\nIn Rails 3.2.13, the default `application.js` depends on `jquery` and `jquery_ujs`. When you boot into development mode and load the default layout, you get three `script` tags: `jquery.js`, `jquery_ujs.js` and `application.js`, the last of which has no code in it.\r\n\r\nNow run `rake assets:precompile`. The request for `application.js` now gets routed to `public/assets`, and you get a file containing all the minified source of `jquery.js` and `jquery_ujs.js`. However, you still get `script` tags for `jquery.js` and `jquery_ujs.js`.\r\n\r\nSo, Rails is both loading `application.js` from `public/assets` and reading the copy in `app/assets`, getting its dependencies and rendering `script` tags for those too.\r\n\r\nThis results in all JS code being loaded twice, causing all manner of weird bugs. Precompiling during development is useful for running tests, which is best done with static files rather than by booting Rails. Please make `javascript_include_tag` do something sane when it finds precompiled files in development mode."
9990,'pixeltrix','Change routing `normalize_path` regular expression to match /(:param)other_stuff fixes #8578\nThere is an issue where a scoped optional parameter is incorrectly being substituted when at the root of a route so as that it then doesn\'t match without the parameter at the root. e.g.\r\n\r\n`scope "/(:optional/):required"` should match both `/optional/required` and `/required`\r\n\r\nThis is a change to the `normalize_path` regular expression fixing the incorrect substitution of the root `/` when used with an optional param, which make parameters optional again. e.g.:\r\n\r\n    # before \r\n     /(:optional/):required => (/:optional):required\r\n    # after (correct)\r\n    /(:optional/):required => /(:optional/):required\r\n\r\nFixes #8578\r\n\r\n**Edit** Updated the text to make it clearer what this is fixing\r\n**Edit x2** The test has been reverted to using a `-` so it can\'t be fixed by rewriting the regexp, but it\'s still a valid route.'
9917,'rafaelfranca','specific length validator for ActiveRecord to respect `mark_for_destruction`.\nI implemented a separate validator to ensure that records, which are marked for destruction do not count when validating the length.\r\n\r\nI also noticed that AR already had specific length tests, which I moved into a separate test-case.\r\n\r\nCloses #7247.'
9894,'rafaelfranca',"ActiveRecord.where(hash).create callbacks inherit the where(hash)\nRunning rails 4.0.0-beta1 on ruby 2.0.0-p1.\r\n\r\nIt seems as though when you perform code like the below, the where clauses are inherited by any callbacks it runs.\r\n\r\n```ruby\r\nCategory.where(full_name: 'root/bar').create\r\n```\r\n\r\nThe above exhibits the problem. All of the below function as intended.\r\n\r\n```ruby\r\nCategory.new(full_name: 'root/bar').save\r\nCategory.create(full_name: 'root/bar')\r\nCategory.where(full_name: 'root/bar').new.save\r\n```\r\n\r\nBy debugging on the rails console it reveals:\r\n```ruby\r\n# This is basically running\r\nCategory.where(full_name: 'root/bar').where(full_name: 'root').first\r\n\r\n# When this is expected\r\nCategory.where(full_name: 'root').first\r\n```\r\n\r\nThis also applies to the first_or_create methods. I'm yet to test the find_or_create methods or the rails 3.x series. Should I write this into an active_record test? Any advice as to where to start?\r\n\r\nI've created an example application with this problem here https://github.com/brocktimus/rails_create_differences. Example class used below.\r\n\r\n```ruby\r\nclass Category < ActiveRecord::Base\r\n\r\n  has_many :children, class_name: 'Category', foreign_key: :parent_id\r\n  belongs_to :parent, class_name: 'Category'\r\n\r\n  before_validation :assign_parents, on: :create\r\n\r\n  private\r\n\r\n  def assign_parents\r\n    parts = full_name.split '/'\r\n    self.name = parts.pop\r\n    self.parent = Category.where(full_name: parts.join('/')).first_or_initialize unless parts.empty?\r\n  end\r\n\r\nend\r\n```"
9640,'pixeltrix','`time_zone_options_for_select` should show all time zones below the separator when priority time zones are specified.\nContinuation of Pull Request #9620\r\n\r\nThe following:\r\n\r\n```\r\n   f.time_zone_select :time_zone, [ ActiveSupport::TimeZone[\'Pacific Time (US & Canada)\'] ]\r\n```\r\n\r\nwill not show time zone "(GMT-08:00) Pacific Time (US & Canada)" below the separator, it will only show at the top of the options list.\r\n\r\nWe regularly get tickets from our users who say they get confused when they can\'t find the time zone (or country or language or etc.) in the (long) list below the options separator where they would expect to find the value. \r\n\r\nThis usually happens when a user goes into edit mode and a non-priority option is selected (e.g. "(GMT-07:00) Arizona"), and they want to change it to a different selection. It\'s not obvious they then have to look at the top (as the top is often also out of sight). \r\n\r\nThis patch always shows all time zone options below the separator, even when they are listed as a priority time zone.\r\n\r\nSee also [discussion](https://github.com/rails/rails/pull/9620#discussion-diff-3307962)\r\n\r\n'
9620,'pixeltrix','Priority options for form.select, options_for_select and options_from_collection_for_select\nWe have several select boxes with relatively long lists and want a small set of options to be placed at the top as they are used most often. And/or where we want to emphasise a certain option by always placing it at the top. Think of lists showing time zones, countries, languages, etc.\r\n\r\nCurrently `time_zone_select` does something similar. This patch generalizes that case.\r\n\r\nIt accepts a `priority` option for `form.select`, `options_for_select` and `options_from_collection_for_select`. When specified the given values will be placed at the top of select options, followed by all the options separated by a line.\r\n\r\nFor example, the country_select plugin/gem then becomes a simple one-liner:\r\n```\r\n  f.select :country, COUNTRIES, :priority => ["United States", "Canada"]\r\n```\r\n\r\nThe method `time_zone_options_for_select` delegates to `options_from_collection_for_select`. The time zone method would not show the priority zones below the fold. This patch will show the priorities at top, but also in their usual place below the fold. Especially in long lists users get confused when they are for example looking for the country "United States" at the bottom of the list, but then can\'t find it because it\'s shown as a priority country at the top. If a priority option is selected the option below the fold is not selected.\r\n\r\n\r\n'
9382,'rafaelfranca',"use html key as html_options in form helpers\nBefore\r\n```erb\r\n<%= form_for @user, html: { class: 'form-class' } do |f| %>\r\n  ...\r\n  <%= f.select :roles, [['Regular', 1], ['Admin', 2]], { include_blank: true }, multiple: true %>\r\n\r\n  <%= f.select :sub_roles, [['Regular', 1], ['Admin', 2]], {}, multiple: true %>\r\n  ...\r\n```\r\nAfter\r\n```erb\r\n<%= form_for @user, html: { class: 'form-class' } do |f| %>\r\n  ...\r\n  <%= f.select :roles, [['Regular', 1], ['Admin', 2]], include_blank: true, html: { multiple: true } %>\r\n\r\n  <%= f.select :sub_roles, [['Regular', 1], ['Admin', 2]], html: { multiple: true } %>\r\n  ...\r\n```\r\n\r\nI think it will make it more readable\r\nAlso make it similar to `form_for`\r\n"
9160,'rafaelfranca',"Fix #9127, Extract PostgreSQL array column defaults more reliable.\nAs described in #9127 defaults of PostgreSQL columns of array types\r\nare not extracted when the ARRAY constructor expression was used since\r\nonly the curly braces notation is expected.\r\nThis can lead to the situation that new instances of\r\nactiverecord models don't prefill the relating attribute with the\r\ndefault value as usual and set them to ```nil``` instead.\r\n\r\nNonetheless it is completely valid to define a default value for a\r\ncolumn with the ARRAY constructor expression."
9157,'rafaelfranca','Inverse instance should be set before attribute assignment when building through a relationship\nAs the title says ^\r\n\r\nConsider:\r\n\r\n```ruby\r\nclass Child < ActiveRecord::Base\r\n  belongs_to :parent, inverse_of: :children\r\n\r\n  def first_name= value\r\n    super.tap { self.name = "#{value} #{parent.last_name}" }\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\nclass Parent < ActiveRecord::Base\r\n  has_many :children, inverse_of: :parent\r\nend\r\n```\r\n\r\nNow when I run the code:\r\n\r\n```ruby\r\nchild = Parent.new(first_name: \'John\', last_name: \'Smith\').children.build(first_name: \'Alex\')\r\n```\r\n\r\nI\'d expect it to give the child the parent object before assigning the attributes. Something like....\r\n\r\n```ruby\r\nchild.name #= Alex Smith\r\n```\r\n\r\nBut it doesn\'t. In method `first_name=` parent is still `nil` !!!'
9052,'matthewd','Added #or to ActiveRecord::Relation\nActiveRecord::Relation#or returns a new relation, which is the\r\nresult of filtering the current relation according to the\r\nconditions in the arguments, joining WHERE clauses with OR\r\noperand, contraty to the default behaviour that uses AND.\r\n\r\nActiveRecord::Relation#or accepts conditions in one of several\r\nformats. In the examples below, the resulting SQL is given as an\r\nillustration; the actual query generated may be different depending\r\non the database adapter.\r\n\r\n* without arguments\r\n\r\nIf ActiveRecord::Relation#or is used without arguments, it returns\r\nan ActiveRecord::OrChain object that can be used to chain queries\r\nwith any other relation method, like where:\r\n\r\n    Post.where("id = 1").or.where("id = 2")\r\n    > SELECT `posts`.* FROM `posts`  WHERE ((\'id = 1\' OR \'id = 2\'))\r\n\r\nIt can also be chained with a named scope:\r\n\r\n    Post.where("id = 1").or.containing_the_letter_a\r\n    > SELECT `posts`.* FROM `posts`  WHERE ((\'id = 1\' OR \'body LIKE \\\\\'%a%\\\\\'\'))\r\n\r\n* ActiveRecord::Relation\r\n\r\nWhen #or is used with an ActiveRecord::Relation as an argument, it\r\nmerges the two relations, with the exception of the WHERE clauses,\r\nthat are joined using the OR operand.\r\n\r\n    Post.where("id = 1").or(Post.where("id = 2"))\r\n    > SELECT `posts`.* FROM `posts`  WHERE ((\'id = 1\' OR \'id = 2\'))\r\n\r\n* anything you would pass to #where\r\n\r\nActiveRecord::Relation#or also accepts anything that could be passed\r\nto the #where method, as a shortcut:\r\n\r\n    Post.where("id = 1").or("id = ?", 2)\r\n    > SELECT `posts`.* FROM `posts`  WHERE ((\'id = 1\' OR \'id = 2\'))\r\n\r\nThis is my first contribution to rails and I tried to keep things coherent with the current code, but I am obviously open for feedback.'
8679,'pixeltrix',"assert_recognizes don't aware of constraints\nI notice in the method recognized_request_for used in assert_recognizes that it's not aware of the constraints of a route, so will always trigger an RoutingError exception.\r\n\r\nhttps://github.com/rails/rails/blob/v3.2.9.rc3/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L210"
8489,'pixeltrix','Fix relative_url_root in integration tests (#8480)\nPreviously, url helpers in integration tests ignored RAILS_RELATIVE_URL_ROOT, so\r\neven though the app worked, test code would not use the relative_url_root\r\nin url helpers.\r\n\r\n_Before:_\r\nwhen running a test like this:\r\n        `$ RAILS_RELATIVE_URL_ROOT=\'/context\' rake test`\r\n\r\ntests with code like this:\r\n        `assert_equal "http://relfoo.com/context/foo", rel_foos_url`\r\n\r\nwould fail like this:\r\n        `<"http://relbar.com/context/foo"> expected but was <"http://relbar.com/foo">.`\r\n\r\n_After:_\r\n    Tests pass, yay! :-)'
8294,'pixeltrix','assert_routing does not work for mounts\nThe following code causes the error "No route matches /test" on Rails 3.2.9. I don\'t think this is a 3.2.9 specific issue, tho.\n\nRoutes\n\n```ruby\nRouteIssue::Application.routes.draw do\n  class RackApp\n    def call(env)\n      [200, {"Content-Type" => "text/html"}, ["I\'m Old Gregg"]]\n    end\n  end\n\n  mount RackApp.new, at: "/test"\nend\n```\n\nTest\n```ruby\nassert_routing "/test", { :controller => "test" }\n```\n\nIs there another way I should be testing mounts?'
8189,'rafaelfranca','Move multi-parameter attributes from ActiveRecord to ActiveModel\nMulti-parameter attributes (used to build a complex type like a `Date` from several simple values that can be easily POSTed) are currently implemented in `ActiveRecord::AttributeAssignment`. This is pretty frustrating if you\'re trying to use an `ActiveModel::Model` with `Date` or `DateTime` fields.\r\n\r\nI\'ve fixed this by moving multi-parameter conversion to the `ActionController::Parameters` class, so it happens before the value hits the model. IMO the model layer shouldn\'t need to be aware of the format that\'s used to pass the data from the client to the server.\r\n\r\nTo support this the type that the values should be re-assembled into is included in the form (e.g. `<input type="hidden" name="my_model[created_at(type)]" value="Date">`) instead of being determined from the model schema.\r\n\r\nThe main aim was to get multi-parameter attributes working with `ActiveModel`, but a nice side effect of this implementation is that it becomes very easy to register custom types. For example, you could easily submit an amount of money as a currency and an amount and have it converted to your own custom `Money` class:\r\n\r\n        # In an initializer somewhere:\r\n        ActionController::MultiParameterConverter.register_type(\'Money\') { |currency, amount|\r\n          Money.new(currency, amount)\r\n        }\r\n\r\n        # View:\r\n        <input type="text" name="my_model[price(1)]" value="$">\r\n        <input type="text" name="my_model[price(2f)]" value="50.00">\r\n        <input type="hidden" name="my_model[price(type)]" value="Money">\r\n\r\nThis isn\'t a finished implementation yet. It needs documentation, and the `ActiveRecord` implementation needs to be deprecated or removed. I\'ve added multi-parameter support to `ActionController` and updated the `date_select`, `datetime_select` and `time_select` helpers to use the new implementation. I figured this was far enough to get some feedback.\r\n\r\n---\r\n\r\n**Edit:** Renamed from *Move multi-parameter attributes from ActiveRecord to ActionController* to *Move multi-parameter attributes from ActiveRecord to ActiveModel* to reflect the current state of the change.'
8146,'rafaelfranca','don\'t eagerload paths that have been flagged as eager_load => false\nHey @spastorino,\r\n\r\nThis has created a regression in how paths are eager loaded:\r\n\r\nhttps://github.com/rails/rails/commit/53778ec2d716f860646fd43957fd53c8db4da2fe\r\n\r\nHowever, I don\'t think there\'s anything wrong with this commit.... I\'ll explain more:\r\n\r\nBefore the above commit:\r\n\r\n ?> pp Rails.configuration.paths.eager_load\r\n["/home/jsharpe/project/app/assets",\r\n "/home/jsharpe/project/app/controllers",\r\n "/home/jsharpe/project/app/helpers",\r\n "/home/jsharpe/project/app/models",\r\n "/home/jsharpe/project/app/modules",\r\n "/home/jsharpe/project/app/structs",\r\n "/home/jsharpe/project/app/workers"]\r\n\r\n\r\nAfter the commit:\r\n\r\n?> pp Rails.configuration.paths.eager_load\r\n ["/home/jsharpe/project/app/controllers",\r\n  "/home/jsharpe/project/app/helpers",\r\n  "/home/jsharpe/project/app/models",\r\n  "/home/jsharpe/project/app/modules",\r\n  "/home/jsharpe/project/app/structs",\r\n  "/home/jsharpe/project/app/workers",\r\n  "/home/jsharpe/project/app"]\r\n  \r\n\r\nNote that /assets is now missing from #eager_load - which was the intent of the patch.  However, /app is now included when it wasn\'t before.\r\n\r\nI\'m pretty sure that it was a bug before the commit that /app was missing.  It is set to be eager_load => true here:\r\n\r\nhttps://github.com/rails/rails/blob/3-2-rel/railties/lib/rails/engine/configuration.rb#L42\r\n\r\nNow that /app is (correctly) part of eager_load, it now automatically loads anything inside of /app - including things that are specifically intended not be loaded.\r\n\r\nFor example, if I do this in config/ application.rb:\r\n\r\nconfig.paths.add(\'app/manifests\', :eager_load => false)\r\n\r\nthen files located in app/manifests are loaded - and that I believe is a regression.  The attached patch fixes that.\r\n\r\nI\'m trying to set up the rails test suite up and running, but I wanted to at least start this conversation.\r\n\r\nThanks!'
7245,'pixeltrix','Inconsistent output from ActiveSupport::TimeZone.all\nDue to caching, `ActiveSupport::TimeZone.all` returns different results if a non-ActiveSupport-supported zone was looked up first. \n\n````\nActiveSupport::TimeZone.all\n# not in ActiveSupport::TimeZone::MAPPING, but still a valid zone\nchicago = ActiveSupport::TimeZone[\'America/Chicago\']\nActiveSupport::TimeZone.all.include?(chicago)\n=> false\n````\n\n````\nchicago = ActiveSupport::TimeZone[\'America/Chicago\']\nActiveSupport::TimeZone.all.include?(chicago)\n=> true\n````\n\nThis affects `time_zone_options_for_select`, in that the `selected` arg of that function is a string matched to the names of zones in `ActiveSupport::TimeZone.all`. If your app stores timezones in TZInfo format, the helper may not generate an option tag for a recognized zone.\n\nI see two ways around this:\n1. Change the helper to recognize TZInfo identifiers\n2. Update the zones cache when lazy-loading time zones.\n\nChanging the helper might unintentionally change your data ("America/Chicago" would get converted to "Central Time"). It seems like Rails is opinionated about what zones it wants to use, so that might not be a big deal. The second approach avoids that problem, but still requires you to look up the alternate zone before it shows up in the list.\n\nThoughts?'
7218,'guilleiguaran','image_tag in ActionView::TestCase not respecting asset pipeline\nWhile testing helper methods that use image_tag\n\n```ruby\nmodule SomeHelper\n  def using_image_tag\n    image_tag("rails.png")\n  end\nend\n```\n\nthe helper returns the image path starting with \'/images\' even though the asset pipeline is turned on\n\n```ruby\nrequire \'test_helper\'\n\nclass SomeHelperTest < ActionView::TestCase\n  test "should resolve src to /assets/rails.png" do\n    assert_equal "<img alt=\\"Rails\\" src=\\"/assets/rails.png\\" />", using_image_tag\n  end\nend\n```\n\ngiving\n\n```output\n  1) Failure:\ntest_should_resolve_src_to_/assets/rails.png(SomeHelperTest) [/Users/manda/projects/demo/test/unit/helpers/some_helper_test.rb:5]:\n<"<img alt=\\"Rails\\" src=\\"/assets/rails.png\\" />"> expected but was\n<"<img alt=\\"Rails\\" src=\\"/images/rails.png\\" />">.\n```\n\na repo with new app showing the problem, just run rake test: git://github.com/Mandaryn/action_view_test_case_problem_with_image_tag_and_asset_pipeline.git\n'
7047,'pixeltrix','Optional parameters in routes\nHello, sorry for Bad English.\nToday i updated from 3.1.3 to 3.2.6 and found that my routes doesn\'t work correct. I\'m absolutely sure that it\'s because of update. But i\'m not sure that this is documented feature.\n\nmy route looks like\n```\n  resources :searches do \n    match \'(/:catalog_number(/:manufacturer(/:replacements)))\' => "searches#index", :on => :collection, :as => :search, :via => :get\n  end\n```\nand I call it so\n```\n<%= link_to \'Посмотреть аналоги всех найденных номеров\', search_searches_path(params[:catalog_number], nil, "1"), :remote => true, :class => \'ajax-search\' %>\n```\nto get url\'s that\'s i need\n.../searches/catalog_number/manufacturer/1\n.../searches/catalog_number/manufacturer/\n.../searches/catalog_number?replacements=1\n\nfor now it\'s always looks like if i add nil to :manufacturer parameter\n.../searches/catalog_number\n\nI can write more cleanly examples but especially copy-paste to reproduce error.'
6922,'pixeltrix','Allow assert_recognizes and recognize_path to support url redirects from...\nCurrently, there is no way to unit test the Redirection module in ActionDispatch::Routing. Also, redirects are not recognized as paths using `recognize_path`. These problems lead to a potential false positive. If you have this routing:\n```ruby\nget \'help\' => redirect(\'http://help.example.org/\')\nget \'help\' => \'help#index\'\n```\nand this test:\n```ruby\ntest "should recognize /help as help#index" do\n  assert_recognizes({:controller => \'help\', :action => \'index\'}, \'/help\')\nend\n```\nthe test passes, but actually, it should recognize /help as a redirect.\n\nWith this commit, it fixes the false negative and allows for url redirection:\n```ruby\nget \'help\' => redirect("http://example.org/")\nassert_recognizes("http://example.org/", "/help")\n```\nThis is just a start to fix this issue, as the Redirection module offers much more than just external url redirection. Would definitely be willing to discuss other ways to unit test redirection; however, i think it is a bug that assert_recognizes does not recognize redirection routes.\n\nMore referenced <a href="https://github.com/rails/rails/issues/2488">here</a>.'
5892,'rafaelfranca','Don\'t fall back to HTML if requested :js format exists anywhere in path set\nActionView has a fallback feature to render an `:html` format template as a "template of last resort" even when `:js` is the only format specified, to support rendering HTML-formatted responses to XHR requests.\r\n\r\nI believe this fallback is broken when using multiple view paths. LookupContext treats a requested `:js` format as `[:js, :html]` when rendering anything except a layout. So the first view path will be matched against formats of `[:js, :html]` before the second view path is considered. Thus an "index.html.erb" in the first path will prevent an "index.js.erb" in any subsequent view paths from being rendered, even though the only format requested was JS.\r\n\r\nMy fix pushes down the fallback to lookup time; it attempts to look up the JS template in the PathSet, rescues any MissingTemplate, and retries with :html. I was conflicted about using exceptions for flow control here, but I wanted to do as little violence to the PathSet API as possible, and it currently raises MissingTemplate on missing templates.\r\n\r\nSome care had to be taken to ensure that layouts still only render their first format (so, for example, a JS request never renders an HTML template). That motivated the introduction of the `@layout_format` ivar.\r\n\r\nMajor props to the Rails team, especially @josevalim, for how accessible this code is. I went from "hmm, that\'s weird" to a failing test case in about 30 minutes. Thanks!'
4127,'strzalek','MissingTemplate issues in Rails 3.0\nThis issue was reported earlier, but its not fixed in 3.0.x latest and some people have reported in 3.1.x as well.\r\n\r\nhttps://github.com/rails/rails/issues/701\r\n\r\n'
3145,'sgrif','Time is created in UTC with local time\nWhen a Model is created using the mass assignment, and the model has a time attribute.\r\n\r\nThe Time attribute is created in local time but with UTC time zone even with config.time_zone properly setted.\r\n\r\nI was studying this wrong behavior and guess that the error is here:\r\n\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/time_zone_conversion.rb#L62\r\n\r\nAs you can see, in the line 62 it only consider :datetime and :timestamp. it does not consider :time to be timezone aware.'
2664,'tenderlove','adds delegetion for eof? to AD::Http::UploadedFile\nif you want to read the file you may need to ask if there is something\r\nto read from'
2045,'rafaelfranca','Add possibility to render partial from subfolder with inheritance\nThe new feature named "template inheritance" don\'t allow to render partial inside subfolders. Partials with slash in path name can be found only from views root folder. \r\n\r\nMy pull request extends behavior of template inheritance, and allow to render partial inside subfolders with inheritance feature. I suggest to use ```./``` at the start, and this partial will be found with relative path (from current directory). So, \r\n\r\n```\r\n  render :partial => "./head/menu"\r\n```\r\n\r\ncan be found in several folders, as template inheritance means:\r\n\r\n```\r\n - views\r\n    - application\r\n      - head\r\n        - menu.html.erb\r\n    - controller_name\r\n      - head\r\n        - menu.html.erb\r\n```\r\n\r\n'
1769,'pixeltrix',"link_to / form_for doesn't work for singular resource\nIn my routes I have\r\n\r\n```ruby\r\nresource :company\r\n```\r\n\r\nand in my views\r\n\r\n```erb\r\n<% form_for(@store) do |f| %>\r\n    …\r\n<% end %>\r\n```\r\n\r\nWhen \r\n\r\nnew action gets an error when rendering\r\n\r\n```undefined method `hash_for_companies_path' for #<Module:0x00000102bfd3f0>```\r\n\r\nThe stack trace reviels that the problem occurs in\r\n\r\n```lib/action_dispatch/routing/polymorphic_routes.rb:133:in `polymorphic_url'```\r\n\r\nedit action can render without errors but the forms url is ```/company.4``` where 4 is the id of the company.\r\n\r\nThis seems to be a bug that has been around for a very long time so I think it's time to fix it."
