@relation large.json
@attribute id integer
@attribute owner string
@attribute content string
@data
9134,'crosbymichael','docker can\'t start container\nHi, \r\nI have found that docker start a container will appear "Cannot start container 4a95e162ebab: open /sys/class/net/veth1afc6a6/brport/hairpin_mode: read-only file system" and I test with the master branch, I think it may related to libcontainer.\r\n\r\n\r\ndocker info \r\nContainers: 116\r\nImages: 436\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:0-2229360-pool\r\n Pool Blocksize: 65.54 kB\r\n Data file: /var/lib/docker/devicemapper/devicemapper/data\r\n Metadata file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Data Space Used: 28.61 GB\r\n Data Space Total: 107.4 GB\r\n Metadata Space Used: 39.26 MB\r\n Metadata Space Total: 2.147 GB\r\n Library Version: 1.02.82-git (2013-10-04)\r\nExecution Driver: native-0.2\r\nKernel Version: 2.6.32-431.el6.x86_64\r\nOperating System: <unknown>\r\nCPUs: 16\r\nTotal Memory: 31.34 GiB\r\nDebug mode (server): true\r\nDebug mode (client): false\r\nFds: 15\r\nGoroutines: 14\r\nEventsListeners: 0\r\nInit Path: /usr/bin/docker'
9075,'SvenDowideit','go-md2man and its dependencies vendored\nThis commit vendors:\r\n    github.com/russross/blackfriday v1.2\r\n    github.com/cpuguy83/go-md2man v1\r\n\r\nSigned-off-by: Shishir Mahajan <smahajan@redhat.com>'
9056,'jfrazelle','Cannot remove (unrelated?) image\nAfter building an image with `docker build -t`, I stopped the container, destroyed it, then attempted to removed the image:\r\n\r\n```\r\nbdha@docker0:~/gollector$ docker images\r\nREPOSITORY              TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\r\ngollector               latest              b11b2ee16fc2        10 minutes ago      225.2 MB\r\n\r\nbdha@docker0:~/gollector$ docker rmi b11b2ee16fc2b9891d23395aedfb81a7ca2b120bac30fb063019f385a121f3dd\r\nError response from daemon: No such id: 53445b6c482d91f5fefb9f6c35609ee8e13d760d4a2a05d82f996e6746e3c2d8\r\n2014/11/09 15:46:52 Error: failed to remove one or more images\r\n```\r\n\r\nI could not find any useful logs.\r\n\r\n```\r\n$ uname -a\r\nLinux docker0 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n$ docker version\r\nClient version: 1.3.1\r\nClient API version: 1.15\r\nGo version (client): go1.3.3\r\nGit commit (client): 4e9bbfa\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.3.1\r\nServer API version: 1.15\r\nGo version (server): go1.3.3\r\nGit commit (server): 4e9bbfa\r\n\r\n$ docker -D info\r\nContainers: 8\r\nImages: 89\r\nStorage Driver: btrfs\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-32-generic\r\nOperating System: Ubuntu 14.04.1 LTS\r\nDebug mode (server): false\r\nDebug mode (client): true\r\nFds: 10\r\nGoroutines: 12\r\nEventsListeners: 0\r\nInit Path: /usr/bin/docker\r\nWARNING: No swap limit support\r\n\r\n$ df -hP /var/lib/docker\r\nFilesystem      Size  Used Avail Use% Mounted on\r\n/dev/sdb         20G  2.4G   17G  13% /var/lib/docker\r\n```'
9019,'SvenDowideit','Man page amendments\nChanged description of --icc option to reflect what it really does.\n\nDescribed --storage-opt option and added STORAGE DRIVER OPTIONS section.'
9010,'shykes','Remove DCO small patch exception\nAs we move forward on automating our pull request review process and\r\ntooling these exceptions hurt more than they help.  For consistency we\r\nshould not allow small patch exceptions for anything.  The source of\r\ntruth going forward for DCO and builds are the official drone status on\r\neach pull request.\r\n\r\nSigned-off-by: Michael Crosby <crosbymichael@gmail.com>'
8967,'fredlf','Learning to use Pulls tool, just ignore\n 098ccba6bd9d64f11690c4ef9cc61e371557316d #8892 : fredlf/relnotes-edit Edits and refinements to 1.3.1 release notes.\r\n- c478143ec0ca8f610f7980991b9b2ba0e1160b3e #8404 : danjpgriffin/master Preserve extended attributes and acls on archlinux build\r\n- 14e65b4f81004b0946816f93a46576bd991fe6e2 #8936 : jfrazelle/drone-server Switch Travis for Drone\r\n- c6cf978b4ba8f246094001be8f8d8d6a4319f697 #8700 : unclejack/install_no_pull contrib/install.sh: remove pull of hello-world\r\n- 59d4161f6945cf50889c2e7418f8c8334b9b53ea #8950 : Bertg/patch-1 makes the -s --size option documentation clearer\r\n- b8678aa7f5f2b266644825a460a0126fe6439b76 #8946 : unclejack/stream_decode Decode JSON to avoid ReadFile\r\n- a34f31b488dce94314e3218e3d52c38747cabc2f #8871 : tonistiigi/start-wait-hijack Wait for hijack on docker start command\r\n- fa59fe997c83e2a6968f8c03c64352acd71c26da #8877 : erikh/proxy_error_check proxy: Fix a potential panic handling error states.\r\n- 6718791ea28be1bd6bce49cd9f49844c24f9dcf7 #8813 : jlhawn/aufs_exclude_on_tar_layer Exclude `.wh..wh.*` AUFS metadata on layer export\r\n- edae8830a9030e23e68cb2fe1edc6f58f825c1b4 #8906 : dqminh/remove-copy-directory change util.CopyDirectory to archive.CopyWithTar\r\n- 9eb8fcd58a5dc0a6fd812fc2bdc410f36dd63cc0 #8390 : MalteJ/set-macaddress Adding docker-cli run param to set MAC address\r\n- b68d7d39bcd96744eec883bb305e907c10fe6aa6 #8924 : pdericson/api-doc-fix Fix typo in api docs: stdou -> stdout\r\n- 5b03a21963931f917297e52cb17a62680f1c2a6e #8799 : jlhawn/remove_jsondata_arg Remove `jsonData` argument from `image.StoreImage`\r\n- 54d6d12556d7f83ad3e9a3ee081ddb6cc98549b4 #8863 : vbatts/vbatts-archive_stat ./pkg/archive: clean up Stat_t assertion\r\n- b8ab729ae63e3b21105ee00478995d8d81dc7d3d #8590 : jfrazelle/8307-iptables-d-restart-fix On daemon shutdown iptables cleanup successfully\r\n- a7dea37b780997c77f034e8cf95f1d6956f18b3f #8901 : dmcgowan/v2_registry_mirror_check Skip V2 registry and immediately fallback to V1 when mirrors are provided\r\n- a85f58719f29f76f465747d095c85dbb8ba69d06 #8739 : duglin/CleanupDockerIgnores Do some cleanup on .dockerignore paths\r\n- 38d3888194c4639200da474d4e186dcbedb6f02d #8932 : duglin/UpdateLogrus Update logrus to the latest so we can use ParseLevel() for PR #8335\r\n- 8872c2903a36b3fbdb76046a4d15cf994d7e336a #8907 : icecrime/clarify_user_instruction_doc Clarify USER instruction documentation\r\n- 025363848b53bf6e2f3726e39fd7ee296d55d2b0 #8927 : bfirsh/dont-pass-args-to-help-when-command-doesnt-exist Fix help text being incorrect with multiple args\r\n- 9ef9bfd15119a3b7c84177ed20ead24d6fb2c2a9 #8929 : LK4D4/fix_filter_hang Fix deadlock in ps exited filter\r\n- 0e4bf159a20efce3cba2109360ee0a94ee5b14aa #8928 : tianon/not-200-chars-anymore Update "official repos" doc to mention 100 char short desc limit\r\n- 4d4a7b81bf82e243bca07af815cb1fe03193b135 #8884 : thomasleveil/userguide-so26652877 Reword a sentence bringing confusion about docker links\r\n- 92bb49720199918b808bcb7544b69f16e3d45c49 #8167 : brahmaroutu/expose_ports_1834 adding support for port ranges on --expose\r\n- 9cc71b459771d0cbac51051410859fd878236920 #8468 : laktek/master Fix URL check in build from Git.\r\n- 7cb12133ae362055ff51d1ea5f71ad9cef6b2fae #8818 : coolljt0725/fix_exec_help Fix docker exec help messages.\r\n- a92393bb170be8e10cc2dcada748d0e5b1da0569 #8878 : thaJeztah/patch-1 Typo in 1.3.1 change log\r\n- 058aa0cbc2f1f85cf777138761389f9bb4af6584 #8894 : vieux/fix_docs_filter add missing \'current filter\' to ps\r\n- 7a2dc8b889e6154a6bfc93305382c894f716d61d #8895 : erikh/proxy_udp_size pkg/proxy: Bump the maximum size of a UDP packet.\r\n- 0f9f5f3fdfd45ef7759d6b163860aac4436bf9b7 #8839 : irachex/dns-search-doc Add docs for --dns-search=.\r\n- 107898a773d7345119917cf8f879a2c71f0a940c #8837 : sawalls/patch-2 ubuntulinux.md - old commands, typo, section movement\r\n- c2ff42552ab1fce8c4385d32b667aee676d70f70 #8873 : SvenDowideit/de-cleanup-Dockerfile Yes, the review really should have picked up this spelling mistake\r\n- f68b8b33e6827c54d86abdd7ef36356453d3703b #8850 : shuai-z/clean-mount Clear the internal state before raising error.\r\n- aca253d6d0b84c74a32c624d7c39e3a5fcae7773 #8866 : tonistiigi/fix-8832-logs-panic Fix panic on slow log consumer.\r\n- 793fb26bffd27f4db9324bc38f64fee78d5ba874 #8510 : hqhq/graphdriver_bug daemon: resolve the graphdriver to show\r\n- 6d6dc2c1a1e36a2c3992186664d4513ce28e84ae #8870 : tiborvass/merge_release_v1.3.1 Merge release v1.3.1\r\n- 28af4a1efb25f5dff7a57b81cb51bf6fcf43d085 #8867 : vbatts/vbatts-relocate_mount_operation mount: move the MakePrivate to pkg/mount\r\n- c3762c3abf0c217f5d84729cf15d00f9befc4815 #8822 : wilsaj/patch-2 Update host integration article\r\n- d0197f4f7ee88be50d0502e5397fbec6231c3fdc #8856 : unclejack/reexec_pkg pkg/reexec: move reexec code to a new package\r\n- b63a254522319b9f49cb45f15689968405cf9045 #8747 : SvenDowideit/lets-tell-them-more-about-exec Add a link to some documentation about exec.\r\n- 74564e51ad0269a6d3aa4290c6c070b8f249f1cd #8500 : fredlf/style-guide Adds new Docs Style Guide.\r\n- 265a89a605ad6cdbd6abb85804644f4fd3f30050 #8387 : vbatts/vbatts-registry_test_enpoint registry/endpoint: make it testable\r\n- 73057168fa6f8852c52cdc92f790446da865f2e7 #8046 : vbatts/vbatts-archive_preserve_hard_links archive: preserve hardlinks in Tar and Untar\r\n- 565340c90c2e3402369224450807a047481d9efa #8669 : monsterzz/8668-dualstack-registry Use dual-stack Dialer when talking to registy\r\n- f936a10d8048f471d115978472006e1b58a7c67d #8571 : ncdc/3631-stdout-premature-eof Fix stdout premature EOF\r\n- 006d2334d1e5eb7d29d16290b20ae376d8b1beb8 #8846 : LK4D4/fix_compilation Fix compilation issue bringed by #8319\r\n- fd19e473fc81c8b58d82b1b77cd992c43faa64a8 #8319 : MalteJ/ipv6-ipallocator Implementing IPv6 functionality for ipallocator\r\n- 7d538542ca53488f32db377984b7917480d60917 #8790 : cloojure/patch-2 Update faq.md\r\n- f1ddda6cf735e214a3980a000b1cbfb0d893e38a #8808 : nhsiehgit/dockerfiletut changed dockerfile back button to look nicer\r\n- 290222c3ddbdfb871f7fa088b8c724b9970a75ba #8352 : zachborboa/patch-1 Fix typo\r\n- f0327c99dd6fb7353d76726e0adb67a1b5a98451 #8198 : jfrazelle/add-jessie-to-various-maintainers Adding self to various maintainers files.\r\n- e11dd26a6cbdbaa442fbf5eca6cb05270ed21ae6 #8734 : alex/patch-2 Replace fast with quickly\r\n- 90221e28d61ed2a71ebbc8160d60156b8145dc43 #8646 : ndeloof/patch-3 Update docker_remote_api.md\r\n- 75ae54637778e98e06200d2a02afcab6902805aa #8750 : matm/patch-2 dockerimages.md: typo fix\r\n- 01454a50cc3fe2bd5a86befa69427dc2bbaa604e #8762 : fredlf/tutorial-tweaks Tweaks to Dockerfile tutorial\r\n- 9d65017069ff12fbf0a6f078ccf91bce42fc8ffb #8836 : jfrazelle/hub-login-error Fix error on successful login.\r\n- 674e11183a32d803d81d3a7bedee5ee96d7cb68a #8833 : jfrazelle/revert-gccgo-changes Revert gccgo changes\r\n- 321c85d03d925ceef7fc4ddec95f11b4133d8319 #8717 : yosifkit/docs-dockerfile Cleanup docs Dockerfile, so it matches best practices.\r\n- d176d1bfb4b59c5f1dcdebd42a8e22887ea1b80f #8828 : crosbymichael/update-libcontainer-oct4 Update libcontainer to f60d7b9195f8dc0b5d343abbc3293d\r\n- eb1b785e67784ccc9b521566fbc1737d6177d9ad #8772 : aluzzardi/docker-info-mem-cpu Expose # of CPUs and memory available on docker info.\r\n- 29ebb53b522436b9f405b36616a1eeec8b087d2b #8806 : takama/ioreader excluding unused transformation to []byte\r\n- 413f2efba10ac6036c14cf495e2fbb16c1462764 #8807 : erikh/builder_docs builder: Update documentation WRT environment replacement\r\n- 039f2257680f31834aca655dca4ec93a25c2451c #8802 : jlhawn/vfs_copydir_use_archive_copywithtar Use archive.CopyWithTar in vfs.Create\r\n- 55702ae3d6f0d09efc466134e62be909fd38d777 #8809 : erikh/builder_cmd_sh_fix builder: Restore /bin/sh handling in CMD when entrypoint is specified with JSON\r\n- e590aa2c7adb1d221619fd3d11079a307827d463 #8778 : erikh/builder_fixes Builder: Environment replacement fixes\r\n- d42bcc065ad637dc41f348c37e50167aebb5b54a #8805 : vieux/update_sysinfo_to_logrus update `pkg` to logrus\r\n- 339173dd5be7ec8807448f83622aa88561c445a6 #8743 : vieux/hostconfig_start do not send hostconfig at start, as we do on create now\r\n- 80d35c7fd0ca3a3c8d4dd4b4cd575048a9fbc092 #8782 : shuai-z/rm-clean removed redundant Clean\r\n- 15b6b7be010546f30d7eabd000167d428efc0b13 #8770 : LK4D4/logrus_support Logrus support\r\n- 2b4173620586853480c0977743550dbe8c2697b7 #8641 : vbatts/vbatts-archive_test_and_benchmark archive: tests and benchmarks for hardlinks\r\n- 5631ffbdfd252c369d393e41ee86008ab2d7eb7c #6992 : mschurenko/master include --releasever=/ in mkimage-yum.sh\r\n- 10d33150802d848c98adf256df81d949c83cf3cf #8643 : jfrazelle/fix-amazon-linux-dist Fix amazon linux dist\r\n- 350e1b783d4deafbb62ede4d17df37dbaffa373a #8321 : erikh/ui_save_output docker save: Do not save to a terminal.\r\n- c681bea0620d24e9df370147a13a98f94bc66ee0 #8744 : erikh/empty_entrypoint_inheritance builder: some small fixups + fix a bug where empty entrypoints would not override inheritance.\r\n- d515590d153ed1299ffe386eb30598c15bf61007 #8325 : mwhudson/do-not-use-X Stop using -X flag to set global variables\r\n- 78075abf81c45bfca16604919136eae99a2d7bff #8746 : aluzzardi/bump-api-v1.16 Bump API to v1.16.\r\n- 665cd10d59ee6ea54f64f5b8e4ca30d07f3afdb7 #8760 : jfrazelle/8745-output-log Client should use go log package.\r\n- 9094c19a6d69f5adf438463f6a3c19f5dad42bd9 #8315 : dqminh/save-start-error Save start error into State.Error when the container fails to start\r\n- c6f242b88f7a40d183a95ab68f2a97052ec514a5 #8722 : SvenDowideit/sven-cannot-bash Add --dryrun to allow testing to the docs-release site, and then fix the...\r\n- 8f79bd964fa58124e0f3f4b1c1fdfef04f16a454 #8695 : SvenDowideit/add-details-to-entrypoint-docs Rewrite ENTRYPOINT documentation covering all the combinations with exam...\r\n- 0e6242122d9780709c057fc32e9970529c2e09fb #8671 : shuai-z/master Port number 49153(BeginPortRange) would be returned twice, causing dupli...\r\n- a71b2ec54ad7b5f809176c023ab22c7e062ad909 #8737 : brahmaroutu/resize_uponstart_8728 Allowing resize tty to only work when container is started\r\n- a76c924e6a23329569136bb8569168319f738656 #8453 : estesp/8444-create-bridge-error Gracefully handle network bridge without IP association at startup\r\n- 88e669391260900e48945c54ac74773b9b31816e #8736 : crosbymichael/update-libcontainer-oct3 Update libcontainer to aab3f6d17f2f56606f07f3a6eb6\r\n- 77dcab133c784fa04cd61ddd73661624628be0bf #8735 : estesp/fix-test-timeout-on-drone Up test timeout to 10s based on recent drone.io timeout failures\r\n- 45c511fd5a2f48d05763f7385c9fb6c2d9686f94 #8733 : estesp/error-string-http-status-fix Fix error string mapping to HTTP response code to ignore case\r\n- 1aa67071cb3e6bc8a08f662d913cdb1b1eda1645 #8550 : aluzzardi/f-meminfo system: Add MemInfo utility.\r\n- 5343ede602aa032fce5ad0be4566047b7fd964db #8718 : jfrazelle/run-redirect-test-fix TestRunRedirectStdout kept failing with timed out.\r\n- bb3e33154d4be8779981ad74ca381be3cf57063f #8673 : SvenDowideit/whats-docker-version DOCKER_VERSION and docker-version havn\'t been implemented.\r\n- ba14ddf85b08aef63d51355ffe1c0e15ee0103e7 #8708 : torstehu/fix-url Correct url from github.com/dotcloud/docker{,-py}\r\n- 25c32d3167b13e52001d63690dcca23a70097372 #8672 : estesp/CmdRun-fix-typos-comments Clean up comment sections and fix typos in CmdRun\r\n- c694c66e2facc5194b225fa2bf4bca084cf7e5ee #8692 : jfrazelle/8690-latest-tag-problem Fix problem where building Dockerfile `FROM name:latest`\r\n- 6aeda169957a4b6cabcdd8b3a163118b05af8434 #8682 : wpp/update_linking_documentation Update linking documentation\r\n- a9258f78493b935dfeb6d86908b827786f5c9885 #8680 : wilsaj/patch-1 Docfix: fix cli dashes in boot2docker resizing article\r\n- ca500e0039e4dafbf6bc58520f3ac7f8aadfc7a4 #8651 : flisky/patch-1 fix a small typo\r\n- 6f4529a598a17e0a84f3298d7018a9868e8edad1 #8670 : SvenDowideit/link-to-run-reference-from-cli.md Link to run reference from cli doc\r\n- 47cb56f20f65ade23fed1eec8bb9f2645e31300a #8691 : crosbymichael/fix-integration-race Fix racy integration tests\r\n- 95d1cd0bdead2a1a1d4e70d2f7259d7575761af6 #8661 : estesp/8555-start-exit-code Return container exit code with start -a/-i\r\n- a07ee0db627f592661fa905e35cb58e1593c1be8 #8684 : erikh/onbuild_case_insensitive builder: handle cases where onbuild is not uppercase.\r\n- 9df3e45ba985a6ed7e9a07b308d56d694d1c13ad #8423 : unclejack/lint_changes lint changes part 1\r\n- cf44d6f9cc8f1a84ea6e3c35a9f2d9b232d08d9b #8665 : cpuguy83/8659_clean_paths_for_volumes Clean volume paths\r\n- a10876d35520df10b9a10feb941ffe6922844782 #8573 : estesp/integration-test-migrate Migrate container GET API tests from integration to integration-cli\r\n- a0781f3ea91b47f1a086d441e40296d40a5c84d9 #8509 : cpuguy83/make_copy_support_volumes Make container.Copy support volumes\r\n- af52f8edcf7a4a1b9eaf39d11165e5d3d9457df4 #8638 : LK4D4/fix_8632 Don\'t write pull output to stdout on container creating\r\n- 52784c09b726846a5d404720989a36e0664155cb #8543 : brahmaroutu/filter_containers_7599 Adding capability to filter by name, id or status to list containers api\r\n- b90ab68f2a10e3f1e7a3568e7338afc89cbd00bc #8511 : coolljt0725/fix_tag Fix tag an existed tag name of a repository\r\n- 0c7d2ff2d4a039e7531ba0e09b8dce1670208541 #8559 : rhatdan/404 On Red Hat Registry Servers we return 404 on certification errors.\r\n- 551047a64efdb84a3ac9e5697e765b1da77bcaba #8657 : vincentbernat/update/zsh-completion-2 zsh: update zsh completion for docker command\r\n- 528c15afeda9ef4d4b354d7aaf1be109b14d4110 #8622 : Coaxial/patch-1 Update dockerimages.md\r\n- 5160fbb447586bedd20a58be9be26752419bc3f1 #8649 : mavenugo/master Fixed a minor docs issue in a Dockerfile Example\r\n- 005029cbddfba813e8565ff7da4fd356b242a0c8 #8483 : duglin/TabTest Add a testcase to make sure we don\'t squash tabs or convert them to spaces\r\n- 75fd1b614dfd5acd36975357b51341585f89003c #8639 : erikh/fix_escapes builder: fix escaping for ENV variables.\r\n- 3c325f89e544415bafc23006ead0bdc21cab2f61 #8415 : LK4D4/use_logs_in_builder Use logs instead of attach for builder\r\n- b357f76e5dfea46079ef8a06d0e23e08f14fd12f #8565 : LK4D4/remove_fixtures_copy_tests Remove fixtures copy tests\r\n- fb5e6526d8b32801ee339dd2b328f6685cd66c0e #8561 : albers/bash-completion Fix support for --env-file in bash completion\r\n- 04932e38afa78441e60ba6b86021a61a70e4692c #8614 : ryanrdetzel/master exec docs syntax fix\r\n- 5a20dc67b005717a0549fe504a3b0ccf62c913c6 #8567 : LK4D4/add_log_done Add logDone for TestBuildAddSingleFileToNonExistDir\r\n- 09ceae5c9c268f2b79954b1580c5ec1632f24d0e #8486 : duglin/Issue5701 Add failing testcase for single quotes in CMD\r\n- 6ac9768eaf0d7f4ebe9dcf8205903f5a4cf1a518 #8569 : jfrazelle/Cleanup-errorOut-resp Cleanup: integration-cli (get rid of errorOut)\r\n- 83761be409ff830ebcbd122428ff9209a7a17ae9 #8635 : blakery/master Cleanup: Removed unused function layerArchive\r\n- 9b795108c7c15c531c1ef06889b0e975a822059d #8621 : zhgwenming/lxc Fix lxc driver build issue on Mac OS X\r\n- 10f78974ca515e3b7224b8cedd1fb3faa94af641 #8588 : dqminh/remove-sslv3 remove sslv3 from server\'s TLS supported versions\r\n- 6ce4f82ebe822dbc3cf945abba5f8a09ca48ea9f #8531 : SvenDowideit/move-registry-search-to-registry-api Move registry search API docs into the registry API document.\r\n- 57263ef0d6255f7b46b91fefb3c059d01efa35d0 #8591 : fredlf/1.3release-notes Edits and additions to release notes.\r\n- 62cb97278d1ff35a13a09cc845c64d6a417f5874 #8599 : irachex/commit_docs Fix commit api document\r\n- cb106e74a14a37157b09459965a69c944f9c19f0 #8238 : vbatts/vbatts-daemon_timestamps daemon logging: unifying output and timestamps\r\n- 2e35d7c905756314c12e10a50b36ecc46a70d31a #8544 : SvenDowideit/link-to-latest-b2d-installers Link directly to the \'latest\' release alias\r\n- 69e3a55560df06a23cc74ba54badf120e5271bf9 #8516 : jamtur01/sshd Minor changes to SSHd example\r\n- 2f9ffe5b6ac1c547d1b5c228637007b05af48a3f #8232 : vbatts/vbatts-devmapper_getDeps devmapper: include dm_deps information in debug\r\n- 0e67cf0627a60595f0aac51693f9266a893d5295 #8380 : cpuguy83/moar_names Add more names\r\n- 4b594721c409318040d691d2dc1a58dbbab888b5 #8465 : SvenDowideit/document-device-flag-permission-options Add info on --device flag permissions \':rwm\'\r\n- f0eb1ef4e17b76cf628b1c233017cbf87963257f #8526 : vbatts/vbatts-too_many_open_files client: even cleaner use of Transport\r\n- b3cda9fc7e9dbdc23619c84ed91ad41d931b6e27 #8566 : jfrazelle/Cleanup-fmt-%q Cleanup: integration-cli (\'%s\' with %q)\r\n- 1183abc4aa98c92b69f8134f3fd83e1071d0cc52 #8549 : vieux/pkg_units add BytesSize in pkg/units\r\n- d1aca045b3970a862f6bfb0b8106e9266b66f88c #8612 : jfrazelle/8611-ip-masq-iptables Setting iptables=false should propagate to ip-masq=false\r\n- 40a6461d16f9fc4111e9c9a844447d0a7170ce41 #8606 : tianon/release-home Fix more missing HOME references\r\n- c3237cc9d8356be505e29f22967aa84ea0c939d0 #8608 : crosbymichael/merge_release_v1.3.0 Merge release v1.3.0\r\n- 3d0d2fd183cbe3b95982aaf0d0c62d29961d927f #8609 : gesellix/patch-2 fix minor docs error'
8956,'crosbymichael',"Panic when calling docker push against a registry you haven't logged in to without a tty\nThis fails on 1.3.0/c78088f when running a ttyless ssh session from one Jenkins server to a vagrant build slave.\r\n\r\n```\r\n+ docker push openshift/origin\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0x0 pc=0x6b8987]\r\n\r\ngoroutine 16 [running]:\r\nruntime.panic(0xa5f760, 0x1071913)\r\n\t/usr/lib/golang/src/pkg/runtime/panic.c:279 +0xf5\r\ngithub.com/docker/docker/pkg/term.DisableEcho(0x0, 0x0, 0x0, 0x0)\r\n\t/builddir/build/BUILD/docker-1.3.0/_build/src/github.com/docker/docker/pkg/term/term.go:75 +0x127\r\ngithub.com/docker/docker/api/client.(*DockerCli).CmdLogin(0xc2081288c0, 0xc208091000, 0x1, 0x1, 0x0, 0x0)\r\n\t/builddir/build/BUILD/docker-1.3.0/_build/src/github.com/docker/docker/api/client/commands.go:289 +0xd98\r\ngithub.com/docker/docker/api/client.(*DockerCli).CmdPush(0xc2081288c0, 0xc20800e020, 0x1, 0x1, 0x0, 0x0)\r\n\t/builddir/build/BUILD/docker-1.3.0/_build/src/github.com/docker/docker/api/client/commands.go:1169 +0x89a\r\nreflect.callMethod(0xc2080850e0, 0xc2080e9c10)\r\n\t/usr/lib/golang/src/pkg/reflect/value.go:761 +0x18b\r\nreflect.methodValueCall(0xc20800e020, 0x1, 0x1, 0x1, 0xc2080850e0)\r\n\t/usr/lib/golang/src/pkg/reflect/asm_amd64.s:26 +0x24\r\ngithub.com/docker/docker/api/client.(*DockerCli).Cmd(0xc2081288c0, 0xc20800e010, 0x2, 0x2, 0x0, 0x0)\r\n\t/builddir/build/BUILD/docker-1.3.0/_build/src/github.com/docker/docker/api/client/cli.go:76 +0x38e\r\nmain.main()\r\n\t/builddir/build/BUILD/docker-1.3.0/docker/docker.go:104 +0x84c\r\n```"
8935,'tiborvass','Add --allow-insecure to docker pull\nThis adds a parameter to the docker pull command to allow users to manually specify an insecure repository when performing "docker pull", i.e. \r\n\r\ndocker pull --allow-insecure internal.company.domain:5000/image_name\r\n'
8919,'jfrazelle','Fix create container output messages when the image is not existed locally\nSigned-off-by: Lei Jitang <leijitang@huawei.com>\r\n\r\nwhen create a container with an image which is not existed locally and without tag,the output messages would confuse the user.For example:\r\n\r\n$ sudo docker run -ti ubuntu /bin/bash\r\nUnable to find image \'ubuntu\' locally\r\n\r\nI think the output messages "Unable to find image \'ubuntu\' locally" should be "Unable to find image \'ubuntu:latest\' locally" ,which is more exactly and in fact \'ubuntu\' is not an image. Sometimes I has an image \r\n\'ubuntu:14.04\' locally,but forget the tag when create a container,the output "Unable to find image \'ubuntu\' locally" is confused because I has repository "ubuntu" locally,and "Unable to find image \'ubuntu:latest\' locally" \r\ncan remind me that I may forget the tag.\r\nrelate #8868  \r\n\r\n'
8773,'vbatts',"Support building with gccgo\nThis is just a proof of concept really.  I'm not super happy about the duplication between {dyn,}binary and the gccgo versions, but trying to avoid it seemed worse.\r\n\r\nThis builds using the go tool that's built as part of the build image/container already, which obviously isn't going to work on a platform that's not supported by the native go toolchain.  It is possible with a different Dockerfile to build on a not-yet supported platform (one of the reasons for caring about gccgo) -- you need to install gccgo and gccgo-go from our ppa at https://launchpad.net/~docker-team-r/+archive/ubuntu/ppa.  I'm not sure how best to use a different build image on some platforms though."
8739,'erikh','Do some cleanup on .dockerignore paths\nWhile working on the fix for #8330 I noticed a few things:\r\n1 - the split() call for the .dockerignore process will generate a blank\r\n    "exclude".  While this isn\'t causing an issue right now, I got worried\r\n\tthat in the future some code later on might interpret "" as something bad,\r\n\tlike "everything" or ".".  So I added a check for an empty "exclude"\r\n\tand skipped it\r\n2 - if someone puts "foo" in their .dockerignore then we\'ll skip "foo".\r\n    However, if they put "./foo" then we won\'t due to the painfully\r\n\tsimplistic logic of go\'s filepath.Match algorithm.  To help things\r\n\ta little (and to treat ./Dockerfile just like Dockerfile) I added\r\n\tcode to filepath.Clean() each entry in .dockerignore.  It should\r\n\tresult in the same semantic path but ensure that no matter how the\r\n\tuser expresses the path, we\'ll match it.\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>'
8732,'erikh','ENTRYPOINT [] not resetting parent image entrypoint\nAccording to the discussion in the comments of #3465, using `ENTRYPOINT []` should be a way to remove the entrypoint setting from a parent image. However, this doesn\'t seem to be the case:\r\n\r\n```\r\n$ { echo \'FROM busybox\'; echo \'ENTRYPOINT ["/bin/true"]\'; } | docker build -t test-entrypoint-1 - \r\nSending build context to Docker daemon 2.048 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM busybox\r\n ---> e72ac664f4f0\r\nStep 1 : ENTRYPOINT /bin/true\r\n ---> Using cache\r\n ---> c55134211aec\r\nSuccessfully built c55134211aec\r\n$ { echo \'FROM test-entrypoint-1\'; echo \'ENTRYPOINT []\'; } | docker build -t test-entrypoint-2 - \r\nSending build context to Docker daemon 2.048 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM test-entrypoint-1\r\n ---> c55134211aec\r\nStep 1 : ENTRYPOINT\r\n ---> Running in 52e236ac9ed7\r\n ---> e5ab1267141c\r\nRemoving intermediate container 52e236ac9ed7\r\nSuccessfully built e5ab1267141c\r\n$ docker inspect -f \'{{.Config.Entrypoint}}\' test-entrypoint-2\r\n[/bin/true]\r\n$ docker version\r\nClient version: 1.3.0\r\nClient API version: 1.15\r\nGo version (client): go1.3.3\r\nGit commit (client): c78088f\r\nOS/Arch (client): darwin/amd64\r\nServer version: 1.3.0\r\nServer API version: 1.15\r\nGo version (server): go1.3.3\r\nGit commit (server): c78088f\r\n```'
8716,'erikh','Use the HTTP Last-Modified http header as the mtime value for ADD cmd when present\nCloses #8331\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>'
8685,'jfrazelle','`docker exec` is rerunning `CMD` from Dockerfile\n1. Create an image with a Dockerfile that declares a `CMD`\r\n2. Run the image in a container with `-d` detached.\r\n3. Exec into said container\r\n4. run a top the command will be listed again.\r\n5. Do it multiple times and see what happens.\r\n\r\n'
8639,'tiborvass','builder: fix escaping for ENV variables.\n/cc @tiborvass \r\n\r\ncloses #8636 '
8536,'erikh','Cannot reach localhost:15672 in Dockerfile build\nHere\'s the problematic code in my Dockerfile and [full Dockerfile](https://gist.github.com/anonymous/b2dfd28e64ef3af3534a):\r\n\r\n```\r\nRUN bash -l -c "curl http://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add -"\r\nRUN apt-add-repository \'deb http://www.rabbitmq.com/debian/ testing main\'\r\nRUN apt-get update\r\nRUN apt-get install -y rabbitmq-server\r\nRUN apt-get install -y wget\r\n\r\nRUN rabbitmq-plugins enable rabbitmq_management\r\n\r\nRUN service rabbitmq-server restart\r\n\r\nRUN cat /var/log/rabbitmq/*\r\n\r\nRUN wget --tries=inf --retry-connrefused http://localhost:15672/cli/rabbitmqadmin\r\n```\r\n\r\nHere\'s the output:\r\n```\r\nStep 18 : RUN bash -l -c "curl http://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add -"\r\n ---> Using cache\r\n ---> d3da0e4d0867\r\nStep 19 : RUN apt-add-repository \'deb http://www.rabbitmq.com/debian/ testing main\'\r\n ---> Using cache\r\n ---> 63632f35e9e4\r\nStep 20 : RUN apt-get update\r\n ---> Using cache\r\n ---> 60a0959346e3\r\nStep 21 : RUN apt-get install -y rabbitmq-server\r\n ---> Using cache\r\n ---> 6438fd1067d0\r\nStep 22 : RUN apt-get install -y wget\r\n ---> Using cache\r\n ---> 37069c67f3a9\r\nStep 23 : RUN rabbitmq-plugins enable rabbitmq_management\r\n ---> Using cache\r\n ---> 7900f2aa3161\r\nStep 24 : RUN service rabbitmq-server restart\r\n ---> Using cache\r\n ---> 5ae1b5aa04d1\r\nStep 25 : RUN cat /var/log/rabbitmq/*\r\n ---> Running in 50daa618d83a\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:02 ===\r\nStarting RabbitMQ 3.3.5 on Erlang R14B04\r\nCopyright (C) 2007-2014 GoPivotal, Inc.\r\nLicensed under the MPL.  See http://www.rabbitmq.com/\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:02 ===\r\nnode           : rabbit@54c55e05cb1d\r\nhome dir       : /var/lib/rabbitmq\r\nconfig file(s) : /etc/rabbitmq/rabbitmq.config\r\ncookie hash    : lTEEczRc1JHl+o2o081j7w==\r\nlog            : /var/log/rabbitmq/rabbit@54c55e05cb1d.log\r\nsasl log       : /var/log/rabbitmq/rabbit@54c55e05cb1d-sasl.log\r\ndatabase dir   : /var/lib/rabbitmq/mnesia/rabbit@54c55e05cb1d\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nLimiting to approx 1048476 file handles (943626 sockets)\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nMemory limit set to 803MB of 2008MB total.\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nDisk free limit set to 50MB\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nmsg_store_transient: using rabbit_msg_store_ets_index to provide index\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nmsg_store_persistent: using rabbit_msg_store_ets_index to provide index\r\n\r\n=WARNING REPORT==== 13-Oct-2014::13:09:04 ===\r\nmsg_store_persistent: rebuilding indices from scratch\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nAdding vhost \'/\'\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nCreating user \'guest\'\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nSetting user tags for user \'guest\' to [administrator]\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nSetting permissions for \'guest\' in \'/\' to \'.*\', \'.*\', \'.*\'\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nstarted TCP Listener on [::]:5672\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nManagement plugin started. Port: 15672\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nStatistics database started.\r\n\r\n=INFO REPORT==== 13-Oct-2014::13:09:04 ===\r\nServer startup complete; 6 plugins started.\r\n * amqp_client\r\n * mochiweb\r\n * rabbitmq_management\r\n * rabbitmq_management_agent\r\n * rabbitmq_web_dispatch\r\n * webmachine\r\n\r\n              RabbitMQ 3.3.5. Copyright (C) 2007-2014 GoPivotal, Inc.\r\n  ##  ##      Licensed under the MPL.  See http://www.rabbitmq.com/\r\n  ##  ##\r\n  ##########  Logs: /var/log/rabbitmq/rabbit@54c55e05cb1d.log\r\n  ######  ##        /var/log/rabbitmq/rabbit@54c55e05cb1d-sasl.log\r\n  ##########\r\n              Starting broker... completed with 6 plugins.\r\nStep 26 : RUN wget --tries=inf --retry-connrefused http://localhost:15672/cli/rabbitmqadmin\r\n ---> Running in d48fe469a24d\r\n--2014-10-13 13:30:36--  http://localhost:15672/cli/rabbitmqadmin\r\nResolving localhost (localhost)... ::1, 127.0.0.1\r\nConnecting to localhost (localhost)|::1|:15672... failed: Connection refused.\r\nConnecting to localhost (localhost)|127.0.0.1|:15672... failed: Connection refused.\r\nRetrying.\r\n\r\n--2014-10-13 13:30:37--  (try: 2)  http://localhost:15672/cli/rabbitmqadmin\r\nConnecting to localhost (localhost)|::1|:15672... failed: Connection refused.\r\nConnecting to localhost (localhost)|127.0.0.1|:15672... failed: Connection refused.\r\nRetrying.\r\n\r\n--2014-10-13 13:30:39--  (try: 3)  http://localhost:15672/cli/rabbitmqadmin\r\nConnecting to localhost (localhost)|::1|:15672... failed: Connection refused.\r\nConnecting to localhost (localhost)|127.0.0.1|:15672... failed: Connection refused.\r\nRetrying.\r\n```\r\n\r\nI\'ve tried replacing \r\n\r\n```\r\nRUN wget --tries=inf --retry-connrefused http://localhost:15672/cli/rabbitmqadmin\r\n```\r\n\r\nwith\r\n\r\n```\r\nRUN wget --tries=inf --retry-connrefused http://$(hostname):15672/cli/rabbitmqadmin\r\n```\r\n\r\nbut am getting the same problem.\r\n\r\nI build the image with the following command (I\'m using boot2docker on OS X 10.9.2):\r\n\r\n```\r\ndocker build -t blabla .\r\n```\r\n\r\n```\r\n$ docker -v\r\nDocker version 1.2.0, build fa7b24f\r\n```'
8520,'erikh','[1.3.0-rc] Regression for ONBUILD {CMD|ENTRYPOINT|RUN} - array syntax parsed but dropped\n### Regresion\r\n\r\nWith the new Dockerfile parser, the array syntax (`["foo", "bar"]`) supported in `CMD`, `ENTRYPOINT` and `RUN` is parsed correctly but [converted to plain text](https://github.com/docker/docker/blob/50fa9df/builder/dispatchers.go#L132) when used within `ONBUILD`. Note that `VOLUME` is also affected, but there is no difference in semantics between the array and the plain text , so it\'s not an actual issue. \r\n\r\n```\r\nbrice@t440s:/tmp/parent$ cat Dockerfile \r\nFROM busybox\r\nONBUILD CMD ["world"]\r\nONBUILD ENTRYPOINT ["echo"]\r\nONBUILD RUN ["true"]\r\n```\r\n```\r\nbrice@t440s:/tmp/parent$ docker build -t parent .\r\nSending build context to Docker daemon  2.56 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM busybox\r\n ---> e72ac664f4f0\r\nStep 1 : ONBUILD cmd world\r\n ---> Using cache\r\n ---> 2dc9813f0dc3\r\nStep 2 : ONBUILD entrypoint echo\r\n ---> Using cache\r\n ---> db6fe800069a\r\nStep 3 : ONBUILD run true\r\n ---> Using cache\r\n ---> 90a83bed8507\r\nSuccessfully built 90a83bed8507\r\n```\r\n```\r\nbrice@t440s:/tmp/parent$ docker inspect --format=\'{{json .ContainerConfig.OnBuild}}\' parent\r\n["cmd world","entrypoint echo","run true"]\r\n```\r\n\r\n### Impact\r\n\r\nOther than the obvious effect of running commands with a shell rather than via an `exec` call, that broke the following usage, central for our build packs: `ONBUILD CMD` used for passing default parameters to an `ENTRYPOINT` defined in the children images:\r\n```\r\nbrice@t440s:/tmp/parent$ cat Dockerfile \r\nFROM busybox\r\nONBUILD CMD ["world"]\r\nbrice@t440s:/tmp/parent$ docker build -t parent .\r\nSending build context to Docker daemon  2.56 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM busybox\r\n ---> e72ac664f4f0\r\nStep 1 : ONBUILD cmd world\r\n ---> Using cache\r\n ---> 2dc9813f0dc3\r\nSuccessfully built 2dc9813f0dc3\r\n```\r\n```\r\nbrice@t440s:/tmp/child$ cat Dockerfile \r\nFROM parent\r\nENTRYPOINT ["echo"]\r\nbrice@t440s:/tmp/child$ docker build -t child .\r\nSending build context to Docker daemon  2.56 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM parent\r\n# Executing 1 build triggers\r\nTrigger 0, cmd world\r\n ---> Using cache\r\n ---> 9b5122e24e57\r\nStep 1 : ENTRYPOINT echo\r\n ---> Using cache\r\n ---> c71e90f00680\r\nSuccessfully built c71e90f00680\r\n```\r\n```\r\nbrice@t440s:/tmp/child$ docker run child # expected (docker 1.2.0) behavior: "world"\r\n/bin/sh -c world\r\n```\r\n\r\nIs that a deliberate breaking change? If it is, can anyone think of a workaround to achieve that?\r\n\r\nRelated PRs:\r\n* https://github.com/docker/docker/pull/6909\r\n* https://github.com/docker/docker/pull/7461\r\n* https://github.com/docker/docker/pull/7806\r\n* https://github.com/docker/docker/pull/8284\r\n* https://github.com/docker/docker/pull/8459\r\n\r\ncc @erikh '
8506,'crosbymichael','Selinux labels not applied to docker exec process\nCurrently because of a check for selinux labels, they are not applied to a process run from docker exec because after the `setns` the process is jailed within the chroot because of a setns on the mount namespace. '
8505,'vieux','Improve ps name parsing\nReplaces #8489\r\n\r\n\r\nMy commit cleans up the name parsing logic in `ps`.  For more context about the original issue see the linked PR that this replaces.'
8497,'vieux',"Disable stable IPs.\nStable IPs causes some regressions in the way people use Docker, fix #8493.\r\n\r\nReverting it for 1.3, we'll enable it back for the next release.\r\n\r\nSigned-off-by: Andrea Luzzardi <aluzzardi@gmail.com>"
8494,'tiborvass',"get.docker.com script on fresh Ubuntu 14.04.1 AMI is b0rked (prompts with frozen GRUB screen)\nSteps to reproduce:\r\n\r\n1. Start up new EC2 instance in `us-east-1` region with AMI `ami-52a3153a`.  Note that this is an official Canonical-provided image as you can see at http://cloud-images.ubuntu.com/locator/ec2/ .\r\n2. Run recommended command to install Docker, `curl -Ssl get.docker.com | sh`.\r\n3. Install seems to be going fine until around here:\r\n\r\n```\r\n+ sudo sh -c sleep 3; apt-get install -y -q linux-image-extra-3.13.0-36-generic\r\nReading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nThe following package was automatically installed and is no longer required:\r\n  grub-pc-bin\r\nUse 'apt-get autoremove' to remove it.\r\nThe following extra packages will be installed:\r\n  crda iw libnl-3-200 libnl-genl-3-200 wireless-regdb\r\nThe following NEW packages will be installed:\r\n```\r\n\r\nThen, suddenly, a wild GRUB screen appears (no way to interact with it, user must `C-c` out to escape).\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1476820/4584483/497196aa-4ffb-11e4-9a53-f59eb1d1f00d.png)\r\n\r\nThis is quite bad user experience and b0rks install script for users of this AMI.  The way we found out was during a Bootstrap with a client >_>\r\n\r\nping @tianon "
8493,'aluzzardi',"[1.3.0-rc] Can't bind same external port as recently-exited container\n## Scope\r\n\r\n* Present in `1.3.0-20141009043806-f1e7de2`;\r\n* Not present in `1.2.0`.\r\n\r\n## Summary\r\n\r\nContainers created with `--publish <any> --rm=false` do not release their ports until the container is actually destroyed; stopping is not sufficient. This is because of a new `docker-proxy` process that lives until the container is removed.\r\n\r\n#### Expected Behaviour\r\n\r\nAfter stopping container `A`, docker is immediately able to bind a new container `B` to the published port of container `A`.\r\n\r\n#### Actual Behaviour\r\n\r\nContainer `A` must be removed (`docker rm`) before its port is freed and `B` is able to bind to it.\r\n\r\n## To reproduce\r\n\r\n#### 1. Start a container with (e.g.) `--publish 9256:8000 --rm=false`\r\n\r\nSpecific ports irrelevant, obviously.\r\n\r\n#### 2. Observe the `docker-proxy` process\r\n\r\n```\r\n% ps aux | grep [d]ocker-proxy | grep 9256\r\nroot     27861  0.0  0.0 247476 11612 ?        Sl   20:09   0:00 docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 9256 -container-ip 172.17.3.4 -container-port 8000\r\n```\r\n\r\n#### 3. Stop the container (`docker stop`)\r\n\r\n#### 4. Try to start the container again.\r\n\r\n```\r\nError response from daemon: Bind for 0.0.0.0:9256 failed: port is already allocated\r\n```\r\n\r\n#### 5. Observe the still-running `docker-proxy` process.\r\n\r\n```\r\n% ps aux | grep [d]ocker-proxy | grep 9256\r\nroot     27861  0.0  0.0 247476 11612 ?        Sl   20:09   0:00 docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 9256 -container-ip 172.17.3.4 -container-port 8000\r\n```\r\n\r\n#### 6. Remove the container (`docker rm`)\r\n\r\n#### 7. Observe that the `docker-proxy` process is immediately destroyed:\r\n\r\n```\r\n% ps aux | grep [d]ocker-proxy | grep 9256\r\n%\r\n```\r\n\r\n#### 8. Start the container again\r\n\r\n(success, and a new `docker-proxy` is created.)\r\n\r\n"
8489,'crosbymichael','Show canonical name in `docker ps`\nAfter trying out the upcoming 1.3.0, I was pleased to see that https://github.com/docker/docker/pull/7686 made the default output of `docker ps` more compact. However, keeping the very first name could be confusing, as it might be the name resulting from a `--link` (`foo/bar`). @guywithnose @crosbymichael was that on purpose?\r\n\r\nThis patches makes sure that the canonical name is shown (which also happens to be the shortest), and avoid unnecessary processing of the names.'
8488,'crosbymichael','Failed to kill process started with `docker exec` from the main process\nWhen I tried to kill a process started with `docker exec`, it responds with `Permission denied` unless the container is started with `--privileged` mode.\r\n\r\n```\r\n# in a terminal\r\n> docker run --name testexec -it ubuntu bash\r\nroot@b7498c39f2ab:/# ps aux\r\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\nroot         1  0.0  0.0  18156  1952 ?        Ss   08:01   0:00 bash\r\nroot        12  0.6  0.0   4344   360 ?        S    08:02   0:00 sleep 1000\r\nroot        19  0.0  0.0  15568  1132 ?        R+   08:02   0:00 ps aux\r\nroot@b7498c39f2ab:/# kill 12\r\nbash: kill: (12) - Permission denied\r\n\r\n# in another terminal\r\n> docker exec -d testexec sleep 1000\r\n```\r\n\r\n### docker info\r\n\r\n```\r\n> docker version\r\nClient version: 1.2.0-dev\r\nClient API version: 1.15\r\nGo version (client): go1.3.3\r\nGit commit (client): 4eb812e\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.2.0-dev\r\nServer API version: 1.15\r\nGo version (server): go1.3.3\r\nGit commit (server): 4eb812e\r\n\r\n> docker -D info\r\nContainers: 4\r\nImages: 649\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Dirs: 665\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-33-generic\r\nOperating System: Ubuntu 14.04.1 LTS\r\nDebug mode (server): true\r\nDebug mode (client): true\r\nFds: 10\r\nGoroutines: 10\r\nEventsListeners: 0\r\nInit Path: /home/action/bin/docker\r\nUsername: dqminh\r\nRegistry: [https://index.docker.io/v1/]\r\nWARNING: No swap limit support\r\n\r\n> uname -a\r\nLinux action-dev 3.13.0-33-generic #58-Ubuntu SMP Tue Jul 29 16:45:05 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n```'
8486,'erikh','Add failing testcase for single quotes in CMD\nCloses #5701\r\n\r\nThis is due to @SvenDowideit comment at: https://github.com/docker/docker/issues/5701#issuecomment-58133541\r\nwhere he asked for a testcase showing the error case.\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>'
8483,'erikh','Add a testcase to make sure we don\'t squash tabs or convert them to spaces\nThis is in response to @SvenDowideit asking if we had a "tab" testcase\r\nin https://github.com/docker/docker/issues/2315#issuecomment-58133508\r\nI couldn\'t find one so I\'m adding one\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>'
8481,'jfrazelle','Docker build with 1.3 on old client\n```bash\r\ndocker build -t citadel .\r\nSending build context to Docker daemon 10.49 MB\r\nSending build context to Docker daemon\r\n{"stream":"Step 0 : FROM golang:1.3\\n"}\r\n{"stream":" ---\\u003e 770c8a9d8805\\n"}\r\n{"stream":"Step 1 : COPY . /go/src/github.com/citadel/citadel\\n"}\r\n{"stream":" ---\\u003e 7763e65faaac\\n"}\r\n{"stream":"Removing intermediate container 50cf52036863\\n"}\r\n{"stream":"Step 2 : WORKDIR /go/src/github.com/citadel/citadel\\n"}\r\n{"stream":" ---\\u003e Running in 79b06192d2b9\\n"}\r\n{"stream":" ---\\u003e 65857b834ee4\\n"}\r\n{"stream":"Removing intermediate container 79b06192d2b9\\n"}\r\n{"stream":"Step 3 : RUN go get -d ./... \\u0026\\u0026 go install ./...\\n"}\r\n{"stream":" ---\\u003e Running in 945d3e4d743f\\n"}\r\n{"stream":"\\u001b[91m# github.com/citadel/citadel/bastion\\nbastion/bastion.go:57: cannot use image (type *citadel.Image) as type *citadel.Container in argument to clusterManager.Start\\nbastion/bastion.go:57: cannot use false (type bool) as type *citadel.Image in argument to clusterManager.Start\\nbastion/bastion.go:57: assignment count mismatch: 2 = 1\\nbastion/bastion.go:83: too many arguments in call to clusterManager.ListContainers\\nbastion/bastion.go:109: not enough arguments in call to cluster.New\\n\\u001b[0m"}\r\n{"errorDetail":{"message":"The command [/bin/sh -c go get -d ./... \\u0026\\u0026 go install ./...] returned a non-zero code: 2"},"error":"The command [/bin/sh -c go get -d ./... \\u0026\\u0026 go install ./...] returned a non-zero code: 2"}\r\n```'
8475,'aluzzardi','Fixes re-creating volume on (re)start\nWhen a container is restarted all the volume configs are parsed again.\r\nEven if the volume was already handled in a previous start it was still\r\ncalling "FindOrCreateVolume" on the volume repo causing a new volume to\r\nbe created.\r\n\r\nThis wasn\'t being detected because as part of the mount initialization\r\nit checks to see if the the _mount_ was already initialized, but this\r\nhappens after the parsing of the configs.\r\nSo a check is added during parsing to skip a volume which was already\r\ncreated for that container.'
8472,'aluzzardi','Restore volume refs after daemon restart\nVolume refs were not being restored on daemon restart.\r\nThis made it possible to remove a volume being used by other containers\r\nafter a daemon restart.'
8468,'erikh','Fix URL check in build from Git.\nExisting check ignores valid git URLs with prefix, "git@", "http://" or "https://". This leads to erroneously prepending "https://" to valid URLs.'
8467,'tiborvass','registry: Introduce --insecure-ssl-registry daemon flag to control secur...\n...e certificate verify with registry\r\n\r\nCurrently many users cannot pull registry image behind corporate firewall,\r\nbecause of the certificate issue.\r\n\r\n[root@localhost docker]# docker pull ubuntu\r\nPulling repository ubuntu\r\n2014/05/15 15:51:24 Get https://index.docker.io/v1/repositories/ubuntu/images: x509: certificate signed by unknown authority\r\n\r\nThis patch introduce a new daemon flag "--insecure-ssl-registry" to control\r\nsecure certificate verify. The default value is false.\r\n\r\nNote that this global daemon flag will affects *all* hosts, it\'s also possible\r\nmake sense allow per-host configuration in future.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Jovi Zhangwei <jovi.zhangwei@gmail.com> (github: ktap)'
8457,'vieux',"Check /etc/resolv.conf every time for 127.* content\nA continuation of @rhatdan's PR #8455, closes #8425."
8455,'jfrazelle','Check /etc/resolv.conf on every docker run for 127.* content\nCurrently if you start the docker -d on a system with 127.0.0.1 in /etc/resolv.conf\r\nIt will set the default dns to 8.8.8.8 8.8.4.4 permanently.\r\n\r\nThis causes a problem at boot on Fedora machines where NetworkManager has not\r\npopulated /etc/resolv.conf before docker gets started.\r\n\r\nThis fix checks /etc/resolv.conf on every docker run. And only populates\r\ndaemon.config.Dns  if the user specified it on the command line.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Dan Walsh <dwalsh@redhat.com> (github: rhatdan)'
8450,'LK4D4',"dont close proxy's stdout/stderr prematurely\nFix #8428\r\n\r\nWhen stdout/stderr is closed prematurely, the proxy's writes to stdout/stderr\r\n(i.e. `log.Errorf/log.Printf`) will returns with EPIPE error, and go runtime\r\nwill terminate the proxy when stdout/stderr writes trigger 10 EPIPE errors.\r\n\r\nThis fixes stdout/stderr by continuing to drain their output if the proxy\r\nsuccessfully starts. Stdout/Stderr will be closed when `proxy.Wait` returns.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Daniel, Dao Quang Minh <dqminh89@gmail.com> (github: dqminh)"
8445,'vieux',"Tag name format too strict\nWe've been using git SHAs as git tags for many months, and recently tried the 1.3.0 RC.\r\n\r\n> Illegal tag name (9170e4d6d36d5dbafc2a2a82f274596d15fc5b4f): only [A-Za-z0-9_.-] are allowed, minimum 2, maximum 30 in length\r\n\r\nWhat's the rationale for the 30 character limit? It seems arbitrary and low. Maybe something like 256 would be more appropriate? At least 40 would be nice for those of us using git SHAs. \r\n\r\nIt looks like this was introduced in https://github.com/docker/docker/pull/7996."
8434,'jfrazelle',"Ignore unknown dockerfile instructions\nWith the new parser we started considering unknown instructions as errors (which can be desirable) but we don't want to break this behavior right now. I'll leave the debate for another time (can't find the issue).\r\n\r\nPing @erikh @crosbymichael @aluzzardi @jfrazelle "
8431,'vieux','Container#AllocateNetwork: Simplify error handling.\nThe defer logic was a little tricky and was hiding one bug: `err` was\r\nbeing redefined (with `:=`) and thus it escaped the defer error checking\r\nlogic.\r\n\r\nSigned-off-by: Andrea Luzzardi <aluzzardi@gmail.com>'
8430,'aluzzardi','1.3 no network on build \nwhen i build a image with 1.3 it has no network i cant do RUN ping google.com or else.\r\n\r\nwhen a container is started it works all old containers started well\r\n\r\nfrank@h1:~$ docker build -t ircany https://github.com/dockerimages/ircanywhere.git\r\nSending build context to Docker daemon 7.279 MB\r\nSending build context to Docker daemon \r\nStep 0 : FROM dockerimages/docker-nave\r\n ---> 71e200a880f5\r\nStep 1 : ADD . /ircanywhere\r\n ---> bc5e80bc0eb4\r\nRemoving intermediate container f74eacc567b0\r\nStep 2 : ENV NODE_PATH /usr/lib/node_modules:/usr/local/lib/node_modules:/.nave/installed/0.10.32/node_modules:$NODE_PATH\r\n ---> Running in 7b39eb8c2c30\r\n ---> 443a087dbb6a\r\nRemoving intermediate container 7b39eb8c2c30\r\nStep 3 : RUN ls /.nave/installed/0.10.32/\r\n ---> Running in 47d6821f7336\r\nChangeLog\r\nLICENSE\r\nREADME.md\r\nbin\r\ninclude\r\nlib\r\nshare\r\n ---> 0fe631104cfb\r\nRemoving intermediate container 47d6821f7336\r\nStep 4 : RUN ping google.com\r\n ---> Running in eb30f0910945\r\nping: unknown host google.com\r\n2014/10/07 02:52:08 The command [/bin/sh -c ping google.com] returned a non-zero code: 2\r\nfrank@h1:~$ docker -v\r\nDocker version 1.3.0, build fe783ab\r\n'
8429,'crosbymichael','builder: fix a situation where entrypoint was improperly set in stringform\n'
8428,'LK4D4',"1.3 - Docker proxy gets killed when many requests are issued to the exposed port and a process is not listening yet\nMight be related to GH-8022 but can't say for sure.\r\n\r\nI'm currently working on a Rails app that takes a while to boot and I got bitten by this when I tried accessing the app before it was ready to serve requests. If I hit F5 multiple times before the app is ready it seems that the docker-proxy blows up, so when the app is ready to serve requests I can't reach it from my machine using the exposed port.\r\n\r\nAn asciicast reproducing the issue can be found here: https://asciinema.org/a/12762 (you might want to watch it full screen to read all the output)\r\n\r\nDunno if this happens on 1.2 nor if the changes introduced for 1.3 since last friday would fix the issue but I can give it a try if you guys can't reproduce it over there.\r\n\r\n-----------------------------------\r\n\r\nHost info:\r\n\r\n```\r\n$ docker info\r\nContainers: 4\r\nImages: 156\r\nStorage Driver: aufs\r\n Root Dir: /home/fabio/docker/aufs\r\n Dirs: 164\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-36-generic\r\nOperating System: Ubuntu 14.04.1 LTS\r\nWARNING: No swap limit support\r\n\r\n$ docker version\r\nClient version: 1.3.0\r\nClient API version: 1.15\r\nGo version (client): go1.3.2\r\nGit commit (client): d812f87\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.3.0\r\nServer API version: 1.15\r\nGo version (server): go1.3.2\r\nGit commit (server): d812f87\r\n```"
8425,'jfrazelle','docker applies bad resolv.conf and does not state why\nHi,\r\nhere\'s an example of a docker container running with a bad resolv.conf:\r\n```\r\n~ ❯❯❯ docker run -p 1500:1500 -p 2024:2024 -t -i a4377a5dd9bb cat /etc/resolv.conf\r\nnameserver 8.8.8.8\r\nnameserver 8.8.4.4\r\nsearch somesearchdomains.com\r\n~ ❯❯❯ cat /etc/resolv.conf\r\n# Generated by NetworkManager\r\nsearch somesearchdomains.com\r\nnameserver 192.168.25.29\r\nnameserver 192.168.25.201\r\nnameserver 192.168.200.12\r\n# NOTE: the libc resolver may not support more than 3 nameservers.\r\n# The nameservers listed below may not be recognized.\r\nnameserver 192.168.200.29\r\n```\r\nit causes a bunch of things to break inside the container.  it should use the same resolv.conf as the host.\r\nthis is not the usual "docker detects dnsmasq on localhost" or anything like that.\r\nas you can see, the logfile of the daemon give no indication of why it would do this.\r\n\r\n```\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [info] POST /v1.14/containers/create\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job create()\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job log(create, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job log(create, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job create() = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [info] POST /v1.14/containers/ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94/attach?stderr=1&stdin=1&stdout=1&stream=1\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job container_inspect(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job container_inspect(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job attach(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [info] POST /v1.14/containers/ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94/start\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job start(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job allocate_interface(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job allocate_interface(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job allocate_port(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job allocate_port(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job allocate_port(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job allocate_port(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job log(start, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job log(start, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job start(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [info] POST /v1.14/containers/ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94/resize?h=28&w=86\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job resize(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, 28, 86)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job resize(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, 28, 86) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job log(die, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job log(die, ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94, a4377a5dd9bb) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job release_interface(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job attach(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [info] GET /v1.14/containers/ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94/json\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] +job container_inspect(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94)\r\nOct 06 17:51:35 dieter-t420s docker[1997]: [668e94ea] -job release_interface(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\nOct 06 17:51:36 dieter-t420s docker[1997]: [668e94ea] -job container_inspect(ea916ec0394c7858efc45947e71a5b474b911cd0c8659c6835566640631a5b94) = OK (0)\r\n```'
8418,'erikh','Proposal: Remove dockerfile from context\nThis simply ensures the Dockerfile is removed from the context.\r\n\r\n/cc @tiborvass @vieux @tianon \r\n\r\ncloses #8330 \r\n\r\n'
8415,'erikh','Use logs instead of attach for builder\nAttach is overkill for such task.'
8402,'SvenDowideit','PoC: Document the Remote API with swagger\nIssue: #5893 (points 9 and 10) \r\n\r\nThis is a proof of concept for documenting the API with a [swagger](http://swagger.io/) spec. It is far from complete. I wanted to open this PR to gauge interest in this approach. If it\'s well received I\'ll look into integration with the existing markdown docs and figure out how to disable the interactive feature.\r\n\r\nThe interactive querying with the nginx proxy might work as a docker image for "learning the API", as a way for users, or client library developers to test and interact with it. But it isn\'t going to work for the official docs on https://docs.docker.com/reference/\r\n\r\nTo view the docs follow the steps in the `README.md`.\r\n\r\nThe docker container includes the swagger-ui static resources and an nginx config to support the interactive querying. '
8393,'vieux','Make V2 code more defensive against malformed content\nAdded more checks in the V2 code against possible malformed or changed content.  This code will only be hit when pulling from the V2 registry, which is still only for official images.\r\n\r\nPing @crosbymichael'
8331,'erikh',"ADD command doesn't consider 'Last-Modified' HTTP header\nDockerfile to use ADD command with a HTTP <src> always get Docker build to download the remote file. ADD documentation claims it check for updates, but this only applies to local files afaict. Should check  Last-Modified header to get same behavior with HTTP resources"
8323,'crosbymichael','Bump to version 1.3.0\nScheduled to be released Oct. 14th.  Please help with testing as this is the official RC.'
8307,'jfrazelle','`iptables` cleanup failure on daemon restart\nCouldn\'t find an existing issue for that problem. So here we go.\r\n\r\n#### starting a fresh coreos-vagrant machine\r\n```bash\r\ncore@core-01 ~ $ cat /etc/lsb-release\r\nDISTRIB_ID=CoreOS\r\nDISTRIB_RELEASE=452.0.0\r\nDISTRIB_CODENAME="Red Dog"\r\nDISTRIB_DESCRIPTION="CoreOS 452.0.0"\r\ncore@core-01 ~ $ docker -v\r\nDocker version 1.2.0, build fa7b24f\r\ncore@core-01 ~ $ sudo iptables -nvL\r\nChain INPUT (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n\r\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n\r\nChain OUTPUT (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\ncore@core-01 ~ $ docker ps -a\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\ncore@core-01 ~ $ cat /usr/lib/systemd/system/docker.service\r\n[Unit]\r\nDescription=Docker Application Container Engine\r\nDocumentation=http://docs.docker.io\r\nRequires=docker.socket\r\nAfter=docker.socket\r\n\r\n[Service]\r\nEnvironment="TMPDIR=/var/tmp/"\r\nExecStartPre=/bin/mount --make-rprivate /\r\nLimitNOFILE=1048576\r\nLimitNPROC=1048576\r\n# Run docker but don\'t have docker automatically restart\r\n# containers. This is a job for systemd and unit files.\r\nExecStart=/usr/bin/docker --daemon --storage-driver=btrfs --host=fd://\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\n#### run a container\r\n```bash\r\ncore@core-01 ~ $ docker run --rm -ti -p 80 --name one ubuntu /bin/bash\r\nroot@94f6e1da16da:/#\r\n```\r\n\r\n#### check what happened\r\n`iptables` rules are setup for the `docker0` bridge itself and for the container we just started.\r\n```bash\r\ncore@core-01 ~ $ sudo iptables -nvL\r\nChain INPUT (policy ACCEPT 90 packets, 15273 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n\r\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n    0     0 ACCEPT     tcp  --  !docker0 docker0  0.0.0.0/0            10.1.0.2             tcp dpt:80\r\n    0     0 ACCEPT     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\r\n    0     0 ACCEPT     all  --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0\r\n    0     0 ACCEPT     all  --  docker0 docker0  0.0.0.0/0            0.0.0.0/0\r\n\r\nChain OUTPUT (policy ACCEPT 73 packets, 10739 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n```\r\n\r\n#### Stop container `one` and check what happened\r\n`iptables` rules for the `docker0` bridge are still setup and the rule for the container we just started is removed as expected after stopping container `one`. \r\n```bash\r\ncore@core-01 ~ $ sudo iptables -nvL\r\nChain INPUT (policy ACCEPT 59 packets, 3041 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n\r\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n    0     0 ACCEPT     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\r\n    0     0 ACCEPT     all  --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0\r\n    0     0 ACCEPT     all  --  docker0 docker0  0.0.0.0/0            0.0.0.0/0\r\n\r\nChain OUTPUT (policy ACCEPT 52 packets, 4032 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n```\r\n\r\n#### start container one again\r\n```bash\r\ncore@core-01 ~ $ docker run --rm -ti -p 80 --name one ubuntu /bin/bash\r\nroot@e369f978e6c5:/#\r\n```\r\n\r\n#### restart docker daemon and check what happened\r\nRestarting the daemon stops container `one`, which is not restarted, because no policy is given. Here I would expect to have `iptables` rules cleaned again, but that is not the case. Further `iptables` rules left intact for linked containers and that is really a problem if random containers are allowed to communicate with random IP\'s. The same is true for stopping the docker daemon! \r\n```bash\r\ncore@core-01 ~ $ sudo systemctl restart docker\r\ncore@core-01 ~ $ sudo iptables -nvL\r\nChain INPUT (policy ACCEPT 1088 packets, 199K bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n\r\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n    0     0 ACCEPT     tcp  --  !docker0 docker0  0.0.0.0/0            10.1.0.3             tcp dpt:80\r\n    0     0 ACCEPT     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\r\n    0     0 ACCEPT     all  --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0\r\n    0     0 ACCEPT     all  --  docker0 docker0  0.0.0.0/0            0.0.0.0/0\r\n\r\nChain OUTPUT (policy ACCEPT 952 packets, 81819 bytes)\r\n pkts bytes target     prot opt in     out     source               destination\r\n```\r\n\r\nQuestion: is the described an expected behaviour?\r\n\r\nThanks'
8264,'erikh','Regression in Entrypoint/Cmd in built image\nThe following Dockerfile produces an image with different `Entrypoint` and `Cmd` in master than in Docker 1.2.0:\r\n\r\n```\r\nFROM busybox\r\nCMD echo hello world\r\n```\r\n\r\nIn 1.2.0 stable, this produces:\r\n\r\n```\r\n"Entrypoint": null, "Cmd": ["/bin/sh", "-c", "echo hello world"]\r\n```\r\n\r\nIn master, it produces:\r\n\r\n```\r\n"Entrypoint": ["/bin/sh", "-c"], "Cmd": ["echo hello world"]\r\n```\r\n\r\nThese are functionally equivalent, but *only* if the image is run without overriding the command. Here\'s an example session under Docker 1.2.0, which successfully echoes `hello world`:\r\n\r\n```\r\n$ docker build -t test-image .\r\n...\r\n\r\n$ docker inspect -f \'{{.Config.Entrypoint | printf "%#v"}}, {{.Config.Cmd | printf "%#v"}}\' test-image\r\n%!v(MISSING), []interface {}{"/bin/sh", "-c", "echo hello world"}\r\n\r\n$ docker run --name test-run test-image /bin/sh -c "echo hello world"\r\nhello world\r\n\r\n$ docker inspect -f \'{{.Config.Entrypoint | printf "%#v"}}, {{.Config.Cmd | printf "%#v"}}\' test-run\r\n%!v(MISSING), []interface {}{"/bin/sh", "-c", "echo hello world"}\r\n```\r\n\r\nAnd here\'s the same session in master (git rev 0bb5f987315a51ef39f5fb070bff03c2849d059d):\r\n\r\n```\r\n$ docker build -t test-image .\r\n...\r\n\r\n$ docker inspect -f \'{{.Config.Entrypoint | printf "%#v"}}, {{.Config.Cmd | printf "%#v"}}\' test-image\r\n[]interface {}{"/bin/sh", "-c"}, []interface {}{"echo hello world"}\r\n\r\n$ docker run --name test-run test-image /bin/sh -c "echo hello world"\r\n(no output)\r\n\r\n$ docker inspect -f \'{{.Config.Entrypoint | printf "%#v"}}, {{.Config.Cmd | printf "%#v"}}\' test-run\r\n[]interface {}{"/bin/sh", "-c"}, []interface {}{"/bin/sh", "-c", "echo hello world"}\r\n```\r\n\r\nNothing is output because the resulting command is `/bin/sh -c /bin/sh -c "echo hello world"`, and everything after the second `/bin/sh` is ignored.\r\n\r\nThis is very likely to cause breakages if released - I imagine lots of people are overriding commands in images!'
8259,'cpuguy83','Cannot start a new container with the same volumes Volumes exists:\nRepo:\r\n\r\n```bash\r\nroot|~ > cat run\r\ndocker run \\\r\n--volume=/var/run:/var/run:rw \\\r\n--volume=/sys:/sys:ro \\\r\n--volume=/var/lib/docker/:/var/lib/docker:ro \\\r\n--publish=8081:8080 \\\r\n--detach=true \\\r\n--name=cadvisor \\\r\n--cpuset="2,3" \\\r\ngoogle/cadvisor:latest\r\nroot|~ > cat run  | sh\r\n0990e3395635e42ee4bca837d9d039dd25c23305a0fc76e08def99e5491bd241\r\nroot|~ > docker stop 0990e3395635e42ee4bca837d9d039dd25c23305a0fc76e08def99e5491bd241\r\n0990e3395635e42ee4bca837d9d039dd25c23305a0fc76e08def99e5491bd241\r\nroot|~ > docker rm cadvisor\r\ncadvisor\r\nroot|~ > cat run  | sh\r\n5d25e76f90d690de1f5ef51ac333576030f280c8930928ebe9e7e1d67a097de7\r\n2014/09/26 17:30:19 Error response from daemon: Cannot start container 5d25e76f90d690de1f5ef51ac333576030f280c8930928ebe9e7e1d67a097de7: Volume exists: 4616f6dedae95b847b25eb431745261032818961e117d27d7de4c142b716577d\r\nroot|~ >\r\n```'
8251,'erikh','Add support for ENV of the form: ENV name=value ...\nstill supports the old form: ENV name value.\r\nNotes:\r\n- presence of "=" in the first word is the trigger to know if we\'re going the old vs new form\r\n- new form supports quoting and \\\'s the same way the cmd line does\r\n\r\nsince shells support:\r\nabc=123 def=456 <some-command>\r\nI think supporting:\r\nENV abc=123 def=456\r\nmakes a lot of sense.  This isn\'t just about doing some kind of batching (which is being worked on in other PRs), this aligns ENV with what shells supports.\r\n\r\nKeeping old description for posterity:\r\nI have mixed feelings about this.  While it works and is kind of cool to be able to do:\r\nENV abc=def foo="feed the dog" hungry=eat\\ a\\ pizza late="go to bed \'now\' I said"\r\nand each key=value is parsed like you\'d expect it to be on the command line, the ability to do more than\r\none ENV at a time really should be done under some kind of batching mechanism.  But, of course,\r\nthat\'s not there yet and we\'re not sure when it will be.  So, unlike the RUN command where we can\r\nconcat things together with &&\'s, the ENV command doesn\'t have that option - not without this feature.\r\n\r\nCloses #2333\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>'
8229,'crosbymichael',"Add test for --net=container mode networking\nThis is an attempt to add a test for a container running with\n--net=container:id.  The test is currently failing, with the container\napparently getting no network, and I'm not sure why."
8160,'vieux','Proposal: add more image and container events (eg `pull`)\n`Version: 1.2.0`\r\n\r\nUsing `docker events` can get image remove events like:\r\n`\r\n2014-09-22T18:09:21+08:00 925e9234562a0df241f339622d36f78cb5f96e268bca6ac35298f6941f0927a5: untag\r\n2014-09-22T18:09:21+08:00 925e9234562a0df241f339622d36f78cb5f96e268bca6ac35298f6941f0927a5: delete`\r\n\r\nBut it cannot get image added event if using `docker pull` or `docker run` with new image\r\n'
8150,'jfrazelle','Pull: print some data instead of newlines when output is not a terminal\nThis improves `docker pull` output when stdout is not a terminal which should fix #8140.\r\n~~I had to change some logic for displaying json message output to fix some differences between handling terminal/non-terminal output, so some more testing should be best.~~\r\n\r\nThe pull output when running in cli should be the same, while new output when stdout is not a terminal looks like:\r\n```\r\nroot@ff5a78202988:/go/src/github.com/docker/docker: ./bundles/1.2.0-dev/binary/docker pull busybox > test.txt\r\nroot@ff5a78202988:/go/src/github.com/docker/docker: cat test.txt\r\nPulling repository busybox\r\na9eb17255234: Pulling image (latest) from busybox\r\na9eb17255234: Pulling image (latest) from busybox, endpoint: https://registry-1.docker.io/v1/\r\na9eb17255234: Pulling dependent layers\r\n511136ea3c5a: Download complete\r\n42eed7f1bf2a: Download complete\r\n120e218dd395: Download complete\r\na9eb17255234: Download complete\r\na9eb17255234: Download complete\r\n```'
8136,'erikh','strange "no command specified" issue\nSo, if I run an image which has no default command set, I get a nice error message, like so:\r\n```console\r\n$ docker run -it --rm scratch\r\n2014/09/19 14:05:11 Error response from daemon: No command specified\r\n```\r\n\r\nOk, that\'s great.  So now I build a `Dockerfile` like this:\r\n```Dockerfile\r\nFROM scratch\r\nMAINTAINER xyz\r\nADD rootfs.tar.xz /\r\n```\r\n\r\nNow, I go run it with no command:\r\n```console\r\n$ docker run -it --rm my-new-image\r\n/bin/sh: -c: option requires an argument\r\n```\r\n\r\nInteresting.  So I inspect both images, and see this in `scratch`: (which is fine and legal)\r\n```json\r\n{\r\n        "Cmd": null\r\n}\r\n```\r\n\r\nBut then I inspect `my-new-image` and I see:\r\n```json\r\n{\r\n        "Cmd": [\r\n            "/bin/sh",\r\n            "-c"\r\n        ],\r\n}\r\n```\r\n\r\nSo somewhere in either the `Dockerfile` parser itself, or the code for `FROM`, `MAINTAINER`, or `ADD` we\'ve mixed up some metadata and added a bogus invalid default `Cmd`.'
8078,'erikh',"ONBUILD triggers no longer show command before executing it\nObserve:\r\n```console\r\n$ cat Dockerfile\r\nFROM golang:onbuild\r\n$ docker build .\r\nSending build context to Docker daemon 61.44 kB\r\nSending build context to Docker daemon \r\nStep 0 : FROM golang:onbuild\r\n# Executing 3 build triggers\r\n ---> Using cache\r\n ---> Using cache\r\n ---> Using cache\r\n ---> 3ae07def0b9f\r\nSuccessfully built 3ae07def0b9f\r\n```\r\n(it doesn't display commands whether it's cached or not, I just love the way it looks when it's all cached because it's 100% useless :smile:)\r\n\r\nI made sure to rebuild latest master before reporting just to make sure it's definitely still a problem on the tip: :+1:\r\n```console\r\n$ docker version\r\nClient version: 1.2.0-dev\r\nClient API version: 1.15\r\nGo version (client): go1.3\r\nGit commit (client): f98a1f1-dirty\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.2.0-dev\r\nServer API version: 1.15\r\nGo version (server): go1.3\r\nGit commit (server): f98a1f1-dirty\r\n```\r\n(commit f98a1f1)"
8072,'crosbymichael','Refactor native execdriver consts and build tags\nIn the case when compiling for Linux without `CGO_ENABLED="1"` this results in undefined variable `DriverName`. As a result of looking into this, I have realised that there is some build tag inconsistency.\r\n\r\nFixes #7979'
8062,'jfrazelle',"Add support for 'docker exec' - phase 2\nCloses #7409 \r\nFixes #6777 \r\nFixes #1228 \r\n\r\nDaemon now supports resizing of tty sessions used for exec. \r\n'exec' Remote API introduced in #7409 has been split into '/containers/<name>/exec' and '/exec/<name>/start'.\r\n'/exec/<name>/resize' has been added to support resizing of exec tty sessions.\r\n"
7964,'SvenDowideit','Docs: Wrong syntax highlighting for code section in Doc\nThe syntax highlighting is totally wrong for the code sections. Examples :\r\nhttps://docs.docker.com/reference/commandline/cli/#daemon \r\nhttps://docs.docker.com/reference/commandline/cli/#run\r\n\r\nThe big chunk of red color dominate all these sections. It burns my eyes :P. \r\n'
7917,'SvenDowideit','Misc. fixes and formatting clean-up\nCleaned up and corrected some invalid "example responses". Added some missing double-quotes for examples that resulted in invalid JSON. Other general cleanup of stray characters and typos.\r\n\r\nOnly changed v1.14 and v1.15, didn\'t bother going back.'
7768,'SvenDowideit',"Fix <strong> formatting\nCurrently, &lt;strong> tags don't seem to working correctly. No formatting gets applied to the tagged content. &lt;strong> tags result from how our parser is interpreting **double asterisks** in markdown. I haven't tested this much, but it's happening here: http://docker-docs-dev.s3-website-us-east-1.amazonaws.com/.\r\n\r\n@SvenDowideit  is familiar with the issue."
7699,'erikh','ENTRYPOINT when uses shell syntax don\'t works as expected\nDocker build this as myname/test-entrypoints\r\nFROM ubuntu:14.04\r\nENTRYPOINT ps\r\n\r\ndocker run myname/test-entrypoints -aux\r\nwill only display result of ps so the options don\'t get passed when using \r\nENTRYPOINT ["ps"] this syntax it works as expected and as it should \r\n\r\nso probally a bug\r\n\r\ndocker build -t deletme - <<DD\r\nFROM ubuntu:14.04\r\nENTRYPOINT ["ps"]\r\nDD\r\n\r\nUploading context 2.048 kB\r\nUploading context \r\nStep 0 : FROM ubuntu:14.04\r\n ---> c4ff7513909d\r\nStep 1 : ENTRYPOINT ["ps"]\r\n ---> Running in 6f2d368e5d42\r\n ---> 346d6c5d0bc7\r\nSuccessfully built 346d6c5d0bc7\r\nRemoving intermediate container 6f2d368e5d42\r\nfrank@roboter24:~$ docker run deletme -aux\r\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\nroot         1  0.0  0.0  15564   988 ?        Rs   22:23   0:00 ps -aux\r\nfrank@roboter24:~$ docker build -t deletme - <<DD\r\nFROM ubuntu:14.04\r\nENTRYPOINT ps\r\nDD\r\nUploading context 2.048 kB\r\nUploading context \r\nStep 0 : FROM ubuntu:14.04\r\n ---> c4ff7513909d\r\nStep 1 : ENTRYPOINT ps\r\n ---> Using cache\r\n ---> 35a3c34a1454\r\nSuccessfully built 35a3c34a1454\r\nfrank@roboter24:~$ docker run -t deletme -aux\r\n  PID TTY          TIME CMD\r\n    1 ?        00:00:00 sh\r\n    7 ?        00:00:00 ps\r\nfrank@roboter24:~$ docker run -t -i deletme -aux\r\n  PID TTY          TIME CMD\r\n    1 ?        00:00:00 sh\r\n    7 ?        00:00:00 ps\r\n'
7638,'erikh','Fix data space reporting from Kb/Mb to KB/MB\nFix data space reporting from Kb/Mb to KB/MB. Currently "docker info" reports data/metadata space using "Kb/Mb" instead of the expected "KB/MB". Used pkg/units. Mentioned in issue #7429 .'
7619,'unclejack','Add overlayfs graph backend\nThis backend uses the overlayfs union filesystem for containers\r\nplus hard link file sharing for images.\r\n\r\nEach container/image can have a "root" subdirectory which is a plain\r\nfilesystem hierarchy, or they can use overlayfs.\r\n\r\nIf they use overlayfs there is a "upper" directory and a "lower-id"\r\nfile, as well as "merged" and "word" directories. The "upper"\r\ndirectory has the upper layer of the overlay, and "lower-id" contains\r\nthe id of the parent whose "root" directory shall be used as the lower\r\nlayer in the overlay. The overlay itself is mounted in the "merged"\r\ndirectory, and the "work" dir is needed for overlayfs to work.\r\n\r\nWhen a overlay layer is created there are two cases, either the\r\nparent has a "root" dir, then we start out with a empty "upper"\r\ndirectory overlaid on the parents root. This is typically the\r\ncase with the init layer of a container which is based on an image.\r\nIf there is no "root" in the parent, we inherit the lower-id from\r\nthe parent and start by making a copy if the parents "upper" dir.\r\nThis is typically the case for a container layer which copies\r\nits parent -init upper layer.\r\n\r\nAdditionally we also have a custom implementation of ApplyLayer\r\nwhich makes a recursive copy of the parent "root" layer using\r\nhardlinks to share file data, and then applies the layer on top\r\nof that. This means all chile images share file (but not directory)\r\ndata with the parent.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson <alexl@redhat.com> (github: alexlarsson)'
7612,'fredlf',"Add FAQ entry on build context pitfalls (build from within /)\nExplain why it probably isn't wise to perform `docker build` from within `/`. I placed a comment in another issue here: https://github.com/docker/docker/issues/7611#issuecomment-52557968 that can be used as a starting point. I'm quite busy at work ATM, so not sure if I can pick this up myself, so anybody that does have time for this, please do.\r\n\r\n(Given of course that the doc maintainers think it's a good addition) @jamtur01 @fredlf ?\r\n\r\nI think there may be other pitfalls like this, should we collect them and create a separate section in the documentation?"
7599,'vbatts',"Filter list of containers by name via remote API\nRaising this issue as requested on Docker-User (https://groups.google.com/d/msg/docker-user/ughdAE8v2b0/onat5pQKJDUJ):\r\n\r\nI'd like to be able to assign meaningful names to containers and filter by them using the remote API.\r\n\r\nEg: create containers with names db_dev, db_test, db_prod, ws_dev, ws_test, ws_prod, and then query something like: GET /containers/json?name=db_* and get the containers starting with db (or GET /containers/json?name=*_dev).\r\n"
7567,'jfrazelle',"Enable signal proxying with TTY\nFixes  #5547\r\n\r\nAt present, documentation indicates you can use signal proxying in TTY mode, but it's explicitly disabled in the code.\r\n\r\nRemoving the explicit checks to prevent proxying in TTY mode does not produce any bugs I can find, makes the behavior consistent with documentation, and makes the Docker client a bit more usable than it was before.\r\n\r\nOf note: in TTY mode, SIGTTIN, SIGTTOU, SIGTSTP, and SIGINT are not proxied. SIGTTIN, SIGTTOU, and SIGTSTP are handled by the TTY allocated to the process, and consequently not being able to proxy them is not a significant issue. SIGINT is used by the TTY code to cause a graceful exit of the client, which seems to be a good behavior to maintain.\r\n\r\nAs mentioned previously, I can't find any bugs with this code. The only potential issue I can see is that SIGTERM will no longer stop the client by default, but will instead be proxied through to the container; however, SIGINT will still close only the client, if that is desired."
7547,'shin-',"`docker login` - doesn't let you update your password\nIf you attempt to update your password with `docker login`, it will fail. It will keep attempting to authenticate against the specified registry with your old password. The culprit is here:\r\n\r\nhttps://github.com/docker/docker/blob/18a0eba72dfec57b02a799ae064a60a88d6988c9/api/client/commands.go#L304\r\n\r\nThe only way password will be prompted for or used from the -p supplied on the command line is if the usernames don't match, which doesn't make sense for a password updating scenario."
7523,'shykes',"#7017 - Add container pinning\nAddresses #7017\r\nMakes it so you can pass `--pin` to `docker run` so that you can't `docker rm` that container without also using `--force`\r\nFor example:\r\n\r\n```\r\ndocker run -d -v /myData --pin --name my_data tianon/true\r\ndocker stop my_data # This isn't running, but for showcasing this, stop it\r\ndocker rm my_data # this will fail even though it's not running\r\ndocker rm --force my_data # this will work\r\n```\r\n\r\nDocker-DCO-1.1-Signed-off-by: Brian Goff <cpuguy83@gmail.com> (github: cpuguy83)"
7488,'shykes','engine.Env: optimize Get()\nSigned-off-by: Vincent Batts <vbatts@redhat.com>'
7425,'crosbymichael','Add --security-opts options to allow user to customize container labels.\nsecurity-opts will allow you to customise the way that a labeling system like\r\nSELinux will run on a container.\r\n\r\n    --security-opt="user:USER"  : Set the label user for the container\r\n    --security-opt="role:ROLE"  : Set the label role for the container\r\n    --security-opt="type:TYPE"  : Set the label type for the container\r\n    --security-opt="level:LEVEL"  : Set the label level for the container\r\n    --security-opt="disabled"  : Turn off label confinement for the container\r\n\r\nSince we are passing a list of string options instead of a space separated\r\nstring of options, I will change function calls to use InitLabels instead of\r\nGenLabels.  Genlabels interface is Depracated.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Dan Walsh <dwalsh@redhat.com> (github: rhatdan)'
7408,'jfrazelle',"Fix install.sh for Amazon's Linux AMI\nThe install script wasn't parsing /etc/system-release or recognizing Amazon as a RHEL/Fedora clone."
7407,'jfrazelle','Update libcontainer to version 68ea1234a0b046803aacb2562df0da1\nFixes #7382\r\n\r\nThis includes the fix to lock the thread immediately in sysinit so that things like setns work in Go. '
7402,'shykes','Test case added for engine\n'
7386,'fredlf','Docs Addition: GitHub Submodule Instructions\nA significant ticket driver is automated build failures that occur due to a Github repository\'s private submodules ("Unable to clone repository!"). I included instructions/screenshots for adding the deploy key from a Hub automated build to a Github submodule in the Docker Hub > Automated Builds doc.'
7370,'shykes','Separate events subsystem\n* Events subsystem merged from `server/events.go` and\r\n  `utils/jsonmessagepublisher.go` and moved to `events/events.go`\r\n* Only public interface for this subsystem is engine jobs\r\n* There is two new engine jobs - `log_event` and `subscribers_count`\r\n* There is auxiliary function `container.LogEvent` for logging events for\r\n  containers'
7323,'crosbymichael','Only import "testing" from *_test.go\nThis prevents the testing package flags from leaking into the flagsets of binaries that import docker. I left integration-cli alone.'
7278,'SvenDowideit',"Update nodejs_web_app.md\nThe image centos:centos6.4 doesn't exist. Instead you have to choose between the official centos6 or centos7. Both images does not work together with de yum npm install. When choosing an centos6.5 from another distributor (tutum) it works."
7239,'crosbymichael','Allow setting of environment variables when importing docker images\nWe want to be able to set the container=docker environment\r\nvariable when we build RHEL docker images.  I believe there\r\nwill be other use cases where you might want to set\r\nenvironment in base images.\r\n\r\nSince you can do this in layered image, I see no reason not\r\nto allow it in base images.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Dan Walsh <dwalsh@redhat.com> (github: rhatdan)'
7222,'erikh',"Cleanup: Extract log utils into pkg/log\n(RE: conversation in #docker-dev)\r\n\r\nThis is the beginning of a few pull requests to break up utils into more discrete packages. My team needs this so we can import packages from Docker without inadvertently inheriting all the imports from utils.\r\n\r\nIn our case, we need to break up some of utils so we don't accidentally pull in github.com/docker/docker/pkg/term, which does not compile on Windows.\r\n"
7219,'LK4D4','Fix data race in client hijack\nFixes the following data race:\r\n```\r\n---> Making bundle: cross (in bundles/1.1.1-dev/cross)\r\nCreated symlinks: /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/cross/linux/amd64/docker /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/cross/linux/amd64/docker-1.1.1-dev /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/cross/linux/amd64/docker-1.1.1-dev.md5 /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/cross/linux/amd64/docker-1.1.1-dev.sha256\r\ngo build: -race is only supported on linux/amd64, darwin/amd64 and windows/amd64\r\n==================\r\nWARNING: DATA RACE\r\nWrite by goroutine 13:\r\n  os.(*file).close()\r\n      /usr/local/go/src/pkg/os/file_unix.go:113 +0x184\r\n  os.(*File).Close()\r\n      /usr/local/go/src/pkg/os/file_unix.go:102 +0x82\r\n  github.com/dotcloud/docker/api/client.func·015()\r\n      /go/src/github.com/dotcloud/docker/api/client/hijack.go:85 +0x12b\r\n  github.com/dotcloud/docker/api/client.func·016()\r\n      /go/src/github.com/dotcloud/docker/api/client/hijack.go:98 +0x266\r\n  github.com/dotcloud/docker/utils.func·001()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x4e\r\n\r\nPrevious read by goroutine 14:\r\n  os.(*File).read()\r\n      /usr/local/go/src/pkg/os/file_unix.go:180 +0x5d\r\n  os.(*File).Read()\r\n      /usr/local/go/src/pkg/os/file.go:95 +0xbb\r\n  io.Copy()\r\n      /usr/local/go/src/pkg/io/io.go:352 +0x1da\r\n  github.com/dotcloud/docker/api/client.func·017()\r\n      /go/src/github.com/dotcloud/docker/api/client/hijack.go:103 +0xf3\r\n  github.com/dotcloud/docker/utils.func·001()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x4e\r\n\r\nGoroutine 13 (running) created at:\r\n  github.com/dotcloud/docker/utils.Go()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:45 +0xf7\r\n  github.com/dotcloud/docker/api/client.(*DockerCli).hijack()\r\n      /go/src/github.com/dotcloud/docker/api/client/hijack.go:98 +0xde1\r\n  github.com/dotcloud/docker/api/client.func·013()\r\n      /go/src/github.com/dotcloud/docker/api/client/commands.go:2121 +0x281\r\n  github.com/dotcloud/docker/utils.func·001()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x4e\r\n\r\nGoroutine 14 (running) created at:\r\n  github.com/dotcloud/docker/utils.Go()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:45 +0xf7\r\n  github.com/dotcloud/docker/api/client.(*DockerCli).hijack()\r\n      /go/src/github.com/dotcloud/docker/api/client/hijack.go:117 +0x9a5\r\n  github.com/dotcloud/docker/api/client.func·013()\r\n      /go/src/github.com/dotcloud/docker/api/client/commands.go:2121 +0x281\r\n  github.com/dotcloud/docker/utils.func·001()\r\n      /go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x4e\r\n```'
7206,'fredlf','[Docs] Add Dockerfile Tutorial\nWe removed from the website the Dockerfile tutorial from www.docker.com, we should add something similar to docs. @fredlf, would you be able to move/create it?\r\n\r\nFeel free to contact @j0hnst0n or me to get the content for the tutorial.   \r\n\r\nThanks'
7193,'fredlf',"Removed docker_io_oauth_api.md: Docker is not currently accepting regist...\n...rations for third party auth while it's determined how this will be done, if at all, in the future.\r\n\r\nDocker-DCO-1.1-Signed-off-by: hollietealok <hollie@docker.com> (github: hollietealok)"
7103,'erikh',"Handle hostname in portmapping properly\nAfter fixing err masking via #7100, at least one bug reported in #6904 was caused by docker not properly handling `hostname`. yielding a very misleading error:\r\n\r\n```docker run -p localhost:1234:1234 ubuntu bash\r\n2014/07/18 18:16:59 Error: Cannot start container 77c24a05dab4d5c984314a44416944b9d267be88``\r\n\r\nAfter applying #7100, it shows that we don't validate the hostname which makes iptables fail:\r\n\r\n```docker run -p localhost:1234:1234 ubuntu /bin/bash\r\n2014/07/18 18:08:25 Error: Cannot start container f4de3b2364afc0dcad97d8a8645e996a1b97a76e08f95bafd3597ac839b60ef0:  (exit status 2)```\r\n\r\nI would suggest we parse the hostname in the portmapping and return an error it it can't be resolved. But at least we should check the portmapping before blindly throwing it at iptables."
7092,'vieux','Update /etc/hosts when linked container is restarted\nFix #6350\r\n\r\n'
7047,'jfrazelle',"events stream endpoint doesn't newline delim json\nShould have been added by https://github.com/dotcloud/docker/pull/4276 - I think this is a regression."
7043,'shykes','Change HTTP code: 404 to a more user friendly Image Not found msg\nDocker-DCO-1.1-Signed-off-by: William Henry <whenry@redhat.com> (github: ipbabble)'
6983,'vieux','panic on `run -t -a stderr`\nAs reported by @mheon on #6736 : https://bugzilla.redhat.com/show_bug.cgi?id=1113092\r\n\r\n```\r\n$ docker run -a stderr -t busybox bash\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0x20 pc=0x1d043d]\r\n\r\ngoroutine 10 [running]:\r\nruntime.panic(0x4a04e0, 0xb61679)\r\n\t/usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\r\nbufio.(*Reader).writeBuf(0x210d66b40, 0x0, 0x0, 0x5056e0, 0x1, ...)\r\n\t/usr/local/go/src/pkg/bufio/bufio.go:430 +0x6d\r\nbufio.(*Reader).WriteTo(0x210d66b40, 0x0, 0x0, 0xd01608, 0x0, ...)\r\n\t/usr/local/go/src/pkg/bufio/bufio.go:402 +0x4d\r\nio.Copy(0x0, 0x0, 0xd014e0, 0x210d66b40, 0x0, ...)\r\n\t/usr/local/go/src/pkg/io/io.go:344 +0xa5\r\ngithub.com/dotcloud/docker/api/client.func·016(0x0, 0x0)\r\n\t/go/src/github.com/dotcloud/docker/api/client/hijack.go:92 +0xf8\r\ngithub.com/dotcloud/docker/utils.func·001()\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x2e\r\ncreated by github.com/dotcloud/docker/utils.Go\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:45 +0xa7\r\n\r\ngoroutine 1 [select]:\r\nnet/http.(*Transport).getConn(0x210d86d00, 0x210de0c60, 0x210de0c60, 0x0, 0x0)\r\n\t/usr/local/go/src/pkg/net/http/transport.go:424 +0x24d\r\nnet/http.(*Transport).RoundTrip(0x210d86d00, 0x210d659c0, 0x1, 0x0, 0x0)\r\n\t/usr/local/go/src/pkg/net/http/transport.go:182 +0x340\r\nnet/http.send(0x210d659c0, 0xcff358, 0x210d86d00, 0x0, 0x0, ...)\r\n\t/usr/local/go/src/pkg/net/http/client.go:168 +0x37f\r\nnet/http.(*Client).send(0x210de0c30, 0x210d659c0, 0x72, 0x210de0c00, 0x210d89150)\r\n\t/usr/local/go/src/pkg/net/http/client.go:100 +0xd9\r\nnet/http.(*Client).doFollowingRedirects(0x210de0c30, 0x210d659c0, 0x635370, 0x0, 0x0, ...)\r\n\t/usr/local/go/src/pkg/net/http/client.go:294 +0x671\r\nnet/http.(*Client).Do(0x210de0c30, 0x210d659c0, 0xc, 0x0, 0x0)\r\n\t/usr/local/go/src/pkg/net/http/client.go:132 +0x157\r\ngithub.com/dotcloud/docker/api/client.(*DockerCli).call(0x210d86a80, 0x52fb20, 0x4, 0x210d66c00, 0x52, ...)\r\n\t/go/src/github.com/dotcloud/docker/api/client/utils.go:92 +0x64e\r\ngithub.com/dotcloud/docker/api/client.(*DockerCli).CmdRun(0x210d86a80, 0x210d38020, 0x5, 0x5, 0x0, ...)\r\n\t/go/src/github.com/dotcloud/docker/api/client/commands.go:2090 +0x1801\r\nreflect.callMethod(0x210d4cc90, 0x2210e9f7f8)\r\n\t/usr/local/go/src/pkg/reflect/value.go:676 +0x17b\r\nreflect.methodValueCall(0x210d38020, 0x5, 0x5, 0x210d4cc90, 0x1)\r\n\t/usr/local/go/src/pkg/reflect/asm_amd64.s:26 +0x24\r\ngithub.com/dotcloud/docker/api/client.(*DockerCli).ParseCommands(0x210d86a80, 0x210d38010, 0x6, 0x6, 0xcff208, ...)\r\n\t/go/src/github.com/dotcloud/docker/api/client/cli.go:44 +0x23c\r\nmain.main()\r\n\t/go/src/github.com/dotcloud/docker/docker/docker.go:253 +0x3426\r\n\r\ngoroutine 3 [syscall]:\r\nos/signal.loop()\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\r\ncreated by os/signal.init·1\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\r\n\r\ngoroutine 7 [chan receive]:\r\nnet/http.(*persistConn).readLoop(0x210d86c00)\r\n\t/usr/local/go/src/pkg/net/http/transport.go:778 +0x68f\r\ncreated by net/http.(*Transport).dialConn\r\n\t/usr/local/go/src/pkg/net/http/transport.go:528 +0x607\r\n\r\ngoroutine 9 [chan receive]:\r\ngithub.com/dotcloud/docker/api/client.(*DockerCli).hijack(0x210d86a80, 0x52fb20, 0x4, 0x210da4770, 0x65, ...)\r\n\t/go/src/github.com/dotcloud/docker/api/client/hijack.go:120 +0x8e2\r\ngithub.com/dotcloud/docker/api/client.func·013(0x0, 0x210d2ec60)\r\n\t/go/src/github.com/dotcloud/docker/api/client/commands.go:2068 +0x1c1\r\ngithub.com/dotcloud/docker/utils.func·001()\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:44 +0x2e\r\ncreated by github.com/dotcloud/docker/utils.Go\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:45 +0xa7\r\n\r\ngoroutine 8 [select]:\r\nnet/http.(*persistConn).writeLoop(0x210d86c00)\r\n\t/usr/local/go/src/pkg/net/http/transport.go:791 +0x271\r\ncreated by net/http.(*Transport).dialConn\r\n\t/usr/local/go/src/pkg/net/http/transport.go:529 +0x61e\r\n\r\ngoroutine 11 [runnable]:\r\ngithub.com/dotcloud/docker/utils.func·001()\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:43\r\ncreated by github.com/dotcloud/docker/utils.Go\r\n\t/go/src/github.com/dotcloud/docker/utils/utils.go:45 +0xa7\r\n\r\ngoroutine 12 [runnable]:\r\nnet/http.func·014()\r\n\t/usr/local/go/src/pkg/net/http/transport.go:418\r\ncreated by net/http.(*Transport).getConn\r\n\t/usr/local/go/src/pkg/net/http/transport.go:421 +0x11a\r\n```\r\n\r\n```\r\n$ docker version\r\nClient version: 1.1.0\r\nClient API version: 1.13\r\nGo version (client): go1.2.1\r\nGit commit (client): 79812e3\r\nServer version: 1.1.0\r\nServer API version: 1.13\r\nGo version (server): go1.2.1\r\nGit commit (server): 79812000\r\n$ docker info\r\nContainers: 69\r\nImages: 230\r\nStorage Driver: aufs\r\n Root Dir: /mnt/sda1/var/lib/docker/aufs\r\n Dirs: 378\r\nExecution Driver: native-0.2\r\nKernel Version: 3.15.3-tinycore64\r\nDebug mode (server): true\r\nDebug mode (client): false\r\nFds: 28\r\nGoroutines: 47\r\nEventsListeners: 0\r\nInit Path: /usr/local/bin/docker\r\nSockets: [unix:///var/run/docker.sock tcp://0.0.0.0:2375]\r\n```'
6976,'vieux','docker daemon: initialize the daemon pidfile early\nfixes https://github.com/dotcloud/docker/issues/6973\r\n\r\nThis way there are no races on iptables, etc. before there is a discovery of existing daemon pidfile\r\n\r\nDocker-DCO-1.1-Signed-off-by: Vincent Batts <vbatts@redhat.com> (github: vbatts)'
6969,'shin-',"Validation of repository names differs between docker client and REST API\nUsing gradle-docker I have the option of using either the REST API to build an image or the `docker` command line tool.  When I choose the REST API option I am able to create images tagged with capital letters.  However, when I attempt the same operation using the client I see:\r\n\r\n```\r\nCommand line [docker build -t tc.you.pds/dropwizardBase /home/ubuntu/github.com/pds-deployment/common/build/docker/dropwizardBase] returned:\r\n  2014/07/10 23:58:25 Invalid repository name (dropwizardBase), only [a-z0-9-_.] are allowed\r\n```\r\n\r\nWhile I'm not sure I completely understand why capital letters are forbidden, at the very least it seems that the behavior should be consistent."
6964,'kencochrane','Remote API "GET /images/search" only returning "false" for "is_official" flag\nWe are trying to leverage the Remote API to identify which repos from the hub are official. The documentation (see below) shows an "is_official" flag that one would assume returns true/false, but even for the official repos it\'s coming back as false.\r\n\r\nClearly the docker hub itself is able to distinguish which repos are official or not, so perhaps this is just a case of the API documentation being out of date.\r\n\r\n**Example request**:\r\n\r\n    GET /images/search?term=sshd HTTP/1.1\r\n\r\n**Example response**:\r\n\r\n    HTTP/1.1 200 OK\r\n    Content-Type: application/json\r\n\r\n    [\r\n            {\r\n                "description": "",\r\n                "is_official": false,\r\n                "is_automated": false,\r\n                "name": "wma55/u1210sshd",\r\n                "star_count": 0\r\n            },\r\n            {\r\n                "description": "",\r\n                "is_official": false,\r\n                "is_automated": false,\r\n                "name": "jdswinbank/sshd",\r\n                "star_count": 0\r\n            },\r\n            {\r\n                "description": "",\r\n                "is_official": false,\r\n                "is_automated": false,\r\n                "name": "vgauthier/sshd",\r\n                "star_count": 0\r\n            }\r\n    ...\r\n    ]'
6962,'vieux',"Clean up the docker socket on termination of the daemon.\nPlease review. I feel like there's more cases here I'm missing, but I'm not sure where they might be.\r\n\r\nThanks!"
6908,'vieux','bump api to 1.14 & update docs\nDocker-DCO-1.1-Signed-off-by: Adrien Folie <folie.adrien@gmail.com> (github: folieadrien)'
6874,'unclejack',"Can't pull a specific image\nDocker version 1.1 (client and server) on boot2docker.\r\n\r\nclient:\r\n<pre>\r\n$ docker pull dockerfile/chrome\r\nPulling repository dockerfile/chrome\r\nafe3aba3e6e0: Error pulling image (latest) from dockerfile/chrome, operation not supported\r\n511136ea3c5a: Download complete\r\n5e66087f3ffe: Download complete\r\n4d26dd3ebc1c: Download complete\r\nd4010efcfd86: Download complete\r\n99ec81b80c55: Download complete\r\nb261bc65cd23: Download complete\r\n42404685406e: Download complete\r\n6cc69450fe19: Download complete\r\nefc4fbcd007f: Download complete\r\n2baeb2edbf92: Download complete\r\necd5c1cc18ac: Download complete\r\n1f089cc15e82: Download complete\r\n9cf05f60065b: Error downloading dependent layers\r\n2014/07/07 10:20:33 Error pulling image (latest) from dockerfile/chrome, operation not supported\r\n</pre>\r\n\r\nserver:\r\n<pre>\r\n[debug] registry.go:295 server doesn't support resume\r\n[debug] archive.go:86 [tar autodetect] n: [31 139 8 0 0 9 110 136 0 255]\r\nError pulling image (latest) from dockerfile/chrome, operation not supported\r\n[c6342858] -job pull(dockerfile/chrome, latest) = ERR (1)</pre>"
6834,'crosbymichael','Fix getImagesJSON output for api less than 1.7\nIf you try to list images, using on the client API < 1.7, like docker-0.6.6 and on the server the latest one (1.13):\r\n\r\n```\r\n$ ./docker-0.6.6 images\r\n2014/07/03 11:49:26 json: cannot unmarshal number into Go value of type string\r\n```\r\n\r\nBecause docker is sending:\r\n```\r\n    {\r\n        "Created": 1364804458,\r\n        "Id": "539c0211cd76cdeaedbecf9f023ef774612e331137ce7ebe4ae1b61088e7edbe",\r\n        "Repository": "centos",\r\n        "Size": 313801147,\r\n        "Tag": 6,\r\n        "VirtualSize": 313801147\r\n    }\r\n```\r\n\r\nTag should be handled like a string, with quotation marks:\r\n```\r\n"Tag": "6.4",\r\n```\r\n\r\nSo the fix is to use `env.SetJson` instead of `env.Set`, which will add quotation marks and will not convert from float to int.\r\n\r\nAdditionally fix repository names using `ParseRepositoryTag` so it parses names with more than one `:` properly.\r\n\r\nFrom:\r\n```\r\n    {\r\n        "Created": 1396610402,\r\n        "Id": "4ef43eb26f24ca029cfe668815d3c30cdceaadee78b4f72726a55a0a25669e92",\r\n        "Repository": "mybox",\r\n        "Size": 365,\r\n        "Tag": "5000/mysql/dev",\r\n        "VirtualSize": 1509036908\r\n    }\r\n```\r\nTo:\r\n```\r\n    {\r\n        "Created": 1396610402,\r\n        "Id": "4ef43eb26f24ca029cfe668815d3c30cdceaadee78b4f72726a55a0a25669e92",\r\n        "Repository": "mybox:5000/mysql/dev",\r\n        "Size": 365,\r\n        "Tag": "latest",\r\n        "VirtualSize": 1509036908\r\n    }\r\n```\r\n\r\nFixing the output from:\r\n```\r\nmybox               5000/mysql/dev       4ef43eb26f24        12 weeks ago        365 B (virtual 1.509 GB)\r\n```\r\nTo:\r\n```\r\nmybox:5000/mysql/dev   latest         4ef43eb26f24        12 weeks ago         365 B (virtual 1.509 GB)\r\n```\r\n\r\nI can see only a place to create a regression test for this: `integration/api_test.go` but we\'re not including more tests on integration, right?'
6732,'vieux','docker commit - repository name must be validated\nWhen I ran this command (forgetting the repository):\r\n\r\n    docker commit 1234abcd -m "added my server example"\r\n\r\nI got the error:\r\n\r\n    [DEPRECATED] The format \'CONTAINER [REPOSITORY [TAG]]\' as been deprecated.     Please use CONTAINER [REPOSITORY[:TAG]]\r\n\r\nBut the repository was still created:\r\n\r\n    docker images\r\n    REPOSITORY              TAG                      IMAGE ID            CREATED            VIRTUAL SIZE\r\n    -m                      added my server example   1234abc        27 seconds ago      545 MB'
6719,'vieux','Add logout command\n"docker logout [SERVER]" will remove the registry server\' credentials from\r\n.dockercfg file. If a server is not specified, it will log user out of the\r\ndefault docker registry server\r\n\r\nDocker-DCO-1.1-Signed-off-by: Daniel, Dao Quang Minh <dqminh89@gmail.com> (github: dqminh)'
6697,'crosbymichael','Continuation of the `docker secret` storage feature\nCloses https://github.com/dotcloud/docker/pull/6075\r\n\r\nStarting on a new PR to accommodate alex being on holiday '
6641,'vieux','docker API /event emits start event on already running container with status 200\nNot sure if this is intended:\r\n\r\nWhen executing a `start` command on an already running container through the REST api, the /event stream of the api emits a `200 OK` with a body similar to: \r\n<pre>\r\n{"status"=>"start", "id"=>"cb4e651f6e14424abef3b10ba90693e6ef173b04834b7712280ab819ae67e6bc", "from"=>"tnolet/hello1:latest", "time"=>1403373633}  \r\n</pre>\r\n\r\n\r\nThis is confusing: The container is already running, so I would think a `304 Not Modified` makes more sense, or maybe a `204`. Emitting exactly the same message + code as a freshly starting container makes integrating third party tools that depend on the event stream harder as there is no way to distinguish between new and already running containers.\r\n'
6635,'shykes','Add Fred as docs MAINTAINER\nDocker-DCO-1.1-Signed-off-by: SvenDowideit <SvenDowideit@home.org.au> (github: SvenDowideit)'
6448,'shykes','Guillaume is busy full-time on his new business, and no longer available as a maintainer.\n'
6350,'vieux','/etc/hosts not updated after a linked container is restarted\nRestarting a linked container may give it a different IP (this wasn\'t the case on 0.11, but it is common on 1.0).\r\n\r\nIt would be useful if /etc/hosts stayed in-sync with the new IP of the restarted linked container.\r\n\r\nExample of IPs changing:\r\n```\r\n$ docker run -d --name redis_test tutum/redis\r\nd2d7c4293e8f7cd0a52e0f60a994940550a6ce1329b36eb1637f4f9b7ea976cd\r\n$ docker inspect redis_test | grep Address\r\n        "IPAddress": "172.17.0.17",\r\n$ docker restart redis_test\r\nredis_test\r\n$ docker inspect redis_test | grep Address\r\n        "IPAddress": "172.17.0.18",\r\n```\r\n\r\nI\'ve manually updated the `hosts` file from outside the container and the change was picked up, so it seems automating this is possible.'
6276,'vieux',"Pause/freeze containers during commit\nInitiates a pause before committing a container,\r\nadds a pause option to the commit command, defaulting to 'true'.\r\n\r\nFixes #6267 \r\nFixes #3675\r\n\r\nDocker-DCO-1.1-Signed-off-by: Eric Windisch <ewindisch@docker.com> (github: ewindisch)"
6218,'shykes','update MAINTAINERS files\nping @shykes @crosbymichael @unclejack'
6199,'vieux','Event subscription refactoring\nEvents subscription (`/events` API endpoint) attributes pseudo-unique identifiers to incoming subscribers: originally its host, then its subscription time. This is unnecessary and leads to code complexity.\r\n\r\nIntroduce a `JSONMessagePublisher` to provide simple pub/sub mechanism for `JSONMessage`, and rely on this new type to publish events to all subscribed listeners. The original logic is kept for the `since` and `until` parameters, and for client disconnection handling.'
6101,'LK4D4',"Implement allocating IPs from CIDR within bridge network \nFixes #4986\r\n\r\nIt is similar to openstack nova `--fixed-cidr` and allows to do things like [this](http://goldmann.pl/blog/2014/01/21/connecting-docker-containers-on-multiple-hosts/). And our network engineer very excited about this change :)\r\nAlso I've refactored ipallocator a little more."
6089,'shykes',"add support for COPY to docker build\nThis adds a COPY command to docker build which works like ADD, but is only for local files and it doesn't extract files.\r\n\r\nThis is an alternative to changing the ADD magic in #6057 and is the start for fixing #3050.\r\n\r\nFixes #5935"
6030,'vieux','Add Wait() calls in the appropriate spots\nThis adds Wait() (semantically appropriate versions) where appropriate.\r\n\r\n**Note:** I cannot run the `buildfile_test.go` integrations test with passing results either with or without this patch. I spent a bit of time trying to diagnose that, but was unsuccessful at finding the cause. I will report a bug instead, but this patch should not be merged until someone can get the integrations to pass successfully.\r\n\r\nFixes #5971'
5988,'vieux',"Host devices are nodes are not recursively copied to containers /dev\nFor a privileged container all devices nodes from the host are copied to the container's /dev.  It appears this copy is not recursive.  Specifically I was looking for `/dev/net/tun`"
5919,'vieux','Fix remote add cache\nFollowup of #5917. /cc @bjaglin @vieux \r\nFixes #3847'
5892,'unclejack','Bad permissions on a trusted container, but correct permissions locally\nI\'ve hit a bug where the Unix permissions are wrongly set when the image is built automatically (trusted build) but when I run the build locally (using the same Dockerfile) everything is fine.\r\n\r\nHow to reproduce:\r\n\r\n```bash\r\n$ docker --version\r\nDocker version 0.11.1, build fb99f99\r\n$ docker run -it tinyerp/sandbox-postgresql\r\nroot@4871d1b57a8e:/# service postgresql start\r\n * Starting PostgreSQL 9.3 database server                                                                                           [ OK ] \r\nroot@4871d1b57a8e:/# sudo -u postgres createdb testdb\r\ncreatedb: database creation failed: ERROR:  could not create directory "base/16385": Permission denied\r\nroot@4871d1b57a8e:/# ls -l /var/lib/postgresql/9.3/main/\r\ntotal 64\r\n-rw------- 1 postgres postgres    4 May 18 16:16 PG_VERSION\r\ndrwxr-xr-x 8 root     root     4096 May 18 16:20 base\r\ndrwx------ 2 postgres postgres 4096 May 18 16:20 global\r\ndrwx------ 2 postgres postgres 4096 May 18 16:20 pg_clog\r\ndrwxr-xr-x 6 root     root     4096 May 18 16:20 pg_multixact\r\ndrwx------ 2 postgres postgres 4096 May 18 16:20 pg_notify\r\ndrwx------ 2 postgres postgres 4096 May 18 16:16 pg_serial\r\ndrwx------ 2 postgres postgres 4096 May 18 16:16 pg_snapshots\r\ndrwx------ 2 postgres postgres 4096 May 18 16:20 pg_stat\r\ndrwx------ 2 postgres postgres 4096 May 18 16:26 pg_stat_tmp\r\ndrwx------ 2 postgres postgres 4096 May 18 16:20 pg_subtrans\r\ndrwx------ 2 postgres postgres 4096 May 18 16:16 pg_tblspc\r\ndrwx------ 2 postgres postgres 4096 May 18 16:16 pg_twophase\r\ndrwx------ 3 postgres postgres 4096 May 18 16:20 pg_xlog\r\n-rw------- 1 postgres postgres  133 May 18 16:20 postmaster.opts\r\n-rw------- 1 postgres postgres   98 May 18 16:20 postmaster.pid\r\nroot@4871d1b57a8e:/# \r\n```\r\nThe directories `base` and `pg_multixact` are wrongly owned by `root` when they should be owned by `postgres`.\r\n\r\n\r\nThis is the Dockerfile published (https://index.docker.io/u/tinyerp/sandbox-postgresql/):\r\n```\r\n# DOCKER-VERSION 0.11.1\r\nFROM ubuntu:14.04\r\n\r\nRUN mv /usr/bin/ischroot /usr/bin/chroot.orig \\\r\n && ln -s /bin/true /usr/bin/ischroot \\\r\n && export DEBIAN_FRONTEND=noninteractive LANG && apt-get update \\\r\n && apt-get install -y --no-install-recommends language-pack-en \\\r\n && update-locale LANG=en_US.UTF-8 && . /etc/default/locale \\\r\n && apt-get install -y postgresql-9.3\r\n\r\nRUN pg_ctlcluster 9.3 main start && pg_ctlcluster 9.3 main stop\r\n\r\nCMD ["/bin/bash", "--login"]\r\n```\r\n\r\nThe last `RUN pg_ctlcluster` instruction starts and stops the PostgreSQL server in order to create a DB user. (I removed the `createuser -d openerp` while troubleshooting the issue).\r\n\r\nI\'m puzzled why it builds without this error locally, but the image is built wrong on the public registry.'
5867,'vieux','Failed container deletion causes next container creation of the same name to fail\nThis is particularly odd issue I\'ve been running into.  I have a script that does essentially the following\r\n\r\n```sh\r\ndocker rm -f container_name\r\ndocker run --name container_name -d ...\r\n```\r\n\r\nSo I\'m killing and deleting a container by a name and then creating a second container with the same name as the previous.  Now there\'s something odd about my particular container that always seems to cause an aufs error while deleting.  So the `rm -f` actually creates an error but running `docker ps` afterwards indicates that it is now considered deleted.  When `docker run --name container_name` is done next it will fail with an error `Cannot find child for /container_name`.  Doing a `docker ps` again will show that a container is created (not running) and in a funky state in which it has no name or status.\r\n\r\nI haven\'t been able to narrow down why my container always throws an aufs error on delete, but regardless its easy to simulate an aufs error that causes the container deletion to fail.  Just run the below script it should reproduce the issue I\'m seeing.\r\n\r\n```sh\r\n#!/bin/bash\r\n\r\nID=$(docker run --name test123 -d ubuntu sleep 2)\r\n\r\necho Started $ID\r\n\r\n# Make aufs deleting fail\r\ncd /var/lib/docker/aufs/mnt/$ID\r\ndocker rm -f $ID\r\n\r\necho "Look, $ID is gone"\r\ndocker ps -a\r\necho "told you so"\r\n\r\n# This will fail now\r\ndocker run --name test123 ubuntu sleep 2\r\n\r\necho "Look no name or status"\r\ndocker ps -a\r\n```\r\n\r\nAnd the output I get is\r\n```\r\nStarted 6f7dc0920501fb14e2daee26b7120d3123fb3bfc0869f14f8a092ed462098ea1\r\nError: Cannot destroy container 6f7dc0920501fb14e2daee26b7120d3123fb3bfc0869f14f8a092ed462098ea1: Driver aufs failed to remove root filesystem 6f7dc0920501fb14e2daee26b7120d3123fb3bfc0869f14f8a092ed462098ea1: device or resource busy\r\n2014/05/16 23:57:54 Error: failed to remove one or more containers\r\nLook, 6f7dc0920501fb14e2daee26b7120d3123fb3bfc0869f14f8a092ed462098ea1 is gone\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\ntold you so\r\n2014/05/16 23:57:54 Error: Cannot start container 6990b614f28fdceff355d6cdfd00614acfcfe1ff9077cc2583d93e14919f8407: Cannot find child for /test123\r\nLook no name or status\r\nCONTAINER ID        IMAGE               COMMAND             CREATED                  STATUS              PORTS               NAMES\r\n6990b614f28f        ubuntu:14.04        sleep 2             Less than a second ago                                                       \r\n```\r\n\r\nSo I\'m guessing there\'s two bugs.  First, when a container `rm -f` fails due to the container root not being deleted, the graphdb is left in some inconsistent state.  Second, when a container create fails due to a graphdb issue, the created container is in an inconsistent state.'
5860,'vieux','sort flags with the same name in a consistent order\nbefore:\r\n```\r\n: trevize docker master ; docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n: trevize docker master ; docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n: trevize docker master ; docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n```\r\n\r\nafter:\r\n```\r\n: trevize docker master ;  bundles/0.11.1-dev/binary/docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n: trevize docker master ;  bundles/0.11.1-dev/binary/docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n: trevize docker master ;  bundles/0.11.1-dev/binary/docker --help 2>&1 | fgrep -i -- \'-g\'\r\n  -G, --group="docker"                      Group to assign the unix socket specified by -H when running in daemon mode\r\n  -g, --graph="/var/lib/docker"             Path to use as the root of the docker runtime\r\n\r\n```'
5847,'jamtur01',"The Search API shouldn't be part of the Docker.IO API\nThis:\r\n\r\nhttp://docs.docker.io/reference/api/docker-io_api/#search\r\n\r\nIs part of the Index. It needs a new home. This will be addressed when we rebrand."
5817,'vbatts','registry: Introduce DOCKER_REGISTRY_SSL_NO_VERIFY environment variable\nCurrently docker registry http request may block by some gateway\r\n(for example, company web proxy), because of the certificate issue.\r\n\r\n[root@localhost docker]# docker pull ubuntu\r\nPulling repository ubuntu\r\n2014/05/15 15:51:24 Get https://index.docker.io/v1/repositories/ubuntu/images: x509: certificate signed by unknown authority\r\n\r\nThis patch introduce a new environment variable DOCKER_REGISTRY_SSL_NO_VERIFY\r\nto control secure certificate verify. The default value is false.\r\n\r\nThe environment variable name comes from git: GIT_SSL_NO_VERIFY\r\n(Similarly, wget and curl both have env variable or option to control secure\r\nverify)\r\n\r\nDocker-DCO-1.1-Signed-off-by: Jovi Zhangwei <jovi.zhangwei@gmail.com> (github: ktap)'
5806,'vieux','Issue #5766 - Check channel closed state in /events loop\nWhen listener channel is closed, it becomes always available for reading: select becomes an active loop which writes default-constructed events (i.e: empty strings).\r\n\r\nSorry for the lack of test, but I have a hard time writing a unit test for `/events` (un-terminating API call)\r\n\r\nFixes #5766\r\n\r\nDocker-DCO-1.1-Signed-off-by: Arnaud Porterie <arnaud.porterie@gmail.com> (github: icecrime)'
5702,'vieux','Add GzipFastest & use it for the context\nThis PR adds a GzipFastest compression type which is used by CompressStream to set the gzip compression to level 1.\r\nThis PR makes `docker build` compress the context using GzipFastest to reduce the size of the uploaded context without affecting performance.\r\n\r\nThis lowers the amount of data `make build` has to upload from ~48 MB down to ~29 MB. This should give a small speed boost for small contexts and a bigger one for large contexts.'
5614,'vieux','Move Attach from container to daemon\nThis moves the Attach method from the container to the daemon.  This\r\nmethod mostly supports the http attach logic and does not have anything\r\nto do with the running of a container.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Michael Crosby <michael@crosbymichael.com> (github: crosbymichael)'
5609,'vieux','Move envconfig generation to lxc driver\nLXC is the only driver that uses the .dockerenv file on disk to get the env vars.  This moves that logic into the lxc driver. \r\n\r\nDocker-DCO-1.1-Signed-off-by: Michael Crosby <michael@crosbymichael.com> (github: crosbymichael)'
5577,'vieux','UFW is blocking all connections on Ubuntu 14.04\nI have Docker installed from official repo for Ubuntu 14.04. I\'ve also set `DEFAULT_FORWARD_POLICY="ACCEPT"` but UFW is still blocking all connections. \r\n\r\nLogs from `/var/log/ufw.log`:\r\n\r\n```\r\nMay  3 11:38:02 niuniobook kernel: [ 3134.793605] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:fb:68:17:29:27:ac:86:08:00 SRC=192.168.1.78 DST=224.0.0.251 LEN=32 TOS=0x00 PREC=0x00 TTL=1 ID=21767 PROTO=2 \r\nMay  3 11:38:06 niuniobook kernel: [ 3138.787070] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:01:74:ea:3a:f4:8f:06:08:00 SRC=192.168.1.254 DST=224.0.0.1 LEN=32 TOS=0x00 PREC=0xC0 TTL=1 ID=0 DF PROTO=2 \r\nMay  3 11:38:12 niuniobook kernel: [ 3144.726682] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:fb:68:17:29:27:ac:86:08:00 SRC=192.168.1.78 DST=224.0.0.251 LEN=32 TOS=0x00 PREC=0x00 TTL=1 ID=21770 PROTO=2 \r\nMay  3 11:40:08 niuniobook kernel: [ 3260.552501] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:01:00:14:bf:6e:75:44:08:00 SRC=192.168.1.1 DST=224.0.0.1 LEN=28 TOS=0x00 PREC=0x00 TTL=1 ID=0 DF PROTO=2 \r\nMay  3 11:40:11 niuniobook kernel: [ 3263.729062] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:01:74:ea:3a:f4:8f:06:08:00 SRC=192.168.1.254 DST=224.0.0.1 LEN=32 TOS=0x00 PREC=0xC0 TTL=1 ID=0 DF PROTO=2 \r\nMay  3 11:40:14 niuniobook kernel: [ 3266.287395] [UFW BLOCK] IN=wlan0 OUT= MAC=01:00:5e:00:00:fb:68:17:29:27:ac:86:08:00 SRC=192.168.1.78 DST=224.0.0.251 LEN=32 TOS=0x00 PREC=0x00 TTL=1 ID=21774 PROTO=2 \r\nMay  3 11:40:23 niuniobook kernel: [ 3275.719757] [UFW BLOCK] IN=docker0 OUT= PHYSIN=veth8a20 MAC=72:7e:aa:06:9e:45:22:cb:c5:24:95:07:08:00 SRC=172.17.0.2 DST=172.17.42.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=20016 DF PROTO=TCP SPT=38758 DPT=20559 WINDOW=29200 RES=0x00 SYN URGP=0 \r\nMay  3 11:40:24 niuniobook kernel: [ 3276.717989] [UFW BLOCK] IN=docker0 OUT= PHYSIN=veth8a20 MAC=72:7e:aa:06:9e:45:22:cb:c5:24:95:07:08:00 SRC=172.17.0.2 DST=172.17.42.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=20017 DF PROTO=TCP SPT=38758 DPT=20559 WINDOW=29200 RES=0x00 SYN URGP=0 \r\nMay  3 11:40:26 niuniobook kernel: [ 3278.722147] [UFW BLOCK] IN=docker0 OUT= PHYSIN=veth8a20 MAC=72:7e:aa:06:9e:45:22:cb:c5:24:95:07:08:00 SRC=172.17.0.2 DST=172.17.42.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=20018 DF PROTO=TCP SPT=38758 DPT=20559 WINDOW=29200 RES=0x00 SYN URGP=0 \r\nMay  3 11:40:30 niuniobook kernel: [ 3282.726578] [UFW BLOCK] IN=docker0 OUT= PHYSIN=veth8a20 MAC=72:7e:aa:06:9e:45:22:cb:c5:24:95:07:08:00 SRC=172.17.0.2 DST=172.17.42.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=20019 DF PROTO=TCP SPT=38758 DPT=20559 WINDOW=29200 RES=0x00 SYN URGP=0 \r\n```'
5567,'vieux','Remove unused daemon/sorter.go\nDocker-DCO-1.1-Signed-off-by: Guillaume J. Charmes <guillaume@charmes.net> (github: creack)'
5561,'vieux','move Table to a separate file and add additional unit tests\nDocker-DCO-1.1-Signed-off-by: Bryan Murphy <bmurphy1976@gmail.com> (github: bmurphy1976)'
5560,'vieux','De-register containers before removing driver and containerGraph references\nThis is required to address a race condition described in #5553,\r\nwhere a container can be partially deleted -- for example, the\r\nroot filesystem but not the init filesystem -- which makes\r\nit impossible to delete the container without re-adding the\r\nmissing filesystems manually.\r\n\r\nThis behavior has been witnessed when rebooting boxes that\r\nare configured to remove containers on shutdown in parallel\r\nwith stopping the Docker daemon.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Gabriel Monroy <gabriel@opdemand.com> (github: gabrtv)'
5559,'vieux','Test and fix history command ordering\nDocker-DCO-1.1-Signed-off-by: Bryan Murphy bmurphy1976@gmail.com (github: bmurphy1976)'
5555,'shykes','Update README.md\nadded\r\nLicensing\r\nDocker is licensed under the Apache License, Version 2.0. See LICENSE for full license text.\r\nDocker-DCO-1.1-Signed-off-by: Vincent Mayers vince.mayers@gmail.com (github: vincentmayers)'
5539,'vieux','Override entrypoint with "docker run --entrypoint" does not work with some images\nHi,\r\n\r\nI often use "docker run -i -t --entrypoint=/bin/bash" trick to get into the shell. However, I found this trick will fail with some images. Instead of dropping me into the shell, it will print a message like "/bin/sh: /bin/sh: cannot execute binary file" and exit.\r\n\r\nI have nailed down to the point that the problematic images always have a strange extra config.Cmd entry with value like ["/bin/sh",  "-c", "#nop ADD ...."]  in the image\'s json file (I mean the file at /var/lib/docker/graph/<img_id>/json), while those images without this problem always have a config.Cmd entry with value null.  \r\n\r\nMoreover, if I just modify the value of this config.Cmd entry of a problematic image json file to null,  the "docker run -i -t --entrypoint=/bin/bash" trick will return to work with this image. \r\n\r\nEven weird, when I encounter such a problematic image, if I just try to rebuild the image again with "build --no-cache ..." with the exact same Dockerfile,  sometime that strange config.Cmd entry with value like ["/bin/sh",  "-c", "#nop ADD ...."] will gone and I can happily use the "docker run -i -t --entrypoint=/bin/bash .." to get into shell.\r\n\r\nMy host is "Linux wk-ubuntu 3.8.0-38-generic #56~precise1-Ubuntu SMP Thu Mar 13 16:22:48 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux"\r\n\r\nMy docker version is 0.10.0, build dc9c28f.\r\nFollowing is an example of such problematic image\'s json file\r\n\r\n##/var/lib/docker/graph/<image_id>/json\r\n{\r\n    "Size": 0, \r\n    "architecture": "amd64", \r\n    "author": "Weikai", \r\n    "config": {\r\n        "AttachStderr": false, \r\n        "AttachStdin": false, \r\n        "AttachStdout": false, \r\n        "Cmd": [\r\n            "/bin/sh", \r\n            "-c", \r\n            "#(nop) ADD file:8fd3d7f6182f50f63c5da5437eb6521f8fe4264af6bc984a4d00870d19ffbf20 in /home/caboodl/.ssh/id_rsa"\r\n        ], \r\n        "CpuShares": 0, \r\n        "Domainname": "", \r\n        "Entrypoint": [\r\n            "/bin/sh", \r\n            "-c", \r\n            ". /home/caboodl/set_env.sh && git pull && git checkout $CODE_BRANCH && ../media-service-venv/bin/pip install -r app/requirements.txt && ../media-service-venv/bin/celery worker --app=app.async_tasks.the_celery_app -l info -c 4 -Q celery,background"\r\n        ], \r\n        "Env": [\r\n            "HOME=/", \r\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\r\n        ], \r\n        "ExposedPorts": null, \r\n        "Hostname": "bfcc161f00da", \r\n        "Image": "082b3be688681719f117cb3ce5c896f5b0f5e62e7a43ca707bce328c634ebdc6", \r\n        "Memory": 0, \r\n        "MemorySwap": 0, \r\n        "NetworkDisabled": false, \r\n        "OnBuild": [], \r\n        "OpenStdin": false, \r\n        "PortSpecs": null, \r\n        "StdinOnce": false, \r\n        "Tty": false, \r\n        "User": "caboodl", \r\n        "Volumes": null, \r\n        "WorkingDir": "/home/caboodl/media-service"\r\n    }, \r\n    "container": "1e8233d893bfeb8266ce38015db1a9da4b533533a516a582c7d789936d719231", \r\n    "container_config": {\r\n        "AttachStderr": false, \r\n        "AttachStdin": false, \r\n        "AttachStdout": false, \r\n        "Cmd": [\r\n            "/bin/sh", \r\n            "-c", \r\n            "#(nop) ENTRYPOINT [/bin/sh -c . /home/caboodl/set_env.sh && git pull && git checkout $CODE_BRANCH && ../media-service-venv/bin/pip install -r app/requirements.txt && ../media-service-venv/bin/celery worker --app=app.async_tasks.the_celery_app -l info -c 4 -Q celery,background]"\r\n        ], \r\n        "CpuShares": 0, \r\n        "Domainname": "", \r\n        "Entrypoint": [\r\n            "/bin/sh", \r\n            "-c", \r\n            ". /home/caboodl/set_env.sh && git pull && git checkout $CODE_BRANCH && ../media-service-venv/bin/pip install -r app/requirements.txt && ../media-service-venv/bin/celery worker --app=app.async_tasks.the_celery_app -l info -c 4 -Q celery,background"\r\n        ], \r\n        "Env": [\r\n            "HOME=/", \r\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\r\n        ], \r\n        "ExposedPorts": null, \r\n        "Hostname": "bfcc161f00da", \r\n        "Image": "082b3be688681719f117cb3ce5c896f5b0f5e62e7a43ca707bce328c634ebdc6", \r\n        "Memory": 0, \r\n        "MemorySwap": 0, \r\n        "NetworkDisabled": false, \r\n        "OnBuild": [], \r\n        "OpenStdin": false, \r\n        "PortSpecs": null, \r\n        "StdinOnce": false, \r\n        "Tty": false, \r\n        "User": "caboodl", \r\n        "Volumes": null, \r\n        "WorkingDir": "/home/caboodl/media-service"\r\n    }, \r\n    "created": "2014-05-01T05:08:02.351127155Z", \r\n    "docker_version": "0.10.0", \r\n    "id": "f56ffde585b4139b7d2afaafe6acbd4f3b6fd65881d65f58a46ca02da5db30d1", \r\n    "os": "linux", \r\n    "parent": "082b3be688681719f117cb3ce5c896f5b0f5e62e7a43ca707bce328c634ebdc6"\r\n}\r\n\r\n\r\n\r\n\r\n'
5538,'vieux','engine: catchall handler is shadowed by specific handlers\n'
5537,'vieux','api/server: better error checking to avoid unnecessary panics\n'
5533,'shykes','add linked containers to hosts file\n'
5526,'shykes','beam: Add simple framing system for UnixConn\n'
5515,'vieux','Remove CommandFactory and NsInit interface\nThis PR contains more pre reqs for the runtime changes.  It also simplifies the native driver a lot and reduces the complexity because there are less moving parts between libcontainer and native.'
5508,'shykes','beam: Add simple framing system for UnixConn\nThis is needed for Send/Recieve to correctly handle borders between\r\nthe messages.\r\n\r\nThe framing uses a single 32bit uint32 length for each frame, of which\r\nthe high bit is used to indicate whether the message contains a file\r\ndescriptor or not. This is enough to separate out each message sent\r\nand to decide to which message each file descriptors belongs, even\r\nthough multiple Sends may be coalesced into a single read, and/or one\r\nSend can be split into multiple writes.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson <alexl@redhat.com> (github: alexlarsson)'
5501,'shykes','Add notes about git commit messages\nThis was faster than kicking off a discussion in the ML, so just scrap it if you feel different:\r\n\r\nThis improves readability of commits a lot and is easy to\r\nfollow. I think most people follow those rules already. They are based\r\non http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\r\n'
5497,'vieux',"graphdriver: Add generic test framework for graph drivers\nThis adds daemon/graphdriver/graphtest/graphtest which has a few generic tests for all graph drivers, and then uses these from the btrs, devicemapper and vfs backends. There are also some fixes to the existing tests and drivers to make the tests pass.\r\n \r\nI've not yet added the aufs backend, because i can't test that here atm. It should work though. I also plan to add more tests, but I'll be away for a while, so might as well get this out there before that.\r\n"
5485,'vieux','Engine leak on attach\nWhen calling attach, engine.AddString leaks a goroutine.\r\nCommenting this line solves the issue: https://github.com/dotcloud/docker/blob/master/engine/job.go#L60.\r\n\r\nThe goroutine is stuck in the `Tail` https://github.com/dotcloud/docker/blob/master/engine/streams.go#L179\r\n\r\n/cc @vieux @shykes '
5461,'shykes','modernise the MAINTAINER process documentation to line up with what I understand it to be\n\r\n\r\nDocker-DCO-1.1-Signed-off-by: Sven Dowideit <SvenDowideit@fosiki.com> (github: SvenDowideit)'
5437,'crosbymichael',"Fix graph/tags_unit_test.go on FreeBSD\n- Directories should have u+x (0600 -> 0700)\r\n- Don't chown to root.root by default because it requires root privilege\r\n\r\nDocker-DCO-1.1-Signed-off-by: Kato Kazuyoshi <kato.kazuyoshi@gmail.com> (github: kzys)"
5436,'vieux',"reapply Cmd value even if CmdAdd returns early\nFixes #3762\r\n\r\nIf an image is built while using the cache and the file of an ADD directive is changed, the CmdAdd function returned early. This will result in an overwriten CMD value of the container, since the value is not reset to it's original value.\r\n\r\nThis was already handled correctly in the CmdRun and commit function with the same defer function.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Maximilian Goisser <goisser94@gmail.com> (github:\r\nhobofan)"
5428,'vieux',"Move 'search' to the registry subsystem\nThis continues the effort to separate all registry logic from the deprecated `Server` object.\r\n\r\nThis depends on #5427, please review that first."
5424,'vieux','added metrics to api and cli\nThis is the initial addition of metrics to the API and CLI.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Evan Hazlett <ejhazlett@gmail.com> (github: ehazlett)'
5421,'vieux',"Events only get forwarded to the most recently attached listener\nThanks to @crosbymichael who put up with my blaming skydock all morning\r\n\r\nI started two `docker events` instances, the one on the right in my screenshot was attached first, but the one on the left has all the events.\r\n\r\nIt'd be great to get this fixed. #5348 might be related.\r\n\r\n![](http://i.imgur.com/WOFTUot.png)"
5396,'vieux',"5370 infinite loop caused by symlink\nFixes #5370\r\n\r\nWhen changing from 0.9.1 to 0.10.0 one of my `docker build .` started to hang forever.\r\nIt caused by symlinks in the images. Normally symlinks are created as either starting with '.' or '/' character:\r\n```\r\n  ln -s /path/existing /path/new-name\r\n#or\r\n  cd /path && ln -s ./existing new-name\r\n```\r\nbut one can create it with realtive file/directory name like:\r\n```\r\n  cd /path && ln -s existing new-name\r\n```\r\nthis drives FollowSymlinkInScope into infinite loop\r\n\r\n## Fix\r\n\r\nI just completed the [The Tour of Go](http://tour.golang.org/) and felt competent enough to fix this issue,\r\nso be warned this my first day with go ;)"
5380,'vieux','Add generic /cmd entrypoint w/ cli support\nIf you do\r\n```\r\n   docker devmapper:resize -o Key=Value -o Foo=Bar plugin:op arg1 arg2\r\n```    \r\nThis will do a GET http request to /cmd/devmapper/resize with the arguments and options as keys. This will then try to spawn a job on the engine called "devmapper:resize" with the arg1, arg2, etc as arguments and the -o options as environment.\r\n    \r\nAlso, any graph driver implementing the engine.Installer interface  will get installed on the engine when the daemon is created.\r\n    \r\nThis will be used by e.g. the devicemapper to allow driver-specific  operations like pool resizing.\r\n\r\nThis PR is a break out from https://github.com/dotcloud/docker/pull/4202, see comment there for the design input for this PR.\r\n'
5353,'shykes','beam: Add more tests to unix_test.go\nThese are failing, and indicate things that need to be fixed.  The\r\nprimarily problem is the lack of framing between beam messages.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson <alexl@redhat.com> (github: alexlarsson)'
5348,'vieux','Separate the events subsystem\nThis separates the events subsystem from the deprecated Server object, and moves it to its own package, which is cleanly installed into the engine as a builtin.\r\n\r\nThe events subsystem exposes the following commands on the engine:\r\n\r\n* ```events [FROM]``` listens for all matching events and streams them to stdout\r\n\r\n* ```logevent``` publishes a new event to all listeners (events are not persisted). Events are duplicated across all active listeners.\r\n\r\n* ```events_info``` returns information about the events subsystem.'
5341,'crosbymichael','ARM Linux platform support for docker\n* Primarily +build constraint changes\r\n* pkg/netlink: setBridgeMacAddress needed byte sign-edness handling.\r\n* daemon/graphdb/btrfs: needed fsType constant representation handling.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Jason Plum <jplum@archlinuxarm.org> (github: @WarheadsSE)\r\n\r\nReplaces prior PR#5339\r\nUpdated to master 2014/05/11'
5116,'shykes','Change owner only on copied content\nFixes #5110\r\nDocker-DCO-1.1-Signed-off-by: Alexandr Morozov <lk4d4math@gmail.com> (github: LK4D4)'
5056,'shykes','Add linked containers to hosts file\nAdd linked containers to hosts file\r\n\r\nDocker-DCO-1.1-Signed-off-by: Bryan Murphy <bmurphy1976@gmail.com> (github: bmurphy1976)'
4882,'shykes',"Fix merge issue tty\nfix #4857\r\nIf you run a container with `-t` and then commit it. If you start to run an another container based on this image without `-t` you'll get an error, because the client will expect a `no-tty` communication, but the container will inherit from the image `tty` \r\n\r\nOne solution (this PR) is to not merge the -i and -tty stuff from parent.\r\n\r\nAnother solution would be to fall back to display a warning and prevent the run if the client/deamon aren't in the same mode.\r\n\r\n/cc @creack @shykes @crosbymichael"
4849,'shykes','Add support for relative ADD (which becomes relative to the current WORKDIR)\nFixes #3936\r\n\r\nI also included a new test to verify this behavior and a minor improvement to the empty string logic in the relative WORKDIR code (which is very similar to this new code).'
4768,'kencochrane','Create multiple tagged images from trusted builds\nI would like to create multiple tagged images from trusted builds. E.g.\r\n\r\n**Trusted build 1**\r\nGithub repo A (in my case Krijger/docker-cookbooks)\r\nDefault branch: master\r\nRepo name: **jdk-oracle**\r\nDocker tag name: **7**\r\nDockerfile location: /jdk7-oracle\r\n\r\n**Trusted build 2**\r\nGithub repo A, or B (can be the same or a different one, in my case the same)\r\nDefault branch: master\r\nRepo name: **jdk-oracle**\r\nDocker tag name: **8**\r\nDockerfile location: /jdk8-oracle\r\n\r\nCurrent behavior is a validation error on the form submit when trying to create the second build.\r\n\r\nAs a bonus, it would be nice to be able to define multiple tags for the same build. Use case: "Docker tag name: **8, latest**"'
4557,'vieux','negative number for image\n```\r\ngit:(dev) ✗ docker ps -a                                                                \r\n2014/03/10 14:58:45 json: cannot unmarshal number into Go value of type string\r\n```\r\n\r\n`✗ curl -XGET http://192.168.42.43:4243/containers/json\\?all\\=1 | jq \'.\' | gist`\r\n\r\nSee result (https://gist.github.com/anonymous/9471831#file--L52) -- seems like an integer overflow somewhere perhaps?\r\n\r\nreproduced here for convenience:\r\n```\r\n{\r\n    "Status": "Exit 0",\r\n    "Ports": [],\r\n    "Names": [\r\n      "/desperate_brattain"\r\n    ],\r\n    "Image": -9223372036854776000,\r\n    "Id": "7f6b8f8297c76acfbaf963fbc1d9ed0862360fd6644e2771c22a8422d008d1a7",\r\n    "Created": 1394385623,\r\n    "Command": "/bin/sh -c #(nop) CMD [node server.js]"\r\n  },\r\n```\r\n\r\nJust forgot to check my docker version:\r\n```\r\n ✗ docker version\r\nClient version: 0.7.4\r\nGo version (client): go1.2\r\nGit commit (client): 010d74e\r\nServer version: 0.8.0\r\nGit commit (server): cc3a8c8\r\nGo version (server): go1.2\r\nLast stable version: 0.9.0, please update docker\r\n```\r\n\r\nSo I\'ll update as maybe this was already fixed.'
4548,'shykes','Add "docker create" support\nThis exposes the already existing "create container" operation.  It is\r\nvery similar to "docker run -d" except it doesn\'t actually start the\r\ncontainer, but just prepares it. It can then be manually started using\r\n"docker start" at any point.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson <alexl@redhat.com> (github: alexlarsson)'
4494,'shykes',"Line up tag, push, build and commit's tag patterns with each other.\nPlease note before anything that this is my first serious foray into the docker source, so please just be aware I'm happy to accept criticism or requests for rewrites.\r\n\r\nI think this solves #4340 -- it unifies tag and image name validation into a single regex, which is then applied to the tag, build, push, and commit's command functions. Additionally the function used is generalized in utils.ValidTag and utils.ValidTags (a list version to do multiple comparisons at once).\r\n\r\nPlease let me know if I can / need to change anything!"
4464,'vieux','The “version” method of remote api could return the api version too\n\r\nHi,\r\n\r\nThe ``version``  method of the remote api does not currently return the version of the api used.\r\n\r\nI would suggest to add the currently used API Version, as of the following json sample (note the APIVersion key) :\r\n    {"Arch":"amd64","GitCommit":"cc3a8c8/0.8.0","GoVersion":"go1.2","KernelVersion":"2.6.32-431.5.1.el6.x86_64","Os":"linux","Version":"0.8.0","APIVersion":"1.8"}\r\n\r\nI know I can force the api version used in the URL, but I wanted to know what was the default version used by docker. And it seems that there is no way to know it by the remote api.\r\n\r\nbest regards,\r\nRodrigue'
4441,'vieux','Add --net flag to docker run and allow host network stack\nCloses #2900\r\nCloses #5546\r\n\r\nThis allows for the follow options on docker run:\r\n\r\n```bash\r\ndocker run --net none busybox ip a # no network setup\r\ndocker run --net host busybox ip a # host networking configuration\r\ndocker run --net bridge busybox ip a # the default bridge setup\r\ndocker run --net container:redis busybox ip a # the network stack of the redis container - amazing\r\n```\r\n\r\nUsing `-p`, `-P`, `-expose` are not compatible with the none and host network modes.\r\n\r\nDocker-DCO-1.1-Signed-off-by: Michael Crosby <michael@crosbymichael.com> (github: crosbymichael)'
4430,'vieux','Adding -f untagged=true flag to `docker images`\n  To see a list of the heads (leaves) of images that are not tagged.\r\n  This is to support the workflow of pruning orphans with a simplified\r\n  example like: docker rmi $(docker images -q --orphans)\r\n\r\nDocker-DCO-1.1-Signed-off-by: Vincent Batts <vbatts@redhat.com> (github: vbatts)'
4322,'vieux','Feature: --no-cache takes a regexp to ignore matching lines in Dockerfile\n- modifies CLI and server to accept a regexp for no-cache\r\n- adds defaultable flags to mflag to support existing bool no-cache\r\n- applies to matching RUN and ADD lines\r\n\r\nCloses #1996'
4297,'vieux',"registry: Added simple checksums (sha256) for layers\nThis adds a simple checksums to when pushing each layer. Both checksums (tarsum and simple) are now pushed.\r\n\r\nThis will allow the registry to check only simple the checksum (much faster on push) while the Index will keep storing the tarsum for security. The Registry won't store the simple checksum, it will use it only to validate the transfer."
4202,'crosbymichael','Generic /cmd endpoint and dm specific operations (resize/resize-pool/trim-pool)\nThis series adds a generic /cmd endpoint and cli support for it, so that drivers and other form of plugins can add arbitrary new operations, which are accessible as "docker <plugin>:<operation> args..." .\r\n\r\nAdditionally it adds devicemapper specific operations `dm:resize-pool`, `dm:resize` and `dm:trim-pool`. These allow resizeing the devicemapper pool, indivdual devicemapper devices (like images and containers) and finally allows you to return unused space in the pool to the host root filesystem (when using loopback).\r\n\r\nThe last one is interesting because it lets you get space back if the discard trick we\'re using on delete doesn\'t work (older kernel) or is disabled (because its very slow).\r\n'
4201,'samalba','Pulling only the latest pushed image\nWhen I push my project to my local private repository, I use\r\n\r\n`docker tag project localhost:5000/project`\r\n`docker push localhost:5000/project`\r\n\r\nOn a separate machine, I then pull this image using\r\n`docker pull ip_of_first_machine:5000/project:latest`\r\n\r\nHowever I noticed that this pulls the whole repository, not just the latest image.\r\n\r\nI guess I should have tagged images with different names (for example using the git commit after the name), but I was wondering if there is a way to explicitly pull only the latest pushed image?\r\n\r\nThank you!'
4165,'vieux',"Add support for .dockerignore\nFixes #2224 \r\n\r\nThis improves the archive package's API and reads a ``.dockerignore`` file as a list of paths to exclude while building the context."
4115,'samalba','docker push : UnicodeDecodeError: \'utf8\' codec can\'t decode byte 0xfa in position 68: invalid start byte\n```\r\nroot@venus-166:~/conglei# docker push images.docker.sae.sina.com.cn/standard_new_ubuntu\r\nThe push refers to a repository [images.docker.sae.sina.com.cn/standard_new_ubuntu] (len: 1)\r\nSending image list\r\nPushing repository images.docker.sae.sina.com.cn/standard_new_ubuntu (1 tags)\r\n8dbd9e392a96: Image already pushed, skipping \r\ne94ee0718871: Image already pushed, skipping \r\n382368bcc9b7: Image already pushed, skipping \r\n0927de841594: Image already pushed, skipping \r\n00e02b80d917: Image already pushed, skipping \r\n9489aadd6109: Image already pushed, skipping \r\n0127f375a5bc: Image already pushed, skipping \r\na655e7b33461: Image already pushed, skipping \r\nf9c9072642ba: Image already pushed, skipping \r\ndc35b302a708: Image already pushed, skipping \r\nedeed869648a: Pushing [==================================================>]  22.7 MB/22.7 MB\r\n\r\n2014/02/13 14:03:26 Received HTTP code 500 while uploading layer: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request.  Either the server is overloaded or there is an error in the application.</p>\r\nroot@venus-166:~/conglei# docker images\r\nREPOSITORY                                          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\r\nimages.docker.sae.sina.com.cn/standard_new_ubuntu   latest              fff2a586b403        26 seconds ago      437.9 MB\r\n```\r\nthere are some errors, but it seems push ok, because i can create a new container from the new image, and i tail the output of our own registry:\r\n\r\n```\r\n2014-02-13 14:03:22,553 INFO: 127.0.0.1 - - [13/Feb/2014:14:03:22] "PUT /v1/images/edeed869648aa1683d0cff9eea222ace1e44ab3c7347974f8084af56607c2754/json HTTP/1.1" 200 4 "-" "docker/0.7.6 go/go1.2 git-commit/bc3b2ec kernel/3.2.0-26-generic os/linux arch/amd64"\r\n2014-02-13 14:03:22,615 DEBUG: check_session: Session is empty\r\n2014-02-13 14:03:26,859 ERROR: Exception on /v1/images/edeed869648aa1683d0cff9eea222ace1e44ab3c7347974f8084af56607c2754/layer [PUT]\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1687, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1360, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1358, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1344, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File "/root/conglei/docker-registry/registry/toolkit.py", line 203, in wrapper\r\n    return f(*args, **kwargs)\r\n  File "/root/conglei/docker-registry/registry/images.py", line 162, in put_image_layer\r\n    layers.set_image_files_cache(image_id, tarfilesinfo.json())\r\n  File "/root/conglei/docker-registry/lib/layers.py", line 96, in json\r\n    return json.dumps(self.infos)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/__init__.py", line 329, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py", line 250, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py", line 326, in iterencode\r\n    return _iterencode(o, 0)\r\nUnicodeDecodeError: \'utf8\' codec can\'t decode byte 0xfa in position 68: invalid start byte\r\n2014-02-13 14:03:26,859 ERROR: Exception on /v1/images/edeed869648aa1683d0cff9eea222ace1e44ab3c7347974f8084af56607c2754/layer [PUT]\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1687, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1360, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1358, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1344, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File "/root/conglei/docker-registry/registry/toolkit.py", line 203, in wrapper\r\n    return f(*args, **kwargs)\r\n  File "/root/conglei/docker-registry/registry/images.py", line 162, in put_image_layer\r\n    layers.set_image_files_cache(image_id, tarfilesinfo.json())\r\n  File "/root/conglei/docker-registry/lib/layers.py", line 96, in json\r\n    return json.dumps(self.infos)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/__init__.py", line 329, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py", line 250, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File "/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py", line 326, in iterencode\r\n    return _iterencode(o, 0)\r\nUnicodeDecodeError: \'utf8\' codec can\'t decode byte 0xfa in position 68: invalid start byte\r\n127.0.0.1 - - [13/Feb/2014:14:03:26] "PUT /v1/images/edeed869648aa1683d0cff9eea222ace1e44ab3c7347974f8084af56607c2754/layer HTTP/1.1" 500 291 "-" "docker/0.7.6 go/go1.2 git-commit/bc3b2ec kernel/3.2.0-26-generic os/linux arch/amd64"\r\n2014-02-13 14:03:26,861 INFO: 127.0.0.1 - - [13/Feb/2014:14:03:26] "PUT /v1/images/edeed869648aa1683d0cff9eea222ace1e44ab3c7347974f8084af56607c2754/layer HTTP/1.1" 500 291 "-" "docker/0.7.6 go/go1.2 git-commit/bc3b2ec kernel/3.2.0-26-generic os/linux arch/amd64"\r\n```\r\n\r\nhow to fix it?'
4039,'vieux','Docker cp broken in 0.8 release\nSeveral of my scripts have broken with docker 0.8 as it relates to \'docker cp\'.  What it looks like is that an error occurs "operation not permitted" after the first operation the cp command attempts.  This leads to copies of single files working but showing an error and copies of a directory of files creating the directory but not copying any files.  With an older docker client it seems to work fine.\r\n\r\nHere is a run through in case anyone can tell me what I am doing wrong:\r\n\r\n```\r\n/var/tmp/test_area$ docker run ubuntu /bin/bash\r\n\r\n/var/tmp/test_area$ docker run --name=test_cont ubuntu /bin/bash\r\n\r\n/var/tmp/test_area$ docker cp test_cont:/etc/debian_version .\r\n2014/02/07 07:20:40 operation not permitted\r\n\r\n/var/tmp/test_area$ ls -al\r\ntotal 12\r\ndrwxrwxr-x  2 bob bob 4096 Feb  7 07:20 .\r\ndrwxrwxrwt 23 root   root   4096 Feb  7 07:20 ..\r\n-rw-r--r--  1 bob bob   11 Feb  7 07:20 debian_version\r\n\r\n/var/tmp/test_area$ ls\r\ndebian_version\r\n\r\n/var/tmp/test_area$ docker cp test_cont:/etc/cron.daily .\r\n2014/02/07 07:21:05 operation not permitted\r\n\r\n/var/tmp/test_area$ ls\r\ncron.daily  debian_version\r\n\r\n/var/tmp/test_area$ ls cron.daily/\r\n\r\n/var/tmp/test_area$ docker_good cp test_cont:/etc/cron.daily .\r\n\r\n/var/tmp/test_area$ ls cron.daily/\r\napt  dpkg  passwd\r\n\r\n/var/tmp/test_area$ docker version\r\nClient version: 0.8.0\r\nGo version (client): go1.2\r\nGit commit (client): cc3a8c8\r\nServer version: 0.8.0\r\nGit commit (server): cc3a8c8\r\nGo version (server): go1.2\r\nLast stable version: 0.8.0\r\n\r\n/var/tmp/test_area$ docker_good version\r\nClient version: 0.7.2\r\nGo version (client): go1.2\r\nGit commit (client): 4ad07ff\r\nServer version: 0.8.0\r\nGit commit (server): cc3a8c8\r\nGo version (server): go1.2\r\nLast stable version: 0.8.0, please update docker\r\n```\r\n\r\nFor now I am going to roll back to an older release of docker that still allows cp of directories.'
3677,'vieux','Error: Conflict between containers and images\nEach time I run a container, (restart an existing one or start a new one) I get this error: `2014/01/20 17:26:59 Error: Conflict between containers and images`\r\n\r\nThe run command is the following: `docker run -p 1337:1337 -d -v /host-folder:/media/hub -name containerA containerA-image`\r\n\r\nThe container sometimes works, and suddenly crash with this error when reloading the VM or the host system (like our integration server directly running Linux).\r\nMy dev machine is running OSX 10.9 Mavericks which run a Vagrant VM on Ubuntu Precise 12.04.\r\n\r\nAny idea of the origin of this error?\r\nThanks for your help.\r\n'
3631,'vieux',"stdout premature EOF\nWhen using `docker run` in shell pipelines it looks like there is an issue that intermittently causes premature EOFs on stdout. I've extracted a PoC from our production scripts: https://gist.github.com/titanous/1b32d155cd999aac9be7\r\n\r\nDocker version 0.7.6, build bc3b2ec on Ubuntu 12.04.3, kernel 3.8.0-34."
3626,'vieux','Option to preserve parents when deleting an image\nIn the current implementation, when you delete an image from the server, either via command line or remote API, its untagged ancestors which do not have any tagged descendants are also deleted. cf. `deleteImage` function in server.go and #1376.\r\n\r\nThis behavior is useful when you manually manage images (just deleting a tagged image purges all of its parent layers), but troublesome when programmatically creating and deleting branches of images. There should be an option to disable this behavior so that any parent layers are preserved for future use.'
3565,'vieux','docker ps: since and before need container name support\n`docker ps` has options to only show containers that were created before or after a provided container ID.  Currently, these _only_ work when given a container ID, and do not work with a container name.  When a name is supplied instead, "before" returns nothing and "since" returns all containers (in my own testing).'
3558,'shykes','Add support for `RUN [""]` in Dockerfiles\nThanks to @cpuguy83\'s new `buildCmdFromJson`, this is very trivial to implement for better consistency from instruction to instruction.\r\n\r\nJust to head off @svendowideit, I know it needs documentation and tests.  I\'ll get back to those hopefully soon. ;)'
3486,'vieux',"Add a less verbose option to docker push (CLI and API)\nRight now the docker push command has lots of great output when using the CLI, but sometimes you don't need that much information, like when you are scripting something, or you are using the API. When this happens it would be nice if there was a  less verbose output that you could use. Docker build already has a similar command, so maybe we can use something similar.\r\n\r\n/cc @vieux "
3194,'shykes','Make Tianon the hack maintainer\nThis is as discussed with @shykes (who obviously will still need to review and approve this PR).'
3070,'shykes','Add support for certificates for repositories\nThis adds support for a /etc/docker-certs configuration file that allows you to specify tls certificate config.\r\n\r\nCurrently it has two settings:\r\n1) You can specify a list of root CAs in case you\'re using an https repository that is not signed by a default CA\r\n\r\n2) You can specify a per-repository client side certificate and private key to send to the server. This allows the server to e.g. verify that the client is allowed to access a particular image. \r\n\r\nI\'ve set up a local apache that serves as a registry with "SSLVerifyClient optional_no_ca" and a cgi script that verifies that you have a valid client side certificate. It works:\r\n\r\n```\r\n# wget --ca-certificate=/etc/pki/tls/certs/localhost.crt https://127.0.0.1/v1/_ping\r\n--2013-12-05 18:59:57--  https://127.0.0.1/v1/_ping\r\nConnecting to 127.0.0.1:443... connected.\r\nHTTP request sent, awaiting response... 403 Client certificate invalid\r\n2013-12-05 18:59:57 ERROR 403: Client certificate invalid.\r\n\r\n# docker run 127.0.0.1/busybox echo hello\r\nUnable to find image \'127.0.0.1/busybox\' (tag: latest) locally\r\nPulling repository 127.0.0.1/busybox\r\ne9aa60c60128: Pulling image (latest) from 127.0.0.1/busybox \r\ne9aa60c60128: Pulling image (latest) from 127.0.0.1/busybox, endpoint: https://127.0.0.1/v1/ \r\ne9aa60c60128: Pulling dependent layers \r\ne9aa60c60128: Pulling metadata \r\ne9aa60c60128: Pulling fs layer \r\ne9aa60c60128: Downloading 532.3 kB\r\ne9aa60c60128: Download complete \r\nhello\r\n```\r\n\r\nWith the following /etc/docker-certs\r\n```\r\n{\r\n    "roots": ["/etc/pki/tls/certs/ca-bundle.crt", "/etc/pki/tls/certs/localhost.crt"],\r\n    "hosts": {\r\n\t"127.0.0.1":  {\r\n\t    "cert": "/home/alex/client.cert",\r\n\t    "key": "/home/alex/client.key"\r\n\t}\r\n    }\r\n}\r\n```'
2981,'shykes','Remove "-v" from "go test" (since it\'s easy to add back manually via TESTFLAGS)\n@creack - you were too slow :)\r\n\r\nFixes #2806'
2908,'kencochrane','Trusted builds - support multiple Dockerfiles in same repository\nI have a github project with multiple Dockerfile projects. It does not seem logical to split these up in separate projects.\r\n\r\nWhen I try to use a trusted build on the Docker index, I can create only one build from my repo. I would like to create a build from all these (closely related) docker projects.'
2826,'shykes','Docker run throwing Error: create: ExportEnv json: cannot unmarshal number into Go value of type string\nIssue appeared after 0.6.7 upgrade. \r\n\r\nLooks like this \r\n```bash\r\nubuntu@host:/home/ubuntu$ docker run -h "web.0" -name d999a13.web.0 -d -link redis:redis -link postgresql:postgresql patrickod/container sh -c \'/usr/local/bin/honcho -f /app/Procfile start web\'\r\n2013/11/22 20:55:45 Error: create: ExportEnv json: cannot unmarshal number into Go value of type string\r\n```\r\n\r\nThe output from `docker version`\r\n```\r\nClient version: 0.6.7\r\nGo version (client): go1.2rc5\r\nGit commit (client): cb48ecc\r\nServer version: 0.6.7\r\nGit commit (server): cb48ecc\r\nGo version (server): go1.2rc5\r\nLast stable version: 0.6.7\r\n```\r\nand of `uname -a`\r\n```\r\nubuntu@host:~$ uname -a\r\nLinux ip-172-31-17-88 3.11.0-12-generic #19-Ubuntu SMP Wed Oct 9 16:20:46 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\r\n```'
2817,'vieux','docker run -rm does not remove container on exit (0.6.7)\nOn 0.6.7 using "docker run -rm" does not remove the container after it exists.'
2808,'shykes','Update test scripts to always run ALL tests, even when some fail\nWhen tests in one directory fail, the rest of the directories get skipped.  This fixes that so that all directories are tested regardless of failure, and then the bundlescript fails if any tests failed with a nice one-liner like `Test failures in: ./integration`.\r\n\r\n/cc @pnasrat'
2767,'vieux',"Listing all containers is slow (related to links/naming)\nSince links & naming were introduced, listing a large number of containers is slow.\r\n\r\nHow slow? Well, it takes 10s to list 500 containers on this local machine (it used to be instantaneous before links/naming), and it takes a couple of minutes to list the containers on my small Joyent VPS.\r\n\r\nI've discussed this with @vieux and it *might* be something silly in the way Docker accesses sqlite. Actually maybe Victor has already solved the problem, but in doubt I'm creating an issue anyway :-)"
2755,'kencochrane',"Replace PR#2592\nThis includes Roberto's changes and cleans it up a little."
2721,'kencochrane','Add security section and embed private registry video.\nFixes #2701. Adds security section.'
2717,'kencochrane','Fix #2342. Harmonize information about ADD. Cross-link build info.\nFixes #2342'
2716,'vieux','docker port returns private port number, if it is not exposed\nThis is a small issue, introduced with links. But nonetheless:\r\n\r\n```\r\n$ docker run -d dhrp/sshd\r\n228ff9ea6b20\r\n\r\n$ docker ps \r\nCONTAINER ID        IMAGE                  COMMAND                CREATED              STATUS              PORTS                                          NAMES\r\n228ff9ea6b20        dhrp/sshd:latest       /usr/sbin/sshd -D      1 seconds ago        Up 1 seconds        22/tcp                                         azure_duck \r\n\r\n$ docker port 228ff9ea6b20 22\r\n22\r\n```\r\n\r\nWhich is in fact the private port. I think it should return nothhing.. Otherwise the help output should be changed\r\n\r\n> Lookup the public-facing port which is NAT-ed to PRIVATE_PORT'
2689,'kencochrane','Clean up sphinx syntax\nPlus upgrade http markup package, minor link changes, update intro.\r\n\r\nThis fixes some indenting problems and some query parameter markup. I also found that the newest version of the ``httpdomain`` package added support for documenting request headers properly, so I added that and converted some of the header mentions into formatted docs.\r\n'
2605,'vieux',"Auto generated names break docker build\nThe new auto generated name option in 0.6.5 can lead to the following output during a docker build (and presumably during a docker run)\r\n\r\n```js\r\nStep 12 : CMD source /root/.nvm/nvm.sh && npm start\r\nError build: Conflict, /slate_donkey already exists.\r\n```\r\n\r\nThis is causing a problem because our CI server builds docker images on commit and is shared between multiple projects. Since each layer defined in a docker file starts a new container during the build, we're creating 1000's of containers a day, and inevitably getting name conflicts.\r\n\r\nCan this feature be removed, or at least disabled with a command line flag."
2590,'kencochrane','Fix 2585 and clean up warning in contributing.rst\n'
2578,'vieux','Should runtime -p <port> override Dockerfile EXPOSE settings?\nHi folks,\r\n\r\nApologies if this question has already been asked; I\'m aware with the release of 0.6.5 and the breaking changes it introduced in this area there are numerous issues around the subject but none quite seem to explain what I\'m experiencing.\r\n\r\n(FYI this issue discusses a combination of Dockerfiles which can be viewed at [makeusabrew/nodeflakes#feature/docker](https://github.com/makeusabrew/nodeflakes/tree/feature/docker/docker).)\r\n\r\nI have a [Dockerfile](https://github.com/makeusabrew/nodeflakes/blob/feature/docker/docker/server/Dockerfile) which EXPOSEs port 5556. I consider this port \'internal\' to the image\'s configuration; it\'s not something which I want a user at container runtime to have to worry about. This container (A) is intended to be passed as a `-link` when starting another [container](https://github.com/makeusabrew/nodeflakes/blob/feature/docker/docker/processor/Dockerfile) (B) which can then interrogate the relevant ENV var to get the details of A as per your docs & redis example on linking. So far so good, and indeed `docker port <A> 5556` yields \'5556\'.\r\n\r\nThe problem comes if I run the container like so:\r\n\r\n`docker run -p 7979:7979 makeusabrew/nodeflakes/server`\r\n\r\nAt which point, my previously EXPOSEd port no longer works, and sure enough `docker port <A> 5556` yields \'2013/11/06 19:15:44 Error: No private port \'5556\' allocated on A\'\r\n\r\nFrom all the reading I\'ve done about the changes in 0.6.5, EXPOSE is predominantly meant for internal services and is exploited by linking containers. A runtime -p should still map a private port to the host (either a random or pre-determined host port), so I\'m unsure why passing -p "overwrites" my EXPOSE setting. In my use case 5556 is a ZeroMQ port I, as a \'user\' of this image don\'t care about, whereas 7979 is a web socket port I *do* care about mapping so that I can consistently connect to it on my local host environment.\r\n\r\nI can circumvent the issue by running:\r\n\r\n`docker run -p 7979:7979 -expose 5556 makeusabrew/nodeflakes/server`\r\n\r\nBut this feels like as a user of this image I have to \'know\' too much about its internals and of course if I get the -expose port wrong my app won\'t work (since another part of it looks for the SERVER_PORT_5556_* env vars). Granted if the user gets the private part of the -p remapping wrong things won\'t work either, but that\'s a part of the app they *should* configure so they can remap it to their host environment.\r\n\r\nSorry for such a lengthy report - I just can\'t quite get my head around why a runtime -p nukes my preconfigured EXPOSE. If this is desired behaviour I\'d really appreciate a pointer (even to docs / another issue) as to why as clearly my mental model isn\'t quite right and renders my EXPOSE redundant when needing to remap another unrelated port to my host system.\r\n\r\nThanks for all the great work and double thanks for making it this far!\r\n\r\nNick'
2560,'shykes','docker 0.6.5 detach kills container\nI\'m using docker 0.6.5 on Ubuntu 12.04 and am trying to get container \'detach\' to work for a container that\'s running in detached mode (-d).. When I attach to container -- all is well. However when I do CRTL-c to detach, the container is stopped.\r\n\r\nI\'m following the exact example from the attach docs here: http://docs.docker.io/en/latest/commandline/command/attach/\r\n\r\nI\'ve tried a few other variants, but in all cases my container is stopped when I try to "detach".\r\n\r\nExample session:\r\n```\r\nroot@dockerbm1:~# ID=$(sudo docker run -d ubuntu /usr/bin/top -b)\r\nroot@dockerbm1:~# docker ps\r\nID                  IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\na985a7d8a8d4        ubuntu:12.04        /usr/bin/top -b     3 seconds ago       Up 2 seconds                            pink_cat\r\nroot@dockerbm1:~# docker attach a985a7d8a8d4\r\n...\r\ntop - 13:52:56 up  4:04,  0 users,  load average: 0.16, 0.06, 0.06\r\nTasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie\r\nCpu(s):  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st\r\nMem:  24681844k total,  1678644k used, 23003200k free,   121568k buffers\r\nSwap:   999420k total,        0k used,   999420k free,  1176272k cached\r\n\r\n  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND\r\n    1 root      20   0 17208 1164  948 R    0  0.0   0:00.01 top\r\n^C\r\nroot@dockerbm1:~# docker ps\r\nID                  IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\nroot@dockerbm1:~# docker version\r\nClient version: 0.6.5\r\nGo version (client): go1.2rc2\r\nGit commit (client): 3ff8459\r\nServer version: 0.6.5\r\nGit commit (server): 3ff8459\r\nGo version (server): go1.2rc2\r\nLast stable version: 0.6.5\r\n```\r\n'
2558,'shykes',"Bump Dockerfile to go1.2rc3\nWe really should be following the Go release candidates as closely as we can, since by their nature they might have major outstanding issues (and new RCs would be working through those), and especially since we're really just waiting patiently for Go 1.2 to be officially released so that can become our proper lowest supported version."
2538,'vieux','Panics when using remote api to expost ports\nI\'ve been trying to update my code so that a port is exposed publicly.\r\n\r\nI\'m sending a hostconfig with a portsBinding of\r\n\r\n    {"900":[\r\n        "HostIp":"0.0.0.0",\r\n        "HostPort":"900"\r\n    ]}\r\n\r\nThis should expose the 900 port without any more work required since there was an expose 900 line in the container.\r\n\r\nWhat I am getting instead is\r\n\r\n\r\n2013/11/03 18:29:21 GET /containers/json\r\n2013/11/03 18:29:21 http: panic serving 172.17.0.2:54747: runtime error: index out of range\r\ngoroutine 1316 [running]:\r\nnet/http.func·009()\r\n\t/usr/local/go/src/pkg/net/http/server.go:1093 +0xae\r\nruntime.panic(0x8e42a0, 0x101ae17)\r\n\t/usr/local/go/src/pkg/runtime/panic.c:248 +0x106\r\ngithub.com/dotcloud/docker.Port.Proto(0xc21023a7c8, 0x3, 0x384, 0x0)\r\n\t/go/src/github.com/dotcloud/docker/container.go:130 +0x7c\r\ngithub.com/dotcloud/docker.(*NetworkSettings).PortMappingAPI(0xc210267aa0, 0xc210486aa0, 0xd, 0x2)\r\n\t/go/src/github.com/dotcloud/docker/container.go:360 +0x384\r\ngithub.com/dotcloud/docker.createAPIContainer(0xc2101de000, 0xc210267a00, 0xc2100b31e0, 0x20, 0x30, ...)\r\n\t/go/src/github.com/dotcloud/docker/server.go:422 +0x396\r\ngithub.com/dotcloud/docker.(*Server).Containers(0xc2100b4410, 0x0, 0xffffffffffffffff, 0x954ce0, 0x0, ...)\r\n\t/go/src/github.com/dotcloud/docker/server.go:399 +0x2e0\r\ngithub.com/dotcloud/docker.getContainersJSON(0xc2100b4410, 0x3ff999999999999a, 0x7f40181670e8, 0xc2102f5d20, 0xc210484000, ...)\r\n\t/go/src/github.com/dotcloud/docker/api.go:329 +0x2a7\r\ngithub.com/dotcloud/docker.func·005(0x7f40181670e8, 0xc2102f5d20, 0xc210484000)\r\n\t/go/src/github.com/dotcloud/docker/api.go:1022 +0x53c\r\nnet/http.HandlerFunc.ServeHTTP(0xc2100aaab0, 0x7f40181670e8, 0xc2102f5d20, 0xc210484000)\r\n\t/usr/local/go/src/pkg/net/http/server.go:1220 +0x40\r\ngithub.com/gorilla/mux.(*Router).ServeHTTP(0xc2100b4460, 0x7f40181670e8, 0xc2102f5d20, 0xc210484000)\r\n\t/go/src/github.com/dotcloud/docker/vendor/src/github.com/gorilla/mux/mux.go:86 +0x1dc\r\nnet/http.serverHandler.ServeHTTP(0xc21011e370, 0x7f40181670e8, 0xc2102f5d20, 0xc210484000)\r\n\t/usr/local/go/src/pkg/net/http/server.go:1597 +0x16e\r\nnet/http.(*conn).serve(0xc210325280)\r\n\t/usr/local/go/src/pkg/net/http/server.go:1167 +0x7b7\r\ncreated by net/http.(*Server).Serve\r\n\t/usr/local/go/src/pkg/net/http/server.go:1644 +0x28b\r\n'
2528,'vieux','Cannot start named container with same name as an image through upstart; or inspect such a container\nI have a container named \'transmission\' and an image named \'transmission\'. I can start and stop this container just fine from the command line using `docker start` and `docker stop`.\r\n\r\nI have created an upstart file `transmission.conf` from the sample online to take advantage of the host integration in 0.6.5 via `docker start -a`;\r\n\r\n    description "blah"\r\n    author "blah"\r\n    start on filesystem and started lxc-net and starter docker\r\n    stop on runlevel [!2345]\r\n    respawn\r\n    exec docker start -a transmission\r\n\r\nHowever when I `start transmission` I see the following error repeated 11 times in the `docker.log`:\r\n\r\n    GET /v1.6/containers/transmission/json\r\n    api.go:1023: Error: Conflict between containers and images\r\n    api.go:78 HTTP Error: statusCode=409 Conflict between containers and images\r\n\r\n; and the container fails to start. So it seems that `docker start <container>` is slightly different to `docker start -a <container>`.\r\n\r\nI would prefer to be able to have containers and images with the same name.\r\n    \r\nAlso, if I try to `docker inspect transmission` I get;\r\n\r\n    No such image or container: transmission\r\n    panic: bytes.Buffer: truncation out of range\r\n\r\n    goroutine 1 [running]:\r\n    runtime.panic(0x83e340, 0xc210073670)\r\n\t/usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\r\n    bytes.(*Buffer).Truncate(0xc2100585b0, 0xffffffffffffffff)\r\n\t/usr/local/go/src/pkg/bytes/buffer.go:65 +0xc9\r\n    github.com/dotcloud/docker.(*DockerCli).CmdInspect(0xc2100584d0, 0xc21000a020, 0x1, 0x1, 0x0, ...)\r\n\t/go/src/github.com/dotcloud/docker/commands.go:671 +0x454\r\n    reflect.callMethod(0xc210074870, 0x7fe48b884c48)\r\n\t/usr/local/go/src/pkg/reflect/value.go:676 +0x17b\r\n    reflect.methodValueCall(0xc21000a020, 0x1, 0x1, 0xc210074870, 0x7fe48b8c3201)\r\n\t/usr/local/go/src/pkg/reflect/asm_amd64.s:26 +0x24\r\n    github.com/dotcloud/docker.ParseCommands(0xc210076380, 0x4, 0xc210076387, 0x14, 0xc21000a010, ...)\r\n\t/go/src/github.com/dotcloud/docker/commands.go:63 +0x31f\r\n    main.main()\r\n\t/go/src/github.com/dotcloud/docker/docker/docker.go:105 +0xda6\r\n\r\n    goroutine 3 [syscall]:\r\n    os/signal.loop()\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\r\n    created by os/signal.init·1\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\r\n\r\nSo it seems other aspects of the server API get confused about containers/images with the same name.\r\n    '
2526,'kencochrane','Add Known Issue\nFix #2074'
2500,'vieux','docker inspect fails when container name collides with image name\n```\r\n$ docker run -p 80 -name isawesome -d isawesome\r\n$ docker ps\r\nID                  IMAGE               COMMAND                CREATED             STATUS              PORTS                   NAMES\r\n83289c48cb76        isawesome:latest    /usr/local/nginx/sbi   3 minutes ago       Up 3 minutes        0.0.0.0:49155->80/tcp   isawesome     \r\n\r\n$ docker inspect isawesome\r\n\r\nNo such image or container: isawesome\r\npanic: bytes.Buffer: truncation out of range\r\n\r\ngoroutine 1 [running]:\r\nruntime.panic(0x83e340, 0xc21007f5d0)\r\n\t/usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\r\nbytes.(*Buffer).Truncate(0xc2100585b0, 0xffffffffffffffff)\r\n\t/usr/local/go/src/pkg/bytes/buffer.go:65 +0xc9\r\ngithub.com/dotcloud/docker.(*DockerCli).CmdInspect(0xc2100584d0, 0xc21000a020, 0x1, 0x1, 0x0, ...)\r\n\t/go/src/github.com/dotcloud/docker/commands.go:671 +0x454\r\nreflect.callMethod(0xc2100806c0, 0x7ff6bd51dc48)\r\n\t/usr/local/go/src/pkg/reflect/value.go:676 +0x17b\r\nreflect.methodValueCall(0xc21000a020, 0x1, 0x1, 0xc2100806c0, 0x7ff6bd55c201)\r\n\t/usr/local/go/src/pkg/reflect/asm_amd64.s:26 +0x24\r\ngithub.com/dotcloud/docker.ParseCommands(0xc210081100, 0x4, 0xc210081107, 0x14, 0xc21000a010, ...)\r\n\t/go/src/github.com/dotcloud/docker/commands.go:63 +0x31f\r\nmain.main()\r\n\t/go/src/github.com/dotcloud/docker/docker/docker.go:105 +0xda6\r\n\r\ngoroutine 3 [syscall]:\r\nos/signal.loop()\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\r\ncreated by os/signal.init·1\r\n\t/usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\r\n```'
2470,'kencochrane','Fix #2369 by documenting decompression behavior.\nfix #2369 '
2433,'shykes','Add SQLite dep to hack/PACKAGERS.md\nCopied from IRC:\r\n> latest sqlite stable is 3.8.1, latest Gentoo stable is 3.7.17, wheezy is at 3.7.13, precise is at 3.7.9\r\n> f18 is at 3.7.13, f19/f20 are at 3.8.0\r\n\r\nThus for now, 3.7.9 is the lowest common denominator unless someone speaks up now to tell us otherwise. :)'
2412,'vieux','rmi deletes images in use by running container\n```\r\nroot@jenkins:~# docker run -d f6f359908da9 sleep 100\r\n9a9281d5a7fd\r\nroot@jenkins:~# docker ps -a | grep 9a9281d5a7fd\r\n9a9281d5a7fd        f6f359908da9          sleep 100              15 seconds ago      Up 14 seconds                           \r\nroot@jenkins:~# docker rmi f6f359908da9\r\nDeleted: 9d78bd0de23d\r\nDeleted: f6f359908da9\r\nDeleted: d4de91e56121\r\nDeleted: a04191551423\r\nroot@jenkins:~# docker ps -a | grep 9a9281d5a7fd\r\n9a9281d5a7fd        f6f359908da9          sleep 100              38 seconds ago       Up 37 seconds                           \r\nroot@jenkins:~# docker --version\r\nflag provided but not defined: -version\r\nUsage of docker:\r\n  -D=false: Debug mode\r\n  -H=[unix:///var/run/docker.sock]: tcp://host:port to bind/connect to or unix://path/to/socket to use\r\n  -api-enable-cors=false: Enable CORS requests in the remote api.\r\n  -b="": Attach containers to a pre-existing network bridge. Use \'none\' to disable container networking\r\n  -d=false: Daemon mode\r\n  -dns="": Set custom dns servers\r\n  -g="/var/lib/docker": Path to graph storage base dir.\r\n  -p="/var/run/docker.pid": File containing process PID\r\n  -r=true: Restart previously running containers\r\n  -v=false: Print version information and quit\r\nroot@jenkins:~# docker -v\r\nDocker version 0.6.4, build 2f74b1c\r\n```'
2378,'kencochrane',"Linkify @github references in the infrastructure README.md\nGitHub doesn't auto-linkify @github references in markdown files (only in comments and issues)."
2312,'vieux','Strange behaviour of rmi with tags\nrmi only says that has untagged one image:\r\n\r\n$ echo "FROM ubuntu" | docker build -t test/ubuntu -\r\n$ echo "FROM ubuntu:12.10" | docker build -t test/ubuntu:12.10 -\r\n\r\n$ docker images | grep test/ubuntu\r\ntest/ubuntu                               latest              8dbd9e392a96\r\ntest/ubuntu                               12.10               b750fe79269d\r\n\r\n$ docker rmi test/ubuntu\r\nUntagged: 8dbd9e392a96\r\n\r\n$ docker images\r\n<empty>\r\n\r\n\r\n-----\r\nIf there is no \'latest\' image don\'t delete the tagged image, but, if there is \'latest\' delete both??\r\n\r\n$ echo "FROM ubuntu:12.10" | docker build -t test/ubuntu:12.10 -\r\n\r\n$ docker images\r\ntest/ubuntu                               12.10               b750fe79269d\r\n\r\n$ docker rmi test/ubuntu\r\nError: No such image: test/ubuntu\r\n'
2281,'kencochrane','Clean up build warnings. Remove redundant files.\n'
2231,'kencochrane','Fix #1919 document how to edit and release docs.\n'
2197,'samalba',"Provide an official 'docker-registry' container\nCurrently there are several community provided container images that purport to implement a private Docker registry, but it would be great if there was an official image. This would likely increase enterprise adoption of Docker if there was a quick way to save and share private images."
2139,'kencochrane',"Fix #2115 Clean AUFS references. \nPlease review for correctness on what's required and what's not. Additional information is welcome.\r\n\r\nAlso fixes some links to client libraries and mongo example.\r\nYou can safely ignore the changes in the .svg file since these are reflected in the .png file exports. Just compare the images."
2130,'shykes',"Swap contrib MAINTAINERS\nAs discussed on IRC, @KSid doesn't appear to have as much time as he used to for maintaining contrib.\r\n\r\n/cc @shykes"
2098,'vieux','Docker cidFiles only contain short version of the containerId\nDoing `sudo docker run -cidfile /tmp/docker_test.cid ubuntu echo "test"` only writes out the short version of the containerId to `/tmp/docker_test.cid`.\r\n\r\nI personally would expect the full container ID to be written to the cidFile, otherwise I have to go to the docker API anyway to acquire the full ID. A long ID is trivially shortened but not vice versa.'
2059,'vieux',"docker rmi <image> gives Error: invalid character '8' after top-level value\nWhen trying to delete images, I've been seeing the error\r\n   Error: invalid character '8' after top-level value\r\n\r\nIt sounds like something to do with json-deserialization as I only found the error message that would match in the go source code for json decoding:\r\n  code.google.com/p/go/src/pkg/encoding/json/scanner.go:318\r\n\r\nSo my guess is that a JSON file got messed up somewhere, but a hunt around the graph directory doesn't seem to show any tabs (char 8) in any json files I see there.  A hunt around the containers directory likewise doesn't seem to turn anything up (though my search in the containers directory was not exhaustive).\r\n\r\n\r\n"
2037,'shykes','Revamp install.sh to be usable by more people, and to use official install methods whenever possible (apt repo, portage tree, etc.)\nI\'ve revamped `install.sh` as per discussion in #1978 and on IRC.  Consider this an official solicitation for comments (cc @shykes). :)\r\n\r\nCurrently, it will only detect Ubuntu and Gentoo, but that will be expanded in the future.  I\'ve intentionally kept the syntax to POSIX instead of bash to make sure we can cover as much ground as possible in the future with this one script, and especially so that we don\'t get errors from `curl https://get.docker.io | sh` in Ubuntu where Dash is the default `/bin/sh` provider.\r\n\r\nHere\'s how I\'ve been testing the Ubuntu portion of the script: (I found that it wouldn\'t install at all on 12.04, and gave a very cryptic error message about dependancies not being met but not listing any that weren\'t being met, so that\'s why I\'m explicitly using 12.10 here.)\r\n```bash\r\ncat contrib/install.sh | docker run -i -privileged ubuntu:12.10 sh -c\r\n \'echo "#!/bin/sh" > /usr/sbin/policy-rc.d; echo exit 101 >> /usr/sbin/policy-rc.d; chmod +x /usr/sbin/policy-rc.d; dpkg-divert --local --rename --add /sbin/initctl; ln -s /bin/true /sbin/initctl; sh\'\r\n```\r\n\r\nIf someone has access to an EC2 account and wouldn\'t mind testing Ubuntu\'s CloudInit with the following line, that would be extremely helpful, since that\'s a huge use of this script (http://docs.docker.io/en/master/installation/amazon/#amazonquickstart), but I don\'t have access to an EC2 account I can test this on.  When you get to the part of adding the User Data, use the following line to make sure you get my proposed changes:\r\n```\r\n#include https://raw.github.com/tianon/docker/install-script-revamp/contrib/install.sh\r\n```\r\n\r\nAfter/If we can agree on the basics that I\'ve proposed here, then I\'ll add Arch and eventually Debian, when our package gets into the archives (are we going to add a debian repo to get.docker.io / test.docker.io, @mzdaniel?).\r\n\r\n@metalivedev I\'ve also updated the `amazon.rst` doc that mentioned `dockerd` from the old script, especially since the `.deb` automatically creates the `docker` group for you, so the language change was even simpler.'
2010,'shykes',"Add cross compilation to the standard build process\nCurrently, we will cross compile for Darwin (386, amd64) and Linux (386, amd64, and arm), but only because windows and freebsd currently won't compile without some tweaks to the docker source.\r\n\r\nThere are also a few small hack and Dockerfile related cleanups here, including restructuring the Dockerfile to grab the Go source instead of precompiled binaries (since we need that for cross compiling - have to cross compile the toolchain first, of course).\r\n\r\n/cc @shykes"
1994,'shykes','Fix #1993: add explanation for export restrictions\n'
1975,'shykes','Add @tianon to hack/MAINTAINERS\nPull request to add me as comaintainer in `hack/`, as per @shykes request via IRC.'
1973,'kencochrane','Fix #1969 formatting, add information about multiline json\n'
1959,'shykes','Mount /etc/hosts as read write\nFix #1951 - Unable to modify /etc/hosts file in a container'
1952,'shykes','Fix minor typo\nPull in changes from master.'
1949,'samalba','Modify repository name regex to match index\nFixes #1895'
1948,'shykes','Fix attach issue\nFixes #1939 '
1947,'shykes','Add cleanup when container.Start fails\ngit diff is really messy, here is a quick explanation:\r\n\r\nI took some of the cleanup code from monitor to make a container.cleanup method\r\nIn container.Start, if there is an error, I call container.cleanup() before returning the error.\r\n\r\n\r\nWith this fix, when you use -p and the starts fails, the ports are released.  \r\n\r\nFixes #1928\r\nFixes #1829'
1946,'shykes','Additional state details.\nRecord termination time and preserve pid for matching up eg OOM logs in\r\ndmesg.'
1943,'shykes','Abort build if mergeConfig returns an error and fix duplicate error message\nFixes #1940 '
1937,'shykes','Use tempfile for CopyFileWithTar\nFixes #1922'
1934,'shykes','Only copy files and change permissions with non bindmount\nFixes #1930\r\n\r\nping @creack @shykes \r\n\r\nWe should probably do 0.6.3 with this change if approved.'
1928,'vieux','Multiple issues starting a container under 0.6.2\nAs you can see from this transcript, first Docker fails to mount a container\'s volumes though it doesn\'t explain why. The container worked fine under 0.6.1. Perhaps it\'s that I used --volumes-from and removed the from container, but even so it does seem to have a reference to the volume, and the volume still exists. I should be able to remove a container referenced in --volumes-from without issue, so I have a hard time believing this is the cause.\r\n\r\nNext, Docker doesn\'t clean up after it fails to start the container. The port mapping still persists, and 9009 remains open such that the second start fails with another error.\r\n\r\nDebug mode provides no additional information.\r\n\r\nThanks.\r\n\r\n# docker inspect 77d8\r\n[{\r\n    "ID": "77d8ec903353a194cc10b911ec86e52c536bc2ff1d34aab046a256b25a4dc5a5",\r\n    "Created": "2013-09-10T22:42:21.947374569Z",\r\n    "Path": "/bin/sh",\r\n    "Args": [\r\n        "-c",\r\n        "chown -R jenkins /var/lib/jenkins && su jenkins -c \\"java -jar /usr/share/jenkins/jenkins.war --prefix=$PREFIX\\""\r\n    ],\r\n    "Config": {\r\n        "Hostname": "thewordnerd.info",\r\n        "Domainname": "",\r\n        "User": "",\r\n        "Memory": 0,\r\n        "MemorySwap": 0,\r\n        "CpuShares": 0,\r\n        "AttachStdin": false,\r\n        "AttachStdout": false,\r\n        "AttachStderr": false,\r\n        "PortSpecs": [\r\n            "9009:8080"\r\n        ],\r\n        "Tty": false,\r\n        "OpenStdin": false,\r\n        "StdinOnce": false,\r\n        "Env": [\r\n            "PREFIX=/ci",\r\n            "HOME=/",\r\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",\r\n            "JENKINS_HOME=/var/lib/jenkins"\r\n        ],\r\n        "Cmd": [\r\n            "/bin/sh",\r\n            "-c",\r\n            "chown -R jenkins /var/lib/jenkins && su jenkins -c \\"java -jar /usr/share/jenkins/jenkins.war --prefix=$PREFIX\\""\r\n        ],\r\n        "Dns": null,\r\n        "Image": "nolan/jenkins",\r\n        "Volumes": {\r\n            "/host/var/run": {},\r\n            "/var/lib/jenkins": {}\r\n        },\r\n        "VolumesFrom": "71ddf",\r\n        "WorkingDir": "",\r\n        "Entrypoint": [],\r\n        "NetworkDisabled": false,\r\n        "Privileged": false\r\n    },\r\n    "State": {\r\n        "Running": false,\r\n        "Pid": 0,\r\n        "ExitCode": -127,\r\n        "StartedAt": "2013-09-10T22:42:21.967946408Z",\r\n        "Ghost": true\r\n    },\r\n    "Image": "26266f47cd3661bfd57926e81089167f1f28fca1056e8d0052838bb186f903f5",\r\n    "NetworkSettings": {\r\n        "IPAddress": "172.17.0.232",\r\n        "IPPrefixLen": 16,\r\n        "Gateway": "172.17.42.1",\r\n        "Bridge": "docker0",\r\n        "PortMapping": {\r\n            "Tcp": {\r\n                "8080": "9009"\r\n            },\r\n            "Udp": {}\r\n        }\r\n    },\r\n    "SysInitPath": "/usr/bin/docker",\r\n    "ResolvConfPath": "/etc/resolv.conf",\r\n    "HostnamePath": "",\r\n    "HostsPath": "",\r\n    "Volumes": {\r\n        "/host/var/run": "/var/run",\r\n        "/var/lib/jenkins": "/var/lib/docker/volumes/ba528804b25ed5c2b4e1f172005dc88a37eb9bd28ad9422c5192791e2c82bff3/layer"\r\n    },\r\n    "VolumesRW": {\r\n        "/host/var/run": true,\r\n        "/var/lib/jenkins": true\r\n    }\r\n# docker start 77d8\r\nError: Error starting container 77d8: Container 77d8ec903353a194cc10b911ec86e52c536bc2ff1d34aab046a256b25a4dc5a5 not found. Impossible to mount its volumes\r\n\r\n2013/09/19 16:03:57 Error: failed to start one or more containers\r\n# docker start 77d8\r\nError: Error starting container 77d8: Port already in use: 9009\r\n\r\n2013/09/19 16:04:09 Error: failed to start one or more containers'
1920,'shykes','Re-enable CGO but keep docker statically linked\nThis change requires go1.1.3 which is not yet release. The dockerfile uses tip.'
1913,'kencochrane','Fix #1654 Improve the introduction to repositories flow.\n'
1904,'vieux','docker pulling same hash multiple times\nWhen I pull a rather large image (strider/strider in this case), I see a large list of hashes, and some identical hashes being pulled simultaneously. It seems it is downloading the same file multiple times in parallel. I think this is not intended.\r\n\r\nThis is the output I get (with many more hashes > complete lines at the end):\r\n\r\nPulling repository strider/strider\r\nffa84c7c71a1: Download complete\r\nffa84c7c71a1: Download complete\r\n62921720fe38: Download complete\r\n66555a78618c: Download complete\r\nc1f3cde07169: Pulling image (demo-1.3.3) from strider/strider, endpoint: https://cdn-registry-1.docker.io/v1/\r\n790f6a7186b0: Download complete\r\n27488ba872a7: Download complete\r\n7e26b94f74e6: Download complete\r\n54f09fcd8ff2: Download complete\r\n9d246f533eff: Download complete\r\nc1f3cde07169: Download complete\r\nf2defe735ba2: Download complete\r\n618f0f615044: Download complete\r\n82be7ff42088: Download complete\r\n6215f7a624d0: Downloading 1.057 MB/305 MB (0%)\r\n6215f7a624d0: Downloading 1.581 MB/305 MB (1%)\r\n6215f7a624d0: Downloading 2.638 MB/305 MB (1%)\r\na88dd2c1b1a4: Download complete\r\n6215f7a624d0: Downloading 3.17 MB/305 MB (1%)\r\n81ea804651f3: Download complete\r\n6215f7a624d0: Downloading 5.806 MB/305 MB (2%)\r\n6215f7a624d0: Downloading 6.336 MB/305 MB (2%)\r\n002a858926bd: Download complete\r\nae795d9de81f: Download complete\r\n76dfaf204c92: Download complete\r\nd03bbd8dcfe6: Download complete\r\n6215f7a624d0: Downloading 6.863 MB/305 MB (2%)\r\n0c93269bfbdf: Download complete\r\n6215f7a624d0: Downloading 7.393 MB/305 MB (2%)\r\n6215f7a624d0: Downloading 7.92 MB/305 MB (3%)\r\n\r\n(with many more hashes > complete lines)'
1893,'shykes',"Add Tianon to contrib/ maintainers\nHe's awesome and always contributing to this area."
1851,'kencochrane','Fix #1601 and #1845\nViewable on http://dockerdocreview.readthedocs.org/en/1601-ec2install/installation/amazon.html and http://dockerdocreview.readthedocs.org/en/1601-ec2install/terms/'
1850,'shykes','Docker service: is it "dockerd" or "docker"?\nIf you install the [official way](http://docs.docker.io/en/latest/installation/ubuntulinux/#ubuntu-precise-12-04-lts-64-bit) then we create a service named ``docker``.\r\n\r\nIf you install using get.docker.io, then we create a service named ``dockerd``.\r\n\r\nWe need to pick one so that we can make the documentation consistent.'
1835,'kencochrane','fix #1821 landing page for examples\nViewable at http://dockerdocreview.readthedocs.org/en/1821-exampleslanding/examples/'
1834,'vieux','Allow specifying a range of ports to EXPOSE\nIt would be handy to be able to `EXPOSE` a range of ports for some applications which require a specific large-ish (100+) range of ports to be open within the container.'
1703,'kencochrane','Fix #621: add new use/base images section. Include examples.\nIncorporated feedback from #1621'
1698,'kencochrane','Fix #1684: Cleanup introduction, working with repos, "use" index.\nOld Welcome is now Introduction. Working with Repos now follows Builder.\r\nClean up some doc build errors. Removed old Manifesto. Tweaked layout javascript\r\nto allow direct link from first and last index elements.'
1651,'shykes','0.8.0\n'
1621,'kencochrane','Fix #621: Document how to create a new base image.\nThis is done by example, with links from the appropriate places\r\nin the docs to the mkimage- scripts in contrib/'
1596,'kencochrane','Fix #1330 and #1149. Improve CMD, ENTRYPOINT, and attach docs.\n'
1537,'kencochrane','Fix #1517, #1521 by adding sudo to examples and installation.\nAlso some minor formatting, wrapping long lines, etc. But mostly adding ``sudo`` where appropriate.'
1520,'shykes','mailing list\nthe mailing list seems not to exist or is it just me?'
1376,'vieux',"Docker rmi deletes more than one image.\nThe following docker rmi command removes two images rather than one:\r\n```\r\nvagrant@raring64:/vagrant/dockerweb$ docker images\r\nREPOSITORY          TAG                 ID                  CREATED             SIZE\r\nubuntu              12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              12.10               b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nubuntu              latest              8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              precise             8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              quantal             b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nbusybox             latest              e9aa60c60128        4 months ago        6.825 MB (virtual 6.825 MB)\r\n<none>              <none>              5744f81b017b        7 minutes ago       12.29 kB (virtual 387 MB)\r\n<none>              <none>              5e811b8a056a        9 minutes ago       12.29 kB (virtual 387 MB)\r\nvagrant@raring64:/vagrant/dockerweb$ docker rmi 5e811b8a056a\r\nDeleted: 5e811b8a056a\r\nDeleted: 10fc7e484bc5\r\nDeleted: f5bfa4dad937\r\nDeleted: 30016cbbd661\r\nDeleted: 5744f81b017b\r\nDeleted: 267fde7c0f03\r\nDeleted: c5afe0daa9ad\r\nDeleted: c2c266d2b919\r\nDeleted: d11d0a46b9f7\r\nDeleted: 22b8eb39ee62\r\nDeleted: 1da525069c4b\r\nvagrant@raring64:/vagrant/dockerweb$ docker images\r\nREPOSITORY          TAG                 ID                  CREATED             SIZE\r\nubuntu              12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              12.10               b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nubuntu              latest              8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              precise             8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu              quantal             b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nbusybox             latest              e9aa60c60128        4 months ago        6.825 MB (virtual 6.825 MB)\r\n```\r\n\r\nDockerfile:\r\n```\r\nfrom ubuntu:12.10\r\nrun apt-get update\r\nrun apt-get install -y python-setuptools\r\nrun easy_install pip\r\nadd . /website\r\nrun pip install -r /website/requirements.txt\r\nexpose 8000\r\ncmd ['python', '/website/manage.py', 'runserver', '0.0.0.0:8000' ]\r\n```\r\n\r\nThis was reproduced with 0.5.0 stable and docker version:\r\n```\r\nClient version: 0.5.0\r\nServer version: 0.5.0\r\nGit commit: 51f6c4a\r\nGo version: go1.1.1\r\n```\r\n\r\nRepro:\r\n\r\n1. Clone the docker website: https://github.com/dotcloud/www.docker.io.git\r\n2. Use the provided Dockerfile\r\n3. Put this Dockerfile in the website root directory.\r\n4. Run: ```docker build .```\r\n5. Run: ```docker build .```\r\n6. Run: ```docker images```\r\n7. Remove one of the two previously generated docker images\r\n8. Observe that both images are deleted.\r\n\r\nPossible explaination: It seems docker is recursively deleting all images and cached snapshots.\r\n\r\n\r\nExpected behavior: Only one image is removed.\r\n\r\nExpectation:\r\n\r\n1. The first time docker builds, it creates snapshots from each run command.\r\n2. The second time docker builds, it reuses the snapshots where possible up until the add command\r\n3. These two top level images share 4 levels of snapshots.\r\n4. These shared cached snapshots should be reference counted such that removing one image does not remove the shared snapshots."
1364,'shykes','Bump to v0.5.1\n'
1363,'samalba','Docker push/pull blocks ~30 sec when 443 not available on a private registry\nFor docker push/pull, the docker tests the port 443 first and 80 second. If the port 443 does not drop packet but ignores, docker will wait the TCP timeout amount of time before trying on port 80.\r\n\r\nThe solution is to reduce the connect timeout to 5 seconds.\r\n\r\nThe requests that blocks is right here: https://github.com/dotcloud/docker/blob/5b27652ac6eaf1bc4c2a16e51919ec4272a58fd6/registry/registry.go#L31'
1354,'samalba','Impossible to rmi on a local repository\nHere is the output\r\n\r\n```\r\nvangasse@ubuntu:~/workspace/docker$ docker images\r\nREPOSITORY                               TAG                 ID                  CREATED             SIZE\r\nlocalhost.localdomain:5000/ubuntu-node   latest              f79831d909e3        3 hours ago         2.42 MB (virtual 494.7 MB)\r\nubuntu                                   12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu                                   12.10               b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nubuntu                                   latest              8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu                                   precise             8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\nubuntu                                   quantal             b750fe79269d        4 months ago        24.65 kB (virtual 180.1 MB)\r\nvangasse@ubuntu:~/workspace/docker$ ^C\r\nvangasse@ubuntu:~/workspace/docker$ localhost.localdomain:5000/ubuntu-node^C\r\nvangasse@ubuntu:~/workspace/docker$ docker rmi localhost.localdomain:5000/ubuntu-node\r\nError: Conflict, localhost.localdomain:5000/ubuntu-node wasn\'t deleted\r\n\r\n```\r\n\r\nLog from the docker daemon (debug enabled).\r\n\r\n```\r\n[debug] api.go:907 Calling DELETE /images/{name:.*} from 127.0.0.1:52544\r\n2013/07/30 14:38:45 DELETE /v1.3/images/localhost.localdomain:5000/ubuntu-node\r\n[debug] api.go:64 [error 409] Conflict, localhost.localdomain:5000/ubuntu-node wasn\'t deleted\r\n```\r\n\r\nThis only appears to happen if the repo name has a location (e.g. localhost.localdomain:5000). The "regular" repos can be deleted without problems.'
1346,'vieux',"update http://get.docker.io/latest\nRelated to #1117 \r\n\r\n/cc @mzdaniel I don't really know how to test this"
1343,'vieux','Add ufw doc\nRelated to #1251 \r\n\r\n@kencochrane @metalivedev could you take a look, not sure where to put this,\r\nThanks'
1328,'vieux','Use utils.ParseRepositoryTag instead of strings.Split(name, ":") in server.ImageDelete\nFixes #1307'
1314,'vieux','my containers disappeared after upgrading from 0.4.8 to 0.5.0\nI ran `sudo apt-get upgrade` on my staging machine today, and afterwards I found that my docker containers are gone.\r\n\r\nAfter the upgrade I ran `docker ps -a` and got\r\n`\r\npplante@swarmhost:~$ docker ps -a\r\nID                  IMAGE               COMMAND                CREATED             STATUS              PORTS\r\nb1f98a1b9c31        d5b4d5bb610f        /bin/bash              2 weeks ago         Exit 127\r\n3fa783e6286a        d5b4d5bb610f        /usr/local/bin/super   2 weeks ago         Exit 127\r\n`\r\n\r\nIn IRC keeb told me to run `ls /var/lib/docker/container` and `ls /var/lib/docker/graph` to see if the containers were still around, but just not showing up in docker.  The output of those commands is:\r\n\r\n`\r\npplante@swarmhost:~$ sudo ls /var/lib/docker/containers\r\n12efb9a9347e291dbf8621c7ebbe3609a8fc5f690a40bb71dcb1d87c458ca3f5\r\n152acde15cc495b51bba1e4dce8eb074af2d8ed49e0f53653cef37c9885786f4\r\n2329a614e282ab90e5a7162e78c48c830e45224728bb3eaec3d8056b91569593\r\n3fa783e6286a578a0722cb88dcdbc186c135c840bb0f403e2b20ce41147bf1ae\r\n605b1aac9a6d9e0ec13a8fda5e53e96e2eeed4629215ff3df3b54f70c8a6c631\r\n8bdbcecd5372b184287ce326a27aa594edde089b9921ce360b2e0ba004c41e06\r\n8fa92fe0149b819bbc96eed1cc407afefcef536d4f17d6e838f7acdf7ce9f50f\r\n98516aedc3cb0e23e954f53f53fb2e725e6fb785563bd100d2328260dfca8da9\r\nb1f98a1b9c315698ca32d3b0ee70db9115ce386a6d25f5e8d661023513476dc4\r\nced63bad0cc740ea3a26231d81bcd6bfce55bff060790f8ae709f1aca5c0afca\r\npplante@swarmhost:~$ sudo ls /var/lib/docker/graph\r\n25b1e07856756053a4f0f4f70423fbf90da3548a9949d6f834b3927136157087\r\n27cf784147099545\r\n27ee6a669e67754935bbb94370b4323b0ca67489072a5f22bb12d842d82c4f46\r\n2d666ad0f96f0da6bb7f243ab7a318a6d3ebb1ad30c065b39a445eba6d5d3adb\r\n4091c77eca1e406ae5e75bc9ef93f3fe288fe794765e60b929b9c0d156703c37\r\n528da01a018096d23f5554e66887348b8d4a69e0b896462d924cb5a3b5df1fad\r\n6886a081c3474594702b3d89cd6d800dd3a27cc49cf4b02b009e2ac83ac34f0c\r\n7946cb21a9d52e7c0288f3d8fe65a30ecdfcec3ce4c4ebc1f5cde8800c204b46\r\n9543eba9400f1b3325c4f494d33424783211a974f3fe71132ca75258c10e8f62\r\nb750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc\r\nbf4fc43582aec8940a675231e2ce840ab0b3eb0362fcc375b496df5c58919fbf\r\nchecksums\r\ne2281a948c6aae3e8d88ffbecba05ce63fdca5a9d9e037b4623ad6ef0d1801a6\r\n:tmp:\r\n`'
1306,'vieux','Fix wrong untag using id rmi\nFixes #1294 '
1301,'vieux',"Setting hostname doesn't set domain\nIf I set a hostname with `docker run -h`, only the hostname resolves inside the container:\r\n\r\n```console\r\nvagrant@precise64:~$ docker run -t -i -h foo.bar.com ubuntu:precise /bin/bash\r\nroot@foo:/# hostname\r\nfoo.bar.com\r\nroot@foo:/# hostname -d\r\nhostname: Name or service not known\r\nroot@foo:/#\r\n```\r\n\r\nI expected `hostname -d` to print `bar.com`."
1294,'vieux','docker rmi of old image leads to unexpected untagging of latest image\nWhen I run docker rmi to remove an old image the latest image is also untagged\r\n\r\nThis can be reproduced with this sequence\r\n\r\n```\r\ndocker run -t -i ubuntu:12.04 /bin/bash\r\n67abd4704edd\r\n\r\ndocker commit 67abd4704edd test\r\n8f3aa1023b69\r\ndocker images\r\n\r\nREPOSITORY             TAG                 ID                  CREATED             SIZE\r\nubuntu                 12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\ntest                   latest              8f3aa1023b69        3 seconds ago       12.29 kB (virtual 131.5 MB)\r\n\r\ndocker tag 8f3aa1023b69 test 0.1\r\n\r\nREPOSITORY             TAG                 ID                  CREATED             SIZE\r\nubuntu                 12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\ntest                   latest              8f3aa1023b69        47 seconds ago      12.29 kB (virtual 131.5 MB)\r\ntest                   0.1                 8f3aa1023b69        47 seconds ago      12.29 kB (virtual 131.5 MB)\r\n\r\ndocker run -t -i ubuntu:12.04 /bin/bash\r\nafc9969bf4e5\r\ndocker commit afc9969bf4e5 test\r\neafad4044783\r\ndocker images\r\n\r\nREPOSITORY             TAG                 ID                  CREATED             SIZE\r\nubuntu                 12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\ntest                   0.1                 8f3aa1023b69        About a minute ago   12.29 kB (virtual 131.5 MB)\r\ntest                   latest              eafad4044783        9 seconds ago        12.29 kB (virtual 131.5 MB)\r\n\r\ndocker rmi 8f3aa1023b69\r\nUntagged: 8f3aa1023b69\r\nDeleted: 8f3aa1023b69\r\n\r\ndocker images\r\n\r\nREPOSITORY             TAG                 ID                  CREATED             SIZE\r\nubuntu                 12.04               8dbd9e392a96        3 months ago        131.5 MB (virtual 131.5 MB)\r\n<none>                 <none>              eafad4044783        20 seconds ago      12.29 kB (virtual 131.5 MB)\r\n```\r\n\r\nthe image with the tag latest lost it repository and tag'
1293,'vieux','use 0755 instead of 0700\nFixes #585 \r\n\r\nNot sure how to add regression test on this.'
1291,'vieux','Ensure mount commit\nFixes #899'
1290,'vieux',"Parallel pull\nDownload images from a repo in parallel, `tianon/debian` is a good exemple:\r\n\r\n    $> docker pull tianon/debian\r\n    Pulling repository tianon/debian\r\n    01468af711dc: Downloading 44.89 MB/167 MB (27%)\r\n    08c9d0ea8240: Downloading 39.08 MB/162 MB (24%)\r\n    764a25351209: Downloading 60.07 MB/60.07 MB (100%)\r\n    90453b4737d4: Downloading 66.54 MB/165.1 MB (40%)\r\n    a1390ca6935c: Downloading 62.85 MB/162 MB (39%)\r\n\r\nIt uses VT100 escape codes as ncurses seems overkill, not sure about how it'll render on windows.\r\n\r\nRelated to #150 "
1285,'samalba',"push does not untag images\n### problem\r\n\r\nQuite simply put, when a user pushes a new set of images to an existing repository, the new list of images appear to be appended to the list of images registered on the registry. \r\n\r\nAs a result you will see that a docker pull now fetches all images, old and new. See example below.\r\n\r\nThe expected behavior is that (as if) the list of existing images is cleared, and the new list of images registered. I believe this should happen through the de-registration of the (latest) tag from the particular image. \r\n\r\n### STR:\r\n\r\n* make a dockerfile \r\n\r\n```\r\nRUN touch 1\r\nRUN touch 2\r\n```\r\n\r\n* build your image\r\n* push it to a repo\r\n* change it \r\n\r\n```\r\nRUN touch 3\r\nRUN touch 1\r\nRUN touch 2\r\n```\r\n\r\n* build your image\r\n* push it to a repo with the same name\r\n* pull it\r\n\r\nYou are now downloading something like 6 layers instead of 4\r\n\r\n### example \r\n\r\nFirst time, just a couple 'o build steps\r\n\r\nb750fe79269d\r\n363f69a6d085\r\n46d302a7f3a1\r\nca278c9a6954\r\n\r\nAdded a step at the end of the dockerfile, just adds one image\r\n\r\n5903607e46fa\r\n\r\n\r\nthird time, added a touch at the beginning of the dockerfile,\r\nDocker created a bunch of new images\r\n```\r\n  b750fe79269d                    <- skipped on second push\r\n  363f69a6d085                    <- skipped on second push\r\n  00385a214394 <- first new img   \r\n  f262703516ec \r\n  287ff15f458f\r\n  2af37a7db944\r\n```\r\ndhrp/dupetest                   latest              2af37a7db944        4 minutes ago       16.39 kB (virtual 358.8 MB)\r\n\r\n\r\nDocker pull now returns the combined list of images.. \r\n\r\nIn other words, the original set of images are not 'untagged' \r\n\r\n```\r\nthatcher@blue1:~/docker$ docker pull dhrp/dupetest\r\nPulling repository dhrp/dupetest from https://index.docker.io/v1\r\nPulling image 00385a2143946b709bec028e7dc55de197c67ce6f2130521c3ad13d372eda0d8 () from dhrp/dupetest\r\nPulling image 2af37a7db94474ef060555ad2ab2d9a945346a640eadb73f96a2e592aa938556 (latest) from dhrp/dupetest\r\nPulling image 363f69a6d085d6390339434dc1cc322c00864b8777aea2808f0419ce7e85b943 () from dhrp/dupetest\r\nPulling image 46d302a7f3a18cacbc0f5a49bf94ae57813476e0f404b9e9aea414a34a24ca79 () from dhrp/dupetest\r\nPulling image 5903607e46fa831ed34b5509ab9ae713c283e54f39978a51ce293990382bde12 () from dhrp/dupetest\r\nPulling image b750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc () from dhrp/dupetest\r\nPulling image ca278c9a6954faf0284d1eb3c473d855bdb08f8b43c4ba9f8441f7783b4e2464 () from dhrp/dupetest\r\nPulling image f262703516ecef822de82c525f4f52674b9b289692464a4a89c666d0c45b79c3 () from dhrp/dupetest\r\nPulling image 27cf784147099545 () from dhrp/dupetest\r\nPulling image 287ff15f458fb2a96fe9dd5e5ae6e46fa33b986d65dc10288fb1df24ebc21785 () from dhrp/dupetest\r\n```"
1278,'kencochrane','Cleaned up long lines, switched graphic to Docker logo. General cleanup.\nfixes #1273. \r\n*p.s.*: Emacs rst-mode is great for wrapping those long lines.'
1251,'vieux',"Make Docker play nicely with UFW on Ubuntu\nUFW is Ubuntu's Uncomplicated FireWall. It lets you easily set up block/allow rules with a single command.\r\n\r\nUnfortunately, it doesn't play nicely with Docker because they both configure IPTables. A container with ip_forward set to 1 cannot communicate outside of itself, but running:\r\n\r\nufw disable\r\n\r\nbrings down the firewall and everything starts working fine.\r\n\r\nI'm fairly sure it is possible for packages to add UFW configuration such that their own behaviors can be supported, but I'm not immediately sure how. This may be the cause of various network issues under Ubuntu, so making Docker play nicely with UFW might resolve a number of issues for folks."
1245,'samalba','push is not pushing to local repo\nHere is the push console output.  The problem is that the command seems to stall without any indication as to what is going on.  Looking at the diskio and networkio I do not see anything going on. The WSGI console is displaying some odd output (below)\r\n\r\n\r\n\r\n$ docker push localhost:5000/wilma\r\nThe push refers to a repository [localhost:5000/wilma] (len: 1)\r\nProcessing checksums\r\nSending image list\r\nPushing repository localhost:5000/wilma (1 tags)\r\nPushing 27cf784147099545\r\nBuffering to disk 78181728/? (n/a)\r\nPushing 78.18 MB/78.18 MB (100%)\r\n\r\n\r\n$ ./wsgi.py \r\n2013-07-19 20:59:35,099 INFO:  * Running on http://127.0.0.1:5000/\r\n2013-07-19 20:59:35,100 INFO:  * Restarting with reloader\r\n2013-07-19 21:01:34,219 ERROR: 127.0.0.1 - - [19/Jul/2013 21:01:34] code 400, message Bad HTTP/0.9 request type (\'\\x16\\x03\\x01\\x00j\\x01\\x00\\x00f\\x03\\x01Q\\xe9\\xa9.S\')\r\nq7????Vѭ?}$??|?V?LA??" 400 -: 127.0.0.1 - - [19/Jul/2013 21:01:34] "jfQ?.S\r\n2013-07-19 21:01:34,222 INFO: 127.0.0.1 - - [19/Jul/2013 21:01:34] "GET /v1/_ping HTTP/1.1" 200 -\r\n2013-07-19 21:01:34,227 DEBUG: check_session: Session is empty\r\n2013-07-19 21:01:34,229 INFO: 127.0.0.1 - - [19/Jul/2013 21:01:34] "PUT http://localhost:5000/v1/repositories/wilma/ HTTP/1.1" 200 -\r\n2013-07-19 21:01:34,233 DEBUG: check_session: Session is empty\r\n2013-07-19 21:01:34,233 DEBUG: api_error: Image not found\r\n2013-07-19 21:01:34,234 INFO: 127.0.0.1 - - [19/Jul/2013 21:01:34] "GET /v1/images/27cf784147099545/json HTTP/1.1" 404 -\r\n2013-07-19 21:01:34,237 DEBUG: check_session: Session is empty\r\n2013-07-19 21:01:34,239 INFO: 127.0.0.1 - - [19/Jul/2013 21:01:34] "PUT /v1/images/27cf784147099545/json HTTP/1.1" 200 -\r\n2013-07-19 21:03:49,957 DEBUG: check_session: Session is empty'
1237,'vieux','Display process owner in "docker top"\nI\'d like to verify that processes in containers are owned by an appropriate user, but there doesn\'t seem like an easy way to do this. Now that we have "docker top", though, it\'d be nice to show the process owner.'
1235,'kencochrane','Make docs build without warnings or errors. Minor additional cleanup.\nGot rid of *"WARNING: document isn\'t included in any toctree"* for the remote API docs (they are included by reference elsewhere than a TOC).\r\n\r\nCleaned up some regex expressions so they don\'t look like RST references (e.g. *foo_*).\r\n\r\nWrapped a few long lines.'
1226,'shykes','Make dockerfile docs easier to find. Clean up formatting.\n"Dockerfile" didn\'t appear in the document Table of Contents, so this links the idea of `Dockerfile` and `Builder` and also makes it clear that `docker` is the builder, not some other software.\r\n\r\nGenerally cleaned up the formatting, made long lines wrap at a decent column, etc.'
1219,'kencochrane','Update docs with 0.5 repository information.\nPartially addresses #894.Docker 0.5 includes some changes to the user-hosted repository configuration. Update the docs for this. Also fix text to 80 column wrap. Remove old `DOCKER_INDEX_URL` docs.'
1218,'samalba','pushing a repo where one tag depends on another fails with "Image depends on a non existing parent"\nI have 3 tags\r\n\r\nrepo/name:first ; "from base"\r\nrepo/name:second ; "from repo/name:first"\r\nrepo/name:third ; "from repo/name:second"\r\n\r\nBecause one depends on another, docker dies when trying to `push repo/name`.\r\n\r\n```\r\nHTTP code 400 while uploading metadata: {\r\n    "error": "Image depends on a non existing parent"\r\n}\r\n```\r\n\r\nI have to remove the tags for `first` and `second` and push, then add in `second` and push, then add in `third` and push.\r\n\r\nIt\'s not only a pain, I wasted a few hours trying to figure out what I was doing wrong....'
1189,'vieux',"When in debug mode I expect details of errors to be logged\nhttpError in api.go should print details about the error received, especially if it returns a http.StatusInternalServerError.\r\n\r\nthe resize api call is returning a 500 for me due to some proxy stuff, but I don't know what's wrong because the log file has only this:\r\n\r\n[debug] api.go:883 Calling POST /containers/{name:.*}/resize\r\n2013/07/11 03:25:05 POST /v1.3/containers/57197380935f/resize?h=226&w=57\r\n\r\nThe actual response from the server is this:\r\nHTTP/1.1 500 Internal Server Error\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Length: 8\r\nDate: Thu, 11 Jul 2013 03:14:56 GMT\r\n\r\nerrno 0\r\n\r\nWithout additional details on the error that occured I can't troubleshoot it."
1187,'kencochrane','add kernel header note when upgrading kernel\naddresses concerns of #1031'
1167,'vieux',"Events endpoint with streaming capability\nI was chatting with @shykes on IRC about having an endpoint to query container lifecycle events such as when a container is created, killed, and exited (abnormally or otherwise).  For instance, @shykes's example:\r\n\r\n```\r\nGET /events?q=event:start&q=event:stop\r\n```\r\n\r\nFor polling, a `since=<timestamp>` parameter could be useful to limit the results to events happening since the given timestamp.\r\n\r\nAdditionally, having the ability to stream events as they happen, rather than having to poll for new events would be great.  This would use built-in streaming that is being proposed in #876 and #879.\r\n\r\nThanks!"
1123,'vieux','Can\'t remove images\ni have a Dockerfile which i run by:\r\n\r\n```text\r\n# DOCKER-VERSION 0.4.8\r\n\r\nFROM ubuntu:12.04\r\n\r\nMAINTAINER Deepak Kannan "deepak@codemancers.com"\r\n\r\n# RUN source /etc/profile.d/rbenv.sh\r\nENV RBENV_ROOT /usr/local/rbenv\r\nENV PATH "$RBENV_ROOT/shims:$RBENV_ROOT/bin:$PATH"\r\n\r\nEXPOSE 6565\r\n```\r\n\r\nit now shown up on images:\r\n```text\r\n> docker images\r\n...\r\nbase                         ubuntu-quantl       b750fe79269d        3 months ago        24.65 kB (virtual 180.1 MB)\r\ncodemancers/basebox/ruby     latest              a03c77d1c606        20 minutes ago      12.29 kB (virtual 131.5 MB)\r\ncodemancers/basebox/ruby/1   latest              a03c77d1c606        20 minutes ago      12.29 kB (virtual 131.5 MB)\r\nruby                         latest              a7f4159e459c        2 minutes ago       12.29 kB (virtual 131.6 MB)\r\n```\r\n\r\nbut i cannot delete those image:\r\n\r\n```text\r\n> docker rmi a7f4159e459c\r\n2013/07/04 02:12:06 unexpected end of JSON input\r\n```\r\n\r\nIt returns a `unexpected end of JSON input` error\r\n\r\nwhich JSON is this ?\r\nThe output of `docker inspect a7f4159e459c` is as follows\r\n\r\n```text\r\n[{\r\n    "id": "a7f4159e459ce27f6c692827c6902de0fdf785c40171d48c608307dba880edb9",\r\n    "parent": "a03c77d1c6063886952127a7ddc099875b8a9b420ee54a2cc291ae3c4a228f47",\r\n    "created": "2013-07-04T02:07:59.760477446Z",\r\n    "container": "3fc741654f4bc916bdd6c462e3037ce55fc06b6c4bb5af6eaa7d41dfbe7949ee",\r\n    "container_config": {\r\n        "Hostname": "126cb5363cb8",\r\n        "User": "",\r\n        "Memory": 0,\r\n        "MemorySwap": 0,\r\n        "CpuShares": 0,\r\n        "AttachStdin": false,\r\n        "AttachStdout": false,\r\n        "AttachStderr": false,\r\n        "PortSpecs": [\r\n            "6565"\r\n        ],\r\n        "Tty": false,\r\n        "OpenStdin": false,\r\n        "StdinOnce": false,\r\n        "Env": [\r\n            "RBENV_ROOT=/usr/local/rbenv",\r\n            "PATH=\\"$RBENV_ROOT/shims:$RBENV_ROOT/bin:$PATH\\""\r\n        ],\r\n        "Cmd": [\r\n            "/bin/sh",\r\n            "-c",\r\n            "#(nop) EXPOSE [6565]"\r\n        ],\r\n        "Dns": null,\r\n        "Image": "a03c77d1c6063886952127a7ddc099875b8a9b420ee54a2cc291ae3c4a228f47",\r\n        "Volumes": null,\r\n        "VolumesFrom": "",\r\n        "Entrypoint": null\r\n    },\r\n    "docker_version": "0.4.8",\r\n    "author": "Deepak Kannan \\"deepak@codemancers.com\\"",\r\n    "config": {\r\n        "Hostname": "126cb5363cb8",\r\n        "User": "",\r\n        "Memory": 0,\r\n        "MemorySwap": 0,\r\n        "CpuShares": 0,\r\n        "AttachStdin": false,\r\n        "AttachStdout": false,\r\n        "AttachStderr": false,\r\n        "PortSpecs": [\r\n            "6565"\r\n        ],\r\n        "Tty": false,\r\n        "OpenStdin": false,\r\n        "StdinOnce": false,\r\n        "Env": [\r\n            "RBENV_ROOT=/usr/local/rbenv",\r\n            "PATH=\\"$RBENV_ROOT/shims:$RBENV_ROOT/bin:$PATH\\""\r\n        ],\r\n        "Cmd": null,\r\n        "Dns": null,\r\n        "Image": "a03c77d1c6063886952127a7ddc099875b8a9b420ee54a2cc291ae3c4a228f47",\r\n        "Volumes": null,\r\n        "VolumesFrom": "",\r\n        "Entrypoint": null\r\n    },\r\n    "architecture": "x86_64",\r\n    "Size": 12288\r\n}]\r\n```\r\n\r\nAlso i could not run bash on these images as well\r\n\r\n```text\r\n> docker run  -i -t ruby /bin/bash\r\n2013/07/04 02:14:46 Unable to set up networking: command not found: ip\r\n```\r\n\r\n/cc https://github.com/dotcloud/docker/issues/698'
1119,'vieux','Update couchdb_data_volumes.rst\nAdded the first step which consists in downloading the docker image.'
1113,'kencochrane',"Fix installation link from welcome page.\nThe /installation works in a test local server but not on the live docs. I think changing it to a ``:ref:`` will fix it since other ref's work. The ref continues to work on the local server test as well."
1098,'vieux','HostConfig is lost on LXC instance restart?\nReading the source, in runtime.go line 147, it appears that any information in HostConfig (currently just volume bindings, but likely to be more in future) is lost during a restart - because we "assume empty host config" according to the comment.\r\n\r\nhttps://github.com/dotcloud/docker/blob/master/runtime.go#L147\r\n\r\nThis seems incorrect (?)'
1033,'samalba','Registry URL\'s scheme should be the same as the Index\nThe Registry URL\'s scheme is currently hardcoded to "https" whereas the Index\' one is configurable (through the "DOCKER_INDEX_URL" env variable). Both scheme should be consistent at all time, it does not make sense to communicate with both entities with different level of security. Also it makes sense to be able to disable SSL if needed (for using the Registry on a private LAN for instance).\r\n\r\nWith the last version of the Registry, it\'s possible to emulate the Index routes from the Registry itself. In order to make it usable, being consistent on the scheme used becomes mandatory and the hardcoded one must be removed.'
1020,'vieux',"container= environment variable is not set\nA lot of applications need to be able to detect, whether they run in a physical or virtualized/containerized environment.\r\n\r\nFor LXC, [the convention](http://www.freedesktop.org/wiki/Software/systemd/ContainerInterface/) to have a container= environment variable set for PID#1 was established and is now used by numerous tools.\r\n\r\nIn a Docker LXC instance, this variable isn't set. See also `cat /proc/1/environ`.\r\n\r\nAs far as I can tell, this variable should be [set by default by lxc-start](http://lxc.git.sourceforge.net/git/gitweb.cgi?p=lxc/lxc;a=blob;f=src/lxc/start.c;h=aefccd6505008dc7681f90d5b271287ebd13f1b5;hb=HEAD#l694) and it also looks like Docker only appends, but not overwrites environment variables in [container.go](https://github.com/dotcloud/docker/blob/v0.4.6/container.go#L509).\r\n\r\nDoes anyone know what else could cause this?"
1011,'vieux','Docker API keys are inconsistent\nGET /containers/json returns objects with an "Id" key, but GET /containers/{id}/json returns objects with an "ID" key. Should standardize on one way of capitalizing.'
1002,'vieux','downloading big images from docker index feels slow, even if it isn\'t\nIMO having a faster "pull status update" for big files, would result in a better user experience. \r\n\r\nI just did `docker pull toorop/golang` which worked well but there is one file, which is about 300Mbyte, that seemed to be pulled very slow. \r\n\r\nThe truth is, it actually was pulled with full speed of my internet connection but the status update was every 3 seconds. May be one update per 1% downloaded. ... \r\n\r\nSo downloading from "docker index" felt very slow. I think this could be easily fixed, by updating the download status at least every second. '
995,'shykes',"Crash on 'docker run -v'\nIt look like 'docker run -v' crashes with nil dereference... see below\n\n```bash\n$ docker run -v /anything busybox echo hello\n```\n\nOn the daemon logs:\n\n```\n[...]\n2013/06/21 20:23:53 POST /v1.1/containers/create\n[debug] api.go:863 Warning: client and server don't have the same version (client: 0.4.0, server: 0.4.5)\n[debug] api.go:855 Calling POST /containers/{name:.*}/start\n2013/06/21 20:23:53 POST /v1.1/containers/35380c9dcd08/start\n[debug] api.go:863 Warning: client and server don't have the same version (client: 0.4.0, server: 0.4.5)\n2013/06/21 20:23:53 http: panic serving 127.0.0.1:56977: runtime error: invalid memory address or nil pointer dereference\ngoroutine 9377 [running]:\nnet/http.func·007()\n\t/usr/local/go/src/pkg/net/http/server.go:1022 +0xac\nbufio.(*Reader).fill(0xc2005a0240)\n\t/usr/local/go/src/pkg/bufio/bufio.go:79 +0x106\nbufio.(*Reader).Peek(0xc2005a0240, 0xa, 0x10, 0xc2005a0240, 0xc20097d5b0, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:107 +0xc9\ngithub.com/dotcloud/docker.Untar(0x0, 0x0, 0xc20097d4d0, 0x64, 0x0, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/archive.go:113 +0x68\ngithub.com/dotcloud/docker.StoreImage(0xc20057e180, 0x0, 0x0, 0xc2005a0000, 0x5e, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/image.go:96 +0x3b1\ngithub.com/dotcloud/docker.(*Graph).Register(0xc200118ba0, 0x0, 0x0, 0xc200462000, 0xc20057e180, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/graph.go:148 +0x320\ngithub.com/dotcloud/docker.(*Graph).Create(0xc200118ba0, 0x0, 0x0, 0xc200659420, 0x7486e0, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/graph.go:126 +0x19e\ngithub.com/dotcloud/docker.(*Container).Start(0xc200659420, 0x0, 0x0)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/container.go:460 +0x384\ngithub.com/dotcloud/docker.(*Server).ContainerStart(0xc2007d0540, 0xc2004d9d56, 0xc, 0x4, 0xc2002950a0, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/server.go:938 +0x67\ngithub.com/dotcloud/docker.postContainersStart(0xc2007d0540, 0x3ff199999999999a, 0xc200783840, 0xc20068de70, 0xc2007a1750, ...)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/api.go:554 +0xb8\ngithub.com/dotcloud/docker.func·001(0xc200783840, 0xc20068de70, 0xc2007a1750)\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/api.go:878 +0x507\nnet/http.HandlerFunc.ServeHTTP(0xc2006853f0, 0xc200783840, 0xc20068de70, 0xc2007a1750)\n\t/usr/local/go/src/pkg/net/http/server.go:1149 +0x3e\ngithub.com/gorilla/mux.(*Router).ServeHTTP(0xc2003da4b0, 0xc200783840, 0xc20068de70, 0xc2007a1750)\n\t/home/sandbox/docker/.gopath/src/github.com/gorilla/mux/mux.go:86 +0x1d9\nnet/http.serverHandler.ServeHTTP(0xc200690af0, 0xc200783840, 0xc20068de70, 0xc2007a1750)\n\t/usr/local/go/src/pkg/net/http/server.go:1517 +0x16c\nnet/http.(*conn).serve(0xc2001e4510)\n\t/usr/local/go/src/pkg/net/http/server.go:1096 +0x765\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/pkg/net/http/server.go:1564 +0x266\n```"
966,'vieux','Allow flags for "docker login"\nWhen trying to exec `docker login` from a process, it fails when it gets to password because a tty is opened. It would be nice if username, password, and email could be passed in as flags to the login command which would just skip the prompts.'
933,'vieux','running `docker rm <container>` while a container is running is too dangerous\nit seems incredibly dangerous to kill and delete a container while its running.  at the very least i expected an error to be thrown saying i have to stop the container first.'
899,'vieux','Creating any container and committing it right away results in error\nIf a container is created and committed before it is ever started, the "rw" path in the container\'s filesystem does not yet exist and the commit will fail with the following message:\r\n\r\nexit status 1: bsdtar: could not chdir to \'/var/lib/docker/containers/10bc44fd22aa956cddd7eb995848f966e5be88d0b386f65f4fe7a556e805962e/rw\r\n\r\n'
896,'shykes','2 successive ADDs will fail if they create the same subdirectory\n```bash\n$ mkdir -p A/dev/foo\n$ mkdir -p B/dev/bar\n$ cat > Dockerfile <<EOF\nfrom shykes/gordon\nADD A /\nADD B /\nEOF\n$ docker build -t failtest .\n[...]\n```\n\nThe contents of the image should be:\n\n```\n/dev/foo\n/dev/bar\n```\n\nInstead they will be:\n\n```\n/dev/foo\n/dev/dev/bar\n```\n\nThis is because of the behavior of cp -ar which changes when the destination directory already exists.\nIt should be replaced by the more reliable method of tar/untar. This method is also used in the rest\nof the codebase.'
881,'vieux','Semantic error messages\nI\'m using the ruby docker-client to start a container that was already started. A generic error exception is thrown with only an english message for detail. Apps built on docker would be more robust if a json document were returned with a clear error status and error code.\r\n\r\n    {"status"=>"error", "code"=>50, "message"=>"Error starting container f4: The container f41beb2783352917bc0d0b3cbb987093794048694925e6b09c2c083dc6de52c3 is already running."}\r\n'
865,'shykes','Display StatusText as error when empty body in commands.go\nFixes #768 '
864,'vieux','Specify public port -p 80:4500\nFixes #851 '
854,'samalba',"registry - system status & availability page for the docker registry\nThe registry needs a status page which can be checked to figure out whether there's a problem with the registry or not.\r\n\r\nThere have been quite a few reports from people who have tried to upload images to the registry and their images got corrupted. There have also been cases when people couldn't pull other images.\r\n\r\nIt would be nice to be able to tell bugs and problems with docker<>registry interactions apart from registry unavailability (temporary failure, maintenance, etc).\r\n\r\nThis would allow users to check the status of the registry so they can file a bug right away if all registry systems are OK or wait to see if the issue goes away when all registry systems go back to being OK before filing the bug.\r\n\r\nHaving a simple page to show the statuses of the various registry functions would be nice.\r\nTo start things off, having green / orange / red lights for the following things would be enough: image downloading (pull), auth (login & registration), index.docker.io availability and image uploading (push).\r\n\r\nIf having such a status page isn't desirable, the issue can be closed.\r\n\r\n/cc @shykes @kencochrane @samalba "
852,'shykes','Remove CR/NL from description in docker CLI\nAlso moved description shortening to client side (other clients might want the full desc).\r\n\r\nFixes #556 '
851,'vieux',"Specify an arbitrary public port to correspond to a container's port\nRelated to #273.\r\n\r\nRight now, you can do `-p :4567` and force docker to expose port 4567 in the container on the same port on the host. (This is not well documented.)\r\n\r\nIt would be good to be able to do `-p 80:4567` (or some other syntax) to expose one port in the container as a different port on the host."
845,'kencochrane',"841 - docs: warn about the transmission of data to the docker daemon & ADD without context\nThis updates the documentation to mention that:\r\n1. a lot of data may get sent to the docker daemon if there is a lot of\r\ndata in the directory passed to docker build\r\n2. ADD doesn't work in the absence of the context\r\n3. running without a context doesn't send file data to the docker\r\ndaemon\r\n4. explain that the data sent to the docker daemon will be used by ADD\r\ncommands\r\n\r\nupdated:\r\n5. explain that using an absolute path with docker build will only transfer the data needed by the ADD commands found in the Dockerfile to be found in that directory\r\n\r\nThis PR fixes #841."
832,'shykes','Dns server side\n'
827,'vieux','update golang on "Setting Up a Dev Environment" doc\nDocker requires go1.0.3\r\nIn "Setting Up a Dev Environment" http://docs.docker.io/en/latest/contributing/devenvironment.html\r\n\r\nIt says `sudo apt-get install golang` but it only gives you go 1.0.2.\r\nWe need to change this to use the ppa\r\n\r\n/cc @johncosta @kencochrane '
822,'shykes',"Print the container id before the hijack in `docker run` (see also #804)\nThis is useful when you want to get the container id before you start to interact with stdin (which is what I'm doing in dotcloud/sandbox)."
814,'samalba',"Support for special namespace 'src' (highland support)\nSee also: #708 "
812,'shykes','Fix progress message in client\nFixes #809 '
806,'vieux','Add flag to enable cross domain requests in Remote Api\nAdd the **-api-enable-cors** flag when running docker\r\nin daemon mode to allow CORS requests to be made to\r\nthe Remote Api.  The default value is false for this\r\nflag to not allow cross origin request to be made.\r\n\r\nWhen the flag is set to true, the api will add the Access-Control-Allow-Origin and Access-Control-Allow-Headers to the response so that in browser requests can be made to the api.\r\n\r\nAlso adds a handler for OPTIONS requests.  The standard\r\nfor cross domain requests is to initially make an\r\nOPTIONS request to an api.\r\n\r\nExample:\r\n\r\n    docker -d -H="192.168.1.9:4243" -api-enable-cors'
804,'shykes','Fix stale command with stdout is not allocated\n'
803,'vieux',"Race within Run\nWhen running, there is a race between the log display and the actual attach.\r\n\r\nAlso, between the 'start' and the logs', the output can be mixed up between stdin/stderr"
790,'samalba',"Ability to delete images from a registry\nI noticed that partial/incomplete images are shown on index.docker.io\nI'm on a slow connection so I've some broken images online, how can I delete them?"
780,'vieux',"Path corruption in 'docker diff'\nSpotted in 'docker diff' output:\r\n\r\n    D /build/modules/adoop\r\n    D /build/modules/docker/opq\r\n\r\n'adoop' should have printed 'hadoop'.\r\n'opq' is less clear, but 'op' may have come from 'hadoop' also.\r\n\r\nBtw, this is the same image as in issue #779.\r\n"
774,'vieux',"'docker pull' asks for login/password\nI'm being asked to login on docker pull.\n\n```bash\n$ docker pull philips/riak-base\nUsername (): shykes\nPassword:\nEmail (): solomoN@dotcloud.com\nLogin Succeeded\nPulling repository philips/riak-base from https://index.docker.io/v1\n[...] pull continues\n```"
772,'shykes','Improve version info cmds\nThis PR differentiate and improve the info and version commands.\r\n\r\ndocker version now only displays version infos while docker info displays system-wide informations.\r\n'
768,'vieux',"0.3.4 client can't connect to 0.3.3 daemon, unclear error message\nIf I connect to a 0.3.3 daemon with a 0.3.4 client, this happens:\n\n```bash\n$ docker version\n2013/05/31  01:27:33 error:\n```"
760,'samalba','"500 internal server error" on docker push\n```bash\n$ docker push shykes/deploy\nThe push refers to a repository [shykes/deploy] (len: 1)\nProcessing checksums\nSending images list\nPushing repository shykes/deploy to registry-1.docker.io (1 tags)\nPushing 27cf784147099545\nImage 27cf784147099545 already uploaded ; skipping\nPushing tags for rev [27cf784147099545] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing b750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc\nImage b750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc already uploaded ; skipping\nPushing tags for rev [b750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing 4ca8bb7492031ae3f9f0e525bf862f61ca4c1707970cc174a9f384480a6451a0\nImage 4ca8bb7492031ae3f9f0e525bf862f61ca4c1707970cc174a9f384480a6451a0 already uploaded ; skipping\nPushing tags for rev [4ca8bb7492031ae3f9f0e525bf862f61ca4c1707970cc174a9f384480a6451a0] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing c6575c992fcf9daa0c5309d23398f10da8a03d576f29a249b84fad8cc7b9e8cd\nImage c6575c992fcf9daa0c5309d23398f10da8a03d576f29a249b84fad8cc7b9e8cd already uploaded ; skipping\nPushing tags for rev [c6575c992fcf9daa0c5309d23398f10da8a03d576f29a249b84fad8cc7b9e8cd] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing a3a50392acc84d8cbe0fc99b8dd4db67f31ad00e11810ef06c10ae71203eeed8\nImage a3a50392acc84d8cbe0fc99b8dd4db67f31ad00e11810ef06c10ae71203eeed8 already uploaded ; skipping\nPushing tags for rev [a3a50392acc84d8cbe0fc99b8dd4db67f31ad00e11810ef06c10ae71203eeed8] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing 09f29b36dab0ce6367031a115d3589238cce48f1eb28821b60a1075df96c8a9f\nImage 09f29b36dab0ce6367031a115d3589238cce48f1eb28821b60a1075df96c8a9f already uploaded ; skipping\nPushing tags for rev [09f29b36dab0ce6367031a115d3589238cce48f1eb28821b60a1075df96c8a9f] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing b3a5e01d072ef125cab9ef65602982c7f955d3fb468ada5d6618b72b9755208f\nImage b3a5e01d072ef125cab9ef65602982c7f955d3fb468ada5d6618b72b9755208f already uploaded ; skipping\nPushing tags for rev [b3a5e01d072ef125cab9ef65602982c7f955d3fb468ada5d6618b72b9755208f] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing e17e5fbaa770b76cf3c7cdc52564305479dae024cc518549d162af0a858209aa\nImage e17e5fbaa770b76cf3c7cdc52564305479dae024cc518549d162af0a858209aa already uploaded ; skipping\nPushing tags for rev [e17e5fbaa770b76cf3c7cdc52564305479dae024cc518549d162af0a858209aa] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing df713062ed7885bfb33b866a67331b028bdc3915ba2b76187b9183f1f5901956\nImage df713062ed7885bfb33b866a67331b028bdc3915ba2b76187b9183f1f5901956 already uploaded ; skipping\nPushing tags for rev [df713062ed7885bfb33b866a67331b028bdc3915ba2b76187b9183f1f5901956] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing 3f3be46c61a91a92686e1c91527738c5082621e89721eb4158b551bda5bb10e2\nImage 3f3be46c61a91a92686e1c91527738c5082621e89721eb4158b551bda5bb10e2 already uploaded ; skipping\nPushing tags for rev [3f3be46c61a91a92686e1c91527738c5082621e89721eb4158b551bda5bb10e2] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing 7a1f16dd30129a511d9be674ceec0867953cf97e4e5f0b6b44e13e1d8cc1ad22\n81920/81920 (100%)\nPushing tags for rev [7a1f16dd30129a511d9be674ceec0867953cf97e4e5f0b6b44e13e1d8cc1ad22] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing f7fdcbe486f355bed880565e7b41cb088b09f1defe23a68d0a4c833219dcccd8\n10240/10240 (100%)\nPushing tags for rev [f7fdcbe486f355bed880565e7b41cb088b09f1defe23a68d0a4c833219dcccd8] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing a5f765f3a92c03a051b194f26e35227c747b92390bd3211f88ee0948d68131de\n10240/10240 (100%)\nPushing tags for rev [a5f765f3a92c03a051b194f26e35227c747b92390bd3211f88ee0948d68131de] on {registry-1.docker.io/users/shykes/deploy/latest}\nPushing 32a6277348a482358f6df36f5348e5aa53bebaa329226f844a6f814b74d4de16\n10240/10240 (100%)\nReceived HTTP code 500 while uploading layer: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">\n<title>500 Internal Server Error</title>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error and was unable to complete your request.  Either the server is overloaded or there is an error in the application.</p>\n```\n\nAfter immediately retrying:\n\n```bash\n$ docker push shykes/deploy\nThe push refers to a repository [shykes/deploy] (len: 1)\nProcessing checksums\nSending images list\nPushing repository shykes/deploy to registry-1.docker.io (1 tags)\nPushing 27cf784147099545\nFailed to upload metadata: unexpected EOF\n```\n\nVersion:\n\n```\n$ docker version\nVersion: 0.3.4\nGit Commit: 8d73740\nWARNING: No swap limit support\n```'
757,'samalba','Error on pull:  "invalid character \'H\' looking for beginning of value"\n```bash\r\n$ docker run lonewold/graphite\r\nPulling repository lonewold/graphite from https://index.docker.io/v1\r\n2013/05/30 15:43:38 invalid character \'H\' looking for beginning of value\r\n\r\n$ docker version\r\nVersion: 0.3.3\r\nGit Commit: c903a6b+CHANGES\r\nWARNING: No swap limit support\r\n```\r\n'
755,'shykes','Organize the project infrastructure: servers, dns, email etc.\nAlso document the fact that @kencochrane is the maintainer for this. Add @jpetazzo so he can take care of SSL on get.docker.io.'
753,'shykes','Remove teams from the registry API\nI would like to suggest removing the concept of "teams" in the registry API. It seems to me that we could use the same model as github, where organizations are a special kind of user, with no change to the url structure or how repositories can be found.\r\n\r\nRegistry maintainers - what do you think? @samalba @kencochrane @shin- '
720,'samalba','push error: No such id\nHi,\r\n\r\nI managed to push a new image to my repository (as I explained [here](http://crohr.me/journal/2013/docker-repository-create-base-boxes.html)). It worked great for some time, until I decided to update that image by installing new software on it. So here is what I did:\r\n\r\n    $ docker run -i -t crohr/ubuntu:lucid /bin/bash\r\n    ... # entered some commands, and exited\r\n    $ docker ps -a # find the container id (ba0289766406)\r\n    $ docker commit ba0289766406 crohr/ubuntu lucid # save that container as the new crohr/ubuntu:lucid\r\n    $ docker push crohr/ubuntu\r\n    The push refers to a repository [crohr/ubuntu] (len: 3)\r\n    Processing checksums\r\n    No such id: 5ca07f187448b3646502972754b090373fd7717f958bb5926fddf4d001795eda\r\n\r\nIndeed I don\'t have that container:\r\n\r\n    $ docker ps -a | grep 5ca07f187448b3646502972754b090373fd7717f958bb5926fddf4d001795eda\r\n    # nothing\r\n\r\nHere are my images:\r\n\r\n    $ docker images\r\n    REPOSITORY          TAG                 ID                  CREATED\r\n    ubuntu              12.10               b750fe79269d        8 weeks ago\r\n    ubuntu              latest              8dbd9e392a96        6 weeks ago\r\n    ubuntu              12.04               8dbd9e392a96        6 weeks ago\r\n    ubuntu              quantal             b750fe79269d        8 weeks ago\r\n    ubuntu              precise             8dbd9e392a96        6 weeks ago\r\n    crohr/ubuntu        lucid               d658b68f942c        9 minutes ago\r\n\r\nAnd here is the full description of that image:\r\n\r\n    $ docker inspect d658b68f942c\r\n    {\r\n        "id": "d658b68f942c08386ece202be9603f987752dc4105e0c3aa7e5782e2ce1fb111",\r\n        "parent": "f7e10b978e8c15bde845374c490862befb181f0943a0ae2076d070573a435b16",\r\n        "created": "2013-05-24T20:56:31.641171Z",\r\n        "container": "ba028976640680a3a14a947847369a6ef982ac7085fa172a8da32055fd225711",\r\n        "container_config": {\r\n            "Hostname": "ba0289766406",\r\n            "User": "",\r\n            "Memory": 0,\r\n            "MemorySwap": 0,\r\n            "CpuShares": 0,\r\n            "AttachStdin": true,\r\n            "AttachStdout": true,\r\n            "AttachStderr": true,\r\n            "PortSpecs": null,\r\n            "Tty": true,\r\n            "OpenStdin": true,\r\n            "StdinOnce": true,\r\n            "Env": null,\r\n            "Cmd": [\r\n                "/bin/bash"\r\n            ],\r\n            "Dns": null,\r\n            "Image": "crohr/ubuntu:lucid",\r\n            "Volumes": {},\r\n            "VolumesFrom": ""\r\n        },\r\n        "docker_version": "0.3.3",\r\n        "config": {\r\n            "Hostname": "",\r\n            "User": "",\r\n            "Memory": 0,\r\n            "MemorySwap": 0,\r\n            "CpuShares": 0,\r\n            "AttachStdin": false,\r\n            "AttachStdout": false,\r\n            "AttachStderr": false,\r\n            "PortSpecs": null,\r\n            "Tty": false,\r\n            "OpenStdin": false,\r\n            "StdinOnce": false,\r\n            "Env": null,\r\n            "Cmd": null,\r\n            "Dns": null,\r\n            "Image": "",\r\n            "Volumes": null,\r\n            "VolumesFrom": ""\r\n        }\r\n    }\r\n\r\nAm I doing something wrong?'
703,'shykes','Improve push/pull/import to json stream\nCurrently push/pull/import\r\n\r\nUses chunked http, not very handy when you want to parse it, for exemple to display a nice progress bar if you build a non-console client.\r\n\r\nWe could use json streaming, it\'s quite standard look like this:\r\n\r\n    {"status" : "Pulling repository busybox from https://index.docker.io/v1"}\r\n    {"status" : "Pulling image e9aa60c60128cad1 (latest) from busybox"}\r\n    {"status" : "Pulling e9aa60c60128cad1 metadata"}\r\n    {"status" : "Pulling e9aa60c60128cad1 fs layer"}\r\n    {"progress" : "5778/? (n/a)"}\r\n    ...\r\n\r\n\r\nI implemented the pull command using json stream on v1.1\r\nSo /v1/ will be chunked http and /v1.1/ json stream.\r\nThe client decodes using the content-type header.\r\n\r\nIt\'s pretty basic for now, if the future we could add a "error" key, to know when the pull went bad.\r\nFeel free to comment.'
690,'samalba','\'docker pull\' hangs with "Resolving tag"\n```bash\r\n# docker run shykes/couchdb\r\nImage shykes/couchdb not found, trying to pull it from registry.\r\nPulling repository shykes/couchdb from https://index.docker.io/v1\r\nResolving tag "shykes/couchdb:latest" from [registry-1.docker.io]\r\nPulling 018c41c359c3ed7be1a37b323c2eae569c2f16671fdaf241d50c2fad6db43bb8 metadata\r\nPulling 018c41c359c3ed7be1a37b323c2eae569c2f16671fdaf241d50c2fad6db43bb8 fs layer\r\nDownloading 10240/? (n/a)\r\nPulling a01acde268b6a087354b17ca88571d33d18a52b4ec1173a848edacef88415583 metadata\r\nPulling a01acde268b6a087354b17ca88571d33d18a52b4ec1173a848edacef88415583 fs layer\r\nDownloading 10240/? (n/a)\r\nPulling a5a8870436ccc9ab577628b0dd0a5132cdf582456f1a32b3fdb25e80f84c5fbc metadata\r\nPulling a5a8870436ccc9ab577628b0dd0a5132cdf582456f1a32b3fdb25e80f84c5fbc fs layer\r\nDownloading 10240/? (n/a)\r\nPulling c10e80f808d9a4b26b3f0ad5daa84ce9bac75bd54c02db3fa2f6eb35864ffbff metadata\r\nPulling c10e80f808d9a4b26b3f0ad5daa84ce9bac75bd54c02db3fa2f6eb35864ffbff fs layer\r\nDownloading 56852480/? (n/a)\r\nPulling 90b456ed4a74d27f734bff02f185f73aed4ae3ae728a5428e5e7e4d7fefdcb82 metadata\r\nPulling 90b456ed4a74d27f734bff02f185f73aed4ae3ae728a5428e5e7e4d7fefdcb82 fs layer\r\nDownloading 20869120/? (n/a)\r\nResolving tag "shykes/couchdb:2013-05-03" from [registry-1.docker.io]\r\n      \r\n\r\n\r\n\r\n^C\r\n```'
677,'samalba','\'docker push\' fails with weird HTML output\n```bash\r\n$ docker push shykes/vr_node_example\r\nProcessing checksums\r\n```\r\n\r\n[...] Hangs for a LONG time, 2 - 5 minutes\r\n\r\nthen:\r\n\r\n```bash\r\nSending image list\r\nError: Error: Status 404 trying to push repository shykes/vr_node_example:\r\n\r\n\r\n\r\n\r\n\r\n<!DOCTYPE html>\r\n<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->\r\n<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->\r\n<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->\r\n<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->\r\n\r\n<head>\r\n    <meta charset="utf-8">\r\n    <!-- [if it IE]> <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> <![endif]-->\r\n    <link rel="shortcut icon" href="/static/favicon.ico" />\r\n    <title>\r\n        Docker Index\r\n    </title>\r\n\r\n    <meta name="description" content="Docker Index, The linux container runtime Image Index" />\r\n    <meta name="keywords" content="Docker Index, Docker, Linux Containers" />\r\n\r\n\r\n    <link rel="stylesheet" type="text/css" href="/static/css/bootstrap-custom.css">\r\n    <link rel="stylesheet" type="text/css" href="/static/css/main.css">\r\n    <link href=\'//fonts.googleapis.com/css?family=Cabin:400,700,400italic\' rel=\'stylesheet\' type=\'text/css\'>\r\n\r\n\r\n    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" ></script>\r\n    <script src="/static/js/vendor/bootstrap.min.js"></script>\r\n    <script>\r\n        // Make the subheader sticky\r\n        $(function(){\r\n            $(window).scroll(function(){\r\n\r\n                if ($(window).scrollTop() > 40) {\r\n                    $("#stickynav").addClass("navbar-fixed-top").removeClass("navbar-static-top");\r\n                    $("body").css(\'margin-top\', \'40px\');\r\n                } else {\r\n                    $("#stickynav").removeClass("navbar-fixed-top").addClass("navbar-static-top");\r\n                    $("body").css(\'margin-top\', \'0px\');\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n\r\n\r\n    <script type="text/javascript">\r\n\r\n      var _gaq = _gaq || [];\r\n      _gaq.push([\'_setAccount\', \'UA-6096819-11\']);\r\n      _gaq.push([\'_trackPageview\']);\r\n      _gaq.push([\'_trackPageLoadTime\']);\r\n      (function() {\r\n        var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n        ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n        var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n      })();\r\n\r\n    </script>\r\n\r\n</head>\r\n<body>\r\n\r\n\r\n\r\n<!-- navigation -->\r\n<div class="navbar navbar-static-top">\r\n    <div class="navbar-inner">\r\n        <div class="container" >\r\n            <div class="brand logo"><a href="/">DOCKER <span style="letter-spacing: 1px;">index</span></a></div>\r\n\r\n            <ul class="nav pull-right">\r\n\r\n\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="stickynav" class="navbar navbar-inverse navbar-static-top">\r\n    <div class="navbar-inner">\r\n        <div class="container" >\r\n            <ul class="nav pull-left">\r\n                <li class="active"></a></li>\r\n            </ul>\r\n\r\n            <ul class="nav nav-login pull-right">\r\n\r\n\r\n                    <li class="active"><a href="/account/signup/">signup</a></li>\r\n                    <li><a href="/account/login/">login</a></li>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- end of navigation -->\r\n\r\n\r\n\r\n\r\n<div class="container">\r\n    <div class="row">\r\n        <div class="span6 offset3 box">\r\n\r\n\r\n    <h2>404: The page you were looking for is not here... </h2>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- footer -->\r\n<div class="container">\r\n    <div class="row" >\r\n        <div class="span12 footer">\r\n            <div class="span8 tbox">\r\n                The Docker index is a complimentary service for users of <a href="http://www.docker.io">Docker</a>. <br>\r\n                Docker and the Docker index are projects by <a href="http://dotcloud.com">dotCloud</a>\r\n            </div>\r\n\r\n            <div class="span4 tbox textright forceleftmargin social links">\r\n                <a class="twitter" href="http://twitter.com/getdocker">Twitter</a>\r\n                <a class="github" href="https://github.com/dotcloud/docker/">GitHub</a>\r\n            </\r\n```\r\n'
669,'vieux','Rest API: Wrong Content-Type on container create\nAll Content-Type headers look correct except the one for create: http://docs.docker.io/en/latest/api/docker_remote_api.html#create-a-container\r\n\r\nIt returns "text/plain; charset=utf-8" instead of "application/json".\r\n\r\nThis will produce bugs in the majority of clients that read the content-type before trying to decode the body. '
662,'samalba','getting html printed when trying to upload and image with an _\n    $>docker push vieux/busybox_test\r\n    The push refers to a repository [vieux/busybox_test] (len: 1)\r\n    Processing checksums\r\n    Sending image list\r\n    Error: Status 404 trying to push repository vieux/busybox_test:\r\n\r\n\r\n\r\n\r\n\r\n    <!DOCTYPE html>\r\n    <!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->\r\n    <!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->\r\n    <!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->\r\n    <!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->\r\n\r\n    <head>\r\n    <meta charset="utf-8">\r\n    <!-- [if it IE]> <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> <![endif]-->\r\n    <link rel="shortcut icon" href="/static/favicon.ico" />\r\n    <title>\r\n        Docker Index\r\n    </title>\r\n\r\n    <meta name="description" content="Docker Index, The linux container runtime Image Index" />\r\n    <meta name="keywords" content="Docker Index, Docker, Linux Containers" />\r\n\r\n\r\n    <link rel="stylesheet" type="text/css" href="/static/css/bootstrap-custom.css">\r\n    <link rel="stylesheet" type="text/css" href="/static/css/main.css">\r\n    <link href=\'//fonts.googleapis.com/css?family=Cabin:400,700,400italic\' rel=\'stylesheet\' type=\'text/css\'>\r\n\r\n\r\n    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" ></script>\r\n    <script src="/static/js/vendor/bootstrap.min.js"></script>\r\n    <script>\r\n        // Make the subheader sticky\r\n        $(function(){\r\n            $(window).scroll(function(){\r\n\r\n                if ($(window).scrollTop() > 40) {\r\n                    $("#stickynav").addClass("navbar-fixed-top").removeClass("navbar-static-top");\r\n                    $("body").css(\'margin-top\', \'40px\');\r\n                } else {\r\n                    $("#stickynav").removeClass("navbar-fixed-top").addClass("navbar-static-top");\r\n                    $("body").css(\'margin-top\', \'0px\');\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n    ....'
660,'vieux','Move auth from the server to the client \nCurrently, the login information is kept in the server, so each time you do a docker login,\r\nthe client requests the default username/email from the server, send send the new configuration to the docker server which communicates with the index.\r\n\r\nToo many back and forth.\r\n\r\nThe login should be handled by the client, and the authConfig send to the docker server when needed.'
657,'shykes','Minor tweaks to python_web_app.rst\n'
640,'vieux',"api_client: added APIClient type, with the first function\nI'm including ListContainers here, so we can discuss some of its design\r\nand prepare for future methods. I'd like to get some feedback (on everything that's included in this pull request).\r\n\r\nAs you can see, I've created a type for options (I don't like the idea of providing four parameters to the method). This type provides the method ``queryString``, that contains a bunch of ifs. We can do some magic using the reflect package to automatically marshal struct types into query strings, or repeat this if approach in other requests that take too many parameters. Which option would you prefer?\r\n\r\nAside from the subject of this pull request: I'd like to rename ``ApiContainers`` and ``ApiImages`` types to the singular alternatives ``ApiContainer`` and ``ApiImage``. They don't represent a list of containers or images. What do you guys think?"
616,'vieux','Docker API should support a wider range of boolean parameters\nRight now in master, issuing a request formatted like this:\r\n\r\n    /images/json?only_ids=True&all=False\r\n\r\nis equivalent to\r\n\r\n    /images/json?only_ids=0&all=0\r\n\r\nwhen the expected result would obviously be more like\r\n\r\n    /images/json?only_ids=1&all=0\r\n\r\nCan we add support for boolean values such as `False`/`false`/`True`/`true`? =)\r\n\r\ncc @vieux '
615,'samalba','docker push/pull -registry ENDPOINT does not work\nFollowing the discussion on https://groups.google.com/forum/?fromgroups=#!topic/docker-club/XUzT83eYx3I\r\n\r\nWhen a custom registry is passed using the "-registry" argument, Docker considers this endpoint is also used for the Index. This produces a 404 since the Registry API does not implement the Index commands (for user auth for instance).\r\n\r\nPROPOSED: when a -registry argument is passed, Docker should always use https://index.docker.io as an API endpoint.\r\n\r\nOn top of that, I propose to add a "-no-index" argument to bypass authentication and Index API completely. In case someone wants to use the Registry as a standalone storage service without any auth (might be useful on a local network for instance).'
613,'shykes','Improve rmi to delete only when necessary\nFixes #610 '
610,'vieux','Improve the rmi command\nUpdate the rmi command to garbage collect, and only delete when necessary:\r\n\r\n    $>docker images\r\n    REPOSITORY          TAG                 ID                  CREATED\r\n    busybox             latest              e9aa60c60128        7 weeks ago\r\n    vieux/busybox       latest              e9aa60c60128        7 weeks ago\r\n    base                latest              b750fe79269d        7 weeks ago\r\n    base                ubuntu-12.10        b750fe79269d        7 weeks ago\r\n    base                ubuntu-quantal      b750fe79269d        7 weeks ago\r\n    base                ubuntu-quantl       b750fe79269d        7 weeks ago\r\n\r\n\r\ndocker rmi busybox, will only remove the repo "busybox", as the image is still referenced by vieux/busybox\r\n\r\n    $>docker rmi busybox\r\n    base:quantl\r\n    $>docker images\r\n    REPOSITORY          TAG                 ID                  CREATED\r\n    vieux/busybox       latest              e9aa60c60128        7 weeks ago\r\n    base                latest              b750fe79269d        7 weeks ago\r\n    base                ubuntu-12.10        b750fe79269d        7 weeks ago\r\n    base                ubuntu-quantal      b750fe79269d        7 weeks ago\r\n    base                ubuntu-quantl       b750fe79269d        7 weeks ago\r\n\r\ndocker rmi base:quantl will only remove the tag quantl\r\n\r\n    $>docker rmi base:quantl\r\n    base:quantl\r\n    $>docker images\r\n    REPOSITORY          TAG                 ID                  CREATED\r\n    vieux/busybox       latest              e9aa60c60128        7 weeks ago\r\n    base                latest              b750fe79269d        7 weeks ago\r\n    base                ubuntu-12.10        b750fe79269d        7 weeks ago\r\n    base                ubuntu-quantal      b750fe79269d        7 weeks ago\r\n\r\ndocker rmi base will remove the whole image\r\n\r\n    $>docker rmi base\r\n    base\r\n    $>docker images\r\n    REPOSITORY          TAG                 ID                  CREATED\r\n    vieux/busybox       latest              e9aa60c60128        7 weeks ago\r\n'
609,'vieux','Add basic auth to the api\nAdd an option to start the deamon with an Authorization header, required for each request.'
602,'shykes',"Bind mount implementation and tests\nDespite the well-intentioned reluctance to this feature expressed in #111, being able to mount host directories on containers is critical for many use cases.  I've completed a naive implementation (with tests). I hope we can get something like this in master soon!\r\n\r\nUsage is as follows:\r\n\r\n    docker run -b /host base ls /host                     # mounts /host through to the container\r\n    docker run -b /host:/container base ls /container     # mounts /host to /container\r\n    docker run -b /host:/container:ro base ls /container  # mounts /host to /container in read-only mode\r\n\r\nThe bind mounts default to read-write but also support read-only mode.  I worked this out by modifying `lxc.mount.entry` manually and working backwards.  Given my unfamiliarity with the code-base, this should get close review before being merged."
594,'shykes',"Add sizes in images and containers\nFixes #22\r\n\r\n$>docker images -a\r\n\r\n    REPOSITORY          TAG                 ID                  CREATED             SIZE\r\n    busybox             latest              e9aa60c60128        7 weeks ago         6.51 MB (virtual 0 B)\r\n    vieux               minecraft_server    6d4b7a164cc4        14 minutes ago      12.0 kB (virtual 659.55 MB)\r\n    base                ubuntu-12.10        b750fe79269d        7 weeks ago         24.1 kB (virtual 171.75 MB)\r\n    dhrp/mongodb-sshd   latest              59fe4e85bea3        6 weeks ago         3.364 GB (virtual 171.77 MB)\r\n    <none>              <none>              712e29ecc84c        14 minutes ago      2.27 MB (virtual 657.28 MB)\r\n    <none>              <none>              27cf78414709        7 weeks ago         171.75 MB (virtual 0 B)\r\n    <none>              <none>              93407101859d        17 minutes ago      35.40 MB (virtual 171.77 MB)\r\n    <none>              <none>              534f8b6157c4        17 minutes ago      56.7 kB (virtual 207.17 MB)\r\n    <none>              <none>              5569fed43e24        15 minutes ago      355.28 MB (virtual 302.00 MB)\r\n    <none>              <none>              d1d24098d412        17 minutes ago      92.12 MB (virtual 207.23 MB)\r\n    <none>              <none>              c2aa9bb4cd55        14 minutes ago      12.0 kB (virtual 659.54 MB)\r\n    <none>              <none>              0037757cab2b        17 minutes ago      2.65 MB (virtual 299.35 MB)\r\n\r\n\r\nThe size is computed in StoreImage (called while import or pull) and also in graph.Get for previously downloaded images.\r\nThe size of the parent is calculated every time in PS (it's very fast)\r\n\r\n\r\n$>docker ps -a\r\n\r\n    ID                  IMAGE               COMMAND                CREATED             STATUS              PORTS               SIZE\r\n    2a151609665e        c2aa9bb4cd55                               Exit 127            15 minutes ago                          16.0 kB\r\n    322a8f6c6b4e        712e29ecc84c                               Exit 127            15 minutes ago                          16.0 kB\r\n    b85c456df6c1        5569fed43e24        /bin/sh -c wget http   Exit 0              15 minutes ago                          2.27 MB\r\n    6f869614e4f9        0037757cab2b        /bin/sh -c apt-get i   Exit 0              18 minutes ago                          355.28 MB\r\n    7f443142467e        d1d24098d412        /bin/sh -c echo orac   Exit 0              18 minutes ago                          2.65 MB\r\n    647f7b708bcf        534f8b6157c4        /bin/sh -c apt-get u   Exit 0              18 minutes ago                          92.12 MB\r\n    306a574de7be        93407101859d        /bin/sh -c apt-add-r   Exit 0              19 minutes ago                          56.7 kB\r\n    8c0a903a4b78        base:ubuntu-12.10   /bin/sh -c apt-get i   Exit 0              20 minutes ago                          35.39 MB\r\n\r\n\r\nThe size if calculated each time."
585,'vieux',"Create the layer directory with 0755 permissions by default instead of 700\nIf you import a tarball that doesn't contain a top-directory with 0755 permissions then Docker creates a layer directory with the permission 0700 with the consequences we have seen in #486.\r\n\r\nIt's easy to reproduce, with:\r\n\r\n    tar -cf ../layer.tar *\r\n    docker import - < ../layer.tar\r\n\r\nInstead of:\r\n\r\n    tar -cf ../layer.tar .\r\n    docker import - < ../layer.tar\r\n"
579,'vieux','Move the quiet/only_ids option in images an ps to the client\n'
577,'samalba','docker push fails with 400 but doesn\'t explain how to fix it\nI\'m trying to run a ``docker push`` for my image, but get a 400 with a cryptic error message about checksums. It would be wonderful if the command line client could tell me what\'s actually wrong and how to fix it.\r\n\r\nFull output:\r\n\r\n```\r\njonas:~ docker push ojii/pybuilder\r\nProcessing checksums\r\nSending image list\r\nError: Error: Status 400 trying to push repository ojii/pybuilder: "27cf784147099545 already has checksum (sha256:f2dc42755a6d005d7a5e4d0bd2aca99680415c618ea3f48f4ed184c5ef1759a6), cant change to sha256:8562b38e30c5d3914cb4366bac73fdcb94242c665610b7842f28dc72a8b603e2"\r\n```'
573,'vieux','be able to customize host and port\nadd a -port to docker deamon to choose which port use to listen for commands\r\nadd a -port and -host in docker client to choose where to connect'
553,'samalba','docker push should return specific error when user account was not verified\nThe currently reported error is:\r\n\r\n```\r\nReceived HTTP code 400 while uploading layer\r\n```\r\n\r\nWhich IMHO is too generic, I just ran into this issue and it took me sometime to realize where the problem was.\r\n\r\nThanks!'
527,'vieux','Display a warning if the client and the server have different version\nWith #432 the warning is displayed in the server.'
491,'shykes','Run Couchdb on Docker\nIt would be cool to run [Apache Couchdb](http://github.com/apache/couchdb) as a docker container.\r\n'
460,'shykes','Add JSON data to Container.Config, specified with -j option of "run" com...\n...mand  #439\r\n\r\nAdds a field JsonMap to Container.Config.  The lxc_template uses data stored there to\r\naugment the lxc config file.\r\n\r\nThe "run" command now has a "-j" command to specify the JSON object.\r\n\r\nCurrently only a "cgroup" field is supported.  It simply takes the key-value pairs from\r\nthe "cgroup" field (if exists) and emits  lxc.cgroup.key = value\r\n\r\nAddresses issue #439'
451,'shykes',"'docker push' of large images doesn't show progress bar for a long time\nWhen I run 'docker push' of a large image, it will print something like:\r\n\r\n```bash\r\nPushing 0cdec5885a91c457df93e28ae5aa45ef088503e526f21278c9c1dd72e9c06984 fs layer\r\n```\r\n\r\nThen it will hang for a while, possibly minutes. Then finally it will start printing a progress bar.\r\n\r\nIt would be nice to have feedback right away that something is going on."
450,'samalba',"Reset registry password\nIt would be useful to be able to reset/recover passwords from the Docker registry.  I've forgotten my password but there doesn't seem to be a way for me to reset it at present.\r\n\r\nThis is particularly likely to be a problem for people who use Docker via the Vagrant image, as Vagrant boxes tend to get destroyed and rebuilt often, so any locally-cached copy of your Docker credentials are lost frequently."
449,'samalba','Search public images on the registry\nI got a lot of requests for the ability to search for images in the public registry. This issue will help centralize.\r\n'
432,'vieux','Remote API\n'
430,'shykes','Crash when pushing large image\n```bash\r\ndocker push shykes/opencv\r\n2013/04/18 07:27:00 docker push shykes/opencv\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0x38 pc=0x44811c]\r\n\r\ngoroutine 15 [running]:\r\ngithub.com/dotcloud/docker.(*Graph).LookupRemoteRepository(0xf8400e5160, 0xf84013c870, 0xd, 0xf8400f1a80, 0xf84013c870, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/registry.go:363 +0x415\r\ngithub.com/dotcloud/docker.(*Graph).PushRepository(0xf8400e5160, 0xf840100120, 0xf840101680, 0xf84013c870, 0xf80000000d, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/registry.go:398 +0x5f\r\ngithub.com/dotcloud/docker.(*Server).CmdPush(0xf84011eb40, 0xf8401000c0, 0xf84013c8f0, 0xf8401616c0, 0xf840101680, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/commands.go:534 +0x6b4\r\n----- stack segment boundary -----\r\ngithub.com/dotcloud/docker.(*Graph).LookupRemoteRepository(0xf8400e5160, 0xf84013c870, 0xd, 0xf8400f1a80, 0xf84013c870, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/registry.go:363 +0x415\r\ngithub.com/dotcloud/docker.(*Graph).PushRepository(0xf8400e5160, 0xf840100120, 0xf840101680, 0xf84013c870, 0xf80000000d, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/registry.go:398 +0x5f\r\ngithub.com/dotcloud/docker.(*Server).CmdPush(0xf84011eb40, 0xf8401000c0, 0xf84013c8f0, 0xf8401616c0, 0xf840101680, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/commands.go:534 +0x6b4\r\n----- stack segment boundary -----\r\nreflect.Value.call(0x62b898, 0x432b91, 0x130, 0x68d474, 0x6c6c614300000009, ...)\r\n\t/usr/lib/go/src/pkg/reflect/value.go:521 +0x135e\r\nreflect.Value.CallSlice(0x62b898, 0x432b91, 0x130, 0x7f472dd97bf0, 0x400000004, ...)\r\n\t/usr/lib/go/src/pkg/reflect/value.go:347 +0x85\r\ngithub.com/dotcloud/docker/rcli._func_004(0xf8401783c0, 0xf84013c8d0, 0x45724d, 0xf8401000c0, 0xf84013c890, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/types.go:165 +0x21e\r\ngithub.com/dotcloud/docker/rcli.LocalCall(0xf840125c60, 0xf84011eb40, 0xf8401000c0, 0xf84013c890, 0xf8401616c0, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/types.go:134 +0x699\r\ngithub.com/dotcloud/docker/rcli.call(0xf840125c60, 0xf84011eb40, 0xf8401000c0, 0xf84013c890, 0xf8401616c0, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/types.go:114 +0x89\r\ngithub.com/dotcloud/docker/rcli.Serve(0xf8401616c0, 0xf840101680, 0xf840125c60, 0xf84011eb40, 0x690a74, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/tcp.go:166 +0x2a8\r\ngithub.com/dotcloud/docker/rcli._func_001(0xf84013c5a0, 0xf8401616c0, 0xf840101680, 0x0)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/tcp.go:146 +0xc7\r\ncreated by github.com/dotcloud/docker/rcli.ListenAndServe\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/tcp.go:150 +0x301\r\n\r\ngoroutine 1 [chan receive]:\r\nnet.(*pollServer).WaitRead(0xf840175cc0, 0xf840183480, 0xf84007e480, 0xb, 0x1, ...)\r\n\t/usr/lib/go/src/pkg/net/fd.go:268 +0x73\r\nnet.(*netFD).accept(0xf840183480, 0x50432c, 0x0, 0xf84007b0f0, 0xf84008b040, ...)\r\n\t/usr/lib/go/src/pkg/net/fd.go:622 +0x20d\r\nnet.(*TCPListener).AcceptTCP(0xf84011e998, 0xf8401616c0, 0x0, 0x0, 0x18, ...)\r\n\t/usr/lib/go/src/pkg/net/tcpsock_posix.go:320 +0x71\r\nnet.(*TCPListener).Accept(0xf84011e998, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/usr/lib/go/src/pkg/net/tcpsock_posix.go:330 +0x49\r\ngithub.com/dotcloud/docker/rcli.ListenAndServe(0x68b264, 0x70637400000003, 0x69f534, 0x2e3732310000000e, 0xf840125c60, ...)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/rcli/tcp.go:134 +0x226\r\nmain.daemon(0x69f434, 0x13, 0x0, 0x0, 0xffffffff, ...)\r\n\t/home/sandbox/docker/docker/docker.go:102 +0x357\r\nmain.main()\r\n\t/home/sandbox/docker/docker/docker.go:51 +0x2db\r\n\r\ngoroutine 2 [syscall]:\r\ncreated by runtime.main\r\n\t/build/buildd/golang-1.0.2/src/pkg/runtime/proc.c:221\r\n\r\ngoroutine 3 [syscall]:\r\nos/signal.loop()\r\n\t/usr/lib/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\r\ncreated by os/signal.init·1\r\n\t/usr/lib/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\r\n\r\ngoroutine 4 [chan receive]:\r\nmain._func_001(0xf84008b410, 0xf840088b60, 0x0, 0x0)\r\n\t/home/sandbox/docker/docker/docker.go:92 +0x31\r\ncreated by main.daemon\r\n\t/home/sandbox/docker/docker/docker.go:96 +0x2a5\r\n\r\ngoroutine 5 [select]:\r\ngithub.com/dotcloud/docker.(*IPAllocator).run(0xf8400daf60, 0x0)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/network.go:352 +0x345\r\ncreated by github.com/dotcloud/docker.newIPAllocator\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/network.go:393 +0xbd\r\n\r\ngoroutine 6 [chan send]:\r\ngithub.com/dotcloud/docker.(*PortAllocator).runFountain(0xf8400daf20, 0x0)\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/network.go:260 +0x46\r\ncreated by github.com/dotcloud/docker.newPortAllocator\r\n\t/home/sandbox/docker/.gopath/src/github.com/dotcloud/docker/network.go:299 +0x9a\r\n\r\ngoroutine 9 [finalizer wait]:\r\ncreated by runtime.gc\r\n\t/build/buildd/golang-1.0.2/src/pkg/runtime/mgc0.c:882\r\n\r\ngoroutine 14 [syscall]:\r\nsyscall.Syscall6()\r\n\t/build/buildd/golang-1.0.2/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\r\nsyscall.EpollWait(0xf800000006, 0xf8400b7170, 0xa0000000a, 0xffffffff, 0xc, ...)\r\n\t/usr/lib/go/src/pkg/syscall/zerrors_linux_amd64.go:1781 +0xa1\r\nnet.(*pollster).WaitFD(0xf8400b7160, 0xf840175cc0, 0x0, 0x0, 0x0, ...)\r\n\t/usr/lib/go/src/pkg/net/fd_linux.go:146 +0x110\r\nnet.(*pollServer).Run(0xf840175cc0, 0x0)\r\n\t/usr/lib/go/src/pkg/net/fd.go:236 +0xe4\r\ncreated by net.newPollServer\r\n\t/usr/lib/go/src/pkg/net/newpollserver.go:35 +0x382\r\n```'
414,'vieux',"added sizes on docker ps and docker images\nFixes #22\r\n\r\n\r\n## containers\r\n\r\ndisplay size of rw and if available size of rootfs, in this exemple, only the last one is running:\r\n\r\n    ./bin/docker ps -a             \r\n    ID             IMAGE         COMMAND                CREATED        STATUS         SIZE\r\n    1467f91a2709   base:latest   /bin/bash              30 hours ago   Exit 0         16K\r\n    25b1a4d9d238   base:latest   /bin/bash              30 hours ago   Exit -127      16K (virtual 4K)\r\n    889eed10d120   base:latest   /bin/bash              30 hours ago   Exit 0         16K\r\n    06776824bc28   base:latest   /bin/bash              30 hours ago   Exit 0         16K\r\n    6fb4de5c4bea   base:latest   /bin/bash              30 hours ago   Exit 0         16K\r\n    019bac054a0c   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    77530940f940   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    1cae820e12ca   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    e295719906dd   base:latest   /bin/bash              31 hours ago   Exit 0         16K\r\n    a6190ecabe37   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    1650aa02482b   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    c65e9a2ea3c0   base:latest   /bin/bash              31 hours ago   Exit 0         4K (virtual 4K)\r\n    a3f224ff5229   base:latest   /bin/bash              32 hours ago   Exit 0         16K\r\n    9ab960de2f8a   base:latest   /bin/bash              32 hours ago   Exit 0         16K\r\n    bb8f8d1b2ea0   base:latest   /bin/bash              4 days ago     Exit -127      16K (virtual 4K)\r\n    2d358ce51d87   base:latest   /bin/bash              4 days ago     Exit 0         16K\r\n    a13f4ba6204a   base:latest   /bin/bash              4 days ago     Exit 0         16K\r\n    59bd80f6f359   base:latest   /bin/bash              4 days ago     Exit 0         16K\r\n    65559fd8e242   base:latest   -i -t /bin/bash        4 days ago     Exit 127       16K\r\n    a18f1dfef7ca   base:latest   /bin/sh -c while tru   4 days ago     Up 1 seconds   16K (virtual 171M)\r\n\r\n\r\n## images\r\n\r\ndisplay size of current layer, and parent's layers as virtual\r\n\r\n    ./bin/docker images           \r\n    REPOSITORY          TAG                 ID                  CREATED             SIZE\r\n    dhrp/sshd           latest              1bd442970c79        2 weeks ago         20K (virtual 284M)\r\n    base                ubuntu-quantal      b750fe79269d        3 weeks ago         24K (virtual 171M)\r\n    base                ubuntu-12.10        b750fe79269d        3 weeks ago         24K (virtual 171M)\r\n    base                ubuntu-quantl       b750fe79269d        3 weeks ago         24K (virtual 171M)\r\n    base                latest              b750fe79269d        3 weeks ago         24K (virtual 171M)\r\n    <none>              <none>              fa594d99163a        2 weeks ago\r\n\r\n\r\n"
399,'shykes','Run Ubuntu precise/12.04 LTS on Docker\nThe current default base image ("docker pull base") is based on Ubuntu 12.10/Quantal. It would be great to also provide a 12.04 image.'
371,'vieux','add -l (latest) to docker ps command\nWhen using docker I find myself often doing something like:\r\n\r\n```\r\ndocker run -i -t dhrp/image /bin/bash\r\nexit\r\n\r\n# now no container id is returned\r\n\r\n# so I have to go and find it, \r\n# I include |more because the list does not fit on my screen \r\n# and it is sorted descending   \r\n\r\ndocker ps -a |more \r\n```\r\n\r\nI propose is to add the following option to ``docker ps``\r\n\r\n```\r\n-l : show only the latest created container, include non-running ones.\r\n```\r\n\r\nor perhaps even better\r\n\r\n```\r\n-l n : show last n created containers, include non-running ones.\r\n# default to the last 5\r\n```\r\n'
352,'samalba',"150 parallel pull\nFirst half of #150 \r\n\r\nIt works as expected with the 'docker-ut' and 'base' images.\r\nI'd like to test it against something that will stress it a little more, but I can't think of an easy way of doing this at present.\r\n"
350,'samalba',"Self-hosted docker registry\nThis has been discussed on IRC and (I understand) internally on the Docker team, but there's no issue currently tracking it so I thought I'd make one.\r\n\r\nThis is an important step for me and other folks hoping to use Docker as a private deployment system.\r\n\r\nHere are some of the steps involved:\r\n\r\n* Publish the docker repository source and document how to run\r\n* For convenience, also package as a public Docker image (so you can run a docker repository server under Docker)\r\n* Change the `pull`, `push`, `login`, and `import` commands to be able to refer to an alternate repository. (Alternatively, maybe docker would look at a `.dockerrc` file or something? I would be more concerned about accidentally publishing private containers in that case, though.)\r\n\r\nAlso, I'm not sure what capabilities the repo server currently has, but it would be very useful to be able to view a list of images (via API/web page?) and also to dump the data for backups. Such feature requests could be their own tickets later on (esp. if the repository server source will live in a different Github repo)."
339,'samalba',"bsdtar: Failed to set file flags\nHello,\r\n\r\nI just started working with docker but have been immediately hit with the following:\r\n\r\n    $ sudo docker run -i -t base /bin/bash\r\n    2013/04/05 14:32:09 docker run -i -t base /bin/bash\r\n    Image base not found, trying to pull it from registry.\r\n    Pulling repository base\r\n    Pulling tag base:ubuntu-12.10\r\n    Pulling 27cf784147099545 metadata\r\n    Pulling 27cf784147099545 fs layer\r\n    94863360/94863360 (100%)\r\n    2013/04/05 14:33:10 exit status 1: ./usr/bin/: Failed to set file flags\r\n    ./usr/lib/x86_64-linux-gnu/gconv/: Failed to set file flags\r\n    ./usr/lib/python3.2/__pycache__/: Failed to set file flags\r\n    ./usr/share/consolefonts/: Failed to set file flags\r\n    ./usr/share/man/man8/: Failed to set file flags\r\n    ./usr/share/man/man1/: Failed to set file flags\r\n    ./usr/share/perl/5.14.2/unicore/lib/Blk/: Failed to set file flags\r\n    ./usr/share/i18n/locales/: Failed to set file flags\r\n    ./usr/share/i18n/charmaps/: Failed to set file flags\r\n    ./var/lib/dpkg/info/: Failed to set file flags\r\n    ./var/cache/apt/archives/: Failed to set file flags\r\n    bsdtar: Error exit delayed from previous errors.\r\n\r\nGoggling seems to show that this is likely an upstream known issue (http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=699499) from bsdtar caused when a tar package tries to restore file metadata like flags in use by one file system and not another.  In this case I would guess that the base image was created on Ext2/3/4 and I am trying to extract it to BtrFS...\r\n\r\nI understand that restoring the flags in use are likely critical to the function and/or security of the container so striping them out of the archive or ignoring the errors (or requesting upstream to do either) probably aren't good solutions.  So if that's true has anyone started any BtrFS based images that may be usable by those running with BtrFS?  It sure would be nice if we could browse and/or query this image repository so I could potentially answer this question myself.\r\n\r\nThanks for your efforts so far in creating this exciting piece of software!"
306,'shykes',"rmi fails to remove the image\nThe current docker doesn't seem to be able to remove images.\r\nInitially, I've encountered this problem with images which were there before the short ids were introduced for images.\r\n\r\nAfter cleaning up everything in /var/lib/docker/* and starting from scratch, the issue still occurs.\r\n```\r\ndocker rmi b1343935b9e5\r\nError: rename /var/lib/docker/graph/b1343935b9e5 /var/lib/docker/graph/:garbage:/b1343935b9e5: no such file or directory\r\n```"
303,'kencochrane','Attach fails on Ubuntu 12.04\nI\'m following the [hello world daemon example](http://docs.docker.io/en/latest/examples/hello_world_daemon/) on a brand new Ubuntu 12.04 vagrant/virtualbox instance, using the standard base image:\r\n\r\n     vagrant@precise64:~/docker-master$ CONTAINER_ID=$(sudo docker run -d base /bin/sh -c "while true; do echo hello world; sleep 1; done")\r\n     2013/04/01 21:00:08 docker run -d base /bin/sh -c while true; do echo hello world; sleep 1; done\r\n\r\nSo far so good. But even though the command appears to be running (shows up in `ps`, pid of the sleep process changes every second etc), the logs command gives no output:\r\n\r\n     vagrant@precise64:~/docker-master$ sudo docker logs $CONTAINER_ID\r\n     2013/04/01 21:00:16 docker logs 5aefe3fc6131\r\n\r\nRunning attach does nothing until interrupted with a ctrl-c:\r\n\r\n    vagrant@precise64:~/docker-master$ sudo docker attach $CONTAINER_ID\r\n    2013/04/01 21:00:21 docker attach 5aefe3fc6131\r\n    2013/04/01 21:00:51 \r\n    SIGINT received\r\n\r\nRetrying with debug enabled also fails in the same way:\r\n\r\n    vagrant@precise64:~/docker-master$ sudo docker -D attach $CONTAINER_ID\r\n    [debug] runtime.go:228 Loaded container 5aefe3fc613132d12f71676d57042f27935d18049d5ca87351c2ca8bbf52fc2d\r\n    [debug] runtime.go:228 Loaded container b94d704a7849611b1438dbbe5d948ed5a10c0b8e21ba6b68c605e2864f58f7b8\r\n    2013/04/01 21:00:56 docker attach 5aefe3fc6131\r\n    [debug] commands.go:842 Begin stderr pipe [attach]\r\n    [debug] commands.go:835 Begin stdout pipe [attach]\r\n    2013/04/01 21:01:49 \r\n    SIGINT received\r\n\r\nIf it helps I\'m running docker from the docker-master tarball that was last modified on Apr 1 05:13 UTC.\r\n'
273,'shykes','Choose a container\'s public port, if available\nCurrently when allocating a TCP port, docker lets you choose the private port (used by the container for binding) but randomly allocates the corresponding public port (used to reach the container from the outside).\r\n\r\nSometimes that is not sufficient, and one must be in control of the container\'s public port. This should be allowed with \'docker run -p :80\'. The ":"character specified that the public and private port should be at the same value.\r\n\r\nThe tradeoff is that port allocation might fail if the public port requested is not available. It will be the caller\'s responsibility to handle that.'
265,'shykes','Formating debug harmonize\nAdd some errors checking and debug infos'
262,'shykes',"In this pull request I've added some examples and basics\nThis pull request adds examples and basics on the repository, committing, pushing as well as an sshd example and a docker image on the main page. \r\n\r\nIt is not perfect, but I think it is better to have it out there so others can improve. "
260,'shykes','125 reattach stopped container stdin fix\nSolves #108, #125 and #228'
248,'shykes','Display truncated IDs\nHaving long IDs is good for avoiding conflicts in a very large collection of objects (like, say, every image on the planet, or every unix process on the internet), but they are kind of  annoying to show on the screen.\r\n\r\nBy default docker should display a shorthand version of image and container IDs. It should also allow looking up containers and images by their shorthand ID. Just like git and mercurial, basically.\r\n'
234,'shykes',"putting data into a container while also obtaining the container ID\nCurrently, there's no documented way of getting data into the container while also retrieving its ID.\r\n\r\nThis isn't such a big issue if you use something like wget or ssh/sftp. However, this isn't possible if you don't use any network based transfer.\r\n\r\nI've tried various commands such as:\r\n```\r\ncat test.txt | docker run -i -d base cat\r\n```\r\nAll such attempts to get anything like this to work resulted in a) nothing was printed b) no file was transferred c) it just got stuck forever.\r\n\r\nCould we have such a function to do this? If there's a way to do this already, how can it be done?"
183,'vieux','"No such device" when the aufs module is not loaded (or absent)\nThis is a known issue when the aufs module is not loaded. This usually means you don\'t have the right version of the ubuntu linux kernel package installed.\r\n\r\nSee this discussion thread for details: https://groups.google.com/forum/?fromgroups=#!topic/docker-club/6kkEOIZmPfA'
143,'kencochrane',"141 142 update help fix\nUpdate the Help.\r\nSolve #141 and #142.\r\n@kencochrane I'll let you review the change and accept the pull request :)"
140,'kencochrane',"Make Push log more clear\nThe current output from the push command is a little confusing. When I first looked at the result, I though there was an issue because one of the last commands said the image is already up to date, and I mistook that as an error.\r\n\r\n```bash\r\n2013/03/23 18:59:13 docker push 8cf4cebc41774654\r\nPushing image 8cf4cebc41774654..\r\nPushing image [8cf4cebc41774654] on {https://registry.docker.io/v1/images/8cf4cebc41774654/json}\r\nPushing image [9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f] on {https://registry.docker.io/v1/images/9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f/json}\r\nThe image 9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f is already up to date on the registry.\r\nPushing image [e9aa60c60128cad1] on {https://registry.docker.io/v1/images/e9aa60c60128cad1/json}\r\nThe image e9aa60c60128cad1 is already up to date on the registry.\r\nPush completed\r\n```\r\n\r\nIt would be awesome if the output looked more like this.. If possible.\r\n\r\n```bash\r\nStarting Push for image '8cf4cebc41774654'\r\nTotal images to push: 3\r\n-------------------------------\r\nImage Push log:\r\n    [1/3] Pushing image 8cf4cebc41774654..\r\n    [1/3] Pushing image [8cf4cebc41774654] on {https://registry.docker.io/v1/images/8cf4cebc41774654/json}\r\n    [2/3] Pushing image [9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f] on {https://registry.docker.io/v1/images/9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f/json}\r\n    [2/3] The image 9e89cc6f0bc3c38722009fe6857087b486531f9a779a0c17e3ed29dae8f12c4f is already up to date on the registry.\r\n    [3/3] Pushing image [e9aa60c60128cad1] on {https://registry.docker.io/v1/images/e9aa60c60128cad1/json}\r\n    [3/3] The image e9aa60c60128cad1 is already up to date on the registry.\r\n-------------------------------\r\nPush Summary:\r\n   Images Skipped : 2\r\n   Images Pushed  : 1\r\n   Push Time      : 00:00:37\r\n   Push Size      : 8465KB\r\n   Status         : Success\r\n-------------------------------\r\nPush completed!\r\n```"
108,'shykes','can\'t see logs after restarting a stopped container\nIf you create a container, then stop it, and then start it back up, when you attach you see nothing.\r\n\r\nHere is the steps to reproduce\r\n\r\n   $ docker run busybox /bin/sh -c "while true; do echo hello world; sleep 1; done"\r\nabcxyz12\r\n\r\n   $ docker attach abcxyz12\r\n\r\nwill show lots of \'hello world\'s\r\n\r\n   $ docker stop abcxyz12\r\n\r\n   $ docker start abcxyz12\r\n\r\n   $ docker attach abcxyz12\r\n\r\nit will not show \'hello world\'\r\n'
83,'shykes',"Docker as a Vagrant provisioner\nVagrant has a concept of provisioners, to install and run software in the Vagrant box once it's deployed. Standard provisioners today include chef and puppet.\r\n\r\nDocker would be a great fit to install and run software on top of a Vagrant box."
68,'shykes','Publish smaller base image\nOur current base image is a vanilla quantal base image, built with the following command:\r\n\r\n    debootstrap quantal ./base\r\n\r\nThe resulting image is 194MB uncompressed.\r\n\r\nWe could make that image smaller by using a "minbase" variation:\r\n\r\n   debootstrap --variant=minbase quantal ./minbase\r\n\r\nThe resulting image is 105MB uncompressed, 34MB gzipped.'
51,'samalba',"Add an index to /var/lib/docker/containers\nDocker keeps a lot of data on the disk. Basically one directory per command.\r\n\r\nIt's really important to hash the container directories in order to not reach a critical amount of directories inside /var/lib/docker/containers.\r\n\r\nThe problem with directory hashing is that it'll be more difficult to list the containers (without walking the whole filesystem). It's then mandatory to index the directories (using a sqlite db?) to keep the ps command fast (and to limit this command to a certain number of containers by default)."
48,'shykes','Memorylimits\nImplemented memory limits #29 . Now you have a "-m" argument to set a limit.\r\n\r\nBy default, the "memory + swap" value is set to twice the size of the Memory limit. It\'s possible to disable the swap or change the swap value from the library (by setting the Config property `MemorySwap\')'
46,'kencochrane','add a docker --version option to print the version of the docker binary\nright now there is no easy way to know what version of docker you have installed, please add a --version flag.'
29,'samalba',"Memory limits\nDocker already uses cgroups. Let's take advantage of this and enable per-container limits on ram usage.\r\n\r\nDocker should expose the following per-container configuration:\r\n\r\n- Memory hard limit\r\n- Memory soft limit\r\n- OOM behavior\r\n"
28,'shykes',"Standalone mode\nDocker should be able to run in standalone mode, ie without a daemon running in the background. If possible the syntax should be the same in standalone mode and client mode.\r\n\r\nFor example: 'docker run -a base:e9cb4ad9173245ac /bin/ls' in standalone mode should fork and execute a new container, attach to it, and exit when it returns.\r\n\r\nOf course detached mode would not be possible in standalone mode.\r\n"
22,'vieux','Show size of images and containers\nFeature request from 1st meetup: "could you expose the size of images and containers on disk?"'
9233,'vbatts','Fix to avoid a compile error due to float to int truncation with GCCGO\nThe unit test `pkg/units/size_test.go` fails with GCCGO due to a compilation error:\r\n```\r\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$ go version\r\ngo version gccgo (GCC) 5.0.0 20141029 (experimental) linux/amd64\r\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$ go test\r\n# _/home/inagaki/upstream/src/github.com/docker/docker/pkg/units\r\n./size_test.go:28:43: error: floating point constant truncated to integer\r\n  assertEquals(t, "2.22 PB", HumanSize(2.22*PB))\r\n                                           ^\r\nFAIL    _/home/inagaki/upstream/src/github.com/docker/docker/pkg/units [build failed]\r\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$\r\n```\r\nAccording to [the discussion on GCC Bugzilla](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63812#c3), this is due to the difference between GCCGO and GC in the implementations of floating point constant expression. The [language](http://golang.org/ref/spec#Constant_expressions) specifies that a compiler raises an error when a floating point constant expression is truncated to integer, a precision of the internal representation is implementation-dependent. While my workaround is modifying `size_test.go` as:\r\n```\r\nassertEquals(t, "2.22 PB", HumanSize(int64(float64(2.22*PB))))\r\n```\r\n, is it better to modify the parameter of `HumanSize()` from `int64` to `float64` like `BytesSize()`?\r\nSigned-off-by: Tatsushi Inagaki <e29253@jp.ibm.com>'
9227,'SvenDowideit','Add an example of how to add your client IP to the container hosts file\nSigned-off-by: Sven Dowideit <SvenDowideit@home.org.au>\r\n\r\ninspired by #8395 - thankyou to @lwoodson '
9013,'erikh','Proposal: Container annotations (metadata)\nThis PR describes "Container annotations", that is, metadata for containers.\r\n\r\n## Motivation\r\n\r\nThe motivation for annotations is to be able to "hang" values on a container so that clients -- e.g., plugins -- can examine them and react accordingly. For example, a weave plugin might attach a container to the weave network based on a `weaveIPs` attribute.\r\n\r\nAttributes can be set while the container is running, and are visible to consumers of the remote API and to command-line tooling, but not in general from within the container.\r\n\r\n## Synopsis\r\n\r\nCommand line:\r\n\r\n```bash\r\n# Run a container with an annotation\r\nINSTANCE=$(docker run -ti --annotate example.com/animal=Dog ubuntu)\r\n# Annotate a container (whether it\'s running or not)\r\ndocker annotate example.com/animal Fox $INSTANCE\r\n# Get an annotation\r\ndocker inspect --format=\'{{ index .Annotations "example.com" "animal" }}\' $INSTANCE\r\n```\r\nNB that annotation get JSON literals, so some values will require quoting; I\'ll discuss that below.\r\n\r\n`Dockerfile`:\r\n\r\n```\r\nANNOTATE example.com/animal Goat\r\n```\r\n\r\n## Design choices\r\n\r\n### Keys\r\n\r\nKeys are namespaced labels `<domain>/<id>`, where the `<id>` has no structure (i.e., no dots). This is to line up with e.g., Kubernetes\' idea of annotation and label keys.\r\n\r\nAlthough there\'s no structure to keys when *setting* annotations, the values may be maps and arrays, and you can reach down into them with the `format` argument.\r\n\r\n```bash\r\ndocker annotate example.com/animals \'["deer", "otter", "seal"]\' $INSTANCE\r\ndocker inspect --format=\'{{ index .Annotations "example.com" "animals" 0 }}\' $INSTANCE\r\n```\r\n\r\n### JSON values\r\n\r\nValues are JSON literals. This will often necessitate quoting, which can be awkward. The upside is that you can have structured values, like lists of labels or IP addresses or animals.\r\n\r\nAnything that *can\'t* be parsed as a JSON literal is interpreted as a string -- but care needs to be taken here, since null, numbers and booleans look like strings without the quotes. Anything that\'s not a hard-coded value, e.g., variables in scripts, should always be quoted if it\'s intended as a string.\r\n\r\n### Update semantics\r\n\r\nThe given semantics eschew transactions and fine-grained operations; you can inspect an annotation then set it, or you can just stomp on whatever value it has already; but there\'s no operation for say, adding an entry to an array-valued annotation, atomically. This is to keep things simple to implement and script, mainly.\r\n\r\n### null for delete\r\n\r\nThe literal `null` is used to remove an annotation. This is consistent with what you get if you ask `docker inspect` for a field that doesn\'t exist -- i.e., `null` means missing.\r\n\r\n### Events\r\n\r\nThere\'s an event `"update"` that gets fired whenever container annotations are changed. This is so that clients can react to changes in whatever annotations they were interested in.\r\n\r\nIt doesn\'t carry any additional information: clients are expected to go and look for a new value and react accordingly. Possibly the key could be included in the event, so clients don\'t end up spamming docker inspect.\r\n'
9006,'vbatts',"Thin pool improvements\nRebased ontop of @rhvgoyal's changes.  This pull request provides:\r\n1) small udev scanning fix for the case where docker creates the thin-pool\r\n2) new --storage-opt dm.thinpooldev to allow an admin to create/manage the thin-pool that docker uses outside of docker."
8997,'erikh','Proposal: Networking v2\nThis proposal is an alternative to https://github.com/docker/docker/issues/8952.  Networking is tricky thing.  They\'re multiple ways to skin that cat.  The intention of this proposal is to define how we can rework the internals of Docker with respect to networking.   Before and after the implementation of this proposal, Docker should look and behave the same from a user perspective.  This proposal lays the groundwork for more networking modes, dynamic functionality, and cross server networking.\r\n\r\nTo quote @shykes, "The Docker API should be used to consume infrastructure - not define it."  Following this principal, the intention is to not expand the API of Docker such that users can supply all the information needed to address all the various networking modes that could exist.  For example, we do not want to dirty up the Docker API by adding bridge, mac address, VLAN ID, etc.  These are infrastructure concepts and should be delegated to a lower layer.  We should instead focus on hooks and plugins that will allow people to extend Docker and control these low level implementation details.\r\n\r\nBefore we can get into the guts of how I propose we rework the guts of Docker, we must first clearly define the higher level concepts that are defined to the user.\r\n\r\n## Concepts\r\n\r\nBeyond network, links, and ports, no other concepts are exposed to the user to control the network.  This simplicity is by design as we wish to keep the user exposed networking concepts as high level as possible as to allow more flexibility in the lower infrastructure layers.\r\n\r\n### Network\r\n\r\nCurrently Docker has the concept of a network mode.   At the run call you can say `docker run -net none|host|container|bridge`.  Whether one calls this "network" or "network mode," the implementation is the same, but I prefer to call it network (very minor detail).\r\n\r\nThe network is specified by a single string.  Currently Docker supports four values: none, host, container:id, or bridge.  One could imagine as we expand the networking of Docker we could support ovs, vxlan, bob, alice, dev, and prod.  The point being is that the value is some logical name that corresponds to a networking environment.  For example, when one is deploying their application they could say `-net prod` and that would go to a production network, or `-net pci-compliant` and that goes to a PCI compliant network.  The key idea is that the application owner does not need to have extensive knowledge of the underlying networking infrastructure but instead they can choose "network A" or "network B".  The underlying networking plugins to Docker can then setup the correct values for the user.\r\n\r\n### Links\r\n\r\nDocker currently gives the ability to link two containers together.  This provides a basic yet very powerful form of service discovery.  Linking today is based on ports.  Port based linking is going to be deprecated and going forward the focus will be on IP based linking discovered through DNS (https://github.com/docker/docker/pull/8138).  This means that links will be looked up by name through DNS to resolve to an IP.  That IP should route to the target container.  This change to IP based linking means that the EXPOSE declarations in the Dockerfile are no longer taken into consideration for links (except for legacy compatibility).\r\n\r\nDocker should allow for dynamically changing, adding, and deletion of links.\r\n\r\n### Ports\r\n\r\nPorts are used as a way to expose the application ports to the hosts network.  If the port is not exposed it is assumed to be private from outside non-container traffic.\r\n\r\n## Implementation\r\n\r\n### Hooks\r\n\r\nThe expectation is that this change will come after Plugins (https://github.com/docker/docker/pull/8968).  While the below implementation describes interfaces, the same interface can be exposed to a hook through libchan and messages.\r\n\r\n### libnetwork\r\n\r\nThe majority of networking functionality should be moved to a new library called libnetwork.  This means code from Docker and libcontainer will move to libnetwork.  Both Docker and libcontainer should treat networking in an opaque fashion.  Docker will know about the user level constructs of network, link, and ports, but the data structures will be largely opaque.  libcontainer will also not be involved in networking except that it will launch a container in a network namespace setup by libnetwork.\r\n\r\n### Data Structures\r\n\r\n`NetworkSettings`, `Port`, `PortMap` and any other supporting data structure in Docker will move to libnetwork.  Docker will depend on libcontainer and libnetwork.  There will be no dependency between libcontainer and libnetwork.  The existing data structures will largely remain as they are today except that a generic `Data` field of type `map[string]interface{}` will be added to `NetworkSettings` and `PortMap` to allow network drivers to track additional information.  The contents of `Data` should be ignored by Docker.\r\n\r\n### Network Driver\r\n\r\nThe key abstraction in libnetwork will be the NetworkDriver.  Below is the interface as I\'ve currently defined it.  If needed we can decompose the interface to more interfaces if we feel it is too large in scope.\r\n\r\n```go\r\ntype NetworkDriver interface {\r\n    Create(containerID string, networkSettings *NetworkSettings) error\r\n    Start(containerID string, networkSettings *NetworkSettings) (Namespace, error)\r\n    Stop(containerID string, networkSettings *NetworkSettings) error\r\n    Destroy(containerID string, networkSettings *NetworkSettings) error\r\n    Link(fromContainerID string, fromNetworkSettings *NetworkSettings, toContainerID string, networkSettings *NetworkSettings) error\r\n    Unlink(fromContainerID string, fromNetworkSettings *NetworkSettings, toContainerID string, networkSettings *NetworkSettings) error\r\n    ExposePort(containerID string, networkSettings *NetworkSettings, port Port, binding *PortBinding) error\r\n    UnexposePort(containerID string, networkSettings *NetworkSettings, port Port, binding *PortBinding) error\r\n    Supports(network string) bool\r\n    Initialize() error\r\n}\r\n```\r\n\r\n#### Network Driver Lookup\r\n\r\nThe network driver is looked up based off of the value to the `-net` parameter.  Docker will iterate through all registered `NetworkDriver`s calling `Supports(string)`.  The first driver that returns true is used.  The implication of this behavior is that Docker can support multiple networking drivers at the same time.\r\n\r\n#### Container IDs\r\n\r\nContainers in libnetwork are represented by ID only.  Since libnetwork does not depend on Docker, no Docker data structures are used.  The container ID should be sufficient for tracking as the rest of the fields in `Container` should be arbitrary to the networking code.\r\n\r\n#### Create()\r\n\r\nWhen the create remote API on Docker is called, the container ID and an empty `NetworkSettings` object will be passed in to the `NetworkDriver` that was discovered based on the `-net` parameter.  The `NetworkDriver` should populate as many of the fields as applicable.  Some fields, like `Bridge` may not always be application and can be left empty.  The `NetworkDriver` should perform at this time any allocation tasks and pre-setup tasks, saving whatever state it needs in the `Data` field of `NetworkSettings`.   After the call to `Create()`, Docker should eventually persist the resulting NetworkSettings into the `config.json`\r\n\r\n#### Start()\r\n\r\nWhen a container is started `Start()` is called.  It is not expected that the contents `NetworkSettings` will be modified at this time, but it is possible that `Start()` could change the contents of `NetworkSettings`.  If the contents are changed there is no guarantee that the contents of the change will be persisted to `config.json`.  `Start()` should return a reference to the network namespace that should be used.  The technical details of how the reference to the namespace will be passed around through hooks and on to libcontainer are not yet explored.\r\n\r\n#### Stop()\r\n\r\nWhen a container is stopped or found to not exist and cleanup is being performed, `Stop()` should be called.\r\n\r\n#### Destroy()\r\n\r\nWhen a container is removed as a result of a `docker rm`, `Destroy()` should be called.  It is expected the `NetworkDriver` will release any resources that the container holds at that time.  A network driver is free to release resources on `Stop()` too as long as it has logic in `Start()` to acquire new resources.  That is an implementation detail, but it is preferred that deallocation happens soly in the `Destroy()` method.\r\n\r\n#### Link()\r\n\r\nBefore `Start()` on the `NetworkDriver` is called, `Link()` should be called to perform whatever logic is needed to link two containers.  Once dynamic links are implemented the `Link()`  method can be called on a running container.\r\n\r\n#### Unlink()\r\n\r\nRight after `Stop()` is called, `Unlink()` should be called for all applicable links.  For dynamic links `Unlink()` can be called on a running container.\r\n\r\n#### ExposePort()\r\n\r\nBefore `Start()` on the `NetworkDriver` is called, `ExposePort` should be called to perform whatever logic is needed to expose the ports.  Once dynamic ports are implemented the `ExposePort()`  method can be called on a running container.\r\n\r\n#### UnexposePort()\r\n\r\nRight after `Stop()` is called, `UnexposePort()` should be called for all applicable ports.  For dynamic ports `UnexposePort()` can be called on a running container.\r\n\r\n#### Supports()\r\n\r\n`Supports()` is called whenever a `NetworkDriver` needs to be discovered for a container.  The value of `-net` is the value that is passed.  As you can infer, there should be at least four NetworkDrivers in Docker by default for "none", "host", "container:id", and "bridge."\r\n\r\n#### Initialize()\r\n\r\nWhen Docker first starts initialize() should be called on each `NetworkDriver`.\r\n\r\n## libcontainer\r\n\r\nChanges to libcontainer will obviously need to be done.  All of the `netlink` and `network` packages should be removed.  Additionally on container start the network namespace to use must be communicated to libcontainer.\r\n\r\n### nsinit\r\n\r\n`nsinit` is a useful tool in itself.  Since networking is being removed from libcontainer it seems like nsinit should depend on libcontainer and libnetwork.  There could be a `NetworkSettings` field added to the `container.json` such that when `nsinit` loads the `container.json` it can pick up that information and send it to `NetworkDriver.Start()` to create the network namespace and then pass that network namespace to libcontainer.\r\n\r\n## Wrap up...\r\n\r\nFor sure there are many technical details that are not covered in this write up, but hopefully the general approach seems okay.  The proposed steps forward would be to refactor internally in version 1.X such that no user functionality is changed at all.  In version 1.(X+1) we can then start adding more networking functionality.'
8994,'SvenDowideit','docker build image can not support curl with ssh tunnel\nHi All,\r\n\r\nI am setting up the docker build environment. There is a step in docker makefile that:\r\n\r\ndocker build -t "docker:master" .\r\n\r\nand in the dockerfile, it need install golang as followed:\r\n\r\n# Install Go\r\nRUN    curl -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\r\n\r\nUnfortunately, I can not directly visit golang from local so I setup a ssh tunnel and I can successfully vist the go source file through the pipe by command " curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz". And then, I change the dockerfile as:\r\n\r\n# Install Go\r\nRUN    curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\r\n\r\nBut it failed by:\r\n\r\nStep 5 : RUN curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\r\n ---> Running in 00ea81fe6596\r\ncurl: (7) Failed to connect to 127.0.0.1 port 9090: Connection refused\r\n\r\nIt seems that docker build running in different network stacks as my host. Is there any idea to help resolve it?'
8985,'fredlf','Add a "Known Issues" section to the release notes\nI\'m looking for a way to get a list of bugs or issues that we know about, but aren\'t fixed yet, that have some impact on the users. The list would get added to the release notes page in the docs. Ultimately, I want to make something similar to this: https://docs.puppetlabs.com/pe/latest/release_notes.html#known-issues. That way, users and other interested parties can go to a single place to see what was built and fixed for a given release. Consolidating known issues on a page makes maintenance much easier and provides a URL to point people to if an issue effects something described elsewhere in the docs.\r\n\r\nHere\'s an example of the sort of thing that would go in this section:\r\n\r\n* Due to changes in the registry, `docker pull` will not automatically pull all aliases of an image. For more information, see issue [#8689](https://github.com/docker/docker/issues/8689)'
8973,'erikh','after installed the docker panic: runtime error: index out of range\nAfter I have installed the docker-io on CentOS6.5 and try run docker command , got this error . \r\n\r\n[root@iZ28bz1dcuuZ]# docker\r\npanic: runtime error: index out of range\r\n\r\ngoroutine 16 [running]:\r\nruntime.panic(0xa02080, 0xfd673c)\r\n\t/usr/lib/golang/src/pkg/runtime/panic.c:279 +0xf5\r\nmain.main()\r\n\t/builddir/build/BUILD/docker-1.2.0/docker/docker.go:99 +0x9ff\r\n\r\ngoroutine 19 [finalizer wait]:\r\nruntime.park(0x4189e0, 0xfef688, 0xfdaf89)\r\n\t/usr/lib/golang/src/pkg/runtime/proc.c:1369 +0x89\r\nruntime.parkunlock(0xfef688, 0xfdaf89)\r\n\t/usr/lib/golang/src/pkg/runtime/proc.c:1385 +0x3b\r\nrunfinq()\r\n\t/usr/lib/golang/src/pkg/runtime/mgc0.c:2644 +0xcf\r\nruntime.goexit()\r\n\t/usr/lib/golang/src/pkg/runtime/proc.c:1445\r\n\r\ngoroutine 20 [syscall]:\r\nos/signal.loop()\r\n\t/usr/lib/golang/src/pkg/os/signal/signal_unix.go:21 +0x1e\r\ncreated by os/signal.init·1\r\n\t/usr/lib/golang/src/pkg/os/signal/signal_unix.go:27 +0x32\r\n\r\ngoroutine 17 [syscall]:\r\nruntime.goexit()\r\n\t/usr/lib/golang/src/pkg/runtime/proc.c:1445\r\n\r\ngoroutine 22 [runnable]:\r\ntext/template/parse.lexText(0xc208052900, 0xbcf070)\r\n\t/usr/lib/golang/src/pkg/text/template/parse/lex.go:228 +0x381\r\ntext/template/parse.(*lexer).run(0xc208052900)\r\n\t/usr/lib/golang/src/pkg/text/template/parse/lex.go:198 +0x40\r\ncreated by text/template/parse.lex\r\n\t/usr/lib/golang/src/pkg/text/template/parse/lex.go:191 +0x112'
8951,'erikh','Proposal: Native Docker Multi-Host Networking\n## Native Docker Multi-Host Networking\r\n\r\n### TL;DR Practical SDN for Docker\r\n\r\nAuthors: @dave-tucker, @mavenugo and @nerdalert.\r\n\r\n* [Background] (#background)\r\n* [Problem Statement](#problem-statement)\r\n* [Solution Components] (#solution-components)\r\n* [Proposal](#proposal)\r\n* [Single Host Network Deployment Scenarios] (#single-host-network-deployment-scenarios)\r\n* [Multi Host Network Deployment Scenarios] (#multi-host-network-deployment-scenarios)\r\n* [Summary](#summary)\r\n\r\n## Background\r\n\r\nApplication virtualization will have a significant impact on the future of data center networks. Compute virtualization has driven the edge of the network into the server and more specifically the virtual switch. The compute workload efficiencies derived from Docker containers will dramatically increase the density of network requirements in the server. Scaling this density will require reliable network fundamentals, while also ensuring the developer has as much or little interaction with the network as is desired. \r\n\r\nA tightly coupled and native integration to Docker will ensure there is a base functionality that capable of integrating into the vast majority of data center network architectures today and help reduce the barriers to Docker adoption for the user. Just as important for the diverse user base, is making Docker networking dead simple for the to integrate, provision and troubleshoot.\r\n\r\nThe first step is a Native Docker Networking solution today that can handle Multi-Host environment which scales to production requirements and that works well with the existing network deployments / operations. \r\n\r\n## Problem Statement\r\n\r\nThough there are a few existing multi-host networking solutions, they are currently designed more as over-the-top solutions on top of Docker that either:\r\n\r\n1. Address a specific use case\r\n2. Address a specific orchestration system deployment\r\n3. Do not scale to the production requirements\r\n4. Do not work well with existing production network and operations.\r\n\r\nThe core of this proposal is to bring multi-host networking as a native part of Docker that handles most of the use-cases, scales and works well with the existing production network and operations. With this provided as a native Docker solution, every orchestration system can enjoy the benefits alike.\r\n\r\nThere are three ways to approach multi-host networking in docker:\r\n\r\n1. NAT-based\xa0: Just hide the containers behind the docker host IP address. Job Done.\r\n2. IP-based\xa0Each container should have it’s own unique IP address\r\n3. Hybrid.\xa0A mix of the above\r\n\t\r\n**NAT-based**\r\n\r\nThe first option (NAT-based) works by hiding the the containers behind a Docker Host IP address. The TCP port exposed by a given Docker container is mapped to an unique port on the Host machine. \r\n\r\nSince the mapped host port has to be unique, containers using well-known port numbers are therefore forced to use ephemeral ports. This adds complexity in network operations, network visibility, troubleshooting and deployment.\r\n\r\nFor example, the configuration of a front-end load-balancer for a DNS service hosted in a Docker cluster.\r\n\r\n*Service Address:*\r\n\r\n- 1.2.3.4:53\r\n\t\r\n*Servers:*\r\n\r\n- 10.1.10.1:65321\r\n- 10.36.45.2:64123\r\n- 10.44.3.1:54219\r\n\r\nIf you have firewalls or IDS/IPS devices behind the load-balancer, these also need to know that the DNS service is being hosted on these devices and port numbers. \r\n\r\n**IP-based**\r\n\r\nThe second option (IP-based) works by assigning unique IP-Addresses to the containers and thus avoiding the need to do Port-mapping, and solving issues with downstream load-balancers and firewalls by\xa0using well-known ports in pre-determined\xa0subnets. \r\nHowever, this exposes different sets of issues.\r\n\r\n* \t***Reachability***: Which containers are on which host?*\r\n\t* GCE uses a /24 per host for this reason, but solutions outside of GCE will require an overlay network like Flannel\r\n\t* Even a GCE style architecture will make firewall management difficult\r\n\r\n\r\n* **Flexible Addressing / IP Address Management** (IPAM)*\r\n\t* Who assigns IP addresses to containers\r\n\t\t* Static?\xa0A flag in `docker run`?\r\n\t\t* DHCP/IPAM?\xa0A proper DHCP server or IPAM solution?\r\n\t\t* Docker?\xa0A local DHCP solution using Docker?\r\n\t\t* Orchestration System?\xa0via `docker run` or another API?\r\n\r\n* **Deployability and migration concerns**\r\n\t* Some clouds do not play well with routers (like EC2)\r\n\r\n## Proposal\r\n\r\nWe are proposing a Native Multi-Host networking solution to Docker that handles various production-grade deployment scenarios and use cases. \r\n\r\nThe power of Docker is its simplicity, yet it scales to the demands of hyper-scale deployments. The same cannot be said today for the native networking solution in Docker. This proposal aims to bridge that gap. The intent is to implement a production-ready reliable multi-host networking solutions that is native to Docker while remaining laser focused on the user friendly needs of the developers environment that is at the heart of the Docker transformation.\r\n\r\nThe new edge of the network is the vSwitch. The virtual port density that application virtualization will drive is an even larger multiplier then the explosion of virtual ports created by OS virtualization. This will create port density far beyond anything to date. In order to scale, the network cannot be seen as merely the existing physical spine/leaf 2-tier physical network architecture but also incorporate the virtual edge. Having Docker natively incorporate clear scalable architectures will avoid the all too common problem of the network blocking innovation.\r\n\r\n## Solution Components\r\n\r\n**1. Programmable\xa0vSwitch**\r\n\r\nTo implement this solution we require a programmable vSwitch.\r\nThis will allow us to configure the necessary bridges, ports and tunnels to support a wide range of networking use cases.\r\n\r\nOur initial focus will be to develop an API to implement the primitives required of the vSwitch for multi-host networking with a focus on delivering an implementation for Open vSwitch first.\r\n\r\nThis link, [*WHY-OVS*](https://github.com/openvswitch/ovs/blob/master/WHY-OVS.md) covers the rational for choosing OVS and why it is important to the Docker ecosystem and virtual networking as a whole. Open vSwitch has a mature Kernel Data-Plane (upstream since 3.7) with a rich set of features that addresses the requirements of mult-host. In addition to the data-plane performance and functionality, Open vSwitch also has an integrated management-plane called OVSDB that abstracts the Switch as a Database for the applications to make use of.\r\n\r\nWith this proposal the native implementation in Docker will:\r\n\r\n* Provide an API for implementing Multi-Host Networking\r\n* Provide an implementation for an Open vSwitch datapath\r\n* Implement native control plane to address the scenarios mentioned in this proposal.\r\n\r\n**2. Network Integration**\r\n\r\nThe various scenarios that we will deal with in this proposal range between existing Port-Mapping solution to VXLAN based Overlays to Native underlay network-integration. There are real deployment scenarios for each of these use-cases / scenarios.\r\n\r\nFacilitate the common application HA scenario of a service needing a 1:1 NAT mapping between the container’s back-end ip-address and a front-end IP address from a routable address pool. Alternatively, the containers can also be reachable globally depending on the users IP addressing strategy.\r\n\r\n**3. Flexible Addressing / IP Address Management (IPAM)**\r\n\r\nIn a multi-host environment, IP Addressing Strategy becomes crucial. Some of the Use-cases, as we will see, will also require reasonable IPAM in place. This discussion will also lead to the production-grade scale requirements of Layer2 vs Layer3 networks.\r\n\r\n**4. Host Discovery**\r\nThough it is obvious, it is important to mention the Host Discovery requirements that is inherent for any Multi-host solution. We believe that such Host/Service Discovery mechanism is a generic requirement and is not specific to the Multi-Host networking needs and as such we are backing the Docker Clustering proposal for this purpose. \r\n\r\n**5. Multi-Tenancy**\r\nAnother important consideration is to provide the architectural white-space for Multi-Tenancy solutions that may either be introduced in Docker Natively or by external orchestration systems.\r\n\r\n## Single Host Network Deployment Scenarios\r\n\r\n* Parity with existing Docker Single-Host solution\r\n\r\nThis is the native Single-Host Docker Networking model as of today. This is the most basic scenario that the solution that we are proposing must address seamlessly. This scenario brings in the basic Open vSwitch integration into Docker which we can build on top of for the Multi-Host scenarios that follows.\r\n\r\n**Figure - 1**\r\n\r\n![*Figure - 1*](https://cloud.githubusercontent.com/assets/1711674/4904734/ca8083e8-6449-11e4-8ff7-4cb6fb251a4f.png)\r\n\r\n * Addition of Flexible Addressing\r\n\r\nThis scenario adds a Flexible Addressing scheme to the basic single-host use-case where we can provide IP addressing from one of many different sources\r\n\r\n**Figure -  2**\r\n\r\n![*Figure - 2*](https://cloud.githubusercontent.com/assets/1711674/4904747/deff6dde-6449-11e4-84a6-6a89f196686a.png)\r\n\r\n## Multi Host Network Deployment Scenarios\r\n\r\nThis following scenarios enables backend Docker containers to communicate with one another across multiple hosts. This fulfills the need for high availability applications to survive beyond a single node failure.\r\n\r\n* Overlay Tunnels (VXLAN, GRE, Geneve, etc.)\r\n\r\nFor environments which need to abstract the physical network, overlay networks need to create a virtual datapath using supported tunneling encapsulations (VXLAN, GRE, etc). It is just as important for these networks to be as reliable and consistent as the underlying network. Our experience leads us towards using similar consistency protocol such as a tenant aware BGP in order to achieve the worry free environment developers and operators desire. This also presents an evolvable architecture if a tighter coupling into the native network is of value in the future.\r\n\r\nThe overlay datapath is provisioned between tunnel endpoints residing in the Docker host which gives the appearance of all hosts within a given provider segment being directly connected to one another as depicted in the following Diagram 3.\r\n\r\n**Figure -  3**\r\n\r\n![*Figure -  3*](https://cloud.githubusercontent.com/assets/1711674/4904762/0f15a47a-644a-11e4-9077-7695c9210550.png)\r\n\r\nAs a new container comes online, the prefix is updated in the routing protocol announcing its location via a tunnel endpoint. As the other Docker hosts receive the updates the forwarding is installed into OVS for which tunnel endpoint the host resides. When the host is deprovisioned, the similar process occurs and tunnel endpoint Docker hosts remove the forwarding entry for the deprovisioned container.\r\nUnderlay Network Integration\r\n\r\n* Underlay Network integration\r\n\r\nThe backend can also simply be bridged into a networks broadcast domain and rely on upstream networking to provide reachability. Traditional L2 bridging has significant scaling issues but it is still very common in many data centers with flat VLAN architectures to facilitate live workload migrations of their VMs.\r\n\r\nThis model is fairly critical for DC architectures that require a tight coupling of network and compute as opposed to a ships in the night design of overlays abstracting the physical network.\r\n\r\nThe underlay network integration can be designed with some specific network architecture in mind and hence we see models like Google Compute where every host is assigned a dedicated Subnet & each pod gets an ip-address from that subnet.\r\n\r\n**Figure -  4** - Dedicated one Static Subnet per Host*\r\n\r\n![*Figure -  4*](https://cloud.githubusercontent.com/assets/1711674/4904780/288df77c-644a-11e4-8a1a-5052a5084186.png)\r\n\r\nThe entire backend container space can be advertised into the underlying network for IP reachability. IPv6 is becoming attractive for many in this scenario due to v4 constraints.\r\n\r\nBy extending L3 to the true edge of the network in the vSwitch it enables a proven network scale while still retaining the ability to perform disaggregated network services on the edge. Extending gateway protocols to the host will play a significant role in scaling a tight coupling to the network architecture.\r\n\r\nAlternatively, Underlay integration can also provide Flexible addressing combined with /32 host-updates to the network in order to provide the subnet flexibility.\r\n\r\n**Figure -  5**\r\n\r\n![*Figure -  5*](https://cloud.githubusercontent.com/assets/1711674/4904787/4690b7be-644a-11e4-974e-e1874d26e567.png)\r\n\r\n## Summary\r\n\r\nImplementing the above solution provides a flexible, scalable, multi-host networking as a native part of Docker. This implementation adds a strong networking foundation that is intent on providing an evolvable network architecture for the future.'
8926,'jfrazelle','Docker rmi with dangling=true unsafe while images are being pulled\nI was reading the docker documentation (https://docs.docker.com/reference/commandline/cli/), and noticed the following recommendation for batch clean up of dangling images:\r\n\r\n```\r\nsudo docker rmi $(sudo docker images -f "dangling=true" -q)\r\n```\r\n\r\nI was excited when I saw the dangling=true filter since having large numbers of dangling images was creating problems in our build environment. However, I believe this command is unsafe while pulling images since there there are brief points while images are being pulled when docker considers them dangling. To test this, I ran a script which simply pulls 10 images from our private registry, one after another. While this was running I ran the following command in a separate terminal:\r\n\r\n```\r\nwhile true; do docker rmi $(docker images -q -f "dangling=true"); sleep 1; done\r\n```\r\n\r\nI noticed that during the pull process, images were being occasionally deleted. Assuming the pull was successful, I will sometimes tag the image from `<private_registry>/<name>` to just `<name>`. After the end of the pull, all images are listed when I run `docker images`, however when I try to run an affected image, I see something like this:\r\n\r\n```\r\nstack@bc03:~$ docker run -ti cassandra\r\nUnable to find image \'cassandra\' locally\r\nPulling repository cassandra\r\n2014/11/03 08:36:01 Error: image library/cassandra not found\r\n```\r\n\r\nThe image cannot be found since it was retagged to remove the `<private_registry>` part of the name. My hope was that I could run this command automatically every day to clean up any dangling images, but that is not possible since I may accidentally destroy images that are being pulled.\r\n\r\nI believe that the dangling=true filter should not show images or components of images that are in the process of being pulled...\r\n'
8886,'crosbymichael','docker metrics (read metrics from cgroups for specified container)\nFixes #8842.\r\n\r\nThis is first and very simple implementation of docker metrics command. A lot of work needed to push it to production.\r\n\r\nRoadmap:\r\n\r\n* make find of cgroup paths more reliable (not just try to search predefined locations, but get exact value from procfs)\r\n* specify set of metrics (from `cpuacct`, `memory`, `blkio`, ... controllers)\r\n* store metrics in `struct` instead of `map[string]string` (typed data)\r\n* `-f FORMAT` support\r\n* documentation\r\n\r\nPS. PR created for further discussion and this branch will be constantly updated.\r\n\r\n/cc @shykes @tobegit3hub @thaJeztah'
8827,'tiborvass','Make `FROM scratch` a special cased \'no-base\' spec\nMake `FROM scratch` a special cased \'no-base\' spec\r\n\r\nThere has been a lot of discussion (issues 4242 and 5262) about making\r\n`FROM scratch` either a special case or making `FROM` optional, implying\r\nstarting from an empty file system.\r\n\r\nThis patch makes the build command `FROM scratch` special cased from now on\r\nand if used does not pull/set the the initial layer of the build to the ancient\r\nimage ID (511136ea..) but instead marks the build as having no base image. The\r\nnext command in the dockerfile will create an image with a parent image ID of "".\r\nThis means every image ever can now use one fewer layer!\r\n\r\nThis also makes the image name `scratch` a reserved name by the TagStore. You\r\nwill not be able to tag an image with this name from now on. If any users\r\ncurrently have an image tagged as `scratch`, they will still be able to use that\r\nimage, but will not be able to tag a new image with that name.\r\n\r\nGoodbye \'511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\',\r\nit was nice knowing you.\r\n\r\nFixes #4242\r\n'
8771,'SvenDowideit','Cannot build docs/Dockerfile without Makefile\nBecause of the `VOLUME` , and `GIT_COMMIT` files you cannot build this dockerfile without the make file.  This should not be the case because the automated build system cannot create these containers for us.  We should either check in stubs of these files or modify the script not to fail'
8721,'erikh','/etc/hosts not updated for aliased links\nThe new updating of /etc/hosts when the linked container is restarted looks like a really nice feature, but there seems to be a bug when an alias is used with the link name.\r\n\r\nThe code appears to update the entry in /etc/hosts based on the name of the container, rather than its alias within the parent container.\r\n\r\nSo this works: `docker run --link foo:foo` because the container name and alias are the same.  When the "foo" container is restarted the hosts entry for "foo" is updated.\r\n\r\nHowever, `docker run --link foo:bar` does not work with the host updating.  When the "foo" container is restarted, the code looks for "foo" in the /etc/hosts file, and since it\'s not there it doesn\'t change the hosts file.  It should be looking instead for "bar" in /etc/hosts, since that\'s the alias used within this container.\r\n\r\nThe test case included with #7677 runs docker with the args `"--link", "c1:c1"` so it doesn\'t check this case when the link is given another alias.'
8560,'erikh',"COPY changes ownership to root:root if file is placed in subdirectory of parent directory\nIssue spotted during creation of custom build for RabbitMQ.\r\nHere's simple example to reproduce the issue.\r\nOwnerships of /var/lib/rabbitmq resets to root:root even though /var/lib directory doesn't get any new files via COPY.\r\n \r\n```Dockerfile\r\nFROM ubuntu:14.04\r\nRUN groupadd rabbitmq && useradd rabbitmq -g rabbitmq\r\nRUN mkdir -p /var/lib/rabbitmq/mnesia/ && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq && ls -al /var/lib/|grep rabbitmq\r\nCOPY files/ /\r\nRUN ls -al /var/lib/|grep rabbitmq\r\n```\r\n\r\nBuild log for the image:\r\n```\r\n$ tree -a files/\r\nfiles/\r\n└── var\r\n    └── log\r\n        └── supervisor\r\n            └── .dummy\r\n\r\n3 directories, 1 file\r\n$ docker build --no-cache .\r\nSending build context to Docker daemon  5.12 kB\r\nSending build context to Docker daemon\r\nStep 0 : FROM ubuntu:14.04\r\n ---> 6b4e8a7373fe\r\nStep 1 : RUN groupadd rabbitmq && useradd rabbitmq -g rabbitmq\r\n ---> Running in 083354b2a3e0\r\n ---> 23b3a762a3ba\r\nRemoving intermediate container 083354b2a3e0\r\nStep 2 : RUN mkdir -p /var/lib/rabbitmq/mnesia/ && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq && ls -al /var/lib/|grep rabbitmq\r\n ---> Running in 52e2e5ff2efa\r\ndrwxr-xr-x  3 rabbitmq rabbitmq 4096 Oct 14 15:19 rabbitmq\r\n ---> 3afde5c410c4\r\nRemoving intermediate container 52e2e5ff2efa\r\nStep 3 : COPY files/ /\r\n ---> ee48f6e53a62\r\nRemoving intermediate container d59bea0d777f\r\nStep 4 : RUN ls -al /var/lib/|grep rabbitmq\r\n ---> Running in b7eab4d7388a\r\ndrwxr-xr-x  4 root root 4096 Oct 14 15:19 rabbitmq\r\n ---> e6407d95cbc5\r\nRemoving intermediate container b7eab4d7388a\r\nSuccessfully built e6407d95cbc5\r\n```\r\nMy setup\r\n--\r\n```\r\nUbuntu 14.04.1 LTS\r\nLinux jablomac-pc 3.13.0-38-generic #65-Ubuntu SMP Thu Oct 9 11:36:50 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nClient version: 1.2.0\r\nClient API version: 1.14\r\nGo version (client): go1.3.1\r\nGit commit (client): fa7b24f\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.2.0\r\nServer API version: 1.14\r\nGo version (server): go1.3.1\r\nGit commit (server): fa7b24f\r\nContainers: 5\r\n\r\nImages: 514\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Dirs: 524\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-38-generic\r\nOperating System: Ubuntu 14.04.1 LTS\r\nDebug mode (server): false\r\nDebug mode (client): true\r\nFds: 10\r\nGoroutines: 12\r\nEventsListeners: 0\r\nInit Path: /usr/bin/docker\r\nWARNING: No swap limit support\r\n```\r\n"
8533,'erikh','Support for "proxy" environment variables for building containers\nI am looking for a way to specify "proxies" at `docker build`-time.\r\n\r\nI know that injecting environment variables or volumes at build-time is frowned upon because it makes the build host-specific and non-reproducible (see #6822 for example) ; however when these environment variables are used to specify http proxies (or similar, that do not alter the files used to build the container) I feel this is legitimate use.\r\n\r\nTo give some context, I am living in Myanmar where the best Internet connection is spotty at best ; my main problem right now to pass the "bundle install" part of my `Dockerfile` without connection reset or DNS errors.\r\n\r\nFor non-https resources, I can work around the issue using a squid proxy and firewall rules. However, for `https://rubygems` I cannot because the source is https, so intercepting traffic to it would result in SSL certificate validation errors. When developing outside of Docker I can tell bundler to use a mirror using `bundler config. bundle config mirror.https://rubygems.org http://my.rubygems-mirror.example.org/` or setting an option in `~/.bundle/config` or exporting environment variables.\r\n\r\nNone of the above options are acceptable when using static Dockerfile because (ironically) mentioning the local rubygems proxy explicitly in the Dockerfile would make it host-specific and non-reproducible.\r\n\r\nIs there a way to specify any of these at build time, other than not using `docker build` at all?\r\nI would be totally OK if `docker build` accepted a `--I-know-what-I-m-doing-env` option (with no `-e` shortcut so that people who use that feature are forced to read the documentation and understand why it should be used carefully).'
8501,'erikh','Fail COPY/ADD on Windows\nHi, all!\r\n\r\nI faced with strange Issue, when I tried to run my vagrant VM on Windows 8.1\r\n\r\nThis example successgully works on Linux OS\r\n\r\nVagrantfile and Dockerfile\r\nhttps://gist.github.com/galkinrost/ab2103fb1cb0a8507364\r\n\r\nBut on Windows I have the output:\r\nhttps://gist.github.com/galkinrost/77e2a309e81933eae385\r\n \r\nuname -a \r\n```sh\r\nLinux db 3.13.0-36-generic #63-Ubuntu SMP Wed Sep 3 21:30:07 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\ndocker version\r\n```sh\r\nClient version: 1.2.0\r\nClient API version: 1.14\r\nGo version (client): go1.3.1\r\nGit commit (client): fa7b24f\r\nOS/Arch (client): linux/amd64\r\nServer version: 1.2.0\r\nServer API version: 1.14\r\nGo version (server): go1.3.1\r\nGit commit (server): fa7b24f\r\n```\r\ndocker -D info\r\n```sh\r\nContainers: 4\r\nImages: 86\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Dirs: 94\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-36-generic\r\nOperating System: Ubuntu 14.04.1 LTS\r\nDebug mode (server): false\r\nDebug mode (client): true\r\nFds: 30\r\nGoroutines: 22\r\nEventsListeners: 0\r\nInit Path: /usr/bin/docker\r\nWARNING: No swap limit support\r\n```\r\n\r\nvagrant version \r\n```sh\r\nInstalled Version: 1.6.5\r\nLatest Version: 1.6.5\r\n```\r\n'
8456,'tiborvass','Cleanup: Replace ResolveRepositoryName with RepositoryInfo{}\n#  Reason for cleanup\r\n\r\nCurrently, we breakdown a repository name using a combination of ResolveRepositoryName, and NewEndpoint as follows:\r\n\r\n```\r\n  debian\r\n  \\____/\r\n     |\r\n  repoName  =>  ResolveRepositoryName()\r\n                      |\r\n               ______/ \\_____________________\r\n              /                              \\\r\n  https://index.docker.io/v1/              debian\r\n  \\_________________________/              \\____/\r\n        |                                     |\r\n     hostname  =>  NewEndpoint()          remoteName\r\n                       |                      |\r\n                    endpoint              ___/\\______\r\n                       |                 /           \\\r\n https://index.docker.io/v1/      library/debian    debian\r\n \\______/\\_____________/\\__/      \\____________/     \\___/\r\n     |          |         |              |             |\r\n URL.Scheme  URL.Host  Version      remoteName~    localName\r\n\r\n\r\n\r\n  127.0.0.1:5000/myapp _________________________________\r\n  \\__________________/                                  \\\r\n     |                                                  |\r\n  repoName  => ResolveRepositoryName()                  |\r\n                      |                                 |\r\n               ______/ \\______________________          |\r\n              /                               \\         |\r\n       127.0.0.1:5000                       myapp       |\r\n       \\____________/                       \\____/      |\r\n         |                                    |         |\r\n     hostname  =>  NewEndpoint()              |         |\r\n                       |                      |         |\r\n      GET https://127.0.0.1:5000/v1/_ping     |         |\r\n                       |                      |         |\r\n                       x (Error)              |         |\r\n                       |                      |         |\r\n      GET http://127.0.0.1:5000/v1/_ping      |         |\r\n                       |                      |         |\r\n                    endpoint                  |         |\r\n                       |                      |         |\r\n http://127.0.0.1:5000/v1/                    |         |\r\n \\_____/\\____________/\\__/                    |         |\r\n     |        |         |                     |         |\r\n URL.Scheme  URL.Host  Version          remoteName  localName\r\n```\r\n\r\nHowever, policies around whether or not repository is using the \'official index\' or an \'official repository\' are sprinkled throughout the code.  Also, rules regarding remoteName for the official repositories (\'library/ prefix\'), localName, which mirrors to use, etc, are also sprinkled throughout the code.   \r\n\r\nThis results in awkward follow-up checks against repository names, such as\r\n```\r\nif len(strings.SplitN(name, "/", 2)) == 1 { ... "You cannot push a \\"root\\" repository." ...}\r\n```\r\n```\r\nif endpoint.VersionString(1) == registry.IndexServerAddress() { ... [clean up names and set up mirrors] ... }\r\n```\r\n\r\nHaving to track down these pieces of logic throughout the code makes modifications to repository name parsing fragile, and hard to test.\r\n\r\n# Refactors made\r\n\r\n## ResolveRepositoryName(repoName) deprecated.  \r\nReplaced with the following:\r\n* ValidateRepositoryName(repoName) \r\n  * Used when a RepositoryInfo breakdown is not needed, just a validation check.\r\n* ParseRepositoryInfo(repoName)\r\n  * Used when RegistryServiceConfig is not available, and just performs the breakdown (above)\r\n* NormalizeLocalName\r\n  * Transforms a name for use as a key into TagStore.Repositories.\r\n  * Used to avoid multiple official image names referring to the same image (e.g. \'library/debian\' vs \'debian\')\r\n* ResolveRepositoryInfo\r\n  * Calls a Job("resolve_repository") to fully resolve a repository name into a RepositoryInfo\r\n  * Result includes index info.\r\n* ResolveIndexInfo\r\n  * Calls a Job("resolve_index") to resolve an index name into an IndexInfo\r\n  * Result includes repository configuration (for now, only Mirrors are defined).\r\n\r\n## RepositoryInfo\r\n\r\n```\r\ntype IndexInfo struct {\r\n        Name       string   `json:"name"`\r\n        Mirrors    []string `json:"mirrors"`\r\n        IsSecure   bool     `json:"is_secure"`\r\n        IsOfficial bool     `json:"is_official"`\r\n}\r\n\r\ntype RepositoryInfo struct {\r\n        Index         *IndexInfo `json:"index"`\r\n        RemoteName    string     `json:"remote_name"`\r\n        LocalName     string     `json:"local_name"`\r\n        CanonicalName string     `json:"canonical_name"`\r\n        IsOfficial    bool       `json:"is_official"`\r\n}\r\n```\r\n\r\nReturned by ParseRepositoryInfo, or ResolveRepositoryInfo.  \r\n* Index.Name: Replaces \'hostname\'. \r\n  * Examples: \'docker.io\' (official), \'127.0.0.1:8000\' (private)\r\n* Index.Mirrors: List of mirrors for use in a pull.\r\n  * Only configurable for official index, currently.\r\n* Index.IsSecure: \r\n  * True for official index\r\n  * Value for private index depends on --insecure-registry flag\r\n* Index.IsOfficial: Whether or not repository refers to the official docker.io index.\r\n* RemoteName: Remote repository name\r\n  * Examples: \'library/debian\', \'user/repo\'\r\n  * Policies for official repo names are resolved.\r\n* LocalName: Name to use in TagStore.Repositories\r\n  * Examples: \'debian\', \'127.0.0.1:8000/user/repo\'\r\n  * Policies for official vs private repo names are resolved.\r\n* CanonicalName: \'global\' name of repository.\r\n  * Displayed to the user in information messages, e.g.: "Pulling image from <CanonicalName>"\r\n  * For now, the CanonicalName matches LocalName rules. \r\n* IsOfficial: Whether or not repository refers to a library repository on the official docker.io index.\r\n\r\n\r\n\r\n\r\n\r\n'
8432,'erikh',"Docker Build Tests: Build result is never run.\nCurrently we have plenty of tests around builds, but unfortunately we don't run the result.\r\n\r\nRecently we have had an `ENTRYPOINT` regression that manifested itself only at run time, but was never caught by our tests.\r\n\r\nWe should run build artifacts whenever possible in the tests."
8420,'erikh','Adding support for symlinks\nFixes #6094\r\n\r\nSigned-off-by: Srini Brahmaroutu <srbrahma@us.ibm.com>'
8406,'tiborvass','Add support file name with whitespace for ADD and COPY command\nthis commit fixes #8318 '
8395,'erikh','how to connect to Docker host from container\nhttps://github.com/docker/docker/issues/1143 is closed but not resolved.\r\nI do not know how to reopen it, so I created this issue.\r\n\r\nSummary: I need a reliable way to access a service running on the host from a docker container.\r\nTherefore I need the IP address of the host that is reachable from the container\r\n\r\nScenario: I have a configuration DB that runs on the host and the docker container should get its configuration (and perhaps even some updates) from the DB.'
8386,'erikh','WORKDIR doesn\'t support JSON format\ndocker build -t issu-parsing --no-cache https://github.com/frank-dspeed/docker-issu-workdirparsing.git\r\n\r\nas you see workdir ["/var/www"] produces a dir /[" containg the VOLUME defined in image as also i found out as writing this prove of bug for reproduction that docker closes [ brakets in run commands like\r\nRUN ls /[* gets ls /[*]\r\n\r\n'
8362,'crosbymichael','adding ability to copy just a file from container to host\nAddresses #4272\r\n\r\nSigned-off-by: Srini Brahmaroutu <srbrahma@us.ibm.com>'
8330,'erikh',"Changing the Dockerfile forcibly invalidates the ADD cache\nI have a long, complicated `Dockerfile`, and towards the end I do:\r\n\r\n```dockerfile\r\nADD . /app\r\nRUN /app/installation.sh\r\n```\r\n\r\nIt's frustrating that if I make a modification to the Dockerfile after the `ADD` (but otherwise don't touch anything in `.`, the cache is unnecessarily** invalidated. My instinct was to put Dockerfile in `.dockerignore` but then I hit #7969.\r\n\r\nI'm just raising this issue in case there is a possibility of finding a non-intrusive way of fixing or working around this.\r\n\r\n(**In my case it's unnecessary because I don't read the Dockerfile from within the container. I don't know whether there are environments we can imagine that might care about the contents of the `Dockerfile` within the container.)"
7974,'tiborvass','Public Docker downloads page w/ checksums\nYou guys have get.docker.io and github for releases of docker, but I think it would be really nice to have a public downloads page where you can just find the binary/tarball for your system and click on it to download docker. In addition to this, it would be nice if every download contained a sha1 checksum on that page to verify the binary.\r\n\r\nI was thinking something along the lines of how http://golang.org/dl/ looks.'
7961,'erikh','USER in Dockerfile doesn\'t inherit their own environment\nIf a user is created and used for the launching process, their environment variables don\'t get set in the way `su -` would:\r\n\r\n```\r\n22:26:31 rgbkrk@metallic ~/user_example$ sudo docker build -t userdemo .\r\nSending build context to Docker daemon  2.56 kB\r\nSending build context to Docker daemon\r\nStep 0 : FROM ubuntu:14.04\r\n ---> 826544226fdc\r\nStep 1 : RUN useradd -m -s /bin/bash steve\r\n ---> Running in 1f69672d61de\r\n ---> 8851c00a531c\r\nRemoving intermediate container 1f69672d61de\r\nStep 2 : USER steve\r\n ---> Running in 53e69ed6a84e\r\n ---> 611f77883000\r\nRemoving intermediate container 53e69ed6a84e\r\nStep 3 : CMD ["/bin/bash"]\r\n ---> Running in 1f4a4760c313\r\n ---> 915ae9a8d061\r\nRemoving intermediate container 1f4a4760c313\r\nSuccessfully built 915ae9a8d061\r\n22:26:35 rgbkrk@metallic ~/user_example$ sudo docker run -it userdemo\r\nsteve@07f10823a54c:/$ env\r\nHOSTNAME=07f10823a54c\r\nTERM=xterm\r\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\nPWD=/\r\nSHLVL=1\r\nHOME=/\r\n_=/usr/bin/env\r\nsteve@07f10823a54c:/$ whoami\r\nsteve\r\n```\r\n\r\nRef: https://github.com/ipython/docker-notebook/issues/12'
7880,'tiborvass',"Invoking Dockerfile commands from a script\nHello, I'm writing a small shell script called DHELPER which I can use from my Dockerfiles to simplify a few issues, it has a few subcommands. One that I'm trying to add is INSTALL, which would work like this:\r\n\r\n```Dockerfile\r\n# My docker image\r\nFROM pomke/base\r\nMAINTAINER pomke <pomke@pomke.com>\r\n\r\n# install some services\r\nRUN DHELPER INSTALL example.com/nginx/Dockerfile\r\nRUN DHELPER INSTALL example.com/munin/Dockerfile\r\n\r\n# .. do my own stuff here\r\n```\r\n\r\nThe DHELPER INSTALL command fetches a dockerfile, strips out FROM and MAINTAINER etc commands and would execute ADD, RUN, WORKDIR etc commands in place, as if they were included in my current dockerfile.\r\n\r\nSo I'm trying to work out of there is a way I can invoke Dockerfile commands from a script of my own, within the context of a building image.\r\n\r\nThanks!\r\n\r\n\\- Pom "
7826,'tiborvass','TestRunErrorBindNonExistingSource false positive\nI\'ve found fun test in `integration/commands_test.go` - `TestRunErrorBindNonExistingSource`. It checks that we can\'t create bind volume from non-existent source, but error in this test is not about volumes:\r\n```\r\nError response from daemon: Cannot start container d41f86d716f97d69fb7d6233643d\r\n79e83cf351238d8c7404ebd6fc8ac1ae0465: exec: "echo \'should fail\'": executable file not found in $PATH\r\n```\r\nEven more - we can create bind volume from non-existent source. So, the question is: should we remove this test or fix daemon behavior and this test?\r\nping @cpuguy83 '
7630,'SvenDowideit','OAuth Doc Persists Despite Merged PR\nhttp://docs.docker.com/v1.1/reference/api/docker_io_oauth_api/\r\n\r\nThis is no longer a valid doc and it needs to be removed, per this PR: https://github.com/docker/docker/pull/7193'
7511,'erikh','ADD and COPY does not work correctly with nested directory\nADD nested directory does not work well.\r\n\r\nThis is reproduce step:\r\n\r\nDirectory:\r\n```\r\n.\r\n├── Dockerfile\r\n├── parent-dir\r\n│\xa0\xa0 ├── child-dir\r\n│\xa0\xa0 │\xa0\xa0 └── child.txt\r\n│\xa0\xa0 └── parent.txt\r\n└── reproduce.txt\r\n```\r\n\r\nThis is Dockerfile:\r\nhttps://github.com/sanemat/copy-example/blob/e4d6e6ea67ed9e9274830e0d23539ee6b3467f7d/Dockerfile\r\n\r\nThis is example repo https://github.com/sanemat/copy-example\r\n\r\nHow to reproduce:\r\n$ git clone https://github.com/sanemat/copy-example.git\r\n$ cd copy-example\r\n$ chmod -R go-rwx .\r\n\r\n$ ls -alR\r\n\r\n```text\r\ntotal 16\r\ndrwx------   7 sane  staff  238  8 10 21:27 .\r\ndrwxr-xr-x   5 sane  staff  170  8 10 21:16 ..\r\ndrwx------  12 sane  staff  408  8 10 21:27 .git\r\ndrwx------  10 sane  staff  340  8 10 21:27 .idea\r\n-rw-------   1 sane  staff  265  8 10 21:24 Dockerfile\r\ndrwx------   4 sane  staff  136  8 10 21:17 parent-dir\r\n-rw-------   1 sane  staff   29  8 10 21:27 reproduce.txt\r\n\r\n(snip)\r\n\r\n./parent-dir:\r\ntotal 8\r\ndrwx------  4 sane  staff  136  8 10 21:17 .\r\ndrwx------  7 sane  staff  238  8 10 21:27 ..\r\ndrwx------  3 sane  staff  102  8 10 21:18 child-dir\r\n-rw-------  1 sane  staff    7  8 10 21:17 parent.txt\r\n\r\n./parent-dir/child-dir:\r\ntotal 8\r\ndrwx------  3 sane  staff  102  8 10 21:18 .\r\ndrwx------  4 sane  staff  136  8 10 21:17 ..\r\n-rw-------  1 sane  staff    6  8 10 21:18 child.txt\r\n```\r\n\r\n$ docker build -t sanemat/copy-example .\r\n$ docker run -t -i sanemat/copy-example:latest /bin/bash\r\n\r\n% ls -alR /code/parent/\r\n\r\n```text\r\n  /code/parent/:\r\n  total 16\r\n  drwxrwxrwx 4 root root 4096 Aug 10 12:49 .\r\n  drwxrwxrwx 4 root root 4096 Aug 10 12:49 ..\r\n  drwxrwxrwx 2 root root 4096 Aug 10 12:49 child-dir\r\n  -rwxrwxrwx 1 root root    7 Aug 10 12:48 parent.txt\r\n  ls: cannot open directory /code/parent/child-dir: Permission denied\r\n```\r\n\r\n% cd /code/parent/child-dir\r\n\r\n```text\r\nbash: cd: /code/parent/child-dir: Permission denied\r\n```\r\n\r\nMy env:\r\n```text\r\n$ docker version\r\nClient version: 1.1.2\r\nClient API version: 1.13\r\nGo version (client): go1.2.1\r\nGit commit (client): d84a070\r\nServer version: 1.1.2\r\nServer API version: 1.13\r\nGo version (server): go1.2.1\r\nGit commit (server): d84a070\r\n\r\n$ docker -D info\r\nContainers: 44\r\nImages: 157\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Dirs: 247\r\nExecution Driver: native-0.2\r\nKernel Version: 3.13.0-24-generic\r\nDebug mode (server): false\r\nDebug mode (client): true\r\nFds: 29\r\nGoroutines: 67\r\nEventsListeners: 2\r\nInit Path: /usr/bin/docker\r\nSockets: [unix:///var/run/docker.sock]\r\nWARNING: No swap limit support\r\n\r\n$  uname -a\r\nLinux mouse.tachikoma.io 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n```'
7485,'shin-','Periodic "Authorization Required" failures on pull\nI periodically get "Authorization Required" on pull with a valid logged in user.  This is going against a private registry behind nginx using basic auth.\r\n\r\nDaemon restart doesn\'t fix.  System restart doesn\'t fix.  Only way I\'ve been able to fix is deleting the .dockercfg file and doing a login again.\r\n\r\nDocker client is 1.0.0; Registry is running 0.7.3.\r\n\r\n\r\nLogin successfully with previous login:\r\n```\r\n[fldengr@fusionserver2 ~]$ sudo docker login https://acropolis:5000\r\nUsername (mhughes): mhughes\r\nLogin Succeeded\r\n```\r\n\r\nDocker logs at the time:\r\n```\r\n[debug] server.go:999 Calling POST /auth\r\n2014/08/08 11:18:38 POST /v1.12/auth\r\n[9b291ce8] +job auth()\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] http.go:160 https://acropolis:5000/v1/users/ -- HEADERS: map[User-Agent:[docker/1.0.0 go/go1.2.2 kernel/2.6.32-431.17.1.el6.x86_64 os/linux arch/amd64]]\r\n[9b291ce8] -job auth() = OK (0)\r\n```\r\n\r\n\r\nAttempt pull; get error:\r\n```\r\n[fldengr@fusionserver2 ~]$ sudo docker pull acropolis:5000/corp/app:1.0.0-SNAPSHOT\r\nPulling repository acropolis:5000/corp/app\r\n2014/08/08 11:18:48 Authentication is required.\r\n```\r\n\r\nOutput from docker logs at the time:\r\n```\r\n[debug] server.go:999 Calling POST /images/create\r\n2014/08/08 11:18:47 POST /images/create?fromImage=acropolis%3A5000%2Fcorp%2Fapp&tag=1.0.0-SNAPSHOT\r\n[9b291ce8] +job pull(acropolis:5000/corp/app, 1.0.0-SNAPSHOT)\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] registry.go:830 Endpoint https://acropolis:5000/v1/ is eligible for private registry registry. Enabling decorator.\r\n[debug] registry.go:372 [registry] Calling GET https://acropolis:5000/v1/repositories/corp/app/images\r\n[debug] http.go:160 https://acropolis:5000/v1/repositories/corp/app/images -- HEADERS: map[User-Agent:[docker/1.0.0 go/go1.2.2 kernel/2.6.32-431.17.1.el6.x86_64 os/linux arch/amd64] Authorization:[Basic YmhpY2tzOjEyMzRXZXJ0]]\r\nAuthentication is required.\r\n[9b291ce8] -job pull(acropolis:5000/corp/app, 1.0.0-SNAPSHOT) = ERR (1)\r\n```\r\n\r\nRemove the .dockercfg file completely, relogin succesfully:\r\n\r\n```\r\n[fldengr@fusionserver2 home]$ sudo docker login https://acropolis:5000\r\nUsername: mhughes\r\nPassword:\r\nEmail: mhughes@corp.us\r\nLogin Succeeded\r\n```\r\n\r\nDocker logs as result of login:\r\n```\r\n[debug] server.go:999 Calling POST /auth\r\n2014/08/08 11:21:04 POST /v1.12/auth\r\n[9b291ce8] +job auth()\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] http.go:160 https://acropolis:5000/v1/users/ -- HEADERS: map[User-Agent:[docker/1.0.0 go/go1.2.2 kernel/2.6.32-431.17.1.el6.x86_64 os/linux arch/amd64]]\r\n[9b291ce8] -job auth() = OK (0)\r\n```\r\n\r\nDo pull successfully:\r\n```\r\n[fldengr@fusionserver2 ~]$ sudo docker pull acropolis:5000/corp/app:1.0.0-SNAPSHOT\r\nPulling repository acropolis:5000/corp/app\r\n4ef14ce353f5: Pulling dependent layers\r\n....\r\n```\r\n\r\nDocker logs:\r\n```\r\n[debug] server.go:999 Calling POST /images/create\r\n2014/08/08 11:21:15 POST /images/create?fromImage=acropolis%3A5000%2Fcorp%2Fapp&tag=1.0.0-SNAPSHOT\r\n[9b291ce8] +job pull(acropolis:5000/corp/app, 1.0.0-SNAPSHOT)\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] registry.go:70 Error unmarshalling the _ping RegistryInfo: invalid character \'<\' looking for beginning of value\r\n[debug] registry.go:77 RegistryInfo.Version: ""\r\n[debug] registry.go:80 Registry standalone header: \'\'\r\n[debug] registry.go:88 RegistryInfo.Standalone: %!q(bool=true)\r\n[debug] registry.go:830 Endpoint https://acropolis:5000/v1/ is eligible for private registry registry. Enabling decorator.\r\n[debug] registry.go:372 [registry] Calling GET https://acropolis:5000/v1/repositories/corp/app/images\r\n[debug] http.go:160 https://acropolis:5000/v1/repositories/corp/app/images -- HEADERS: map[User-Agent:[docker/1.0.0 go/go1.2.2 kernel/2.6.32-431.17.1.el6.x86_64 os/linux arch/amd64] Authorization:[Basic bWh1Z2hlczptaHVnaGVz]]\r\n[debug] server.go:1182 Retrieving the tag list\r\n[debug] http.go:160 https://acropolis:5000/v1/repositories/corp/app/tags -- HEADERS: map[User-Agent:[docker/1.0.0 go/go1.2.2 kernel/2.6.32-431.17.1.el6.x86_64 os/linux arch/amd64] Authorization:[Basic bWh1Z2hlczptaHVnaGVz]]\r\n[debug] registry.go:327 Got status code 200 from https://acropolis:5000/v1/repositories/corp/app/tags\r\n[debug] server.go:1197 Registering tags\r\n```'
7396,'vieux','mflag doesn\'t treat certain odd arguments properly\nFor the following few arguments, `mflag` doesn\'t act as expected (i.e. producing an error that doesn\'t indicate the actual problem which could cause very odd behaviour):\r\n\r\n```bash\r\n$ docker run "-a stdout" ubuntu bash\r\ninvalid value "ubuntu" for flag -a: Unsupported stream name: ubuntu\r\n# the error should be something like "flag provided but not defined: \'-a stdout\'"\r\n# if you have an image with the name `stdout`, you would be surprised that it would start the wrong container or not work.\r\n$ docker ps -a "-n 3"\r\nflag needs an argument: -n\r\n# the error should be something like "flag provided but not defined: \'-n 3\'"\r\n```\r\n\r\n... and so on.\r\n\r\nHowever, the following commands produce the correct error:\r\n```bash\r\n$ docker inspect "--format {{.Config.Cmd}}" <container>\r\nflag provided but not defined: --format {{.Config.Cmd}}\r\n# ...\r\n$ docker inspect "-f {{.Config.Cmd}}" <container>\r\nflag provided but not defined: -f {{.Config.Cmd}}\r\n# ...\r\n```\r\n\r\nWhich makes this even more puzzling.'
7376,'shin-','docker login against private registry assumes Account activation\nI\'m running docker-registry behind nginx with http auth.\r\n\r\nWhen I do a successful docker login, my users are greeted with:\r\n\r\nstatus = "Account created. Please see the documentation of the registry " + serverAddress + " for instructions how to activate it."\r\n\r\nThere is no activation step with my registry.  I\'m not even sure what that means, but the docker client assumes I want it.  I\'d love to be able to override / remove this message so as not to confuse my users.\r\n'
7291,'unclejack','docker pull / push slow\nIssue related to #1888 that wasn\'t resolved.\r\n\r\nAs Ross said here: https://github.com/docker/docker/issues/1888#issuecomment-49386937\r\n\r\n---\r\n\r\nWe\'re seeing this.\r\n\r\nSteps to reproduce:\r\nRun latest (or any version) of docker-registry.\r\n\r\nRun Docker 1.1.1 (or any version) on another machine on the local network. "Local network" in our case is a 10GbE connection with ample available bandwidth.\r\n\r\nPush and pull any docker image from the Docker host to the docker-registry. Observe the speeds.\r\n\r\nFor reference, here\'s a concrete example (names changed, everything else as per output).\r\n```\r\nroot@int-build-systems:~  # time docker pull our-registry.example.com/ourapp:v0.90.19\r\nPulling repository our-registry.example.com/ourapp\r\nf53e24aff1ea: Download complete\r\n1db82e0c82b2: Download complete\r\n5ad7cde6f934: Download complete\r\n1b63e01a661e: Download complete\r\n76bf39c7538d: Download complete\r\n52490f4c441f: Download complete\r\n4711ab69462c: Download complete\r\na3298b1086dd: Download complete\r\n6ec7f7a84999: Download complete\r\n12286e1683de: Download complete\r\ne65d790b892e: Download complete\r\n68a857ae02fd: Download complete\r\n19fa32328999: Download complete\r\n35dc94353234: Download complete\r\n9bfba14d5960: Download complete\r\n3ca1dfe05755: Download complete\r\n3e836ac53ec4: Download complete\r\ne940f2494e01: Download complete\r\n59a6acada74e: Download complete\r\n17bc599649b4: Download complete\r\n451cb4e63973: Download complete\r\n29a0981d8008: Download complete\r\n205a854f59a5: Download complete\r\n3471990c34d0: Download complete\r\n\r\nreal    2m6.888s\r\nuser    0m0.148s\r\nsys    0m0.108s\r\n```\r\n\r\nOK, so 2 mins 6 seconds to pull this container. Now, I took the access log from the registry server (to see every file Docker downloaded from the registry) and created a Bash script from it to curl each of the files downloaded:\r\n```\r\n#!/bin/bash\r\ncurl -O https://our-registry.example.com/v1/images/746c70792250bddb7ca5ab4ec0cc85ac2858dcc32a7f44fd11e562733b3f484d/ancestry\r\ncurl -O https://our-registry.example.com/v1/images/f53e24aff1ead3dce35711567f26b3ad01624f168aebc53d04f9dd7bd16e14d0/json\r\ncurl -O https://our-registry.example.com/v1/images/f53e24aff1ead3dce35711567f26b3ad01624f168aebc53d04f9dd7bd16e14d0/layer\r\ncurl -O https://our-registry.example.com/v1/images/f53e24aff1ead3dce35711567f26b3ad01624f168aebc53d04f9dd7bd16e14d0/layer\r\ncurl -O https://our-registry.example.com/v1/images/1db82e0c82b29793aec6a14f88ec92f7062e9f54e9aea8a112b8721eaf800110/json\r\ncurl -O https://our-registry.example.com/v1/images/1db82e0c82b29793aec6a14f88ec92f7062e9f54e9aea8a112b8721eaf800110/layer\r\ncurl -O https://our-registry.example.com/v1/images/1db82e0c82b29793aec6a14f88ec92f7062e9f54e9aea8a112b8721eaf800110/layer\r\ncurl -O https://our-registry.example.com/v1/images/5ad7cde6f934f1be64ec3589093f08f666af17bc70391400cdfdd21d0ad7f0bb/json\r\ncurl -O https://our-registry.example.com/v1/images/5ad7cde6f934f1be64ec3589093f08f666af17bc70391400cdfdd21d0ad7f0bb/layer\r\ncurl -O https://our-registry.example.com/v1/images/5ad7cde6f934f1be64ec3589093f08f666af17bc70391400cdfdd21d0ad7f0bb/layer\r\ncurl -O https://our-registry.example.com/v1/images/1b63e01a661e2f8dfb8019b8028e1b88481cc00fa3f18b876f68aecace8dd883/json\r\ncurl -O https://our-registry.example.com/v1/images/1b63e01a661e2f8dfb8019b8028e1b88481cc00fa3f18b876f68aecace8dd883/layer\r\ncurl -O https://our-registry.example.com/v1/images/1b63e01a661e2f8dfb8019b8028e1b88481cc00fa3f18b876f68aecace8dd883/layer\r\ncurl -O https://our-registry.example.com/v1/images/76bf39c7538d3ec1f6509cceb220dc648873fcd6db35b1fe6cdced69fbe04634/json\r\ncurl -O https://our-registry.example.com/v1/images/76bf39c7538d3ec1f6509cceb220dc648873fcd6db35b1fe6cdced69fbe04634/layer\r\ncurl -O https://our-registry.example.com/v1/images/76bf39c7538d3ec1f6509cceb220dc648873fcd6db35b1fe6cdced69fbe04634/layer\r\ncurl -O https://our-registry.example.com/v1/images/52490f4c441fc183eb6940bb87fb5a6c54d2784e171dc8c3692261ffa0c0cdf0/json\r\ncurl -O https://our-registry.example.com/v1/images/52490f4c441fc183eb6940bb87fb5a6c54d2784e171dc8c3692261ffa0c0cdf0/layer\r\ncurl -O https://our-registry.example.com/v1/images/52490f4c441fc183eb6940bb87fb5a6c54d2784e171dc8c3692261ffa0c0cdf0/layer\r\ncurl -O https://our-registry.example.com/v1/images/4711ab69462c595b12ca725a2a0ae3d95a77a5b11f435e4cfbb2da2c643e60ba/json\r\ncurl -O https://our-registry.example.com/v1/images/4711ab69462c595b12ca725a2a0ae3d95a77a5b11f435e4cfbb2da2c643e60ba/layer\r\ncurl -O https://our-registry.example.com/v1/images/4711ab69462c595b12ca725a2a0ae3d95a77a5b11f435e4cfbb2da2c643e60ba/layer\r\ncurl -O https://our-registry.example.com/v1/images/a3298b1086ddb50efab152693b82f87354bc179cea45a95329783f8e3170d6e8/json\r\ncurl -O https://our-registry.example.com/v1/images/a3298b1086ddb50efab152693b82f87354bc179cea45a95329783f8e3170d6e8/layer\r\ncurl -O https://our-registry.example.com/v1/images/a3298b1086ddb50efab152693b82f87354bc179cea45a95329783f8e3170d6e8/layer\r\ncurl -O https://our-registry.example.com/v1/images/6ec7f7a849995b715f6ed616d2daffc48eb2cc3b57dc04fda1733a5f0a504717/json\r\ncurl -O https://our-registry.example.com/v1/images/6ec7f7a849995b715f6ed616d2daffc48eb2cc3b57dc04fda1733a5f0a504717/layer\r\ncurl -O https://our-registry.example.com/v1/images/6ec7f7a849995b715f6ed616d2daffc48eb2cc3b57dc04fda1733a5f0a504717/layer\r\ncurl -O https://our-registry.example.com/v1/images/12286e1683de9c8165dc0a916d1227b2a22a880620c31c0bcc359b75a75affed/json\r\ncurl -O https://our-registry.example.com/v1/images/12286e1683de9c8165dc0a916d1227b2a22a880620c31c0bcc359b75a75affed/layer\r\ncurl -O https://our-registry.example.com/v1/images/12286e1683de9c8165dc0a916d1227b2a22a880620c31c0bcc359b75a75affed/layer\r\ncurl -O https://our-registry.example.com/v1/images/e65d790b892e9041963f20c24c2224a738650fdabc4fa70b3870edc44ec59156/json\r\ncurl -O https://our-registry.example.com/v1/images/e65d790b892e9041963f20c24c2224a738650fdabc4fa70b3870edc44ec59156/layer\r\ncurl -O https://our-registry.example.com/v1/images/e65d790b892e9041963f20c24c2224a738650fdabc4fa70b3870edc44ec59156/layer\r\ncurl -O https://our-registry.example.com/v1/images/68a857ae02fd4d97ddb43ba21dc3241adf718b1140a348ae064853177180bf2a/json\r\ncurl -O https://our-registry.example.com/v1/images/68a857ae02fd4d97ddb43ba21dc3241adf718b1140a348ae064853177180bf2a/layer\r\ncurl -O https://our-registry.example.com/v1/images/68a857ae02fd4d97ddb43ba21dc3241adf718b1140a348ae064853177180bf2a/layer\r\ncurl -O https://our-registry.example.com/v1/images/19fa323289990f5685a78bf523a4946aea93ec5dfb0fa4b7a2edf26ac42412aa/json\r\ncurl -O https://our-registry.example.com/v1/images/19fa323289990f5685a78bf523a4946aea93ec5dfb0fa4b7a2edf26ac42412aa/layer\r\ncurl -O https://our-registry.example.com/v1/images/19fa323289990f5685a78bf523a4946aea93ec5dfb0fa4b7a2edf26ac42412aa/layer\r\ncurl -O https://our-registry.example.com/v1/images/35dc9435323495e6dc048556128f5075b5869aede8f57af235a601b3f38ea353/json\r\ncurl -O https://our-registry.example.com/v1/images/35dc9435323495e6dc048556128f5075b5869aede8f57af235a601b3f38ea353/layer\r\ncurl -O https://our-registry.example.com/v1/images/35dc9435323495e6dc048556128f5075b5869aede8f57af235a601b3f38ea353/layer\r\ncurl -O https://our-registry.example.com/v1/images/9bfba14d5960242ff7acbc31e3229ebe3bdedc471d1ecf144807017c557108a3/json\r\ncurl -O https://our-registry.example.com/v1/images/9bfba14d5960242ff7acbc31e3229ebe3bdedc471d1ecf144807017c557108a3/layer\r\ncurl -O https://our-registry.example.com/v1/images/9bfba14d5960242ff7acbc31e3229ebe3bdedc471d1ecf144807017c557108a3/layer\r\ncurl -O https://our-registry.example.com/v1/images/3ca1dfe05755b7c1af9b7264f59ef442dd5451cce0ca403e7b0549f07db37af4/json\r\ncurl -O https://our-registry.example.com/v1/images/3ca1dfe05755b7c1af9b7264f59ef442dd5451cce0ca403e7b0549f07db37af4/layer\r\ncurl -O https://our-registry.example.com/v1/images/3ca1dfe05755b7c1af9b7264f59ef442dd5451cce0ca403e7b0549f07db37af4/layer\r\ncurl -O https://our-registry.example.com/v1/images/3e836ac53ec401cb88ca784045953929cfc619aac37bd8b669d7929ff371357e/json\r\ncurl -O https://our-registry.example.com/v1/images/3e836ac53ec401cb88ca784045953929cfc619aac37bd8b669d7929ff371357e/layer\r\ncurl -O https://our-registry.example.com/v1/images/3e836ac53ec401cb88ca784045953929cfc619aac37bd8b669d7929ff371357e/layer\r\ncurl -O https://our-registry.example.com/v1/images/e940f2494e01939e28b555a3ff6894754c1e79b2da3a06e06cad5c68ae66e94f/json\r\ncurl -O https://our-registry.example.com/v1/images/e940f2494e01939e28b555a3ff6894754c1e79b2da3a06e06cad5c68ae66e94f/layer\r\ncurl -O https://our-registry.example.com/v1/images/e940f2494e01939e28b555a3ff6894754c1e79b2da3a06e06cad5c68ae66e94f/layer\r\ncurl -O https://our-registry.example.com/v1/images/59a6acada74e3522a78270c1eb3de11964bd03168131b8bd9a52ea812c7c49ef/json\r\ncurl -O https://our-registry.example.com/v1/images/59a6acada74e3522a78270c1eb3de11964bd03168131b8bd9a52ea812c7c49ef/layer\r\ncurl -O https://our-registry.example.com/v1/images/59a6acada74e3522a78270c1eb3de11964bd03168131b8bd9a52ea812c7c49ef/layer\r\ncurl -O https://our-registry.example.com/v1/images/17bc599649b4a9c340b14320b1525b42c9def351813c230c9dcad0ce4f2edac4/json\r\ncurl -O https://our-registry.example.com/v1/images/17bc599649b4a9c340b14320b1525b42c9def351813c230c9dcad0ce4f2edac4/layer\r\ncurl -O https://our-registry.example.com/v1/images/17bc599649b4a9c340b14320b1525b42c9def351813c230c9dcad0ce4f2edac4/layer\r\ncurl -O https://our-registry.example.com/v1/images/451cb4e639736cadcf7a52111cf4483ee7211e06fdb4c6df882ab6ec1f0d7be2/json\r\ncurl -O https://our-registry.example.com/v1/images/451cb4e639736cadcf7a52111cf4483ee7211e06fdb4c6df882ab6ec1f0d7be2/layer\r\ncurl -O https://our-registry.example.com/v1/images/451cb4e639736cadcf7a52111cf4483ee7211e06fdb4c6df882ab6ec1f0d7be2/layer\r\ncurl -O https://our-registry.example.com/v1/images/29a0981d8008246a329fd1b7d19270011aaa78ce274d5751246078b24b6bbb5c/json\r\ncurl -O https://our-registry.example.com/v1/images/29a0981d8008246a329fd1b7d19270011aaa78ce274d5751246078b24b6bbb5c/layer\r\ncurl -O https://our-registry.example.com/v1/images/29a0981d8008246a329fd1b7d19270011aaa78ce274d5751246078b24b6bbb5c/layer\r\ncurl -O https://our-registry.example.com/v1/images/205a854f59a549f8b4edc0c14ec9f565415592a36e3a8b6fd7836bd07a98d904/json\r\ncurl -O https://our-registry.example.com/v1/images/205a854f59a549f8b4edc0c14ec9f565415592a36e3a8b6fd7836bd07a98d904/layer\r\ncurl -O https://our-registry.example.com/v1/images/205a854f59a549f8b4edc0c14ec9f565415592a36e3a8b6fd7836bd07a98d904/layer\r\ncurl -O https://our-registry.example.com/v1/images/3471990c34d0572d28bbf9a14c189900fb81d5a010ce4c4da2146224edaddfe3/json\r\ncurl -O https://our-registry.example.com/v1/images/3471990c34d0572d28bbf9a14c189900fb81d5a010ce4c4da2146224edaddfe3/layer\r\ncurl -O https://our-registry.example.com/v1/images/3471990c34d0572d28bbf9a14c189900fb81d5a010ce4c4da2146224edaddfe3/layer\r\ncurl -O https://our-registry.example.com/v1/images/746c70792250bddb7ca5ab4ec0cc85ac2858dcc32a7f44fd11e562733b3f484d/json\r\ncurl -O https://our-registry.example.com/v1/images/746c70792250bddb7ca5ab4ec0cc85ac2858dcc32a7f44fd11e562733b3f484d/layer\r\ncurl -O https://our-registry.example.com/v1/images/746c70792250bddb7ca5ab4ec0cc85ac2858dcc32a7f44fd11e562733b3f484d/layer\r\n```\r\n\r\nNow, how long does this script take?\r\n```\r\nroot@int-build-systems:~  # time ./test.sh\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  2380  100  2380    0     0   126k      0 --:--:-- --:--:-- --:--:--  145k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1437  100  1437    0     0  74340      0 --:--:-- --:--:-- --:--:-- 84529\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1665      0 --:--:-- --:--:-- --:--:--  1916\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2091      0 --:--:-- --:--:-- --:--:--  3285\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1466  100  1466    0     0  80456      0 --:--:-- --:--:-- --:--:-- 91625\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2175      0 --:--:-- --:--:-- --:--:--  2875\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2867      0 --:--:-- --:--:-- --:--:--  3833\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1544  100  1544    0     0   131k      0 --:--:-- --:--:-- --:--:--  150k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2327      0 --:--:-- --:--:-- --:--:--  3285\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2852      0 --:--:-- --:--:-- --:--:--  3833\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1529  100  1529    0     0   112k      0 --:--:-- --:--:-- --:--:--  135k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 8645k  100 8645k    0     0  87.1M      0 --:--:-- --:--:-- --:--:-- 89.8M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 8645k  100 8645k    0     0  92.8M      0 --:--:-- --:--:-- --:--:-- 94.8M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1665  100  1665    0     0   154k      0 --:--:-- --:--:-- --:--:--  203k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  162M  100  162M    0     0   131M      0  0:00:01  0:00:01 --:--:--  133M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  162M  100  162M    0     0   159M      0  0:00:01  0:00:01 --:--:--  159M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1540  100  1540    0     0   138k      0 --:--:-- --:--:-- --:--:--  167k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 4833k  100 4833k    0     0  74.3M      0 --:--:-- --:--:-- --:--:-- 77.3M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 4833k  100 4833k    0     0   103M      0 --:--:-- --:--:-- --:--:--  109M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1552  100  1552    0     0   161k      0 --:--:-- --:--:-- --:--:--  216k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   164  100   164    0     0  18935      0 --:--:-- --:--:-- --:--:-- 23428\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   164  100   164    0     0  22422      0 --:--:-- --:--:-- --:--:-- 27333\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1555  100  1555    0     0   158k      0 --:--:-- --:--:-- --:--:--  189k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   173  100   173    0     0  22709      0 --:--:-- --:--:-- --:--:-- 28833\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   173  100   173    0     0  22552      0 --:--:-- --:--:-- --:--:-- 24714\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1519  100  1519    0     0   169k      0 --:--:-- --:--:-- --:--:--  211k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  292k  100  292k    0     0  28.7M      0 --:--:-- --:--:-- --:--:-- 35.6M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  292k  100  292k    0     0  28.9M      0 --:--:-- --:--:-- --:--:-- 35.6M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1531  100  1531    0     0   174k      0 --:--:-- --:--:-- --:--:--  213k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1889  100  1889    0     0   239k      0 --:--:-- --:--:-- --:--:--  307k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1889  100  1889    0     0   248k      0 --:--:-- --:--:-- --:--:--  307k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1531  100  1531    0     0   175k      0 --:--:-- --:--:-- --:--:--  213k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   3052      0 --:--:-- --:--:-- --:--:--  3833\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   3115      0 --:--:-- --:--:-- --:--:--  4600\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1620  100  1620    0     0   183k      0 --:--:-- --:--:-- --:--:--  226k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1432  100  1432    0     0   185k      0 --:--:-- --:--:-- --:--:--  233k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1432  100  1432    0     0   171k      0 --:--:-- --:--:-- --:--:--  233k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1615  100  1615    0     0   168k      0 --:--:-- --:--:-- --:--:--  225k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   337  100   337    0     0  26731      0 --:--:-- --:--:-- --:--:-- 56166\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   337  100   337    0     0  36112      0 --:--:-- --:--:-- --:--:-- 56166\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1612  100  1612    0     0   170k      0 --:--:-- --:--:-- --:--:--  224k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   214  100   214    0     0  25295      0 --:--:-- --:--:-- --:--:-- 35666\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   214  100   214    0     0  27860      0 --:--:-- --:--:-- --:--:-- 35666\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1613  100  1613    0     0   184k      0 --:--:-- --:--:-- --:--:--  225k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   333  100   333    0     0  43218      0 --:--:-- --:--:-- --:--:-- 55500\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   333  100   333    0     0  45164      0 --:--:-- --:--:-- --:--:-- 55500\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1610  100  1610    0     0   176k      0 --:--:-- --:--:-- --:--:--  224k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   342  100   342    0     0  46035      0 --:--:-- --:--:-- --:--:-- 68400\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   342  100   342    0     0  22643      0 --:--:-- --:--:-- --:--:-- 26307\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1574  100  1574    0     0  96280      0 --:--:-- --:--:-- --:--:--  102k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  158M  100  158M    0     0   136M      0  0:00:01  0:00:01 --:--:--  136M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  158M  100  158M    0     0   150M      0  0:00:01  0:00:01 --:--:--  150M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1608  100  1608    0     0  69634      0 --:--:-- --:--:-- --:--:-- 80400\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  142M  100  142M    0     0   126M      0  0:00:01  0:00:01 --:--:--  127M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  142M  100  142M    0     0   155M      0 --:--:-- --:--:-- --:--:--  156M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1690  100  1690    0     0   120k      0 --:--:-- --:--:-- --:--:--  137k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 19.5M  100 19.5M    0     0   100M      0 --:--:-- --:--:-- --:--:--  101M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 19.5M  100 19.5M    0     0   117M      0 --:--:-- --:--:-- --:--:--  118M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1561  100  1561    0     0  86204      0 --:--:-- --:--:-- --:--:--  101k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1330      0 --:--:-- --:--:-- --:--:--  1533\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2674      0 --:--:-- --:--:-- --:--:--  3285\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1564  100  1564    0     0  94885      0 --:--:-- --:--:-- --:--:--  101k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1776      0 --:--:-- --:--:-- --:--:--  2090\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1940      0 --:--:-- --:--:-- --:--:--  2300\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1534  100  1534    0     0   146k      0 --:--:-- --:--:-- --:--:--  187k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 1929k  100 1929k    0     0  81.5M      0 --:--:-- --:--:-- --:--:-- 89.7M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 1929k  100 1929k    0     0  86.4M      0 --:--:-- --:--:-- --:--:-- 99.1M\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1551  100  1551    0     0  87301      0 --:--:-- --:--:-- --:--:--  126k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   184  100   184    0     0  15011      0 --:--:-- --:--:-- --:--:-- 18400\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   184  100   184    0     0  23535      0 --:--:-- --:--:-- --:--:-- 30666\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1556  100  1556    0     0   107k      0 --:--:-- --:--:-- --:--:--  126k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   2873      0 --:--:-- --:--:-- --:--:--  3833\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1782      0 --:--:-- --:--:-- --:--:--  2090\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  1580  100  1580    0     0   109k      0 --:--:-- --:--:-- --:--:--  128k\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1971      0 --:--:-- --:--:-- --:--:--  2300\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    23  100    23    0     0   1713      0 --:--:-- --:--:-- --:--:--  1916\r\n\r\nreal    0m10.708s\r\nuser    0m4.032s\r\nsys    0m3.560s\r\n```\r\n\r\n10 seconds.\r\n\r\nI realise that pull is doing other stuff besides downloading the layers (tar?), but should it really take over 12 times as long to \'docker pull\' than to download the files? It seems to me there\'s something slowing down the process considerably.\r\n\r\nThe problem is especially noticable on large containers, pulling them from a docker-registry to hosts takes a considerable length of time despite ample free bandwidth over a local network.\r\n\r\n\r\nEdit: Replaced semicolons with newlines in bash script to enhance readability'
7253,'fredlf','Proposal: Registry Automated Deploy Troubleshooting Doc\nAfter working SaaS tickets for all of ~~one week~~ two weeks, it\'s become clear that Registry users would benefit from a troubleshooting guide for their automated deploys. I\'m gathering common errors that folks run into based on tickets, and will work with Fred to develop this doc.\r\n\r\nSo far:\r\n\r\n- "This image does not belong to the repository" \r\n- "Failed to clone repository" - often related to submodules in GitHub, which need a DR deploy key. I have a ticket boilerplate for how to add a deploy key to a submodule that I can put here. Also useful: "docker clone --recursive [repo-name]" to test whether the failure to clone is due to a submodule.\r\n- "Specified Dockerfile was not found"\r\n- "Failed to checkout \'master\'."\r\n- "[script|process|command] returned error exit status 1"\r\n- "Error removing intermediate container" - doesn\'t seem to result in a build failure every time, but it startles folks. Need to figure out the reason behind this error. Dustin?\r\n\r\nMore to come as I work here longer!\r\n'
7205,'jfrazelle','Question about /container/id/top command\nHi,\r\nI am quite new to docker, but already impressed about its capability!\r\n\r\nOne question I have is when I run the /container/id/top api, I got some attributes value back, but not as the ones I see in documentation.\r\n\r\nFrom documentation, I see:\r\nList processes running inside a container\r\nGET /containers/(id)/top\r\n\r\nList processes running inside the container id\r\n\r\n**Example request**:\r\n\r\n    GET /containers/4fa6e0f0c678/top HTTP/1.1\r\n\r\n**Example response**:\r\n\r\n    HTTP/1.1 200 OK\r\n    Content-Type: application/json\r\n\r\n    {\r\n         "Titles":[\r\n                 "USER",\r\n                 "PID",\r\n                 "%CPU",\r\n                 "%MEM",\r\n                 "VSZ",\r\n                 "RSS",\r\n                 "TTY",\r\n                 "STAT",\r\n                 "START",\r\n                 "TIME",\r\n                 "COMMAND"\r\n                 ],\r\n         "Processes":[\r\n                 ["root","20147","0.0","0.1","18060","1864","pts/4","S","10:06","0:00","bash"],\r\n                 ["root","20271","0.0","0.0","4312","352","pts/4","S+","10:07","0:00","sleep","10"]\r\n         ]\r\n    }\r\n\r\n\r\nBut when I run the same api on my dock enabled VM, I got\r\n\r\n    "Processes": [\r\n        [\r\n            "root",\r\n            "27467",\r\n            "1449",\r\n            "0",\r\n            "19:39",\r\n            "pts/3",\r\n            "00:00:00",\r\n            "/bin/bash"\r\n        ],\r\n        [\r\n            "root",\r\n            "28010",\r\n            "27467",\r\n            "0",\r\n            "19:46",\r\n            "pts/3",\r\n            "00:11:03",\r\n            "/bin/bash"\r\n        ]\r\n    ],\r\n    "Titles": [\r\n        "UID",\r\n        "PID",\r\n        "PPID",\r\n        "C",\r\n        "STIME",\r\n        "TTY",\r\n        "TIME",\r\n        "CMD"\r\n    ]\r\n\r\nwhich doesn\'t contain the cpu and mem %. Is there anything I need to enable?\r\n\r\nMy docker version is \r\nsuse64:~ # docker version\r\nClient version: 1.1.1\r\nClient API version: 1.13\r\nGo version (client): go1.3\r\nGit commit (client): dc62f3c\r\nServer version: 1.1.1\r\nServer API version: 1.13\r\nGo version (server): go1.3\r\nGit commit (server): dc62f3c\r\n\r\nThanks a lot in advance.\r\nJannle'
6830,'vieux','Path is parsed as JSON in docker inspect and API\nWhen the command is parseable as JSON, the resulting JSON type is returned by inspect and API.\r\n\r\nExample: `true` converted to boolean\r\n```\r\n$ docker run busybox true; docker inspect `docker ps -l -q` | grep \\"Path\\"\r\n    "Path": true,\r\n```\r\n\r\nExample: `99` converted to a number\r\n```\r\n$ docker run busybox 99; docker inspect `docker ps -l -q` | grep \\"Path\\"\r\n    "Path": 99,\r\n```\r\n\r\nExample: `{"a": "map"}` converted to a Hash (for fun)\r\n```\r\n$docker run busybox \'{"a": "map"}\'; docker inspect `docker ps -l -q` | grep -A 2 \\"Path\\"\r\n    "Path": {\r\n        "a": "map"\r\n    },\r\n```'
6190,'unclejack','devmapper: use \'user_xattr\' as mountoption for ext4 - fixes #6189\n~~~\r\n># docker pull centos\r\n># docker run -i -t centos /bin/bash\r\n\r\nbash-4.1# touch file\r\nbash-4.1# setfattr -n user.attr -v 1 file\r\nsetfattr: file: Operation not permitted\r\n~~~\r\n\r\nWith \'user_xattr\' as mount option\r\n\r\n~~~\r\nbash-4.1# touch file\r\nbash-4.1# setfattr -n user.attr -v 1 file\r\nbash-4.1# getfattr -d -m. file\r\n>#file: file\r\nuser.xattr="1"\r\n~~~'
5910,'crosbymichael','Modify volume mounts SELinux labels on the fly based on :Z or :z\nLooking for comment on this patch.  \r\n\r\nThe first patch should be able to be applied without any controversy.  The send patch is extending the qualifiers on the -v command to allow an admin to tell the system to relabel, content.  There might be a need for something similar for changing the DAC Permissions.'
4393,'cpuguy83','VOLUME instruction prevents a container from starting\nIf you create a volume that is already a file in the image, ``docker build`` happily completes, but you cannot run it.\r\n\r\n```\r\nsven:~/src/docker/tmp$ more Dockerfile\r\n\r\nFROM    busybox\r\nADD     Dockerfile /data\r\nVOLUME  ["/data"]\r\nsven:~/src/docker/tmp$ docker build -t test .\r\nUploading context  2.56 kB\r\nUploading context\r\nStep 0 : FROM busybox\r\n ---> 769b9341d937\r\nStep 1 : ADD Dockerfile /data\r\n ---> 8ac230d38b08\r\nStep 2 : VOLUME ["/data"]\r\n ---> Running in d9b8056add13\r\n ---> abc3d9d282e6\r\nSuccessfully built abc3d9d282e6\r\nsven:~/src/docker/tmp$ docker run -t -i -name -run_test test bash\r\n2014/03/01 08:27:08 Error: start: Cannot start container 7d8242dd731f8ff0cd89e4f2ac59e5c5eb786e4defc589a531cda116d8fa3a55: readdirent: not a directory\r\n```'
4238,'unclejack',"docker build doesn't pull down latest images from index if there is already an image locally\nIf you have an docker image local to your system, lets say version 1, and on the docker index there is a new version of that image (image 2), when you do a docker build, it will not check if there is a new version of image in the index before the build if it has one locally. This could cause some confusion, and could result in builds that aren't consistent across servers. \r\n\r\nThe way you need to handle this today, is to manually do the pull for your image before your build, and everything works fine, but it would be nice if we didn't need to do this.\r\n\r\nIdeally docker build would always try to pull down the image from the index before the build to make sure the local one is up to date. \r\n\r\nWe could add a flag to the build to skip this step to preserve what we have now, but not sure if there is a valid use case were someone might need to do that. "
