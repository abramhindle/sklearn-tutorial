@relation large.json
@attribute id integer
@attribute owner string
@attribute content string
@data
2553,'SzymonPobiega','4.7.x NServiceBus.Core NuGet package does not contain Init.ps1 script\nNuGet Install-Package NServiceBus.Host fails for >=4.7.0 with the following error message:\r\n"Add-NServiceBusMessageForwardingInCaseOfFaultConfig : The term \'Add-NServiceBusMessageForwardingInCaseOfFaultConfig\' is not recognized as the name of a cmdlet, function, script file, or operable program. Check \r\nthe spelling of the name, or if a path was included, verify that the path is correct and try again."\r\n\r\nNote that 4.6.8 and earlier versions install fine with NuGet Install-Package\r\n\r\nI\'m using a clean install of VS2013 with Update 3 on Windows 8.1.\r\n\r\nHere is the full output from the error message onwards\r\n```\r\nPM> Install-Package NServiceBus.Host -Version 4.7.3\r\n(...)\r\nAdding \'NServiceBus.Host 4.7.3\' to ClassLibraryWithNServiceBus473.\r\nSuccessfully added \'NServiceBus.Host 4.7.3\' to ClassLibraryWithNServiceBus473.\r\nAdd-NServiceBusMessageForwardingInCaseOfFaultConfig : The term \'Add-NServiceBusMessageForwardingInCaseOfFaultConfig\' is not recognized as the name of a cmdlet, function, script file, or operable program. Check \r\nthe spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt C:\\users\\sveinfid\\documents\\visual studio 2013\\Projects\\ClassLibraryWithNServiceBus473\\packages\\NServiceBus.Host.4.7.3\\tools\\install.ps1:99 char:2\r\n+     Add-NServiceBusMessageForwardingInCaseOfFaultConfig $project.Name\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-NServiceBus...seOfFaultConfig:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n \r\nAdd-NServiceBusUnicastBusConfig : The term \'Add-NServiceBusUnicastBusConfig\' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path \r\nwas included, verify that the path is correct and try again.\r\nAt C:\\users\\sveinfid\\documents\\visual studio 2013\\Projects\\ClassLibraryWithNServiceBus473\\packages\\NServiceBus.Host.4.7.3\\tools\\install.ps1:100 char:2\r\n+     Add-NServiceBusUnicastBusConfig $project.Name\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-NServiceBusUnicastBusConfig:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n \r\nAdd-NServiceBusAuditConfig : The term \'Add-NServiceBusAuditConfig\' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt C:\\users\\sveinfid\\documents\\visual studio 2013\\Projects\\ClassLibraryWithNServiceBus473\\packages\\NServiceBus.Host.4.7.3\\tools\\install.ps1:101 char:5\r\n+     Add-NServiceBusAuditConfig $project.Name\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-NServiceBusAuditConfig:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n ```\r\n\r\n'
2507,'SeanFeldman',"DataBus is looking for FileShareDatabusPath when it should not\n--\r\n\r\nSummary of the issue:\r\n\r\nAzureDataBusPersistence is a feature, which depends on DataBus feature, that registers BlobStorageDatabus in the container in it's setup method\r\n\r\nDataBus validates if an IDatabus is already registered, and if not tries to register FileShareDataBus, and goes to check for FileShareDataBusPath also in it's setup method\r\n\r\nBecause of the feature dependency, DataBus will run, and blow up, before AzureDataBusPersistence gets a chance to register the implemenation to the container\r\n\r\nChange we will make\r\n\r\n* Add an extension method UseDataBus<T>, which both sets a variable in the settingsholder that signals a custom databus, as well as enable the custom databus feature\r\n* Change DataBus setup to only register FileShareDataBus if the custom databus setting is not there"
2451,'johnsimons',"Callback doesn't contain message\nResponse message can now be accessed from callback.\r\n\r\nThis bug affect version 5 only.\r\n\r\nIn prior versions it was possible to access the reply message from a callback, this seem to be broken in v5.\r\n\r\nThe following acceptance test passes against v4.6 but fails for v5:\r\n```c#\r\npublic class When_using_callback_to_get_message : NServiceBusAcceptanceTest\r\n{\r\n    [Test]\r\n    public void Should_receive_message()\r\n    {\r\n        var context = new Context();\r\n\r\n        Scenario.Define(context)\r\n            .WithEndpoint<EndpointWithLocalCallback>(b => b.Given(\r\n                (bus, c) => bus.SendLocal(new MyRequest()).Register(r =>\r\n                {\r\n                    c.Reply = (MyReply)r.Messages.Single();\r\n                    c.CallbackFired = true;\r\n                })))\r\n            .Done(c => c.CallbackFired)\r\n            .Run();\r\n\r\n        Assert.IsNotNull(context.Reply);\r\n    }\r\n\r\n    public class Context : ScenarioContext\r\n    {\r\n        public bool CallbackFired { get; set; }\r\n        public MyReply Reply { get; set; }\r\n    }\r\n\r\n    public class EndpointWithLocalCallback : EndpointConfigurationBuilder\r\n    {\r\n        public EndpointWithLocalCallback()\r\n        {\r\n            EndpointSetup<DefaultServer>();\r\n        }\r\n\r\n        public class MyRequestHandler : IHandleMessages<MyRequest>\r\n        {\r\n            public IBus Bus { get; set; }\r\n\r\n            public void Handle(MyRequest request)\r\n            {\r\n                Bus.Reply(new MyReply());\r\n            }\r\n        }\r\n    }\r\n\r\n    [Serializable]\r\n    public class MyRequest : IMessage { }\r\n\r\n    [Serializable]\r\n    public class MyReply : IMessage { }\r\n}\r\n```"
2407,'SzymonPobiega',"FeatureStartupTasks are stopped too late\n--\r\nFor example the outbox cleaner for NH now and then blows up with:\r\n\r\n```\r\nNHibernatePersistence - Started @ 9/22/2014 5:26:18 PM\r\nUnhandled exception in remote appdomain: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'PipelineExecutor'.\r\n   at NServiceBus.Pipeline.PipelineExecutor.get_CurrentContext() in c:\\BuildAgent\\work\\1b05a2fea6e4cd32\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 51\r\n   at NServiceBus.Persistence.NHibernate.DbConnectionProvider.TryGetConnection(IDbConnection& connection, String connectionString) in y:\\BuildAgent\\work\\7292bb915dd8fc2\\src\\NServiceBus.NHibernate\\SharedSession\\DbConnectionProvider.cs:line 21\r\n   at NServiceBus.Persistence.NHibernate.StorageSessionProvider.OpenSession() in y:\\BuildAgent\\work\\7292bb915dd8fc2\\src\\NServiceBus.NHibernate\\SharedSession\\StorageSessionProvider.cs:line 50\r\n   at NServiceBus.Outbox.OutboxPersister.RemoveEntriesOlderThan(DateTime dateTime) in y:\\BuildAgent\\work\\7292bb915dd8fc2\\src\\NServiceBus.NHibernate\\Outbox\\OutboxPersister.cs:line 91\r\n   at NServiceBus.Features.NHibernateOutboxStorage.OutboxCleaner.PerformCleanup(Object state) in y:\\BuildAgent\\work\\7292bb915dd8fc2\\src\\NServiceBus.NHibernate\\Outbox\\NHibernateOutboxStorage.cs:line 83\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.TimerQueueTimer.CallCallback()\r\n   at System.Threading.TimerQueueTimer.Fire()\r\n   at System.Threading.TimerQueue.FireNextTimers()\r\n```\r\n\r\nAfter looking at the code it seems to be stopping the tasks before it disposes the builder but there seems to be a race condition where the PipelineExecutor gets disposed before and causes a blow up on endpoint stop."
2397,'jdrat2000','Symantec antivirus detects nservicebus.host.exe as a threat\nSee customer feedback:\r\n\r\n> Last night our enterprise symantec installation identified nservicebus.host.exe as a potential virus and uninstalled all windows services from the servers running nservicebus.\r\n> The identified threat was: "SONAR.SuspLaunch2"\r\n> Once we removed the false hit, the windows services came back up and started processing messages again.\r\n\r\n(Desk case 6919)'
2378,'johnsimons','Saga config still static\nThe Saga feature still has 8 static fields. Which means any state in these is share across all bus instances.'
2374,'SimonCropp','DefaultRetryPolicy.NumberOfRetries and DefaultRetryPolicy.TimeIncrease are static\nWhich means they are global (last one wins) across all bus instances'
2360,'johnsimons','re add IMessageDispatcherFactory with valid obsolete message\nsooo\r\n\r\n> replacement == use the pipeline and replace the HandlerDisaptch step\r\n'
2353,'johnsimons','Timeouts and deferred messages are delivered to local worker queue, not distributor main queue\n**In NServiceBus 4.6.3, in a clustered distributor setup, timeouts and deferred messages are delivered to local queue on workers and not to clustered queue.**\r\n\r\nTimeout messages and deferred messages are delivered directly to a specific local queue (on the server which requested the timeout/deferring) and not to the clustered queue. This bypasses the regular path which involves removing a message from the storage queue and deliver the destination queue on the worker. The worker does not know this and reports back that it is ready to handle a new message after handling the timeout message, which causes the storage queue to grow.\r\n\r\nSee [question on StackOverflow](http://stackoverflow.com/questions/25684256/increasing-number-of-messages-in-storage-queues-after-saga-timeouts) for more information'
2343,'SimonCropp','Unity builder fails on the IWantToRunWhenConfigurationIsComplete registration\nThis is a v5 beta issue\r\n\r\nThe way the core registers type seems to break unity:\r\n\r\nhttp://builds.particular.net/viewLog.html?buildId=53897&buildTypeId=NServiceBusUnityContaine_2AcceptanceTests&tab=buildLog#_focus=27&state=27'
2300,'johnsimons','Raven check needs to include an upper bound range\nNServiceBus ships with RavenDB Client v2 embedded as part of the core.\r\nAs highlighted previously in [this discussion](https://groups.google.com/forum/#!msg/particularsoftware/GEBLo3U6kw0/Oi0FmNLVB1sJ) a new nuget/dll was released to work against RavenDB v2.5.\r\n\r\nSo currently anyone using NServiceBus v4 with RavenDB v2.5 Server need to be running the new [integration package](https://github.com/Particular/NServiceBus.RavenDB/releases/tag/1.0.0) otherwise them may lose messages!\r\n\r\nTo ensure that the correct version of the RavenDB integration is being used we need to modify the Raven check that we do in the Core to restrict the upper bound version to be < 2.5'
2289,'andreasohlund','split sla from critical time\n'
2268,'andreasohlund','What should !HasBuilder do?\nin Configure this\r\n\r\n            if (!HasBuilder())\r\n            {\r\n                this.DefaultBuilder();\r\n            }\r\n\r\nresults in this being called\r\n\r\n        public static Configure DefaultBuilder(this Configure config)\r\n        {\r\n           throw new NotImplementedException();\r\n        }\r\n\r\nWhich is obviously problematic'
2255,'andreasohlund','Feature Defaults lambda should only run if feature is to be enabled\n```c#\r\nclass DF : Feature\r\n{\r\n    public DF()\r\n    {\r\n        Defaults(); // This lambda should only execute is the feature is going to be enabled\r\n    }\r\n\r\n    protected override void Setup(FeatureConfigurationContext context)\r\n    {\r\n            \r\n    }\r\n}\r\n```'
2252,'andreasohlund',"Callbacks, CorrelationId and MessageId\nI open this issue to discuss something which I stumbled over regarding callback invocations in combination with message id and correlation id. Let me give you some background:\r\n\r\nWe built a bridge which transforms MSMQ message and puts them on ActiveMQ broker. The bridge uses a stateless design. In order to have a stateless design we need to encode the MSMQ queue names on the correlation id for request / response type communication. We essentially do the following : \r\n\r\nCorrelationId = CorrelationId_BridgeMarker_ReplyToQueue. \r\n\r\nOur first implementation which receives messages on ActiveMQ and puts them into MSMQ did not only set the correlation id on the transport message headers but also set the message id equal to the correlation id. Let me explain why:\r\n\r\nWhen we receive a message from ActiveMQ this could potentially start a saga. The message id of the message which started the saga is saved to the saga data in order to be able to use that message id again in the future to do a ReplyToOriginator (so essentially that message id becomes the correlation id).\r\n\r\nBut with this implementation in place the following happens when we do register callbacks on MSMQ side:\r\n\r\nbus.Send<Request>().Register<reply>();\r\n\r\nthe callback is registered internally in messageIdToAsyncResultLookup on the unicast bus. When on ActiveMQ someone replies and the bridge blindly sets the message id the callback is never invoked because of the following check in the CallbackInvocationBehavior:\r\n\r\n            if (transportMessage.CorrelationId == transportMessage.Id) //to make sure that we don't fire callbacks when doing send locals\r\n            {\r\n                return false;\r\n            }\r\n\r\nAs the commend says this check is because you don't want to fire callbacks in case of SendLocal. So if the comment is correct (and assuming it is) in our case and in case of a SendLocal this will introduce a memory leak. The lookup table will not be cleared. I currently changed our bridge to not override the MessageId in case of a message type (NOT event or command). This solves our problem currently. But I was wondering is this check really necessary?\r\n\r\nI would argue that the callback invocation behavior shouldn't need to compare against the message id. The fact that there is a callback registered should be prioritized. This would lead to the following implementation:\r\n\r\n            if (transportMessage.CorrelationId == null)\r\n            {\r\n                return false;\r\n            }\r\n\r\n            BusAsyncResult busAsyncResult;\r\n\r\n            if (!UnicastBus.messageIdToAsyncResultLookup.TryRemove(transportMessage.CorrelationId, out busAsyncResult))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            // ... omitted\r\n\r\nOr is this check here because a SendLocal<Request>().Register<Reply>() will immidiately receive again the Request message type on the ReceivePhysicalMessageContext?\r\n\r\nThanks for the discussion."
2250,'johnsimons','Make sure MsmqWorkerAvailabilityManager is thread safe on .NET 4 in NSB 3.3.9\n`MsmqWorkerAvailabilityManager.ClearAvailabilityForWorker()` throws "System.InvalidOperationException: Property ResponseQueue was not retrieved when receiving the message. Ensure that the PropertyFilter is set correctly" if you put some stress on it with NSB 3.3.9 on .NET 4+.\r\n\r\nThe problem is that Microsoft made almost everything on MessageQueue NOT thread safe between .NET 3.5 and .NET 4. \r\n\r\n3.5 docu: http://msdn.microsoft.com/en-us/library/system.messaging.messagequeue(v=vs.90).aspx vs\r\n4 docu: http://msdn.microsoft.com/en-us/library/system.messaging.messagequeue(v=vs.100).aspx\r\n\r\nThose changes by Microsoft makes the MsmqWorkerAvailabilityManager implementation in 3.3.9 not safe, as it needs locking to work. The proposed fix, which fixes the repro, is basically to revert  @7de28f8f1dbfdf39a810800b841b0df49f02aac6. Bad luck on that one, @andreasohlund. :)\r\n\r\nCheck out repro, available [here](https://github.com/janovesk/nsb-msmqdotnet4bug).\r\n'
2226,'johnsimons','IgnoreMachineName flag is not taken into account when calculating hashcode\n'
2221,'yvesgoeleven',"InvokeHandlersBehavior skips handler invocation under certain conditions\nIf I understand correctly: if a message arrives at an endpoint that hosts a saga, but the message is not intended to be delivered at said saga, it skips it anyway. Because if there is a saga, with NotFound = true, it skips... yet context.MessageHandler is not the saga instance but another handler\r\n\r\nDiscovered in test When_receiving_a_message_that_completes_the_saga.Should_ignore_messages_afterwards\r\nwhere a second handler is used to validate that the test has completed (while the saga doesn't get that message), yet the second handler is never invoked and test just waits for timeout.\r\n\r\n"
2219,'andreasohlund','Added ProcessingMachine and OriginatingMachine headers back\nSee https://github.com/Particular/NServiceBus/commit/71379d58cdd79d468127be8dcbf1e2b24706a5fe'
2205,'andreasohlund','move testing framework to a new repo\nthis will allow us to version properly'
2188,'andreasohlund','Added better obsolete for the removed static Configure.Features\nFixes https://github.com/Particular/NServiceBus/issues/2186'
2186,'andreasohlund','Re-add the static Configure.Features\nAnd add a ObsoleteEx that guides users to either:\r\n\r\nconfig.EnableFeature<T>() or config.DisableFeature<T>()\r\n\r\nThe existing instance based .Features() needs to be renamed and split as mentioned above'
2176,'andreasohlund','Specifying the container to use is sensitive to the order\nNew api:\r\n\r\n`Configure.With(c=>c.UseBuilder<StructureMapBuilder>())`\r\n\r\nOld api:\r\n\r\n`Configure.With().StructureMapBuilder()`\r\n\r\nor\r\n\r\n`Configure.With().UsingBuilder<StructureMapBuilder>()`\r\n\r\nWith this in place the builder is available when needed'
2175,'distantcam','Patch V3 to support "non array wrapped" messages\nIn version 3.3.8 and JSON we have hard coded the assumption that messages will be wrapped in an array \r\n\r\nhttps://github.com/Particular/NServiceBus/blob/3.3.8/src/impl/Serializers/NServiceBus.Serializers.Json/JsonMessageSerializerBase.cs#L53\r\n\r\n    public object[] Deserialize(Stream stream)\r\n    {\r\n        JsonSerializer jsonSerializer = JsonSerializer.Create(JsonSerializerSettings);\r\n        jsonSerializer.ContractResolver = new MessageContractResolver(_messageMapper);\r\n        JsonReader reader = CreateJsonReader(stream);\r\n        return jsonSerializer.Deserialize<object[]>(reader);\r\n    }\r\n\r\nThis was fixed in version 4 as part of this commit\r\nhttps://github.com/Particular/NServiceBus/commit/4b82fa17f54277e3392ac336554e08703a0d6f69\r\n\r\nThe problem is that in v4 if you enable `Configure.Serialization.DontWrapSingleMessages();` and communicate with a v3 endpoint you will get \r\n\r\n    Received an empty message - ignoring.\r\n\r\nAnd the message is sent to the error log. The reason is that while v4 know how to handle the "non array wrapped" message v3 does not\r\n\r\nAlso in v5 we want to not wrap any message in arrays.  \r\n\r\nSo we need to patch 3.3.8 to remove the assumption on messages being wrapped in an array.\r\n\r\nA test harness sln for replicating these issue is here https://github.com/Particular/BugsRepro/tree/master/ArrayWrappingTests'
2143,'SimonCropp','Add support for mapping Sagas to message expressions\n--\r\n\r\nfor #943\r\n\r\nreplaces https://github.com/Particular/NServiceBus/pull/1959\r\n\r\nnow this is supported \r\n\r\n    protected override void ConfigureHowToFindSaga(SagaPropertyMapper<TestSagaData> mapper)\r\n    {\r\n        mapper.ConfigureMapping<OtherMessage>(m => m.Part1 + "_"+m.Part2)\r\n            .ToSaga(s => s.Key);\r\n    }\r\n\r\n'
2133,'synhershko','If index is stale we may miss timeouts\nI have been looking at [this](https://groups.google.com/d/msg/particularsoftware/0GAI9oqmp74/ldcTruIq9MAJ) issue reported in the mailing list.\r\n\r\nSo to summarise the issue, the user is using the Scheduler API and creates to schedule tasks, one that runs every 5secs and another one that runs every 1min.\r\nEvery so often the 5sec schedule task stops from reoccurring.\r\n\r\nHere are the [logs](https://groups.google.com/group/particularsoftware/attach/c583cdf531a6f969/Flyt.TiosCtcAgent-log.txt?part=4)\r\n\r\nAnd here is one of the timeouts stored in Raven:\r\n```json\r\n{\r\n  "Destination": {\r\n    "Queue": "Flyt.TiosCtcAgent",\r\n    "Machine": "GMBSANNTID"\r\n  },\r\n  "SagaId": "00000000-0000-0000-0000-000000000000",\r\n  "State": "PD94bWwgdmVyc2lvbj0iMS4wIiA/Pg0KPE1lc3NhZ2VzIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zPSJodHRwOi8vdGVtcHVyaS5uZXQvTlNlcnZpY2VCdXMuU2NoZWR1bGluZy5NZXNzYWdlcyI+CjxTY2hlZHVsZWRUYXNrPgo8VGFza0lkPmU2YjZlN2NmLTlmYjMtNDhiZS1iZGUwLTc0NmJhZmE3MmRlNzwvVGFza0lkPgo8TmFtZT5Cb290c3RyYXA8L05hbWU+CjxFdmVyeT5QVDVTPC9FdmVyeT4KPC9TY2hlZHVsZWRUYXNrPgo8L01lc3NhZ2VzPg0K",\r\n  "Time": "2014-05-21T08:18:00.2114720Z",\r\n  "CorrelationId": "2f849e22-d760-4ce6-846b-a33200a9b784\\\\0",\r\n  "OwningTimeoutManager": "Flyt.TiosCtcAgent",\r\n  "Headers": {\r\n    "NServiceBus.MessageId": "2f849e22-d760-4ce6-846b-a33200a9b784",\r\n    "NServiceBus.CorrelationId": "2f849e22-d760-4ce6-846b-a33200a9b784",\r\n    "NServiceBus.OriginatingEndpoint": "Flyt.TiosCtcAgent",\r\n    "$.diagnostics.originating.hostid": "522caf7d3f53a790fdcc328b6cb0d627",\r\n    "NServiceBus.MessageIntent": "Send",\r\n    "NServiceBus.Version": "4.4.2",\r\n    "NServiceBus.TimeSent": "2014-05-21 08:17:55:211472 Z",\r\n    "NServiceBus.OriginatingMachine": "GMBSANNTID",\r\n    "NServiceBus.ContentType": "text/xml",\r\n    "NServiceBus.EnclosedMessageTypes": "NServiceBus.Scheduling.Messages.ScheduledTask, NServiceBus.Core, Version=4.4.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c",\r\n    "CorrId": "2f849e22-d760-4ce6-846b-a33200a9b784\\\\0",\r\n    "WinIdName": "GMBDOMENE1\\\\sanntidintegrasjon",\r\n    "NServiceBus.RelatedTo": "5da0ead5-1701-4e2e-9b43-a33200a9b16e",\r\n    "NServiceBus.ConversationId": "a00caaba-1eab-48a7-854f-a33100a5c243",\r\n    "NServiceBus.IsDeferredMessage": "True",\r\n    "NServiceBus.Temporary.DelayDeliveryWith": "00:00:05",\r\n    "NServiceBus.Timeout.Expire": "2014-05-21 08:18:00:211472 Z",\r\n    "NServiceBus.Timeout.RouteExpiredTimeoutTo": "Flyt.TiosCtcAgent@GMBSANNTID",\r\n    "NServiceBus.Timeout.ReplyToAddress": "Flyt.TiosCtcAgent@GMBSANNTID"\r\n  }\r\n}\r\n```\r\n\r\nThe only explanation I have is if the index is stale, we could end-up skipping over timeouts.\r\n@synhershko has actually identified this issue in the https://github.com/Particular/NServiceBus.RavenDB repo and has fixed it.\r\n\r\nI cannot replicate this myself, but the index staleness is definitely a possibility and that would explain the entries I can see in the log file.\r\n\r\n'
2094,'SzymonPobiega','Incorrect logging when Retries are disabled\n--\r\n\r\nWhen both SLR and FLR are disable the logging is incorrect in two ways\r\n\r\n *  Incorrectly reports that FLR has failed when no retry was done\r\n\r\n```\r\n2014-05-06 08:34:09.544 +10:00 [Error] Message with \'"9320cdcc-6f7a-41c0-a046-a323008d3352"\' id has failed FLR and will be moved to the configured error queue.\r\n```\r\n\r\n *  Exception is reported as Info and error does not contain exception information\r\n\r\nThere are two log entries. The first one is an info which actually contains the exception details. The second is an error which does not contain the exception details. This is problematic because if the user is only monitoring warnings and above (a common scenario) they will not be able to see the exception information.\r\n\r\n```\r\n2014-05-06 08:34:09.472 +10:00 [Information] Failed to process message System.Exception: Foo .....\r\n2014-05-06 08:34:09.544 +10:00 [Error] Message with \'"9320cdcc-6f7a-41c0-a046-a323008d3352"\' id has failed FLR and will be moved to the configured error queue.\r\n```\r\n\r\nRepro here https://github.com/Particular/BugsRepro/tree/master/DisabledRetryRepro'
2078,'SimonCropp','Move to .net 4.5\nThe reasons for doing this are as follows\r\n\r\n- Allows some better optimization in the core via the use of new APIs provided in 4.5 \r\n- Some of our Satellite dependencies are already moving 4.5. For example Unity\r\n- 4.5 was release in mid 2012 so it has been out for reasonable amount of time\r\n- Less testing surface area\r\n- Also allows us to take advantages of the other various improvements in 4.5 http://msdn.microsoft.com/en-us/library/ms171868(v=vs.110).aspx#core\r\n\r\nWhat this means for consumers\r\n\r\n- The new minimum Visual Studio version will be Visual Studio 2012\r\n- The new minimum server OS will be 2008 \r\n- The new minimum desktop OS will be Vista SP2 \r\n- All assemblies (and nugets) that depend on the core will be upgraded to 4.5\r\n\r\nNote the earlier versions of NServiceBus will still be compatible and supported for .net 4\r\n\r\nFor more information on .net 4.5 see \r\n\r\n * .NET Framework 4.5 – Core New Features and Improvements http://msdn.microsoft.com/en-us/library/ms171868(v=vs.110).aspx#core\r\n * .NET Framework System Requirements http://msdn.microsoft.com/en-us/library/8z6watww%28v=vs.110%29.aspx\r\n\r\n--'
2068,'synhershko',"Ignore unknown properties when deserializing (XML)\nAs discussed with @johnsimons @SimonCropp @gbiellem , we shouldn't error when deserializing XML messages that contain properties that do not exist in the target class.\r\n\r\nThis is to bring it in par with the JSON deserializer"
2067,'synhershko','Failure in deserializing KeyValuePair[] with XML serializer\n```C#\r\n  public interface IMyEvent : IEvent\r\n  {\r\n    KeyValuePair<string, string>[] FailureArgs { get; set; }\r\n  }\r\n```\r\n\r\n```C#\r\n  public class Publisher : IWantToRunWhenBusStartsAndStops\r\n  {\r\n    public IBus Bus { get; set; }\r\n\r\n    public void Start() {\r\n      Bus.Publish<IAgreementSignFailed>(x => {\r\n        x.FailureArgs = new [] {\r\n          new KeyValuePair<string, string>("Arg0", "Value0"),\r\n          new KeyValuePair<string, string>("Arg0", "Value0")\r\n        };\r\n      });\r\n    }\r\n\r\n    public void Stop() {\r\n    }\r\n  }\r\n```\r\n\r\n```C#\r\n  class AgreementSignFailedHandler : IHandleMessages<IAgreementSignFailed>\r\n  {\r\n    public void Handle(IAgreementSignFailed message) {\r\n      Console.WriteLine(message.AgreementId.ToString());\r\n    }\r\n  }\r\n```\r\n\r\nWill fail because the XML deserializer doesn\'t know how to handle KeyValuePair[]'
2058,'indualagarsamy',"When starting a new NServiceBus Host as a standard user, exception occurs during the check for license\n**Steps to repro**\r\n1. Create a NSB host (which is not started as administrator)\r\n2. Run the nservicebus.host /install to create the queues and make it run as a user who is a Standard User. \r\n3. The service fails to start. See the following exception:\r\n\r\n```\r\n2014-04-16 12:09:29,107 [5] INFO  NServiceBus.Configure [(null)] <(null)> - Invocation of NServiceBus.IWantToRunBeforeConfiguration completed in 0.08 s\r\n2014-04-16 12:09:29,270 [5] INFO  NServiceBus.Configure [(null)] <(null)> - Invocation of NServiceBus.Config.INeedInitialization completed in 0.00 s\r\n2014-04-16 12:09:29,278 [5] FATAL NServiceBus.Hosting.GenericHost [(null)] <(null)> - Exception when starting endpoint.\r\nSystem.Exception: Failed to access 'HKEY_LOCAL_MACHINE : SOFTWARE\\ParticularSoftware : License'. Do you have permission to write to this key? ---> System.UnauthorizedAccessException: Access to the registry key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\ParticularSoftware' is denied.\r\n   at Microsoft.Win32.RegistryKey.Win32Error(Int32 errorCode, String str)\r\n   at Microsoft.Win32.RegistryKey.CreateSubKeyInternal(String subkey, RegistryKeyPermissionCheck permissionCheck, Object registrySecurityObj, RegistryOptions registryOptions)\r\n   at Microsoft.Win32.RegistryKey.CreateSubKey(String subkey, RegistryKeyPermissionCheck permissionCheck)\r\n   at Particular.Licensing.RegistryLicenseStore.TryReadLicense(String& license) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\App_Packages\\Particular.Licensing\\RegistryLicenseStore.cs:line 27\r\n   --- End of inner exception stack trace ---\r\n   at Particular.Licensing.RegistryLicenseStore.TryReadLicense(String& license) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\App_Packages\\Particular.Licensing\\RegistryLicenseStore.cs:line 53\r\n   at NServiceBus.Licensing.LicenseManager.GetExistingLicense() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Licensing\\LicenseManager.cs:line 125\r\n   at NServiceBus.Licensing.LicenseManager.InitializeLicense() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Licensing\\LicenseManager.cs:line 82\r\n   at NServiceBus.Licensing.LicenseInitializer.Init() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Licensing\\LicenseInitializer.cs:line 12\r\n   at NServiceBus.Configure.<>c__DisplayClass23`1.<ActivateAndInvoke>b__20(Type t) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Configure.cs:line 555\r\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n   at NServiceBus.Configure.ActivateAndInvoke[T](Action`1 action, Nullable`1 thresholdForWarning) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Configure.cs:line 561\r\n   at NServiceBus.Configure.Initialize() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Configure.cs:line 352\r\n   at NServiceBus.Configure.CreateBus() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Configure.cs:line 297\r\n   at NServiceBus.Hosting.GenericHost.Start() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Hosting\\GenericHost.cs:line 72\r\n\r\n```\r\n\r\n"
2057,'johnsimons','EndpointConfig.cs can get overwritten\nWhen `IConfigureThisEndpoint` implementation is in a different project `EndpointConfig.cs` content gets replaced with the default empty template.\r\n\r\nTo replicate this create a VS solution with 2 2 projects and in proj1 add:\r\n```c#\r\npublic abstract class BaseClass : IConfigureThisEndpoint, IWantCustomInitialization\r\n{\r\n    public void Init()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nAnd in proj2 add:\r\n```c#\r\npublic class EndpointConfig : BaseClass, AsA_Server\r\n{ \r\n}\r\n```'
2051,'andreasohlund','Workers use the wrong reply to address\nThe reply to address of the workers are wrongly rewritten the distributors control address instead of the main address\r\n \r\nThis was broken in 4.4.2 by this change:\r\n\r\nhttps://github.com/Particular/NServiceBus/commit/54a1da36b96500ac9807ed85828a5698bb607519\r\n'
2050,'andreasohlund','MutateIncomingMessages and MutateOutgoingMessages not honouring replacement of instance\nThis PR fixes issue #1980 \r\n\r\n@SimonCropp @andreasohlund should this go into 4.5 ?'
2044,'johnsimons','Null reference when replying from Saga not found handler\nBefore NServiceBus 4.4.2, I was able to send replies from within the saga not found handler with no problem. This code has been working since NServiceBus 4.0 and last working on 4.3.1. When I simply update to NServiceBus 4.4.2, I get this error. It may be worth noting, I am using the Ninject Builder.\r\n\r\nWhen tracing the NSB code, I see the null ref is the "Entity" property in this code block in the SagaSendBehavior.cs file/class"\r\n```\r\nif (context.TryGet(out saga))\r\n{\r\n    context.MessageToSend.Headers[Headers.OriginatingSagaId] = saga.Instance.Entity.Id.ToString();\r\n    context.MessageToSend.Headers[Headers.OriginatingSagaType] = saga.SagaType.AssemblyQualifiedName;\r\n\r\n}\r\n```\r\n\r\nFrom what I understand, there should really be no saga in context, since the saga cannot be found. In all cases when I get this exception, there really should be no saga available to handle the message, so it is correct to call the saga not found handler.\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NServiceBus.Sagas.SagaSendBehavior.Invoke(SendLogicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Sagas\\SagaSendBehavior.cs:line 19\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Behaviors.SendValidatorBehavior.Invoke(SendLogicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\SendValidatorBehavior.cs:line 17\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.Invoke(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 24\r\n   at NServiceBus.Pipeline.PipelineExecutor.Execute[T](BehaviorChain`1 pipelineAction, T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 137\r\n   at NServiceBus.Pipeline.PipelineExecutor.InvokeSendPipeline(SendOptions sendOptions, LogicalMessage message) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 90\r\n   at NServiceBus.Unicast.Behaviors.MultiMessageBehavior.Invoke(SendLogicalMessagesContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\MultiMessageBehavior.cs:line 19\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Behaviors.MultiSendValidatorBehavior.Invoke(SendLogicalMessagesContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\MultiSendValidatorBehavior.cs:line 36\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.Invoke(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 24\r\n   at NServiceBus.Pipeline.PipelineExecutor.Execute[T](BehaviorChain`1 pipelineAction, T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 137\r\n   at NServiceBus.Pipeline.PipelineExecutor.InvokeSendPipeline(SendOptions sendOptions, IEnumerable`1 messages) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 79\r\n   at NServiceBus.Unicast.UnicastBus.InvokeSendPipeline(SendOptions sendOptions, List`1 messages) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 749\r\n   at NServiceBus.Unicast.UnicastBus.SendMessages(SendOptions sendOptions, List`1 messages) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 725\r\n   at NServiceBus.Unicast.UnicastBus.Reply(Object[] messages) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 476\r\n   at NServiceBus.Unicast.UnicastBus.Reply(Object message) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 481\r\n   at MyProject.Handlers.SagaNotFoundHandler.Handle(Object message) in c:\\_projects\\MyProject\\source\\MyProject\\Handlers\\SagaNotFoundHandler.cs:line 67\r\n   at NServiceBus.Sagas.SagaPersistenceBehavior.InvokeSagaNotFoundHandlers() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Sagas\\SagaPersistenceBehavior.cs:line 110\r\n   at NServiceBus.Sagas.SagaPersistenceBehavior.Invoke(HandlerInvocationContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Sagas\\SagaPersistenceBehavior.cs:line 51\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Sagas.AuditInvokedSagaBehavior.Invoke(HandlerInvocationContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Sagas\\AuditInvokedSagaBehavior.cs:line 14\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Behaviors.SetCurrentMessageBeingHandledBehavior.Invoke(HandlerInvocationContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\SetCurrentMessageBeingHandledBehavior.cs:line 21\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.Invoke(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 24\r\n   at NServiceBus.Pipeline.PipelineExecutor.Execute[T](BehaviorChain`1 pipelineAction, T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 137\r\n   at NServiceBus.Pipeline.PipelineExecutor.InvokeHandlerPipeline(MessageHandler handler) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 69\r\n   at NServiceBus.Unicast.Behaviors.LoadHandlersBehavior.Invoke(ReceiveLogicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\LoadHandlersBehavior.cs:line 45\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.DataBus.DataBusReceiveBehavior.Invoke(ReceiveLogicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\DataBus\\DataBusReceiveBehavior.cs:line 68\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.MessageMutator.ApplyIncomingMessageMutatorsBehavior.Invoke(ReceiveLogicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\MessageMutator\\ApplyIncomingMessageMutatorsBehavior.cs:line 25\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.Invoke(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 24\r\n   at NServiceBus.Pipeline.PipelineExecutor.Execute[T](BehaviorChain`1 pipelineAction, T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 137\r\n   at NServiceBus.Pipeline.PipelineExecutor.InvokeLogicalMessagePipeline(LogicalMessage message) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\PipelineExecutor.cs:line 60\r\n   at NServiceBus.Unicast.Messages.ExecuteLogicalMessagesBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Messages\\ExecuteLogicalMessagesBehavior.cs:line 30\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Behaviors.CallbackInvocationBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\CallbackInvocationBehavior.cs:line 26\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Messages.ExtractLogicalMessagesBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Messages\\ExtractLogicalMessagesBehavior.cs:line 58\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Sagas.RemoveIncomingHeadersBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Sagas\\RemoveIncomingHeadersBehavior.cs:line 23\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Unicast.Behaviors.RaiseMessageReceivedBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\RaiseMessageReceivedBehavior.cs:line 18\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.MessageMutator.ApplyIncomingTransportMessageMutatorsBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\MessageMutator\\ApplyIncomingTransportMessageMutatorsBehavior.cs:line 22\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.Pipeline.BehaviorChain`1.<>c__DisplayClass1.<InvokeNext>b__0() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 38\r\n   at NServiceBus.UnitOfWork.UnitOfWorkBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\UnitOfWork\\UnitOfWorkBehavior.cs:line 24\r\n```\r\n\r\nThe object handler in the IHandleSagaNotFound derived class (SagaNotFoundHandler):\r\n```\r\n        public void Handle(object message)\r\n        {\r\n            var command = message as IMyCommand;\r\n\r\n            if (command == null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            var initializeCommandReply = new InitializeCommandReply\r\n            {\r\n                Result = InitializeCommandStatusResult.Failed,\r\n                Message = "No process/saga could be found to route the command to.",\r\n                TransactionId = command.TransactionId\r\n            };\r\n\r\n            this.bus.Reply(initializeCommandReply); // line 67\r\n        }\r\n```'
2023,'andreasohlund','Update the license dialog to the new platform design\nThis depends on the license pull \r\n\r\nhttps://github.com/Particular/NServiceBus/pull/2022'
2022,'andreasohlund','Platform licensing\nAdded the platform wide licensing\r\n\r\nAlso fixes #1968 '
2013,'andreasohlund','SyncOMatic update\n'
2003,'aleksandr-samila','Setup New Event Tracking for NuGet Install\nRelated #1953 \r\n\r\nGoogle Analytics is currently tracking NuGet installs incorrectly because the installer sends multiple pings to the \'configuring your machine\' URL instead of just one per machine.\r\n\r\nThe issue has been fixed by the dev team but, after the platform launch, users won\'t be able to install the entire platform via NuGet. So, instead of directing users to the \'configure your machine\' URL, successful NSB installers will be directed to:\r\n\r\nhttp://particular.net/download-the-particular-service-platform\r\n\r\nWhere they will be "encouraged" to download the entire platform.\r\n\r\nPlease add Event Tracking to the new URL and track "NuGet Installs" so it appears in the Events dashboard in Google Analytics along with website installs (MSI). Udi is only interested in seeing those two stats (no versions, no partial installs, etc.).\r\n\r\n@sfarmar @aleksandr-samila '
2001,'SimonCropp','Trial dialog corrupting SynchronizationContext\nSo when we show a windows form dialog it will set  (or overwrite) the `SynchronizationContext.Current`. This will result in callbacks being executed on `SynchronizationContext` of the dialog and not the `SynchronizationContext` of the executing process..\r\n\r\nSo the proposal for fixing this is to \r\n\r\n * store `SynchronizationContext.Current`\r\n * show license dialog\r\n * pass the stored `SynchronizationContext` back to `SynchronizationContext.SetSynchronizationContext`\r\n\r\nThoughts?'
1998,'indualagarsamy','Removed throttling / falling back to basic licensing mode when license expires\nFixes #1991 \r\nWhen a license expires, since we continue to use the trial license (expiration date), the distributor max nodes is not affected. \r\n\r\n@andreasohlund @SimonCropp @johnsimons - please review. '
1994,'indualagarsamy','Implement new license behavior. Fixes #1993\nFixes #1993 \r\n\r\nRefactored some files:\r\n- renamed LicenseDowngrader to LicenseExpirationChecker and removed ExpiryChecker class.\r\n- cleaned up the unit tests, resetting the registry key. '
1993,'indualagarsamy','Implement new license behavior \nIntroduce new behaviour when no valid license is found\r\n\r\n- [x] Log a critical error on startup if no valid license is found\r\n- [x] Log a critical error for each message processed if in debug mode\r\n- [x] Set a header on audit messages only - The header will be called, `$.diagnostics.license.expired` and the value will be either  `true` or `false`\r\n- [x] The current dialog will still be shown in debug mode just like today\r\n\r\nRelates to #1991 '
1991,'indualagarsamy','Change unlicensed behaviour to be even more safe for production\n## Relax current behaviour\r\n\r\n- [x] Remove the 1 msg/s throttling\r\n- [x] Remove the MaxWorkerNodes limitation from the distributor (please confirm @udidahan )\r\n\r\n## Introduce new behaviour when no valid license is found\r\nRelates to #1993 \r\n'
1988,'SimonCropp','Self hosting DefineEndpointName not respected when the transport is MSMQ\nI\'m self hosting the bus in a Console Application and if I use "DefineEndpointName" the name is not respected if the Transport is MSMQ.\r\nFor example using DefineEndpointName( "My" ) creates the followin queues:\r\n\r\nMy.timeouts\r\nMy.timeoutsdispatcher\r\nConsoleApplication1\r\n\r\nif I change the transport to Azure, for example, leaving all the rest of the code unchanged queues are created as expected.\r\n\r\n.m'
1979,'yvesgoeleven','Subscriptions pointing to wrong queue when local address is overriden\nThey point to the endpointname instead of the override. It was caused by logic related to the distributor that always changed the replyto header of subscription messages to the endpoint name.\r\nRelates to #1925\r\n\r\nIt was discovered by investigating a windows azure related issue:  https://github.com/Particular/NServiceBus.Azure/issues/122 '
1977,'yvesgoeleven','Add unit test for host information\nessential test the bug that was fixed by this commit\r\nhttps://github.com/Particular/NServiceBus/commit/6678625d000bef35ff6ccb3f210efec17f72d2bb'
1968,'andreasohlund','Make sure that the release data we stamp assemblies with is stable per Major.Minor\nIn order to be able to provide hotfixes for older versions we need to keep the date stable within the same Major.Minor (ie use the date of the first release).\r\n\r\nThis will be solved by this GFV feature:\r\n\r\nhttps://github.com/Particular/GitFlowVersion/issues/84'
1964,'yvesgoeleven',"Failure to configure bus from command line application\nI have a simple console application that configures a bus (MSMQ) and sends a single message. Between version 4.3.4 and 4.4.0 the application has stopped working with the exception in the stack trace below.\r\n\r\nNote that this only happens when running from a command window. It does not happen when running from visual studio (using host process or not). In both cases I am running in a non-elevated context.\r\n\r\nIn case it is down to user error, here is the guts of the bus configuration code that is failing:\r\n\r\n```C#\r\nConfigure.Serialization.Xml();\r\nbus = Configure.With()\r\n    .Log4Net()\r\n    .DefaultBuilder()\r\n    .UseTransport<Msmq>()\r\n    .UnicastBus()\r\n    .SendOnly();\r\n```\r\n\r\nHere is the exception:\r\n\r\n```\r\nUnhandled Exception: Autofac.Core.DependencyResolutionException: An exception was thrown while invoking the constructor 'Void .ctor()' on type 'UnicastBus'. ---> Index was outside the bounds of the array. (See inner exception for details.) ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at NServiceBus.Unicast.UnicastBus..ctor() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 41\r\n   at lambda_method(Closure , Object[] )\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Lifetime.LifetimeScope.GetOrCreateAndShare(Guid id, Func`1 creator) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Activators.Reflection.AutowiringPropertyInjector.InjectProperties(IComponentContext context, Object instance, Boolean overrideSetValues) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Registration.ComponentRegistration.RaiseActivating(IComponentContext context, IEnumerable`1 parameters, Object& instance) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Autofac.Features.Collections.CollectionRegistrationSource.<>c__DisplayClass4.<RegistrationsFor>b__0(IComponentContext c, IEnumerable`1 p) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Activators.Delegate.DelegateActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.Core.Resolving.ResolveOperation.Execute(IComponentRegistration registration, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Scheduling\\ScheduledTask.cs:line 0\r\n   at NServiceBus.ObjectBuilder.Autofac.AutofacObjectBuilder.ResolveAll(IComponentContext container, Type componentType) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\ObjectBuilder\\Autofac\\AutofacObjectBuilder.cs:line 192\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.BuildAll[T]() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\ObjectBuilder\\Common\\CommonObjectBuilder.cs:line 179\r\n   at NServiceBus.Configure.Initialize() in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Configure.cs:line 368\r\n   at NServiceBus.ConfigureExtensions.SendOnly(Configure config) in c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Config\\ConfigureExtensions.cs:line 19\r\n   at DtcTest1.Program.CreateBus() in c:\\dev\\src\\DtcTest1\\DtcTest1\\Program.cs:line 19\r\n   at DtcTest1.Program.Main(String[] args) in c:\\dev\\src\\DtcTest1\\DtcTest1\\Program.cs:line 32\r\n```"
1953,'andreasohlund','Improve the experience for first time users installing NServiceBus via NuGet\nThis only applies to new users. If we detect that NServiceBus/the platform is already installed on their machine we do nothing. Existing installs can be detected in 2 ways:\r\n\r\n1. The ["MachinePrepared"]( https://github.com/Particular/NServiceBus/blob/77c1b837b2b08898268fddda0ef235e4aa7f8961/packaging/nuget/tools/init.ps1#L19) regkey\r\n2. The platform installer hasn\'t been installed (will be introduced when the PI is ready - TBD sync with the PI specs)\r\n\r\n## Scenarios\r\n\r\n### New user joining an existing team opening up the solution for the first time\r\ninit.ps1 will detect this and pop this page in the vs browser:\r\nhttp://particular.net/download-the-particular-service-platform?version={nservicebus version}\r\n\r\n### New user opening up a downloaded sample\r\ninit.ps1 will detect that this and pop this page in the vs browser:\r\nhttp://particular.net/download-the-particular-service-platform?version={nservicebus version}&sample={name of sample}\r\n\r\n* Name of the sample will be parsed from the path.\r\n\r\n### New user installing NServiceBus into a fresh solution\r\n`install.ps1` will detect this and pop this page in the vs browser:\r\nhttp://particular.net/download-the-particular-service-platform?version={nservicebus version}?install=true\r\n\r\n## Notes\r\n\r\n* init.ps1 will only be invoked if the package manager console is loaded (which I think is the default in vs2013)  - https://connect.microsoft.com/VisualStudio/feedback/details/762468/nuget-doesnt-run-init-ps1-script-when-opening-solution\r\n\r\n* Note that the "MachinePrepared" key is written [once per major minor](https://github.com/Particular/NServiceBus/blob/77c1b837b2b08898268fddda0ef235e4aa7f8961/packaging/nuget/tools/init.ps1#L28), We should change that to be once per machine {TBD - new issue}'
1943,'johnsimons','Cant Send in 4.2 and Return in 3.x\nWhen a 3.X endpoint does a `Bus.Return` that targets a 4.2.0 endpoint the v4 endpoint can\'t process the message. This makes it wire incompatible.\r\n\r\n\r\nrepro https://github.com/Particular/BugsRepro/tree/master/1943MissingCompletionMessage\r\n\r\nSo in a 4.2 endpoint \r\n\r\n```\r\nBus.Send("Returner", new Message())\r\n  .Register<int>(i => Debug.WriteLine(i));\r\n```\r\n\r\nand in a  3.3.8 endpoint\r\n\r\n        public void Handle(Message message)\r\n        {\r\n            Bus.Return(5);\r\n        }\r\n\r\nresults in \r\n\r\n```\r\nSystem.TypeLoadException occurred\r\n  HResult=-2146233054\r\n  Message=Could not determine type for node: \'CompletionMessage\'.\r\n  Source=NServiceBus.Core\r\n  TypeName=""\r\n  StackTrace:\r\n       at NServiceBus.Serializers.XML.XmlMessageSerializer.InferNodeType(XmlNode node, Object parent) in :line 0\r\n  InnerException: \r\n```\r\n\r\nwhich then bubbles\r\n```\r\nSystem.Runtime.Serialization.SerializationException occurred\r\n  HResult=-2146233076\r\n  Message=An error occurred while attempting to extract logical messages from transport message NServiceBus.TransportMessage\r\n  Source=NServiceBus.Core\r\n  StackTrace:\r\n       at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n  InnerException: System.TypeLoadException\r\n       HResult=-2146233054\r\n       Message=Could not determine type for node: \'CompletionMessage\'.\r\n       Source=NServiceBus.Core\r\n       TypeName=""\r\n       StackTrace:\r\n            at NServiceBus.Serializers.XML.XmlMessageSerializer.InferNodeType(XmlNode node, Object parent) in :line 0\r\n            at NServiceBus.Serializers.XML.XmlMessageSerializer.Process(XmlNode node, Object parent, Type nodeType) in :line 0\r\n            at NServiceBus.Serializers.XML.XmlMessageSerializer.Deserialize(Stream stream, IList`1 messageTypesToDeserialize) in :line 0\r\n            at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Extract(TransportMessage m) in :line 0\r\n            at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n       InnerException: \r\n```\r\n\r\nAlso if we switch to the Json serializer we get \r\n```\r\nCould not find type \'NServiceBus.Unicast.Transport.CompletionMessage\' in assembly \r\n\'NServiceBus.Core, Version=4.2.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c\'.\r\n```'
1940,'synhershko','Better error message when we cant contact storage\nSo here https://groups.google.com/forum/#!topic/particularsoftware/vp-xLuk3AyE a user was running a sample and got\r\n\r\n```\r\nStacktrace:   at System.Net.HttpWebRequest.GetResponse()\r\nat Raven.Client.Connection.HttpJsonRequest.ReadJsonInternal(Func`1 getResponse) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonRequest.cs:line 341\r\nat Raven.Client.Connection.HttpJsonRequest.ReadResponseJson() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonRequest.cs:line 239\r\nat Raven.Client.Connection.ServerClient.DirectQuery(String index, IndexQuery query, String operationUrl, String[] includes, Boolean metadataOnly, Boolean includeEntries) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:line 957\r\nat Raven.Client.Connection.ServerClient.<>c__DisplayClass53.<Query>b__52(String u) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:line 917\r\nat Raven.Client.Connection.ReplicationInformer.TryOperation[T](Func`2 operation, String operationUrl, Boolean avoidThrowing, T& result) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ReplicationInformer.cs:line 559\r\nat Raven.Client.Connection.ReplicationInformer.ExecuteWithReplication[T](String method, String primaryUrl, Int32 currentRequest, Int32 currentReadStripingBase, Func`2 operation) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ReplicationInformer.cs:line 525\r\nat Raven.Client.Connection.ServerClient.ExecuteWithReplication[T](String method, Func`2 operation) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:line 174\r\nat Raven.Client.Connection.ServerClient.Query(String index, IndexQuery query, String[] includes, Boolean metadataOnly, Boolean indexEntriesOnly) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:line 917\r\nat Raven.Client.Document.AbstractDocumentQuery`2.ExecuteActualQuery() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\AbstractDocumentQuery.cs:line 535\r\nat Raven.Client.Document.AbstractDocumentQuery`2.InitSync() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\AbstractDocumentQuery.cs:line 518\r\nat Raven.Client.Document.AbstractDocumentQuery`2.get_QueryResult() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\AbstractDocumentQuery.cs:line 505\r\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.ExecuteQuery[TProjection]() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Linq\\RavenQueryProviderProcessor.cs:line 1425\r\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.Execute(Expression expression) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Linq\\RavenQueryProviderProcessor.cs:line 1398\r\nat Raven.Client.Linq.RavenQueryProvider`1.Execute(Expression expression) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Linq\\RavenQueryProvider.cs:line 135\r\nat Raven.Client.Linq.RavenQueryProvider`1.System.Linq.IQueryProvider.Execute(Expression expression) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Linq\\RavenQueryProvider.cs:line 190\r\nat Raven.Client.Linq.RavenQueryInspector`1.GetEnumerator() in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Linq\\RavenQueryInspector.cs:line 99\r\nat System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\nat System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\nat NServiceBus.Persistence.Raven.TimeoutPersister.RavenTimeoutPersistence.GetNextChunk(DateTime startSlice, DateTime& nextTimeToRunQuery) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Persistence\\Raven\\TimeoutPersister\\RavenTimeoutPersistence.cs:line 97\r\nat NServiceBus.Timeout.Hosting.Windows.TimeoutPersisterReceiver.Poll(Object obj) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Timeout\\Hosting\\Windows\\TimeoutPersisterReceiver.cs:line 79\r\nat System.Threading.Tasks.Task.Execute()\r\nException:  An exception of type \'System.Net.WebException\' occurred in NServiceBus.Core.dll but was not handled in user code : "Unable to connect to the remote server"\r\n```\r\n\r\nWe really should give a better message than `Unable to connect to the remote server` when we cant contact to storage. '
1937,'johnsimons',"Abort the startup if we encounter a assembly scanning error\nSince we now detect and don't even try to load non .net asm we can now blow up and stop the endpoint from starting.\r\n\r\nWe should make sure we create a good exception message telling the user:\r\n\r\n* The assembly that failed\r\n* The inner loader ex\r\n* Tell them how to asm redirect\r\n* Give them the syntax for the redirect (since we know the versions)\r\n\r\nWe also need a option to opt in to the old behaviour just to be safe. \r\n\r\nThis also needs to work for the host (since the host passes the list of asms)"
1934,'johnsimons','NServiceBus.Testing - Running the test in Full duplex results in System.Argument exception\n**Steps to repro**\r\n1. Convert the full duplex sample to use version `4.4.0-Alpha0001-0002`\r\n2. Execute the unit test in the `MyServer.Tests` project\r\n3. The test fails, notice the below exception:\r\n\r\n````\r\nSystem.ArgumentException : The handler object created does not implement IHandleMessages<T>.\r\nParameter name: handlerCreationCallback\r\n   at NServiceBus.Testing.Test.Handler(Func`2\xa0handlerCreationCallback) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Testing\\Test.cs: line 211\r\n   at MyServer.Tests.Tests.TestHandler() in Tests.cs: line 21\r\n````'
1925,'indualagarsamy','When using NServiceBus version 4.3.x and an event is sent through a Distributor it is incorrectly received by multiple workers instead of just one. \nWhen using the distributor in version `4.3.x`, and the workers are subscribing to an event, having the message mapping for the event in the app.config of the worker causes each worker to handle the event, instead of just one worker.\r\n\r\n**If you are affected by this bug:**\r\n\r\n * Update your distributor/worker endpoints to the the 4.3.4 hotfix release.\r\n * Inspect the current subscription entries for the publisher. Remove any extra subscription entries that are already registered for the workers for the event. \r\n * Restart your endpoint. \r\n\r\n## How to delete your subscription entries when using RavenDB persistence:\r\n\r\n### 1 Open the Raven Management Studio\r\n\r\nBrowse to your RavenDB url. if RavenDB is installed using the default ports the url is either http://servername:8080 or http://servername:8081, otherwise use the appropriate port number.\r\n\r\n### 2 Find the correct database\r\n\r\nIdentify the database of the publisher endpoint (the database name matches the endpoint name) and double click to open the database.\r\n![image](https://f.cloud.github.com/assets/854553/2084411/46442fb6-8e21-11e3-9f9b-63e31f53fa50.png)\r\n\r\n### 3 Identify the subscription\r\n\r\nYou will see the subscriptions list. If there are multiple subscription documents, Identify the subscription document based on the event type.  For example,  `Example.Messages.Events.MyEvent` as specified in the `MessageType` column.\r\n![image](https://f.cloud.github.com/assets/854553/2084414/64545a8a-8e21-11e3-9e40-cbb97e469881.png)\r\n\r\n### 4 Delete the erroneous subscribers\r\nDouble click on the document to open the subscription list. Select the worker nodes that have been erroneously subscribed to the event and press delete.\r\n![image](https://f.cloud.github.com/assets/854553/2090460/d49c60a8-8e94-11e3-902f-08c0cd922bb1.png)\r\n\r\nOnce the entries are removed, click on Save to save the document.\r\n![image](https://f.cloud.github.com/assets/854553/2090480/0e41d9dc-8e95-11e3-8aa6-1c9f8b881d49.png)\r\n\r\n## How to delete your subscription entries when using NHibernate persistence:\r\n\r\n### 1 Find your Database in SQL Management Studio\r\n\r\nUsing Microsoft SQL Management Studio, connect to the appropriate persistence database specified in the `NServiceBus/Persistence` connection string in the app.config of the endpoint\r\n\r\n```xml\r\n<connectionStrings>\r\n <add name="NServiceBus/Persistence" connectionString="Data Source=.\\SQLEXPRESS;Initial Catalog=NSERVICEBUS;Integrated Security=True" />\r\n</connectionStrings>\r\n```\r\n\r\n### 2 Delete the erroneous subscribers\r\nFind out the erroneous subscribers by running\r\n```sql\r\nselect * \r\n    FROM [NServiceBus].[dbo].[Subscription]\r\n    where TypeName=\'Example.Messages.Events.MyEvent\'\r\n```\r\n\r\nTo clear out the subscriptions for the event `Example.Messages.Events.MyEvent`, delete the subscription entries for the workers. For example:\r\n\r\n```sql\r\ndelete\r\n    FROM [NServiceBus].[dbo].[Subscription]\r\n    where TypeName=\'Example.Messages.Events.MyEvent\'\r\n    and SubscriberEndpoint in (\'Example.NServiceBus.Worker@machine1\', \'Example.NServiceBus.Worker@machine2\')\r\n```\r\n\r\n--\r\n\r\nI have a Publisher, Distributor and two Workers.  The Workers are configured to enlist with the Distributor and subscribe to the events published by the Publisher.\r\n\r\nExpected outcome would be that when Publishing an Event the Distributor would load balance this event between the two workers.\r\n\r\nActual outcome is that both Workers are receiving the event, and in the Subscription table(using NServiceBus.NHibernate) for the Publisher there is an entry with the endpoint of both Workers thus appears that the Distributor is being bypassed.\r\n\r\nSample Solution: https://dl.dropboxusercontent.com/u/8748846/Example.NServiceBus.zip\r\n\r\nSee the discussioin here for further context of issue: https://groups.google.com/forum/#!topic/particularsoftware/2-634cVL5Lw'
1910,'andreasohlund',"V4.3 subscribers fail to subscribe to v3.X publishers\nVersion 4.3.0 introduced a bug where the NServiceBus.Version header didn't get populated for the control messages containing the subscribe/unsubscribe requests. This meant that our mutators didn't mutate them correctly causing the requests to be misinterpreted.\r\n\r\nEffected transports: Msmq, SqlServer\r\n\r\nRepro\r\n\r\n * Clone this https://github.com/gbiellem/PubSubRepro\r\n * Set as startup MyPublisher (3.3.8), Subscriber1 (4.3) and Subscriber2 (4.3)\r\n * Start\r\n * Press Enter in  the publisher\r\n * Message not received by subscribers"
1905,'andreasohlund','Add `OriginatingHostId` and `ProcessingHostId` headers that represent the current "host"\nWe currently have the `ProcessingMachine` and `OriginatingMachine` headers. These do not accurately reflect all concepts of a "Host". For example when hosting in Azure.\r\n\r\nSo the headers `OriginatingHostId`, `HostId` and `HostDisplayName` have been added to be environment agnostic where "machine" does not make sense.\r\n\r\nThe headers `ProcessingMachine` and `OriginatingMachine` have been marked as obsolete and will be removed in 5.0.'
1903,'nulltoken','Add a meta test to make sure behaviors are public\nTo prevent us from releasing behaviors that can\'t be replaced we should enforce the following.\r\n\r\n# Rule\r\n\r\nAll types implementing IBehavior should have at least the following attributes:\r\n\r\n```\r\n\r\n[Obsolete("This is a prototype API. May change in minor version releases.")]\r\n[EditorBrowsable(EditorBrowsableState.Never)]\r\n\r\n\r\n```'
1893,'SimonCropp','When a message is forwarded to the error queue, the stack trace of the exception is too large\nWhen a message is forwarded to the error queue, the stack trace that is stored in the header information for the message in the error queue is currently too long. We should include the inner exception that caused the problem instead of the entire stack trace which includes the entire pipeline steps.\r\n\r\n--\r\n\r\n**Steps to repro**\r\n1. Run the error handling sample and send a message to the error queue\r\n2. Inspect the message headers using a tool like QueueExplorer for the exception details. \r\n\r\n\r\n'
1889,'johnsimons','Timeout messages can incorrectly end up in error queue after Bus restart\nWhen the bus is restarted using `Bus.Start()`, `Bus.Shutdown()` then `Bus.Start()` timeout messages can throw an exception and end up in the error queue.\r\n\r\nIf a saga message handler requests any timeouts, the message being handled is rolled back and always ends up in error queue.\r\n\r\n--\r\n\r\n`TimeoutPushed.BeginInvoke` throws `System.ArgumentException` saying *The delegate must have only one target.* inside  `DefaultTimeoutManager.PushTimeout()`\r\n\r\nThis is because `TimeoutPersisterReceiver.Stop` does not unsubscribe from `TimeoutManager.TimeoutPushed` event\r\n\r\nStack trace below:\r\n```\r\nNServiceBus.Core.dll!NServiceBus.Timeout.Core.DefaultTimeoutManager.PushTimeout(NServiceBus.Timeout.Core.TimeoutData timeout) Line 42 + 0x8a bytes\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Timeout.Hosting.Windows.TimeoutMessageProcessor.HandleInternal(NServiceBus.TransportMessage message) Line 121\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Timeout.Hosting.Windows.TimeoutMessageProcessor.Handle(NServiceBus.TransportMessage message) Line 52\tC#\r\nNServiceBus.Core.dll!NServiceBus.Satellites.SatelliteLauncher.HandleMessageReceived(object sender, NServiceBus.Unicast.Transport.TransportMessageReceivedEventArgs e, NServiceBus.Satellites.ISatellite satellite) Line 92 + 0x20 bytes\tC#\r\nNServiceBus.Core.dll!NServiceBus.Satellites.SatelliteLauncher.StartSatellite.AnonymousMethod__7(object o, NServiceBus.Unicast.Transport.TransportMessageReceivedEventArgs e) Line 107 + 0x37 bytes\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Unicast.Transport.TransportReceiver.OnTransportMessageReceived(NServiceBus.TransportMessage msg) Line 453 + 0x33 bytes\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Unicast.Transport.TransportReceiver.ProcessMessage(NServiceBus.TransportMessage message) Line 351 + 0xc bytes\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Unicast.Transport.TransportReceiver.TryProcess(NServiceBus.TransportMessage message) Line 260\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Transports.Msmq.MsmqDequeueStrategy.ProcessMessage(NServiceBus.TransportMessage message) Line 288 + 0x11 bytes\tC# \t\r\nNServiceBus.Core.dll!NServiceBus.Transports.Msmq.MsmqDequeueStrategy.Action() Line 239 + 0xc bytes\tC#\r\n mscorlib.dll!System.Threading.Tasks.Task.InnerInvoke() + 0x49 bytes\t\r\n mscorlib.dll!System.Threading.Tasks.Task.Execute() + 0x2e bytes\t\r\n// lines removed for brevity\r\n System.Threading.ContextCallback callback, object state) + 0x41 bytes\t\r\n mscorlib.dll!System.Threading.ThreadHelper.ThreadStart(object obj) + 0x4e bytes\t\r\n \t[Native to Managed Transition]\t\r\n kernel32.dll!@BaseThreadInitThunk@12()  + 0x12 bytes\t\r\n ntdll.dll!___RtlUserThreadStart@8()  + 0x27 bytes\t\r\n ntdll.dll!__RtlUserThreadStart@8()  + 0x1b bytes\t\r\n```'
1885,'johnsimons','When self hosting messages are lost after `IStartableBus.Shutdown()` followed with `IStartableBus.Start()`\nWhen self hosting, all messages are lost after restarting the bus (ie calling `Shutdown` followed by `Start` on `IStartableBus`.\r\n\r\nMessages are removed from the queue but no handlers are called.\r\n\r\n--\r\n\r\n### Workaround\r\n\r\n```\r\nprivate static void SubscribeToEvent(IStartableBus bus, string eventName, string methodName)\r\n{\r\n\tvar unicastBus = (UnicastBus)bus;\r\n\tvar transportType = unicastBus.Transport.GetType();\r\n\tvar eventInfo = transportType.GetEvent(eventName);\r\n\r\n\tvar handler = unicastBus.GetType().GetMethod(methodName, BindingFlags.NonPublic | BindingFlags.Instance);\r\n\tvar d = Delegate.CreateDelegate(eventInfo.EventHandlerType, bus, handler);\r\n\r\n\tobject[] methodArgs = { d };\r\n\tvar removeHandler = eventInfo.GetRemoveMethod();\r\n\tremoveHandler.Invoke(unicastBus.Transport, methodArgs);\r\n\r\n\tvar addHandler = eventInfo.GetAddMethod();\r\n\taddHandler.Invoke(unicastBus.Transport, methodArgs);\r\n}\r\n\r\nStartableBus.Start(() =>\r\n\t{\r\n\t\tSubscribeToEvent(StartableBus, "StartedMessageProcessing", "TransportStartedMessageProcessing");\r\n\t\tSubscribeToEvent(StartableBus, "TransportMessageReceived", "TransportMessageReceived");\r\n\t\tSubscribeToEvent(StartableBus, "FinishedMessageProcessing", "TransportFinishedMessageProcessing");\r\n\t\tSubscribeToEvent(StartableBus, "FailedMessageProcessing", "TransportFailedMessageProcessing");\r\n\t});\r\n```\r\n\r\n### Reproduced\r\n\r\nReproduced on latest MSMQ gateway sample by modifying `SiteB.Program`\r\n\r\n```\r\nnamespace SiteB\r\n{\r\n    using System;\r\n    using NServiceBus;\r\n\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            var bus = Configure.With()\r\n                .DefaultBuilder()\r\n                .UseTransport<Msmq>()\r\n                .UnicastBus()\r\n                .FileShareDataBus(".\\\\databus")\r\n                .UseInMemoryTimeoutPersister()\r\n                .RunGateway() //this line configures the gateway\r\n\r\n                    // This tells NServiceBus to use memory to persist & deduplicate messages arriving from NServiceBus v3.X.\r\n                    // If omitted, RavenDB will be used by default. Required for backwards compatibility\r\n                    .UseInMemoryGatewayPersister()\r\n\r\n                    // This tells NServiceBus to use memory to deduplicate message ids arriving from NServiceBus v4.X.\r\n                    // If omitted, RavenDB will be used by default\r\n                    .UseInMemoryGatewayDeduplication()\r\n\r\n                // Uncomment lines below to use NHibernate persister & deduplication for gateway messages\r\n                // (create a new database called gateway in \\SQLEXPRESS - see App.config for connection strings and other settings)\r\n                //    .UseNHibernateGatewayPersister()\r\n                //    .UseNHibernateGatewayDeduplication()\r\n\r\n                .CreateBus();\r\n\r\n\t\t\tbus.Start();\r\n\t\t\tbus.Shutdown(); //  <= added this and line below\r\n\t        bus.Start();\r\n\r\n            Console.WriteLine("Waiting for price updates from the headquarter - press any key to exit");\r\n\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHaven\'t tested on any other transports but I think this will be the case across all transports.\r\n\r\n`PipelineFactory.InvokeReceivePhysicalMessagePipeline();` is never called after the restart'
1872,'johnsimons','Raise a critical exception if `IWantToRunWhenBusStartsAndStops` `Start` or `Stop` throws an exception\nCurrently if the `IWantToRunWhenBusStartsAndStops` methods `Start` or `Stop` throw an exception the endpoint still starts.\r\n\r\nThis can hides critical issues from the user.\r\n\r\nWe now raise a critical exception that will shutdown the bus.'
1871,'indualagarsamy','InMemory.Raise throws when using CastleWindsorBuilder\nDue to the pipeline not wrapping `InMemory.Raise` in a child container an exception can be thrown\r\n\r\n    InvalidOperationException: Scope was not available. Did you forget to call container.BeginScope()?\r\n\r\n--\r\n\r\nhttps://gist.github.com/kijanawoodard/8118380\r\n\r\nhttps://groups.google.com/forum/#!topic/particularsoftware/PjedMvIwG0U\r\n\r\n'
1861,'indualagarsamy','When using Azure ServiceBus, not passing in the endpoint address for subscriptions causes a null reference exception.\nWhen we fixed issue #1837 in version `4.3.1`, a check was added to ignore the address count and call the `SubscriptionManager.Subscribe` passing in null as the endpoint address for brokered transports with centralized pub sub support. While it works for ActiveMQ and RabbitMQ, the azure transport expects an address. Passing in null causes a NRE.\r\n\r\n--\r\n**Reason**:\r\nThe endpoint address contains namespace information necessary for the transport. \r\n\r\n**Offending code:**\r\nhttps://github.com/Particular/NServiceBus/blob/e5a5dece716f1cd5020fac7f1f32f8e876bb89c2/src/NServiceBus.Core/Unicast/UnicastBus.cs#L374-385\r\n\r\n**Proposed Solution**\r\n\r\n````c#\r\nif (TransportDefinition.HasSupportForCentralizedPubSub && !IsAzureTransport())\r\n{   \r\n    // We are dealing with a brokered transport wired for auto pub/sub.\r\n    SubscriptionManager.Subscribe(messageType, null);\r\n    return;\r\n}\r\n\r\n[ObsoleteEx(RemoveInVersion = "5.0")]\r\nbool IsAzureTransport()\r\n{\r\n     return TransportDefinition.GetType().Name.ToLower().Contains("azure");\r\n}\r\n\r\n````\r\n\r\n'
1856,'andreasohlund','Feature pipeline config\n'
1852,'johnsimons','Read license from a version agnostic location, so that existing licenses need not be re-installed for newer releases\nOur current way of handling licenses in the registry is wrong since it looks for a subkey containing the {major}.{minor}. This means that users that have installed a 4.2/4.3 license will have to reinstall it again for 4.4 even though the license it self is valid for 4.4\r\n\r\n--\r\n- [x] Update the license installer to put licenses in the HKLM\\ParticularSoftware\\NServiceBus\r\n- [x] Update the licenseinstaller.exe according to the above (#1850)\r\n- [x] Modify the core to read license from the new location (HKLM\\ParticularSoftware\\NServiceBus)\r\n- [x] Modify the core to read license from the old locations as well (4.0, 4.1, 4.2, 4.3)\r\n- [ ] Send email to all customers with instruction to reinstall their license (to make it end up in the correct location)\r\n- [x] Update init.ps to use package version instead of the cmdlet (#1849 )'
1851,'johnsimons','Bus failing to publish interface-defined event when messageConstructor not defined\nWhen publishing using interface-defined events and when the messageConstructor not defined, an exception is thrown and the event is not published.\r\n\r\n--\r\nI came across an error situation which should have been a lot quicker to identify the root cause.\r\n\r\nUsing NServiceBus.Core 4.3.0 and NServiceBus.RabbitMQ 3.2.1\r\nI have an event ITestEvent with one property.  I\'m also using Unobtrusive mode (have been for ages, this isn\'t a new message type).\r\nIf my commandhandler executes the following code it all works as expected:\r\n```cs\r\npublic override void Handle(TestCommand command)\r\n{\r\n    LogTo.Info("Processing a {0} command...", command.GetType().Name);\r\n    Bus.Publish<ITestEvent>(e => e.TestId = Guid.NewGuid());\r\n}\r\n```\r\nbut if my commandhandler executes the following code (forgetting to specify the messageConstructor for the event):\r\n```cs\r\npublic override void Handle(TestCommand command)\r\n{\r\n    LogTo.Info("Processing a {0} command...", command.GetType().Name);\r\n    Bus.Publish<ITestEvent>();  // oops, forgot to set the event properties\r\n}\r\n```\r\nthen I get the following error log:\r\n```\r\nNServiceBus.Unicast.Transport.TransportReceiver - "Failed to process message" with exception \r\nSystem.Exception: Could not find Metadata for \'System.Object\'.\r\nPlease ensure the following:\r\n1. \'System.Object\' is included in initial scanning see File Scanning: http://particular.net/articles/the-nservicebus-host\r\n2. \'System.Object\' implements either \'IMessage\', \'IEvent\' or \'ICommand\' or alternatively, if you don\'t want to implement an interface, you can use \'Unobtrusive Mode\' see: http://particular.net/articles/unobtrusive-mode-messages\r\n   at NServiceBus.Unicast.Messages.MessageMetadataRegistry.GetMessageDefinition(Type messageType) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Messages\\MessageMetadataRegistry.cs:line 18\r\n   at NServiceBus.Unicast.Messages.LogicalMessageFactory.<CreateMultiple>b__0(Object m) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Messages\\LogicalMessageFactory.cs:line 53\r\n   at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at NServiceBus.Unicast.Messages.LogicalMessageFactory.CreateMultiple(IEnumerable`1 messages) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Messages\\LogicalMessageFactory.cs:line 48\r\n   at NServiceBus.Unicast.UnicastBus.Publish[T](T[] messages) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 305\r\n   at NServiceBus.Unicast.UnicastBus.Publish[T](T message) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 276\r\n   at NServiceBus.Unicast.UnicastBus.Publish[T](T[] messages) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 295\r\n   at NServiceBus.Unicast.UnicastBus.Publish[T]() in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 284\r\n   at Xero.PostOffice.Test5.TestCommandHandler.Handle(TestCommand command) in c:\\Dev\\temp\\Xero.PostOffice.Test5\\Xero.PostOffice.Test5\\TestCommandHandler.cs:line 19\r\n   at lambda_method(Closure , Object , Object )\r\n   at NServiceBus.Unicast.HandlerInvocationCache.Invoke(Object handler, Object message, Dictionary`2 dictionary) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\HandlerInvocationCache.cs:line 61\r\n   at NServiceBus.Unicast.HandlerInvocationCache.InvokeHandle(Object handler, Object message) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\HandlerInvocationCache.cs:line 22\r\n   at NServiceBus.Unicast.Behaviors.LoadHandlersBehavior.<Invoke>b__1(Object handlerInstance, Object message) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\Unicast\\Behaviors\\LoadHandlersBehavior.cs:line 38\r\n\tSNIP\r\n   at NServiceBus.UnitOfWork.UnitOfWorkBehavior.Invoke(ReceivePhysicalMessageContext context, Action next) in y:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\UnitOfWork\\UnitOfWorkBehavior.cs:line 20\r\n```\r\n\r\nSo two questions:\r\n1) My ITestEvent should only ever be published when all its properties have been specified - is there a way to enforce this?\r\n2) Regardless, the error message isn\'t at all helpful - the error isn\'t a bad inheritance chain or unobtrusive msg settings, it\'s that I forgot to set the event properties.  The error message is misleading.'
1850,'johnsimons','Update InstallLicense.exe to read version from license file\nInstead of using Assembly version, we should read the version from the license.xml file.\r\n\r\nThis is needs to be done to fix #1845'
1849,'johnsimons','Update init.ps1 to use package version\nInstead of using `Get-NServiceBusVersion` cmdlet we should be using `$package.Version`\r\n\r\nSee https://github.com/Particular/NServiceBus/blob/develop/packaging/nuget/tools/init.ps1#L21\r\n\r\nThis is needs to be done to fix #1845'
1846,'andreasohlund','remove test InMemoryDataBus classes\nuse the real implementation instead'
1845,'johnsimons',"Remove Get-NServiceBusVersion commandlet\nGet-NServiceBusVersion commandlet reported the version of `NServiceBus.Powershell.dll` and not the version of the NSB within the solution. NServiceBus.Powershell dll has been separated from the core in order that it could be released independantly of the core if need be. This commandlet does not make sense, as we can have multiple endpoints referencing different versions of NServiceBus on the same machine.\r\n\r\n--\r\n**Steps to repro:**\r\nI have nsb 4.2 installed via MSI while working in VS i've downloaded via nuget v4.3, Get-NServiceBusVersion reports back:\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n4      2      0      -1      \r\n\r\nwhile the reference assembly of the project shows v4.3 of the assembly.\r\n "
1843,'yvesgoeleven','Transport cannot check if queues need to be created or not.\nAs ConfigureQueueCreation.DontCreateQueues is internal, making it public but decorated with [EditorBrowsable(EditorBrowsableState.Advanced)]'
1831,'andreasohlund','delay loading of license\nto give fluent API a chance to configure it'
1823,'johnsimons','Check for royalty free license expiry\nAdd grace period only if date less than DateTime.MaxValue'
1822,'johnsimons',"ExpiryChecker.IsExpired doesn't work well with royalty free licenses\nRoyalty free license has an expiry date of 31/12/9999 12:00:00 AM\r\nAfter adding the one day grace period, an `OutOfRangeException` is thrown by `ExpiryChecker.IsExpired`\r\n"
1820,'indualagarsamy','Bus.Defer does not work when passed a date time with DateTime.Now.AddSeconds\nDue to the use of local time instead of universal time.\r\n\r\n--\r\n\r\n**Steps to repro**\r\n\r\n1. Run the timeout sample\r\n2. Press D to defer the message.\r\n\r\nNOTE: \r\nIf you change both these to use `UtcNow` instead of `Now`, it works as expected.\r\n````c#\r\n void DeferMessage()\r\n        {\r\n            Console.WriteLine(string.Format("{0} - {1}", DateTime.Now.ToLongTimeString(), "Sending a message to be processed at a later time"));\r\n            Bus.SendLocal(new DeferredMessage\r\n                              {\r\n                                  ProcessAt = DateTime.Now.AddSeconds(10)\r\n                              });\r\n        }\r\n````\r\n\r\n````c#\r\n public void Handle(DeferredMessage message)\r\n        {\r\n            if(DateTime.Now < message.ProcessAt)\r\n            {\r\n                LogMessage("Message will be processed at " + message.ProcessAt.ToLongTimeString());\r\n\r\n                Bus.Defer(message.ProcessAt, message);\r\n                return;\r\n            }\r\n\r\n            LogMessage("Deferred message processed");\r\n        }\r\n````\r\n\r\n**NOTE:** This used to work in the previous versions.\r\n\r\nNotice that it does not defer properly. \r\n![image](https://f.cloud.github.com/assets/854553/1647977/c44929de-5960-11e3-9dd0-8600aff164f2.png)\r\n\r\n\r\n**Repro**\r\nhttps://www.dropbox.com/sh/ghrr6c4wcuqpmce/7K3V01X2Rn\r\n'
1819,'johnsimons','When using unobtrusive mode, saga timeouts are triggered, it does not find the TimeoutHandlers and instead SagaNotFound handlers are invoked\nDue to the static `ExtensionMethods.CurrentMessageBeingHandled` not being correctly handled int he pipeline\r\n\r\n--\r\n\r\n**Steps to repro** (Use the unobtrusive sample)\r\n1. Send a start saga message from a 4.3 client endpoint\r\n2. Run a 4.3 server endpoint. Have the saga request a timeout. Notice that when the saga timeout occurs, it invokes the Saga not found.\r\n\r\n**Repro**\r\nhttps://www.dropbox.com/sh/wmay9ngy8dxpwv5/mDGukTPPg3\r\n\r\nNOTE: It does not work in either saga persistence (default / NH 4.3 beta1)\r\nand works when using 4.2 version of NServiceBus in Server endpoint.\r\n\r\nI used the unobtrusive sample. \r\n\r\n**Saga Code**\r\n````c#\r\nnamespace Server.Saga\r\n{\r\n    public class SimpleSaga : Saga<SimpleSagaData>,\r\n        IAmStartedByMessages<StartSaga>,\r\n        IHandleTimeouts<MyTimeOutState>,\r\n        IHandleTimeouts<MyTimeOutState2>\r\n    {\r\n        public void Handle(StartSaga message)\r\n        {\r\n            Data.OrderId = message.OrderId;\r\n            var someState = new Random().Next(10);\r\n            LogMessage("Requesting a custom timeout v3.0 style, SomeValue: " + someState);\r\n            LogMessage("Requesting a custom timeout v3.0 style, State: " + SomeState.InitialState);\r\n            LogMessage("Requesting a custom timeout v3.0 style, Name: " + SomeState.FinalState);\r\n\r\n            RequestTimeout<MyTimeOutState>(TimeSpan.FromSeconds(5));\r\n            RequestTimeout<MyTimeOutState2>(new DateTime(2013, 10, 14, 23, 08, 0, DateTimeKind.Local));\r\n\r\n        }\r\n\r\n        public override void ConfigureHowToFindSaga()\r\n        {\r\n            ConfigureMapping<StartSaga>(message => message.OrderId).ToSaga(sagaData => sagaData.OrderId);\r\n        }\r\n\r\n        void LogMessage(string message)\r\n        {\r\n            Console.WriteLine(string.Format("{0} - {1}", DateTime.Now.ToLongTimeString(),message));\r\n        }\r\n\r\n        public void Timeout(MyTimeOutState state)\r\n        {\r\n            LogMessage("v3.0 Timeout fired, with SomeValue: " + state.SomeValue);\r\n            LogMessage("v3.0 Timeout fired, with State: " + state.State);\r\n            LogMessage("v3.0 Timeout fired, with Name: " + state.Name);\r\n\r\n            LogMessage("Marking the saga as complete");\r\n            ReplyToOriginator<Response>(m=> { m.ResponseId = Guid.NewGuid(); });\r\n            MarkAsComplete();\r\n        }\r\n\r\n        public void Timeout(MyTimeOutState2 state2)\r\n        {\r\n            LogMessage("MyTimeoutState2 fired -- " + DateTime.Now.ToString());\r\n        }\r\n    }\r\n}\r\n````\r\n\r\n**Timeouts**\r\n````c#\r\nnamespace Server.Timeout.Classes\r\n{\r\n\r\n    public enum SomeState\r\n    {\r\n        InitialState, \r\n        FinalState\r\n    }\r\n\r\n    public class MyTimeOutState\r\n    {\r\n        public int SomeValue { get; set; }\r\n        public  SomeState State {get; set;}\r\n        public SomeState Name { get; set; }\r\n    }\r\n\r\n    public class MyTimeOutState2\r\n    {\r\n    }\r\n}\r\n````\r\n\r\n**SagaData**\r\n````c#\r\nusing System;\r\nusing NServiceBus.Saga;\r\n\r\nnamespace Server.Saga\r\n{\r\n    public class SimpleSagaData : IContainSagaData\r\n    {\r\n        public virtual Guid Id { get; set; }\r\n        public virtual string Originator { get; set; }\r\n        public virtual string OriginalMessageId { get; set; }\r\n\r\n        [Unique]\r\n        public virtual Guid OrderId { get; set; }\r\n    }\r\n}\r\n````\r\n**Start Saga Command**\r\n````c#\r\nnamespace Commands\r\n{\r\n    public class StartSaga\r\n    {\r\n        public Guid OrderId { get; set; }\r\n    }\r\n}\r\n````\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1647818/5e19fd7a-5954-11e3-968c-44a282779cc9.png)'
1818,'johnsimons','NullReferenceException after enabling gateway without gatewayconfig in app.config\nDue to a missing null check on `GatewayConfig`\r\n\r\n--\r\n\r\nAfter I enabled gateway feature I received the following exception:\r\n\r\n```\r\n    System.AggregateException: One or more errors occurred. ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at NServiceBus.Gateway.Sending.GatewaySender.<GetReceiverCustomization>b__0(TransportReceiver transport) in :line 0\r\n       at NServiceBus.Satellites.SatelliteLauncher.<>c__DisplayClass4.<Start>b__2(Int32 index) in :line 0\r\n       at System.Threading.Tasks.Parallel.<>c__DisplayClassf`1.<ForWorker>b__c()\r\n       at System.Threading.Tasks.Task.InnerInvoke()\r\n       at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n       at System.Threading.Tasks.Task.<>c__DisplayClass11.<ExecuteSelfReplicating>b__10(Object param0)\r\n       --- End of inner exception stack trace ---\r\n       at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n       at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n       at System.Threading.Tasks.Task.Wait()\r\n       at System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\n       at System.Threading.Tasks.Parallel.For(Int32 fromInclusive, Int32 toExclusive, Action`1 body)\r\n       at NServiceBus.Satellites.SatelliteLauncher.Start() in :line 0\r\n       at NServiceBus.Unicast.UnicastBus.Start(Action startupAction) in :line 0\r\n       at NServiceBus.Unicast.UnicastBus.Start() in :line 0\r\n       at NServiceBus.Hosting.GenericHost.Start() in :line 0\r\n       at NServiceBus.Hosting.Windows.WindowsHost.Start() in :line 0\r\n       at NServiceBus.Hosting.Windows.Program.<>c__DisplayClassd.<Main>b__5(WindowsHost service) in :line 0\r\n       at Topshelf.Internal.ControllerDelegates`1.StartActionObject(Object obj) in c:\\Projects\\TopShelfForNSB\\src\\Topshelf\\Internal\\ControllerDelegates.cs:line 17\r\n       at Topshelf.Internal.IsolatedServiceControllerWrapper`1.<>c__DisplayClass2.<set_StartAction>b__1(TService service) in c:\\Projects\\TopShelfForNSB\\src\\Topshelf\\Internal\\IsolatedServiceControllerWrapper.cs:line 65\r\n       at Topshelf.Internal.ServiceController`1.<.cctor>b__1(ServiceController`1 sc) in c:\\Projects\\TopShelfForNSB\\src\\Topshelf\\Internal\\ServiceController.cs:line 35\r\n       at Magnum.StateMachine.LambdaAction`1.Execute(T instance, Event event, Object parameter) in :line 0\r\n       at Magnum.StateMachine.EventActionList`1.Execute(T stateMachine, Event event, Object parameter) in :line 0\r\n    ---> (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at NServiceBus.Gateway.Sending.GatewaySender.<GetReceiverCustomization>b__0(TransportReceiver transport) in :line 0\r\n       at NServiceBus.Satellites.SatelliteLauncher.<>c__DisplayClass4.<Start>b__2(Int32 index) in :line 0\r\n       at System.Threading.Tasks.Parallel.<>c__DisplayClassf`1.<ForWorker>b__c()\r\n       at System.Threading.Tasks.Task.InnerInvoke()\r\n       at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n       at System.Threading.Tasks.Task.<>c__DisplayClass11.<ExecuteSelfReplicating>b__10(Object param0)<---\r\n```\r\n\r\nI have no `GatewayConfig` in my endpoint app.config'
1814,'andreasohlund','ncrunch cannot build licenseinstaller\nncrunch fails because x86 debug/release configurations not defined in project file'
1807,'johnsimons','Setting Up NServiceBus Registry Entries\nThis fixes an issue setting up NServiceBus Registry entries when running them for the first time. \r\nThis never happened and users see the "Setup Screen" every time because the MachinePreparedKey was never created due to wrong concatenation (powershell was throwing an exception that was swallowed: cannot concat int32.)'
1806,'SimonCropp',"NServiceBus Version is not being updated\nWe've added a fix for #1041 a while back that we need to hardcode the NServiceBus version.\r\nSee https://github.com/Particular/NServiceBus/commit/790e5d8ce72da6ad5f9023787d24483b2c4c7693#diff-8\r\n\r\nThis version was being updated as part of the build script, which doesn't exist now.\r\n\r\nSo, how do we do this now?"
1799,'SimonCropp','Create a pipeline bootstrapper class\nSomething like:\r\n\r\n```c#\r\npublic class MyPipelineAugmentation: BootstrapPipeline {\r\n\r\n   public MyPipelineAugmentation(){\r\n      \r\n      SagaPipeline.Add(typeof(NewBehaviour));\r\n\r\n      OutgoingPipeline.InsertAfter<ExistingBehaviour>(typeof(AnotherBehaviour))\r\n   }\r\n}\r\n```'
1797,'SimonCropp','Provide a hook to manipulate the pipelines\nNeeded for the saga state changes. We\'ll keep it internal witha InternalsVisibleTo("ServiceControl.Plugin.SagaStateChanges")\r\n\r\n\r\nCopy paste from our design call (please update @SimonCropp )\r\n\r\n```\r\n\r\nclass SagaStateChangeReceivePipelineHook :  PipelineHook<ReceivePhysicalMessageContext>\r\n{\r\n    override void FullControl(ICollection<IBehavior> currentPipeline)\r\n    {\r\n        currentPipeline.Replace<HanlerInvokeBehavior>(typeof(MyOwnCoolHandlerDispatcher));\r\n    \t\r\n    \tcurrentPipeline.AddAfter|Before<SagaReceiveBehavior>(new OutboxReceiveBehavior());\r\n    }\r\n}\r\n\r\n\r\n```\r\n'
1795,'johnsimons','WIP - Non dtc operations\nJust to get the build going and allow for easier code reviews'
1787,'andreasohlund','Headers not taken from correct location when doing an Bus.InMemory.Raise\n--\r\n\r\n**Steps to repro**\r\n1. Have a satellite process a transport message and raise an in-memory event in the handler.\r\n2. Notice exception, when trying to raise the event:\r\n\r\n````xml\r\n<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.StackTrace</Key>\r\n\t\t<Value>System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NServiceBus.MessageHeaders.MessageHeaderManager.GetHeader(Object message, String key) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\MessageHeaders\\MessageHeaderManager.cs:line 40\r\n   at NServiceBus.MessageHeaders.Bootstrapper.&lt;Run&gt;b__0(Object msg, String key) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\MessageHeaders\\Bootstrapper.cs:line 15\r\n   at NServiceBus.ExtensionMethods.GetMessageHeader(IBus bus, Object msg, String key) in c:\\Dev\\NServiceBus\\src\\NServiceBus\\ExtensionMethods.cs:line 53\r\n   at NServiceBus.Unicast.BackwardCompatibility.SetIsSagaMessageHeaderForV3XMessages.MutateIncoming(Object message) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\BackwardCompatibility\\SetIsSagaMessageHeaderForV3XMessages.cs:line 13\r\n   at NServiceBus.Pipeline.MessageMutator.ApplyIncomingMessageMutatorsBehavior.Invoke(LogicalMessageContext context, Action next) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\MessageMutator\\ApplyIncomingMessageMutatorsBehavior.cs:line 19\r\n   at NServiceBus.Pipeline.BehaviorChain`1.InvokeNext(T context) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 28\r\n   at NServiceBus.Pipeline.BehaviorChain`1.Invoke(T context) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Pipeline\\BehaviorChain.cs:line 15\r\n   at NServiceBus.Pipeline.PipelineFactory.InvokeLogicalMessagePipeline(LogicalMessage message) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Pipeline\\PipelineFactory.cs:line 73\r\n   at NServiceBus.Unicast.UnicastBus.Raise[T](T event) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 909\r\n   at NServiceBus.Unicast.UnicastBus.Raise[T](Action`1 messageConstructor) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 914\r\n   at ServiceBus.Management.Infrastructure.Satellites.AuditMessageImportSatellite.Handle(TransportMessage message) in c:\\Dev\\ServiceControl\\src\\ServiceControl\\Infrastructure\\Satellites\\AuditMessageImportSatellite.cs:line 15\r\n   at NServiceBus.Satellites.SatelliteLauncher.HandleMessageReceived(Object sender, TransportMessageReceivedEventArgs e, ISatellite satellite) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Satellites\\SatelliteLauncher.cs:line 92\r\n   at NServiceBus.Satellites.SatelliteLauncher.&lt;&gt;c__DisplayClass9.&lt;StartSatellite&gt;b__7(Object o, TransportMessageReceivedEventArgs e) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Satellites\\SatelliteLauncher.cs:line 107\r\n   at NServiceBus.Unicast.Transport.TransportReceiver.OnTransportMessageReceived(TransportMessage msg) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\Transport\\TransportReceiver.cs:line 453   at NServiceBus.Unicast.Transport.TransportReceiver.ProcessMessage(TransportMessage message) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\Transport\\TransportReceiver.cs:line 390\r\n   at NServiceBus.Unicast.Transport.TransportReceiver.TryProcess(TransportMessage message) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Unicast\\Transport\\TransportReceiver.cs:line 260\r\n   at NServiceBus.Transports.Msmq.MsmqDequeueStrategy.ProcessMessage(TransportMessage message) in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqDequeueStrategy.cs:line 288\r\n   at NServiceBus.Transports.Msmq.MsmqDequeueStrategy.Action() in c:\\Dev\\NServiceBus\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqDequeueStrategy.cs:line 208</Value>\r\n</HeaderInfo>\r\n````\r\n\r\nThe source for the NRE is that Bus.CurrentContext in this code is null:\r\nhttps://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/MessageHeaders/MessageHeaderManager.cs#L40\r\n'
1784,'indualagarsamy','VideoStore Sample does not compile on 4.2. release\nRepro:\r\n\r\n1. Installed 4.0.3\r\n* Opened VideoStore.MSMQ\r\n* Successfully compiled (build all)\r\n* Uninstalled 4.0.3\r\n* Installed 4.2.0\r\n* Opened VideoStore.MSMQ\r\n* Clicked "rebuild solution"\r\n* Receiving 5 errors for: ```Error\t4\tThe type or namespace name \'AspNet\' does not exist in the namespace \'Microsoft\' (are you missing an assembly reference?)```\r\n* References indicate that the following packages / dlls are not available for the solution:\r\n\r\n![image](https://f.cloud.github.com/assets/3889023/1558192/f25ed930-4f70-11e3-8246-b615ce87bef2.png)\r\n\r\n* Note that VS Package Manager is set to allow auto-downloads:\r\n\r\n![image](https://f.cloud.github.com/assets/3889023/1558196/3a379ec2-4f71-11e3-9d4c-32953890df0e.png)\r\n\r\n'
1783,'andreasohlund','Core 4.3 breaks the sqlserver acceptance tests\nhttp://builds.particular.net/viewLog.html?buildId=27755&tab=buildResultsDiv&buildTypeId=NServiceBusSqlServer_2RunAcceptanceTests'
1774,'andreasohlund','Bus.InMemory.Raise now requires the message to be an IEvent\nAs discovered in servicepulse Bus.InMemory.Raise now requires the message to be an IEvent'
1770,'andreasohlund','Trim potential trailing forward slashes from Xml namespaces\nFix #1769'
1759,'johnsimons','Ilmerge not correctly updating pdbs\nCaused difficulty debugging and stepping through NServicebus assemblies\r\n\r\n--\r\n\r\nUsing NServiceBus.Host and below endpoint config\r\n\r\n```\r\npublic class EndpointConfig : IConfigureThisEndpoint,\r\n                    AsA_Server, IWantCustomInitialization\r\n{\r\n\tpublic void Init()\r\n\t{\r\n\t\tConfigure.With()\r\n\t\t\t.DefaultBuilder()\r\n\t\t\t.UseInMemoryTimeoutPersister();\r\n\t}\r\n}\r\n```\r\n\r\nI used to be able to step into source of `Configure.With()` and `DefaultBuilder` in 4.0.4 by downloading master branch source and placing it in C:\\BuildAgent\\Work\\d4de8921a0aabf04 ...\r\n\r\nAfter upgrading to 4.2.0, downloaded the new master branch source and placed in C:\\BuildAgent\\Work\\31f8c64a6e8a2d7c but can\'t step into it.\r\n\r\nmostly get language:unknown and "Source not available"'
1755,'johnsimons','What is the point of DistributorControlAddress ?\nIn our current config we ask the user to provide us with the `DistributorControlAddress`.\r\n```xml\r\n<UnicastBusConfig\r\n    DistributorControlAddress="orders.handler.distributor.control@localhost"\r\n    DistributorDataAddress="orders.handler@localhost">\r\n</UnicastBusConfig>\r\n``` \r\n\r\nBut there is no way for the user to configure the distributor control address!\r\n\r\nSo what is the point of bothering the user with an extra string?\r\n\r\nWe are hardcoding the distributor control address to be `DistributorDataAddress` + "distributor.control".\r\n\r\nShould I remove this requirement as part of #1732 ?'
1752,'SimonCropp',"Control Messages causing deserialization exception\nDue to incorrectly attempting to deserialization them. \r\n\r\nWill now skip deserialization and continue the pipeline.\r\n\r\n--\r\n\r\n**Steps to repro**:\r\n1. Modify the full duplex sample to make the Client run v4.2 and the Server run in version 3.3.5\r\n2. In the Server project, in the `RequestDataMessageHandler` in the handle method add `Bus.Return(0);` \r\n3. Send a message from the client to the server and notice the exception.\r\n\r\n\r\n**Exception**: \r\n\r\n    2013-11-08 13:49:14,367 [14] ERROR NServiceBus.Unicast.Transport.TransportReceiv\r\n    er [(null)] <(null)> - Failed to serialize message with ID: 51254742-c23f-4cac-9e64-a83ddb1e085b\\134254\r\n    System.Runtime.Serialization.SerializationException: An error occurred while attempting to extract logical messages from transport message NServiceBus.Transport\r\n    Message ---> System.TypeLoadException: Could not determine type for node: 'CompletionMessage'.\r\n       at NServiceBus.Serializers.XML.XmlMessageSerializer.InferNodeType(XmlNode node, Object parent) in :line 0\r\n       at NServiceBus.Serializers.XML.XmlMessageSerializer.Process(XmlNode node, Object parent, Type nodeType) in :line 0\r\n       at NServiceBus.Serializers.XML.XmlMessageSerializer.Deserialize(Stream stream, IList`1 messageTypesToDeserialize) in :line 0\r\n       at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Extract(TransportMessage m) in :line 0\r\n       at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n       --- End of inner exception stack trace ---\r\n       at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.<>c__DisplayClass1.<InvokeNext>b__0() in :line 0\r\n       at NServiceBus.Pipeline.Behaviors.RaiseMessageReceivedBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.<>c__DisplayClass1.<InvokeNext>b__0() in :line 0\r\n       at NServiceBus.Pipeline.Behaviors.ApplyIncomingTransportMessageMutatorsBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n       at NServiceBus.Pipeline.BehaviorChain.<>c__DisplayClass1.<InvokeNext>b__0() in :line 0\r\n       at NServiceBus.UnitOfWork.UnitOfWorkBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1504602/3def27d0-48c1-11e3-8d13-f50b21a90426.png)"
1750,'andreasohlund','Outgoing pipelines\n@SimonCropp @indualagarsamy @johnsimons here is the pull for outgoing pipelines. Please review!'
1743,'johnsimons','Support disconnecting workers from a running distributor\nWork to be done:\r\n- [x] Modify `DistributorReadyMessageProcessor` to keep track of active workers\r\n- [x] Implement a Powershell cmdlet that sends a control message to the Distributor control queue to disconnect a worker\r\n- [x] Introduce worker sessionid so we can differentiate between control messages that are from disconnected worker and hence should be ignored vs active worker ones \r\n- [x] Make `IWorkerAvailabilityManager` backward compatible\r\n- [x] Document new `IWorkerAvailabilityManager` methods\r\n- [x] Create a new Distributor project\r\n- [x] Mark Distributer in Core as obsolete + any public classes related to it\r\n- [x] Update ScaleOut sample to use new Distributor\r\n- [x] Add AcceptanceTests for the Distributor\r\n- [x] Add nuget package for new assembly\r\n- [x] ~~Modify UnicastBus so that it reads MasterNodeAddress from somewhere so that we can set it from the new assembly~~ Added workaround instead\r\n\r\nThis will hopefully close:\r\n- #1732 \r\n- #978 '
1732,'johnsimons','Support disconnecting workers from a running distributor\nAdd the ability to send a control message to the distributor telling it to disconnect a given worker. When a worker is disconnected no work will be sent to it and ready messages for that worker will be ignored until it reconnects with a new "worker-session-id". \r\n'
1731,'andreasohlund','Complete a spike for non-dtc ops using RavenDB\n'
1727,'SimonCropp','NServiceBus.Host package sets the wrong startup project\ninstall-package NServiceBus.Host \r\n\r\nSets the "Start external program" to: \r\n\r\nc:\\users\\andreas.ohlund\\documents\\visual studio 2012\\Projects\\Plugin42\\Plugin42\\bin\\Debug\\(NServiceBus.Host 4.2.0.Id).exe\r\n\r\nshould be:\r\n\r\nc:\\users\\andreas.ohlund\\documents\\visual studio 2012\\Projects\\Plugin42\\Plugin42\\bin\\Debug\\NServiceBus.Host.exe'
1726,'sfarmar','Samples should use nuget for non particular references\neg Gateway Sample should not reference nhibernate.dll in binaries https://github.com/Particular/NServiceBus/blob/develop/Samples/Gateway/SiteB/SiteB.csproj#L41\r\n\r\nwill suffice for now to fix in develop and fix the zip file'
1720,'SimonCropp','Simplify the license validation\nTo make it easier for users we should skip checking binary versions and instead do:\r\n\r\n 1. Add release date into the binaries as an assmbly attribute\r\n 2. Modify the check to: `if UpgradeProtectionExpiryDate>= Now OR UpgradeProtectionExpiryDate >= ReleaseDateOfBinaries => ok `\r\n   \r\n\r\n'
1718,'SimonCropp','Bus.Inmemory.Raise causes exceptions\n**Steps to repro**\r\n1. Take the current 4.1.1 VideoStore.MSMQ Sample and replace all of the NServiceBus references to use the latest 4.2 version\r\n2. Click on submit order on the website\r\n3. Notice the exception:\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1440740/523c0a4c-419f-11e3-8ae0-19269c37678e.png)\r\n'
1717,'johnsimons','If persistence is disabled in the fluent configuration but persistence key is present in the config file, persistence is enabled\nThe logic should be disabled and give a warning that configs are not consistent.\r\n\r\nRelated to https://github.com/Particular/NServiceBus/issues/1716'
1714,'johnsimons','Lack of 32-bit host in NServiceBus.Host32 package\nThe `NServiceBus.Host32` package 4.1.1 does not contain `NServiceBus.Host32.exe`, but `NServiceBus.Host.exe`\r\n\r\nThe output from `CorFlags` illustrates the issue\r\n\r\n    CLR Header: 2.5\r\n    PE        : PE32\r\n    CorFlags  : 9\r\n    ILONLY    : 1\r\n    32BIT     : 0\r\n    Signed    : 1'
1713,'andreasohlund','SagaPipeline - Saga is not started, when an event is published\n--\r\n**Steps to repro:**\r\n1. Have a client publish an event\r\n2. Have a server, that starts a saga when the event is published.\r\n3. See that instead of starting the saga, a Saga not found message is displayed and the saga is not started.\r\n\r\nI modified the 3.3.8 sample (converted to 4.1) to do the following.\r\n1. Client sends a request, Server replies with a response. Server also sends a command to the client\r\n2. Client upon receiving the command, publishes an event\r\n3. Server is listening to the event and should start a saga.\r\n\r\nThis scenario works with 4.1.1 and not with the binaries from the branch.\r\n\r\n**Server**\r\n    \r\n    public class RequestMessageHandler : IHandleMessages<Request>\r\n    {\r\n        public IBus Bus { get; set; }\r\n\r\n        public void Handle(Request message)\r\n        {\r\n            Console.WriteLine("Request received with id:" + message.RequestId);\r\n\r\n            Bus.Reply(new Response\r\n                          {\r\n                              ResponseId = message.RequestId\r\n                          });\r\n\r\n            Bus.Send(new DoSomethingCommand(){CommandId =  Guid.NewGuid() });\r\n        }\r\n    }\r\n\r\n**Client**\r\n\r\n    class DoSomethingHandler : IHandleMessages<DoSomethingCommand>\r\n    {\r\n        public IBus Bus { get; set; }\r\n        public void Handle(DoSomethingCommand message)\r\n        {\r\n            Console.WriteLine("Command Received");\r\n            Bus.Publish<SomethingHappenedEvent>(m => { m.OrderId = message.CommandId; });\r\n        }\r\n    }\r\n\r\n**Server - Saga -- This Saga does not start!**\r\n\r\n    public class SagaStartedByEvent : Saga<SagaStartedByEventData>,\r\n        IAmStartedByMessages<SomethingHappenedEvent>,\r\n        IHandleTimeouts<ReadyToInstall>\r\n    {\r\n        public void Handle(SomethingHappenedEvent message)\r\n        {\r\n            Data.OrderId = message.OrderId;\r\n            var someState = new Random().Next(10);\r\n            LogMessage("Requesting a custom timeout v3.0 style ReadyToInstall ");\r\n         \r\n            RequestTimeout<ReadyToInstall>(TimeSpan.FromSeconds(5));\r\n   \r\n        }\r\n\r\n        void LogMessage(string message)\r\n        {\r\n            Console.WriteLine(string.Format("{0} - {1}", DateTime.Now.ToLongTimeString(),message));\r\n        }\r\n\r\n        public void Timeout(ReadyToInstall state)\r\n        {\r\n            LogMessage("Received the ReadyToInstall timeout -- Marking the saga as complete");\r\n            ReplyToOriginator<Response>(m => { m.ResponseId = Guid.NewGuid(); });\r\n            MarkAsComplete();\r\n        }\r\n    }\r\n\r\n    public class ReadyToInstall\r\n    {\r\n    }\r\n'
1712,'SimonCropp','Remove dependency T4\nT4 Scaffolding are not adding much value. Also there are compatibility issues with Visual Studio 2013'
1706,'SimonCropp','SagaPipeline: Endpoint fails to process client subscription messages\n**Steps to repro:**\r\n\r\n1. Take the pub/sub sample from 4.1.1 and convert the publisher to use the new binaries from the SagaPipeline branch from the build server:\r\n\r\n    ````c#\r\n\r\n    install-package NServiceBus.Interfaces -version 4.2.0-PullRequest-1614 -pre MyPublisher\r\n\r\n    install-package NServiceBus -version 4.2.0-PullRequest-1614 -pre MyPublisher\r\n\r\n    install-package NServiceBus.Host -version 4.2.0-PullRequest-1614 -pre MyPublisher\r\n\r\n    ````\r\n\r\n2. Leave the subscribers to be as they are referencing 4.1.1 \r\n3. Clear out RavenDB persistence if you have already run this sample prior \r\n4. Start the sample and notice the exception in the publisher:\r\n\r\n```\r\n<HeaderInfo>\r\n\t<Key>NServiceBus.ExceptionInfo.StackTrace</Key>\r\n\t<Value>System.Exception: An error occurred while attempting to invoke the following behavior chain: NServiceBus.Pipeline.BehaviorChain ---&gt; System.AggregateException:\r\nOne or more errors occurred. ---&gt; System.InvalidOperationException: Queue empty.\r\n     at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\r\n     at System.Collections.Generic.Queue`1.Dequeue()\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.InvokeHandlersBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Sagas.SagaPersistenceBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.LoadHandlersBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.CallbackInvocationBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.ApplyIncomingMessageMutatorsBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.ExtractLogicalMessagesBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.RaiseMessageReceivedBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.ApplyIncomingTransportMessageMutatorsBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.UnitOfWork.UnitOfWorkBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     --- End of inner exception stack trace ---\r\n     at NServiceBus.UnitOfWork.UnitOfWorkBehavior.AppendEndExceptionsAndRethrow(Exception parentException) in :line 0\r\n     at NServiceBus.UnitOfWork.UnitOfWorkBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.ForwardBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.AuditBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.ImpersonateSenderBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.&lt;&gt;c__DisplayClass3.&lt;InvokeNext&gt;b__1() in :line 0\r\n     at NServiceBus.Pipeline.Behaviors.MessageHandlingLoggingBehavior.Invoke(BehaviorContext context, Action next) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.InvokeNext(BehaviorContext context) in :line 0\r\n     at NServiceBus.Pipeline.BehaviorChain.Invoke(BehaviorContext context) in :line 0\r\n     --- End of inner exception stack trace ---\r\n     at NServiceBus.Unicast.Transport.TransportReceiver.ProcessMessage(TransportMessage message) in :line 0\r\n     at NServiceBus.Unicast.Transport.TransportReceiver.TryProcess(TransportMessage message) in :line 0\r\n     at NServiceBus.Transports.Msmq.MsmqDequeueStrategy.ProcessMessage(TransportMessage message) in :line 0\r\n     at NServiceBus.Transports.Msmq.MsmqDequeueStrategy.Action() in :line 0</Value>\r\n  \t</HeaderInfo>\r\n```'
1699,'indualagarsamy','Messages processed by the Gateway satellite are being forwarded to the audit queue causing duplicates in the audit queue.\n--\r\n**Steps to Reproduce**\r\n1. Run the gateway sample and click the `Send Price update command` button from the website\r\n2. Inspect the audit queue\r\n3. Notice that there are two messages for `PriceUpdateReceived`. One of the messages is the result of the Headquarter processing the message and this is correct and the message headers have the correct `NServiceBus.ProcessingStarted` and `NServiceBus.ProcessingEnded` stats. However, there is also another message and this is because the gateway satellite processed the `Bus.Reply<PriceUpdateReceived>` and this one does not have any stats.  This is because UoWs are not run for satellites.\r\n\r\nWe should not be auditing messages that are processed by our satellites meant for internal use.\r\n\r\nThe following code is responsible for this behavior: \r\nhttps://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Gateway/Sending/GatewaySender.cs#L109-110\r\n\r\nWe had this in 3.3.8 as well:\r\nhttps://github.com/Particular/NServiceBus/blob/3.3.8/src/gateway/NServiceBus.Gateway/Sending/GatewaySender.cs#L108-109\r\n\r\n'
1693,'SimonCropp','Release v4.1 references clr v4.5\nThe issue has to do with the changes we did to the ilmerge.\r\n\r\nIn our quest to make ilmerge part of VS build we broke the ilmerge :disappointed: \r\n\r\nThe fix is to convert the old working PS to msbuild script or just do it in a PS script?\r\n\r\nWe need to do the following logic in msbuild script:\r\nhttps://github.com/Particular/NServiceBus/blob/4.0.5/default.ps1#L55\r\nfrom line 55-75\r\n\r\nhttp://stackoverflow.com/questions/13748055/could-not-load-type-system-runtime-compilerservices-extensionattribute-from-as'
1690,'indualagarsamy',"Powershell Test-NServiceBusDTCInstallation incorrectly reports true on Windows 2003\nDue to incorrect registry entry being checked \r\n\r\n--\r\n\r\n**Steps to repro**\r\n1. On a clean machine where NServiceBus hasn't configured DTC (or on a machine where DTC has been installed clean: http://community.newdawn.com/knowledgebase/articles/72759-how-to-uninstall-and-reinstall-the-ms-dtc), run the `Test-NServiceBusDTCInstallation` and see that it reports true:\r\n![image](https://f.cloud.github.com/assets/854553/1346474/03fd8a0e-36a0-11e3-901f-09eb7777c67c.png)\r\n\r\nVerify DTC Settings and see that, it's not configured correctly according to http://particular.net/articles/transactions-message-processing:\r\nNotice that `Network DTC Access` and the `Enable XA Transactions` are not checked.\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1346484/246bb888-36a0-11e3-86c1-7680165f333b.png)\r\n\r\n\r\n"
1688,'johnsimons',"WINDOWS 2008 r2 64 bit import NServiceBus.PowerShell.dll fails\nThe installed version of Powershell in 2.1 (tested by running $PSVersionTable)\r\n\r\n```\r\nImport-Module : Could not load file or assembly 'file:///C:\\pstest\\NServiceBus.PowerShell.dll' or one of its dependencies. \r\nThis assembly is built by a runtime newer than the currently loaded runtime and cannot be loaded.\r\nAt line:1 char:14\r\n+ Import-Module <<<<  'C:\\pstest\\NServiceBus.PowerShell.dll'\r\n    + CategoryInfo          : NotSpecified: (:) [Import-Module], BadImageFormatException\r\n    + FullyQualifiedErrorId : System.BadImageFormatException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n\r\n```"
1687,'SimonCropp','Windows Server 2012 installing MSMQ using Powershell Cmdlet fails\nFails with the error\r\n\r\n```\r\nError: 0x800f080c\r\n\r\nFeature name MSMQ-Container is unknown.\r\nA Windows feature name was not recognized.\r\n```\r\n\r\nChange to use the `/all ` option in `DISM` on Server 2012\r\n\r\n--\r\n\r\n### Full Powershell 32 bit output\r\n\r\n```\r\nPS C:\\Users\\nsbuser> Install-NServiceBusMSMQ\r\n\r\nConfirm\r\nAre you sure you want to perform this action?\r\nPerforming operation "Install-NServiceBusMSMQ" on Target "WIN2012-DC".\r\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"): y\r\nEntering StartMsmqIfNecessary in NServiceBus.Setup.Windows.Msmq.MsmqSetup\r\nChecking if MSMQ is installed.\r\nMSMQ is not installed. Going to install.\r\nExecuting dism /Online /NoRestart /English /Enable-Feature /FeatureName:MSMQ-Container /FeatureName:MSMQ-Server\r\n\r\nDeployment Image Servicing and Management tool\r\nVersion: 6.2.9200.16384\r\n\r\nImage Version: 6.2.9200.16384\r\n\r\n\r\nError: 0x800f080c\r\n\r\nFeature name MSMQ-Container is unknown.\r\nA Windows feature name was not recognized.\r\nUse the /Get-Features option to find the name of the feature in the image and try the command again.\r\n\r\nThe DISM log file can be found at C:\\Windows\\Logs\\DISM\\dism.log\r\n\r\n\r\nInstallation of MSMQ successful.\r\nMSMQ windows service not found! You may need to reboot after MSMQ has been installed.\r\nWARNING: Msmq may need to be reinstalled manually. Please ensure MSMQ is running properly.\r\nPS C:\\Users\\nsbuser>\r\n```\r\n\r\nfull DISM log:\r\n\r\n```\r\n2013-10-16 18:51:38, Info                  DISM   PID=2464 TID=3228 Scratch directory set to \'C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\\'. - CDISMManager::put_ScratchDir\r\n2013-10-16 18:51:38, Info                  DISM   PID=2464 TID=3228 DismCore.dll version: 6.2.9200.16384 - CDISMManager::FinalConstruct\r\n2013-10-16 18:51:38, Info                  DISM   PID=2464 TID=3228 Successfully loaded the ImageSession at "C:\\Windows\\System32\\Dism" - CDISMManager::LoadLocalImageSession\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Found and Initialized the DISM Logger. - CDISMProviderStore::Internal_InitializeLogger\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Failed to get and initialize the PE Provider.  Continuing by assuming that it is not a WinPE image. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Finished initializing the Provider Map. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Manager: PID=2464 TID=3228 Successfully created the local image session and provider store. - CDISMManager::CreateLocalImageSession\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: \r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: <----- Starting Dism.exe session ----->\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: \r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Host machine information: OS Version=6.2.9200, Running architecture=amd64, Number of processors=2\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Dism.exe version: 6.2.9200.16384\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Executing command line: "dism" /Online /NoRestart /English /Enable-Feature /FeatureName:MSMQ-Container /FeatureName:MSMQ-Server\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Getting Provider FolderManager - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Loading Provider from location C:\\Windows\\System32\\Dism\\FolderProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Connecting to the provider located at C:\\Windows\\System32\\Dism\\FolderProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Manager: PID=2464 TID=3228 physical location path: C:\\ - CDISMManager::CreateImageSession\r\n2013-10-16 18:51:38, Info                  DISM   DISM Manager: PID=2464 TID=3228 Copying DISM from "C:\\Windows\\System32\\Dism" - CDISMManager::CreateImageSessionFromLocation\r\n2013-10-16 18:51:38, Info                  DISM   DISM Manager: PID=2464 TID=3228 Successfully loaded the ImageSession at "C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D" - CDISMManager::LoadRemoteImageSession\r\n2013-10-16 18:51:38, Info                  DISM   DISM Image Session: PID=3732 TID=1488 Instantiating the Provider Store. - CDISMImageSession::get_ProviderStore\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Initializing a provider store for the IMAGE session type. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\OSProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\OSProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM OS Provider: PID=3732 TID=1488 Defaulting SystemPath to C:\\ - CDISMOSServiceManager::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM OS Provider: PID=3732 TID=1488 Defaulting Windows folder to C:\\Windows - CDISMOSServiceManager::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Attempting to initialize the logger from the Image Session. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\LogProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\LogProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Found and Initialized the DISM Logger. - CDISMProviderStore::Internal_InitializeLogger\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\PEProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Warning               DISM   DISM Provider Store: PID=3732 TID=1488 Failed to Load the provider: C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\PEProvider.dll. - CDISMProviderStore::Internal_GetProvider(hr:0x8007007e)\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Failed to get and initialize the PE Provider.  Continuing by assuming that it is not a WinPE image. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finished initializing the Provider Map. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Manager: PID=2464 TID=3228 Image session successfully loaded from the temporary location: C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D - CDISMManager::CreateImageSession\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Getting Provider OSServices - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Target image information: OS Version=6.2.9200.16683, Image architecture=amd64\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Getting the collection of providers from an image provider store type. - CDISMProviderStore::GetProviderCollection\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\CbsProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\CbsProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Finished initializing the CbsConUI Handler. - CCbsConUIHandler::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 CBS is being initialized for online use. More information about CBS actions can be located at: %windir%\\logs\\cbs\\cbs.log - CDISMPackageManager::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Loaded servicing stack for online use only. - CDISMPackageManager::RefreshInstanceAndLock\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\MsiProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\MsiProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\IntlProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\IntlProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\IBSProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Warning               DISM   DISM Provider Store: PID=3732 TID=1488 Failed to Load the provider: C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\IBSProvider.dll. - CDISMProviderStore::Internal_GetProvider(hr:0x8007007e)\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\DmiProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\DmiProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM OS Provider: PID=3732 TID=1488 Successfully loaded the hive. - CDISMOSServiceManager::DetermineBootDrive\r\n2013-10-16 18:51:38, Info                  DISM   DISM Driver Manager: PID=3732 TID=1488 Further logs for driver related operations can be found in the target operating system at %WINDIR%\\inf\\setupapi.offline.log - CDriverManager::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\UnattendProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\UnattendProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\Wow64provider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Warning               DISM   DISM Provider Store: PID=3732 TID=1488 Failed to get the IDismObject Interface - CDISMProviderStore::Internal_LoadProvider(hr:0x80004002)\r\n2013-10-16 18:51:38, Warning               DISM   DISM Provider Store: PID=3732 TID=1488 Failed to Load the provider: C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\Wow64provider.dll. - CDISMProviderStore::Internal_GetProvider(hr:0x80004002)\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\SmiProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\SmiProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\EmbeddedProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Warning               DISM   DISM Provider Store: PID=3732 TID=1488 Failed to Load the provider: C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\EmbeddedProvider.dll. - CDISMProviderStore::Internal_GetProvider(hr:0x8007007e)\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\AppxProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\AppxProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\AssocProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\AssocProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Loading Provider from location C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\TransmogProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Connecting to the provider located at C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\E7A49FC0-98E0-47F4-A637-02A9A0D3067D\\TransmogProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Encountered a servicing provider, performing additional servicing initializations. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Transmog Provider: PID=3732 TID=1488 Current image session is [ONLINE] - CTransmogManager::GetMode\r\n2013-10-16 18:51:38, Info                  DISM   DISM Transmog Provider: PID=3732 TID=1488 Audit Mode: [No] - CTransmogManager::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM Transmog Provider: PID=3732 TID=1488 GetProductType: ProductType = [ServerNT] - CTransmogManager::GetProductType\r\n2013-10-16 18:51:38, Info                  DISM   DISM Transmog Provider: PID=3732 TID=1488 Product Type: [ServerNT] - CTransmogManager::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM Transmog Provider: PID=3732 TID=1488 Product Type ServerNT : [Yes] - CTransmogManager::Initialize\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Got the collection of providers. Now enumerating them to build the command table.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: DISM Log Provider\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: OSServices\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: DISM Package Manager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: DISM Package Manager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: MsiManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: MsiManager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: IntlManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: IntlManager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: DriverManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: DriverManager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: DISM Unattend Manager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: DISM Unattend Manager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: SmiManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: AppxManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: AppxManager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: AssocManager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: AssocManager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Attempting to add the commands from provider: Edition Manager\r\n2013-10-16 18:51:38, Info                  DISM   DISM.EXE: Succesfully registered commands for the provider: Edition Manager.\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Getting Provider DISM Package Manager - CDISMProviderStore::GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Processing the top level command token(enable-feature). - CPackageManagerCLIHandler::Private_ValidateCmdLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Attempting to route to appropriate command handler. - CPackageManagerCLIHandler::ExecuteCmdLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Routing the command... - CPackageManagerCLIHandler::ExecuteCmdLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Encountered the option "featurename" with value "MSMQ-Container" - CPackageManagerCLIHandler::Private_GetPackagesFromCommandLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Encountered an unknown option "featurename" with value "MSMQ-Container" - CPackageManagerCLIHandler::Private_GetPackagesFromCommandLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Encountered the option "featurename" with value "MSMQ-Server" - CPackageManagerCLIHandler::Private_GetPackagesFromCommandLine\r\n2013-10-16 18:51:38, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Encountered an unknown option "featurename" with value "MSMQ-Server" - CPackageManagerCLIHandler::Private_GetPackagesFromCommandLine\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 TID=1488 Failed to get the Update through CBS. - CDISMPackage::Internal_OpenFeature(hr:0x800f080c)\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 TID=1488 Failed to get the underlying CBS Feature - CDISMPackage::OpenFeature(hr:0x800f080c)\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 Feature name MSMQ-Container is unknown. - CPackageManagerCLIHandler::Private_GetFeaturesFromCommandLine(hr:0x800f080c)\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 TID=1488 Unknown features were specified on the command-line. - CPackageManagerCLIHandler::Private_GetFeaturesFromCommandLine(hr:0x800f080c)\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 TID=1488 Failed to get the Feature List from the command line. - CPackageManagerCLIHandler::Private_ProcessFeatureChange(hr:0x800f080c)\r\n2013-10-16 18:51:39, Error                 DISM   DISM Package Manager: PID=3732 TID=1488 Failed while processing command enable-feature. - CPackageManagerCLIHandler::ExecuteCmdLine(hr:0x800f080c)\r\n2013-10-16 18:51:39, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Further logs for online package and feature related operations can be found at %WINDIR%\\logs\\CBS\\cbs.log - CPackageManagerCLIHandler::ExecuteCmdLine\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Found the OSServices.  Waiting to finalize it until all other providers are unloaded. - CDISMProviderStore::Final_OnDisconnect\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Found the OSServices.  Waiting to finalize it until all other providers are unloaded. - CDISMProviderStore::Final_OnDisconnect\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Found the PE Provider.  Waiting to finalize it until all other providers are unloaded. - CDISMProviderStore::Final_OnDisconnect\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(DISM Package Manager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Package Manager: PID=3732 TID=1488 Finalizing CBS core. - CDISMPackageManager::Finalize\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: DISM Package Manager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(MsiManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: MsiManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(IntlManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: IntlManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(DriverManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: DriverManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(DISM Unattend Manager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: DISM Unattend Manager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(SmiManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: SmiManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(AppxManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: AppxManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(AssocManager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: AssocManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Finalizing the servicing provider(Edition Manager) - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: Edition Manager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Releasing the local reference to OSServices. - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Disconnecting Provider: OSServices - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=3732 TID=1488 Releasing the local reference to DISMLogger.  Stop logging. - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM.EXE: Image session has been closed. Reboot required=no.\r\n2013-10-16 18:51:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 18:51:39, Info                  DISM   DISM.EXE: <----- Ending Dism.exe session ----->\r\n2013-10-16 18:51:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Found the OSServices.  Waiting to finalize it until all other providers are unloaded. - CDISMProviderStore::Final_OnDisconnect\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Disconnecting Provider: FolderManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 18:51:39, Info                  DISM   DISM Provider Store: PID=2464 TID=3228 Releasing the local reference to DISMLogger.  Stop logging. - CDISMProviderStore::Internal_DisconnectProvider\r\n\r\n```\r\n\r\n### Full Powershell 64 bit output\r\n\r\n```\r\nPS C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0> Install-NServiceBusMSMQ\r\n\r\nConfirm\r\nAre you sure you want to perform this action?\r\nPerforming operation "Install-NServiceBusMSMQ" on Target "WIN2012-DC".\r\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):\r\nEntering StartMsmqIfNecessary in NServiceBus.Setup.Windows.Msmq.MsmqSetup\r\nChecking if MSMQ is installed.\r\nMSMQ is not installed. Going to install.\r\nExecuting dism /Online /NoRestart /English /Enable-Feature /FeatureName:MSMQ-Container /FeatureName:MSMQ-Server\r\n\r\nDeployment Image Servicing and Management tool\r\nVersion: 6.2.9200.16384\r\n\r\n\r\nError: 11\r\n\r\nYou cannot service a running 64-bit operating system with a 32-bit version of DISM.\r\nPlease use the version of DISM that corresponds to your computer\'s architecture.\r\n\r\nThe DISM log file can be found at C:\\Windows\\Logs\\DISM\\dism.log\r\n\r\n\r\nInstallation of MSMQ successful.\r\nMSMQ windows service not found! You may need to reboot after MSMQ has been installed.\r\nWARNING: Msmq may need to be reinstalled manually. Please ensure MSMQ is running properly.\r\nPS C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0> Import-Module C:\\pstest\\NServiceBus.PowerShell.dll\r\nPS C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0> Install-NServiceBusMSMQ\r\n\r\nConfirm\r\nAre you sure you want to perform this action?\r\nPerforming operation "Install-NServiceBusMSMQ" on Target "WIN2012-DC".\r\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):\r\nEntering StartMsmqIfNecessary in NServiceBus.Setup.Windows.Msmq.MsmqSetup\r\nChecking if MSMQ is installed.\r\nMSMQ is not installed. Going to install.\r\nExecuting dism /Online /NoRestart /English /Enable-Feature /FeatureName:MSMQ-Container /FeatureName:MSMQ-Server\r\n\r\nDeployment Image Servicing and Management tool\r\nVersion: 6.2.9200.16384\r\n\r\n\r\nError: 11\r\n\r\nYou cannot service a running 64-bit operating system with a 32-bit version of DISM.\r\nPlease use the version of DISM that corresponds to your computer\'s architecture.\r\n\r\nThe DISM log file can be found at C:\\Windows\\Logs\\DISM\\dism.log\r\n\r\n\r\nInstallation of MSMQ successful.\r\nMSMQ windows service not found! You may need to reboot after MSMQ has been installed.\r\nWARNING: Msmq may need to be reinstalled manually. Please ensure MSMQ is running properly.\r\nPS C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0>\r\n```\r\n\r\n\r\nDISM log:\r\n\r\n```\r\n2013-10-16 19:01:39, Info                  DISM   PID=3080 TID=2668 Scratch directory set to \'C:\\Users\\nsbuser\\AppData\\Local\\Temp\\2\\\'. - CDISMManager::put_ScratchDir\r\n2013-10-16 19:01:39, Info                  DISM   PID=3080 TID=2668 DismCore.dll version: 6.2.9200.16384 - CDISMManager::FinalConstruct\r\n2013-10-16 19:01:39, Info                  DISM   PID=3080 TID=2668 Successfully loaded the ImageSession at "C:\\Windows\\System32\\Dism" - CDISMManager::LoadLocalImageSession\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Found and Initialized the DISM Logger. - CDISMProviderStore::Internal_InitializeLogger\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Failed to get and initialize the PE Provider.  Continuing by assuming that it is not a WinPE image. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Finished initializing the Provider Map. - CDISMProviderStore::Final_OnConnect\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Manager: PID=3080 TID=2668 Successfully created the local image session and provider store. - CDISMManager::CreateLocalImageSession\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Getting Provider DISMLogger - CDISMProviderStore::GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Provider has previously been initialized.  Returning the existing instance. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: <----- Starting Dism.exe session ----->\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: Host machine information: OS Version=6.2.9200, Running architecture=x86, Number of processors=2\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: Dism.exe version: 6.2.9200.16384\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: Executing command line: "dism" /Online /NoRestart /English /Enable-Feature /FeatureName:MSMQ-Container /FeatureName:MSMQ-Server\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Getting Provider FolderManager - CDISMProviderStore::GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Provider has not previously been encountered.  Attempting to initialize the provider. - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Loading Provider from location C:\\Windows\\System32\\Dism\\FolderProvider.dll - CDISMProviderStore::Internal_GetProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Connecting to the provider located at C:\\Windows\\System32\\Dism\\FolderProvider.dll. - CDISMProviderStore::Internal_LoadProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: Image session has been closed. Reboot required=no.\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: <----- Ending Dism.exe session ----->\r\n2013-10-16 19:01:39, Info                  DISM   DISM.EXE: \r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Found the OSServices.  Waiting to finalize it until all other providers are unloaded. - CDISMProviderStore::Final_OnDisconnect\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Disconnecting Provider: FolderManager - CDISMProviderStore::Internal_DisconnectProvider\r\n2013-10-16 19:01:39, Info                  DISM   DISM Provider Store: PID=3080 TID=2668 Releasing the local reference to DISMLogger.  Stop logging. - CDISMProviderStore::Internal_DisconnectProvider\r\n\r\n```'
1685,'indualagarsamy',"Powershell error when installing NServiceBus nuget package regarding registry key\nAdd a check to see if the key exists\r\n\r\n--\r\n\r\n\r\n**Steps to repro:**\r\n**OS:** Win 7 64 bit and the NSB Installer has **not** been run.\r\n1. Clear out the Nuget cache, (to be sure, clear out all the appropriate nsb related registry keys in HKCU) \r\n2. Create a class library in Visual Studio\r\n3. In Package Manager type and notice the error:\r\n\r\n````\r\ninstall-package NServiceBus.Host -version 4.1.0\r\n````\r\n````\r\nNew-ItemProperty : Cannot find path 'HKCU:\\SOFTWARE\\NServiceBus\\4.1' because it does not exist.\r\nAt C:\\development\\Test\\ClassLibrary1\\packages\\NServiceBus.4.1.0\\tools\\init.ps1:76 char:1\r\n+ New-ItemProperty -Path $nserviceBusVersionPath -Name $machinePreparedKey -Proper ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (HKCU:\\SOFTWARE\\NServiceBus\\4.1:String) [New-ItemProperty], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.NewItemPropertyCommand\r\n \r\n````"
1678,'SimonCropp','Better handling of 3rd party exception class where members actually throw exceptions\nIf a message handler throws an `Exception` whose `Message` property throws an `Exception` then NServiceBus.Host.exe crashes with a corrupted stack. This causes the endpoint to crash.\r\n\r\n--\r\n\r\nThis is reproducible on NServiceBus 4.0.5.\r\n\r\n\r\n    public class TestHandler : IHandleMessages<TestMessage>\r\n    {\r\n        public void Handle(TestMessage message)\r\n        {\r\n            throw new BadException();\r\n        }\r\n    }\r\n\r\n    public class BadException : Exception\r\n    {\r\n        public override string Message\r\n        {\r\n            get { throw new Exception("Failure in exception Message property"); }\r\n        }\r\n    }\r\n\r\n    public class TestMessage : IMessage\r\n    {\r\n    }\r\n'
1677,'SimonCropp','4.1.0-Alpha0001-0032 Nuget packages include Src\nAll of the nuget packages (`NServiceBus.Interfaces`, `NServiceBus`, `NServiceBus.Host`) include Src.\r\n\r\n1. Clear out Nuget cache\r\n2. Create a class lib project\r\n3. In package manager console, type:\r\n\r\n     install-package NServiceBus.Interfaces -version 4.1.0-Alpha0001-0032 -pre\r\n\r\nInspect the packages folder.\r\nSame applies for `NServiceBus` & `NServiceBus.host`\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1330881/eff4dc38-353c-11e3-9cf3-d79ced617365.png)\r\n'
1676,'andreasohlund','Split powershell to a separate repo\nOur custom actions reference them so it would be nice to have a isolated release cycle for them'
1666,'andreasohlund','using_a_configured_unicastBus make incorrect assumptions\nso all tests inheriting from `using_a_configured_unicastBus` are actually integration tests. They rely on `Configure.Instance` being set. The tests previously worked because, due to a qwerk in the test run order, they were run after other tests that meant . but they do not set it themselves. They are now failing on  the build server because they are running before `Configure.Instance` is set.\r\n\r\nFor example `When_processing_a_subscribe_message_successfully.Should_invoke_the_uow_begin_and_end`\r\n```\r\nSetUp : System.NullReferenceException : Object reference not set to an instance of an object.\r\n   at NServiceBus.Satellites.SatelliteLauncher.Start() in SatelliteLauncher.cs: line 15\r\n   at NServiceBus.Unicast.UnicastBus.Start(Action\xa0startupAction) in UnicastBus.cs: line 854\r\n   at NServiceBus.Unicast.UnicastBus.Start() in UnicastBus.cs: line 811\r\n   at NServiceBus.Unicast.Tests.Contexts.using_a_configured_unicastBus.StartBus() in using_the_unicastbus.cs: line 195\r\n   at NServiceBus.Unicast.Tests.Contexts.using_the_unicastBus.SetUp() in using_the_unicastbus.cs: line 252\r\n```\r\n\r\nWhile we are there has 17 instance properties. '
1653,'johnsimons','Multiple logical publishers for the same event\nThis PR fixes the following issues:\r\n- #1753\r\n- #1652\r\n\r\n### What needs to be fixed:\r\n- [x] Remove `IRouteMessages`\r\n- [x] Add support for mapping to multiple endpoints for events only\r\n- [x] Add acceptance tests\r\n- [x] Ensuring conventions are set before doing any routing registration'
1652,'johnsimons','Unable to subscribe for a base event from multiple publishers.\n--\r\nRelated to what @thirdvalve reported in as comment in https://github.com/Particular/NServiceBus/issues/1583\r\n\r\n**Steps to Repro** \r\n1. Modify the pub sub example, where publisher1 alternates publishing IMyEvent and EventMessage\r\n2. Add a new publisher, MyPublisher2, which will publish the AnotherEventMessage (which derives from IMyEvent)\r\n3. Change the subscriber2 so that, it subscribes to both IMyEvent from Publisher1 and AnotherEventMessage from Publisher2, and add a generic message handler for IMyEvent. Notice that the subscriber just receives one event.\r\n\r\n````xml\r\n <UnicastBusConfig ForwardReceivedMessagesTo="audit">\r\n    <MessageEndpointMappings>\r\n      <add Assembly="MyMessages" Type="MyMessages.IMyEvent" Endpoint="MyPublisher" />\r\n      <add Assembly="MyMessages" Type="MyMessages.Other.AnotherEventMessage" Endpoint="MyPublisher2" />\r\n    </MessageEndpointMappings>\r\n  </UnicastBusConfig>\r\n````\r\n\r\n**NOTE:** This used to work in 3.3.8, does not work in 4.0.5\r\n\r\n\r\n'
1647,'johnsimons',"Reference to System.Management.Automation in NServiceBus.PowerShell is now version-specific\nI've been working with 4.1 and have found that we can no longer import-module the NerviceBus.PowerShell.dll. The only way to make it work was to update to the Windows Management Framework version 3.0.0 (which includes PowerShell v3) on Windows 7 and Server 2008. Windows 8 and Server 2012 are fine.\r\n\r\nThe only different between NSB 4.0.x and 4.1 is the the reference to System.Management.Automation has SpecificVersion = true in 4.1. I changed it back and rebuilt and am able to proceed without installing WMF v3.0.0."
1645,'andreasohlund',"Autofac builder symbols fails to push to symbolsource\nThis is probably because we use a linked file (so we need to make sure its included in the package)\r\n\r\n[11:38:30][push] Failed to process request. 'Package submission failed: Source file c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\ObjectBuilder\\Autofac\\AutofacObjectBuilder.cs not found in package. Source file is declared in NServiceBus.ObjectBuilder.Autofac.pdb. . See http://www.symbolsource.org/Public/Home/Help for possible reasons. Fiddler may help diagnosing this error if your client discards attached detailed information.'. \r\n[11:38:30][push] The remote server returned an error: (506) Package submission failed: Source file c:\\BuildAgent\\work\\31f8c64a6e8a2d7c\\src\\NServiceBus.Core\\ObjectBuilder\\Autofac\\AutofacObjectBuilder.cs not found in package. Source file is declared in NServiceBus.ObjectBuilder.Autofac.pdb. . See http://www.symbolsource.org/Public/Home/Help for possible reasons. Fiddler may help diagnosing this error if your client discards attached detailed information...\r\n[11:38:30][push] Process exited with code 1\r\n[11:38:30][Step 2/2] Step Publish Unstable symbols (NuGet Publish) failed"
1640,'indualagarsamy',"ReturnToSource does not recognize the Id in the message headers and does not return the message.\nFix so that ReturnToSource is backwards compatible with earlier versions\r\n\r\n--\r\n\r\n**Steps to repro:**\r\n1. Run the Error handling sample and generate an error\r\n2. Use the Id in the headers in the ReturnToSource tool\r\n3. Notice that it doesn't recognize it.\r\n\r\nThe MSMQ Id does work. However, if people have downsteam process that read the error queue and call return to source based on the Id in the header, then there is a problem.\r\n\r\n![image](https://f.cloud.github.com/assets/854553/1293081/5112c720-305e-11e3-99c5-c87a55282fab.png)\r\n\r\nNOTE: This case doesn't work in 4.0.x either."
1639,'SimonCropp','Extension methods GetHeader, SetHeader should raise compiler errors and not warnings.\nWhen using `GetHeader` or `SetHeader` or `CopyHeaderFromRequest` like shown below:\r\n\r\n    Logger.InfoFormat("Header \'Test\' = {0}.", message.GetHeader("Test"));\r\n    response.CopyHeaderFromRequest("Test");\r\n    response.SetHeader("1", "1");\r\n    response.SetHeader("2", "2");\r\n\r\nWhen compiling using 4.1.x binaries, these are now warnings!!? These used to be errors in 4.0.x\r\n\r\n    1>C:\\Dev\\testing\\4.1.Unstable0604\\FullDuplex\\MyServer\\RequestDataMessageHandler.cs(25,55,25,80): warning CS0618: \'NServiceBus.ExtensionMethods.GetHeader(object, string)\' is obsolete: \'Please use `bus.GetMessageHeader(object msg, string key) or Headers.GetMessageHeader(object msg, string key)` instead. Will be treated as an error from version 4.0.0. Will be removed in version 5.0.0.\'\r\n    1>C:\\Dev\\testing\\4.1.Unstable0604\\FullDuplex\\MyServer\\RequestDataMessageHandler.cs(35,13,35,51): warning CS0618: \'NServiceBus.ExtensionMethods.CopyHeaderFromRequest(object, string)\' is obsolete: \'Please use `Headers.SetMessageHeader(msg, key, Bus.CurrentMessageContext.Headers[key])` instead. Will be treated as an error from version 4.0.0. Will be removed in version 5.0.0.\'\r\n    1>C:\\Dev\\testing\\4.1.Unstable0604\\FullDuplex\\MyServer\\RequestDataMessageHandler.cs(36,13,36,41): warning CS0618: \'NServiceBus.ExtensionMethods.SetHeader(object, string, string)\' is obsolete: \'Please use `bus.SetMessageHeader(object msg, string key, string value) or Headers.SetMessageHeader(object msg, string key, string value)` instead. Will be treated as an error from version 4.0.0. Will be removed in version 5.0.0.\'\r\n    1>C:\\Dev\\testing\\4.1.Unstable0604\\FullDuplex\\MyServer\\RequestDataMessageHandler.cs(37,13,37,41): warning CS0618: \'NServiceBus.ExtensionMethods.SetHeader(object, string, string)\' is obsolete: \'Please use `bus.SetMessageHeader(object msg, string key, string value) or Headers.SetMessageHeader(object msg, string key, string value)` instead. Will be treated as an error from version 4.0.0. Will be removed in version 5.0.0.\''
1635,'SimonCropp','Investigate failing unittest\nhttps://github.com/Particular/NServiceBus/commit/db39e49f230bd9ef2f6e9e5fac59ff2129d4dcc3'
1624,'SimonCropp','Obsolete IMessageMapper\nSo the use of `MessageMapper` is hard coded.\r\n\r\n * https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Serializers/XML/Config/XmlSerialization.cs\r\n * https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Serializers/Json/Config/BsonSerialization.cs\r\n * https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Serializers/Json/Config/JsonSerialization.cs\r\n\r\nSo `IMessageMapper` is not an extension point and should be removed'
1614,'andreasohlund','Improved pipeline for incoming messages\nFixes #1431 '
1608,'sfarmar','Add production tester to see that everything is installed and running correctly\n'
1603,'andreasohlund','Pull the gateway out of the core\nSince the gateway is a optional component we should pull it out of the core and auto enable it if users reference it.\r\n\r\n--\r\n\r\nRepo + Nuget: NServiceBus.Gateway\r\n\r\nLeft todo \r\n\r\n- [x] Remove IBus.SendToSites and make it a extension method in the new assembly\r\n- [x] Updates docs\r\n- [x] Release a beta to nuget of the new package'
1601,'johnsimons','Make AssemblyScanner more generic\nWe want to be able to reuse the AssemblyScanner from other places such as the plugin we developing for Pulse.\r\n\r\nIn summary:\r\n- Allow the user to specify the assembly that the scanner should check if assembly references;\r\n- Fix some of the exception messages so they are not specific either;'
1599,'johnsimons','Using MessageReadPropertyFilter.SetAll() is usually not a very good idea in WorkGroup mode\nCalling SetAll() is usually not a very good idea in WorkGroup mode, as it sets AD related attributes as well. This can trigger the properties error – “One or more of the passed properties are invalid”.\r\n \r\nWhat you can do is either find out which properties you really need and set just these properties (this is the preferred approach), or alternatively unset the AD related properties (I quickly compiled a list for you from http://msdn.microsoft.com/en-us/library/system.messaging.messagequeue.messagereadpropertyfilter.aspx – I hope this is all):\r\n \r\nConnectorType\r\nDestinationSymmetricKey\r\nDigitalSignature\r\nEncryptionAlgorithm\r\nExtension\r\nHashAlgorithm\r\nUseEncryption\r\nUseTracing'
1598,'johnsimons','Expanding message registration exception message as it is a little misleading\nThe exception message states that the messages must implement, IMessage, IEvent or ICommand however this may not have been the cause of the exception. If the user has configured NSB such that the message types have never been registered (e.g. NSB has not scanned the required assembly) then they will also get this error message even though their messages implement the correct interfaces.'
1594,'sfarmar',"Saga persistence - SQLite database creation issue (4.0.4.0)\nWhen using SQLite for saga persistence with NSB we are getting exceptions thrown.\r\n\r\neg;\r\nSystem.Data.SQLite.SQLiteException: SQL logic error or missing database\r\nno such table: SagaData\r\n\r\nIn our scenario (which is acceptance testing), our databases are deleted prior to the test run.  By default, SQLite will create a database if it is missing.\r\n\r\nIt seems that when NSB connects to the db, SQLite creates the db as expected, but NSB doesn't create the saga persistence table.\r\n\r\nI've created a simple (and somewhat contrived) example that illustrates the problem - just do a clean before each test run.  If you look at the output in the test runner, you'll see that the exception has been thrown (the test passes as there are no assertions).\r\n\r\nhttps://dl.dropboxusercontent.com/u/62994082/SQLiteNSBIssue.zip\r\n\r\nThanks\r\n\r\nRichard"
1591,'SimonCropp','Re-enable the forwarding feature\nSo as part of the Auditing re-factor #1399 the `ForwardReceivedMessagesTo` feature was removed. \r\n\r\nHere is the doco for the the previous feature\r\nhttp://www.particular.net/articles/auditing-with-nservicebus\r\n\r\nThen the ForwardReceivedMessagesTo config section property was re-used as the audit endpoint https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Audit/Audit.cs#L125.\r\n\r\nUnless you were debugging in which case it would throw an exception. https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Audit/Audit.cs#L100\r\n\r\nThis way we could guide people over to the new audit config without breaking production code. \r\n\r\nThere are a few problems with this\r\n\r\nForwarding is not necessarily used for just auditing. It was a standalone feature. People could be using it for other purposes. Now since it has been hijacked by auditing we have effectively removed a feature. This is a fairly significant breaking change.\r\n\r\nPreviously people could actual set `UnicastBus.ForwardReceivedMessagesTo` and then forwarding will work https://github.com/Particular/NServiceBus/blob/4.0.0/src/NServiceBus.Core/Unicast/UnicastBus.cs#L1329  so the audit changes broke this feature. Marking those properties as obsolete is not a good approach since they will silently not work when people use them https://github.com/Particular/NServiceBus/pull/1582\r\n\r\n\r\nSo the proposal is, for 4.1, separate the the forwarding and audit functionality so we can support both. The re-evaluate the way forward for 4.2'
1584,'BogdanMitrache','Installer tries to install MSMQ even if you un-check the boxes in the advanced settings.\nI discovered this problem while installing on Windows 8.  The installation failed because it could not install MSMQ even though I had requested that it -not- install MSMQ.  Note that NServiceBus fails Windows 8 installation because of this.\r\n\r\nDownload NServiceBus (4.0.4 in the test)\r\nRun the installer\r\nSelect "Advanced"\r\nDisable all checkboxes in the options.  You will see only "NServiceBus Binaries" in the last page before the installation starts.\r\n\r\n----------------------------- about 3/4 way down the logs you will see -----------------\r\n\r\n\r\nChecking if MSMQ is installed.\r\nMSMQ is not installed. Going to install.\r\nOS not supported.\r\n\r\nCustom action failed: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NServiceBus.Setup.Windows.Msmq.MsmqSetup.RunSetup(Func`1 action)\r\n   at NServiceBus.Setup.Windows.Msmq.MsmqSetup.InstallMsmqIfNecessary(Boolean allowReinstall)\r\n   at NServiceBus.Setup.Windows.Msmq.MsmqSetup.StartMsmqIfNecessary(Boolean allowReinstall)\r\n   at Particular.CustomActions.CustomActions.<>c__DisplayClass2.<InstallMsmq>b__0()\r\n   at Particular.CustomActions.CustomActions.CaptureOut(Action execute, Session session)\r\n   at Particular.CustomActions.CustomActions.InstallMsmq(Session session)\r\nCustomAction InstallMsmq.CB8171C5_FE21_41EE_BC42_72123C0AD0F7 returned actual error code 1603 (note this may not be 100% accurate if translation happened inside sandbox)\r\nAction ended 9:12:51: InstallExecute. Return value 3.\r\nMSI (s) (E8:38) [09:12:51:971]: Note: 1: 2265 2:  3: -2147287035 \r\nMSI (s) (E8:38) [09:12:51:972]: User policy value \'DisableRollback\' is 0\r\nMSI (s) (E8:38) [09:12:51:972]: Machine policy value \'DisableRollback\' is 0\r\nMSI (s) (E8:38) [09:12:51:974]: Executing op: Header(Signature=1397708873,Version=500,Timestamp=1127827866,LangId=1033,Platform=0,ScriptType=2,ScriptMajorVersion=21,ScriptMinorVersion=4,ScriptAttributes=1)\r\nMSI (s) (E8:38) [09:12:51:974]: Executing op: DialogInfo(Type=0,Argument=1033)\r\nMSI (s) (E8:38) [09:12:51:975]: Executing op: DialogInfo(Type=1,Argument=NServiceBus)\r\nMSI (s) (E8:38) [09:12:51:976]: Executing op: RollbackInfo(,RollbackAction=Rollback,RollbackDescription=Rolling back action:,,CleanupAction=RollbackCleanup,CleanupDescription=Removing backup files,CleanupTemplate=File: [1])\r\nAction 9:12:51: Rollback. Rolling back action:\r\n\r\n'
1582,'indualagarsamy','Fix 1536\nFixes #1536 \r\nRather than remove the auditing properties (ForwardReceivedMessagesTo and TimeToBeReceivedOnForwardedMessages)  and their implementation in UnicastBus, marking them as obsolete.'
1579,'indualagarsamy','AVG Antivirus reports NServiceBus.Host.exe as a threat\nLatest update from AVG reports NServiceBus.Host.exe as a threat.\r\n![avg](https://f.cloud.github.com/assets/282209/1197698/7c4a4760-24e2-11e3-95d7-00241178130b.png)\r\n'
1577,'mookid8000','Performance: distillLowerAssemblyName can be cached\ndistillLowerAssemblyName is run very often. I did some tracing and found out that it took 5% of the startup time...\r\n\r\n(In my case it was called many thousand times...)\r\n\r\nhttps://github.com/Particular/NServiceBus/blob/2315927c6a2bc90fe1123dc1ea5ee1326652a838/src/NServiceBus.Core/Configure.cs#L431'
1576,'andreasohlund',"Nuget install of NServiceBus.host in 4.1\nExecuting: \r\n\r\n    install-package nservicebus.host -pre\r\n\r\ninstalls both NServiceBus.host and NServiceBus.Core as dependencies. However, it doesn't have NServiceBus.Interfaces. \r\n\r\nAs a result, if I add a class that implements INeedInitialization, then it won't compile. \r\n\r\n"
1575,'sfarmar','Automate post build tests using the VideoStore.Msmq sample\n'
1568,'johnsimons',"Introducing a way to control lock modes when using the NHibernate saga persister\nWe're also changing the default mode from None to Upgrade since\r\nthat improves throughput when there is alot of concurrency on saga\r\ninstances. This also seems to prevent\r\nhttps://nhibernate.jira.com/browse/NH-3023 from happening as well since\r\nthere will be much less rollbacks due to concurrency issues.\r\nCloses #1342"
1562,'johnsimons','Issue 1558\nNew pull against the correct branch'
1558,'johnsimons','Publisher not publishing derived events for classes\nGiven the following messages hierarchy:\r\n```c#\r\npublic class STEPEvent : IEvent  { }\r\n\r\npublic class ProposalPingEvent : STEPEvent { }\r\n```\r\n\r\nAnd a subscriber with a single handler for `STEPEvent`.\r\n\r\nWhen the Publisher publishes a  `ProposalPingEvent` the subscriber does not receive that event even thought the publisher is aware of the subscriber.'
1555,'andreasohlund','Non-DTC operations\nIn order to provide the same level of consistency as users that are running with DTC transactions enabled we should introduce a mode of operations that provides those same guarantees without requiring a DTC compliant transport and storage.\r\n\r\nThe following is the high-level design\r\n\r\n## When a message is pulled from the Q\r\n\r\n* if IncomingMessage.MessageId exists in the outbox\r\n    - no: Record all actions (keep them inmemorybatch them to storage at end of "inner" transaction)\r\n            * Note that message id will be generated here and kept stable\r\n    - yes: dispatch all message actions (since this is a retry) but don\'t invoke user code\r\n\r\n* Invoke user code \r\n\r\n* On commit: \r\n   Commit shared UnitOfWork => stores message id + actions in outbox + applies any user operations against the storage (in this mode our outbox share the same storage as the users own data in order to participate in the same storage TX)\r\n\r\n* Dispatch message actions against the underlying transport\r\n\r\n* Mark MessageId as dispatched in the outbox\r\n\r\n## Required functionallity in the core\r\n1. Need a "pipeline" for outgoing messages that supports the above\r\n2. "Outbox" for message id + actions \r\n3. UoW that is shared between our outbox and the users own storage\r\n4. Installers to setup the need outbox "tables" if needed\r\n5. Periodic cleanup of the outbox'
1552,'yvesgoeleven',"Error with JSON serialized commands\nI've upgraded to 4.0.4 and I'm getting an error:\r\n```\r\nNo handlers could be found for message type: ISomeInterface_impl\r\n```\r\nWhere `ISomeInterface` is an interface on one of my command objects.  It's coming from [here](https://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Unicast/UnicastBus.cs#L1067).\r\n\r\nIt appears to be happening because I use JSON serialized messages.  [This commit](https://github.com/Particular/NServiceBus/commit/2d9ca79b19865145048dc969168c72a72b99b025) added some lines to serialize a message using a pure interface, which is great for events, but sucks for commands.  The part of the code that is problematic is:\r\n```csharp\r\nvar dynamicTypeToSerializeTo = messageTypes != null ? messageTypes.FirstOrDefault(t => t.IsInterface) : null;\r\n```\r\n\r\nIf there's *any* interface on the message, it favors that over the concrete class.  It shouldn't do that, IMHO.\r\n\r\nSo it skips over the real command class, and tries to find a command handler that is based on the implementation of the interface.  I have a real command handler for the command, and it's not finding it.\r\n"
1532,'mookid8000','AssemblyListExtensions.AllTypes: Catch type load errors and rethrow readable exception?\nTypeLoadException is a hard one. Message and ToString() doesn\'t tell you much. Since this code runs very early, we might consider to catch TypeLoadException and turn it into something meaningful...\r\n\r\nSomething like:\r\n\r\n```csharp\r\ncatch (ReflectionTypeLoadException e)\r\n            {\r\n                string loaderExceptions = "";\r\n                foreach (var loaderException in e.LoaderExceptions)\r\n                {\r\n                    loaderExceptions += Environment.NewLine + " - " + loaderException.Message;\r\n                }\r\n                var message = "Failed to load types: " + loaderExceptions;\r\n                throw new Exception(message, e);\r\n            }\r\n```\r\n\r\nhttps://github.com/Particular/NServiceBus/blob/develop/src/NServiceBus.Core/Hosting/Helpers/AssemblyListExtensions.cs#L13'
1531,'mookid8000','Rolemanager should only load types from assemblies that \nInstead of using `AllTypes()`, it should only load types from assemblies that are known to refererence Roles (via AllTypesAssignableTo<T>).\r\n\r\nhttps://github.com/Particular/NServiceBus/blob/0e5c683204f76c1a7fd144f7205ba4de4d77dbfc/src/NServiceBus.Core/Hosting/Roles/RoleManager.cs#L26'
1530,'SimonCropp','userName not passed to INeedToInstallSomething during host install for some profiles\nIf I run this \r\n\r\n    NServiceBus.Host.exe /install /serviceName:A /userName:Domain\\Account /password:*** NServiceBus.Integration\r\n\r\nThen `INeedToInstallSomething<Windows>` are passed the running user and not `/userName:Domain\\Account`. So for example `RavenUserInstaller` and `PerformanceMonitorUsersInstaller`.\r\n\r\nTesting other profiles \r\n\r\n * fails for `NServiceBus.Lite` and `NServiceBus.Integration`\r\n * works for `NServiceBus.Production` and `no profile defined`'
1528,'indualagarsamy','When a message handler is not found and a message arrives, endpoint exhibits different behaviors in dev & prod\n**Scenario:**\r\n1. Endpoint receives a message\r\n2. There are no handlers found for that message\r\n\r\n**Current behavior while running within the debugger:**\r\nInvalid operation is thrown and the message is therefore forwarded to the error queue.\r\n\r\n**Current behavior when just executing the code:**\r\nNo invalid operation, a warning gets logged. And the message is gone.\r\n\r\n    foreach (var messageToHandle in messages)\r\n    {\r\n        ExtensionMethods.CurrentMessageBeingHandled = messageToHandle;\r\n\r\n        var handlers = DispatchMessageToHandlersBasedOnType(builder, messageToHandle).ToList();\r\n\r\n        if (!callbackInvoked && !handlers.Any())\r\n        {\r\n            var warning = string.Format("No handlers could be found for message type: {0}", messageToHandle.GetType().FullName);\r\n\r\n            if (Debugger.IsAttached)\r\n                throw new InvalidOperationException(warning);\r\n\r\n            Log.WarnFormat(warning);\r\n        }\r\n\r\n        LogPipelineInfo(messageToHandle, handlers);\r\n    }\r\n\r\n**Question:**\r\n\r\nShould this behavior be different in these environments? The reason as I understand it is that in dev we want the developer to know this right away so he can fix it and therefore won\'t be an issue in prod. However, why can\'t we throw an invalid op exception in prod as well? \r\n\r\n**Proposed Fix**\r\n1. Log this as an error as opposed to a warning\r\n2. Treat this similar to deserialization exception and move the message to the error queue without any further retries.\r\n'
1524,'mookid8000','Improved assembly scanner that skips irrelevant files\nalso, the logic is put in `AssemblyScanner` only\r\n\r\nfor #1289'
1522,'BogdanMitrache','Install/Uninstall process\n@BogdanMitrache in the NServiceBus installer we need the following logic for installing/uninstalling:\r\n- User install v1.0.0 (first new install)\r\n- User downloads a new patch release v1.0.1\r\n- When user installs v1.0.1, version 1.0.0 should be uninstalled automatically and v1.0.1 installed\r\n\r\n- If user later on downloads v1.1 or v2.0\r\n- When user installs v1.1 or v1.2 then the installer will install both of those side by side (so v1.0.1 would **not be uninstalled!**)\r\n\r\nSo in summary, given a version like x.y.z:\r\n- Any changes in Z triggers an uninstall of any previous x.y.# automatically\r\n- Any changes to either x or y will trigger a side by side install\r\n\r\nI hope this makes sense?'
1520,'SimonCropp','Cannot access a disposed object.\nInstall the TimeoutManager sample,eg:\r\nNServiceBus.Host.exe /install /serviceName="MyEndpoint"\r\n\r\n#### Exception\r\n```\r\nFailed to execute installers: System.ObjectDisposedException: Cannot access a di\r\nsposed object.\r\nObject name: \'CommonObjectBuilder\'.\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.ThrowIfDisposed()\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.get_Container() in c:\r\n\\Projects\\NServiceBus\\src\\NServiceBus.Core\\ObjectBuilder\\Common\\CommonObjectBuil\r\nder.cs:line 19\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.DisposeManaged() in c\r\n:\\Projects\\NServiceBus\\src\\NServiceBus.Core\\ObjectBuilder\\Common\\CommonObjectBui\r\nlder.cs:line 150\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.Dispose()\r\n   at NServiceBus.Hosting.Windows.Installers.WindowsInstaller.RunInstall() in c:\r\n\\Projects\\NServiceBus\\src\\hosting\\NServiceBus.Hosting.Windows\\Installers\\Windows\r\nInstaller.cs:line 41\r\n```\r\n\r\nRelated to #1362'
1519,'johnsimons','NServiceBus. Used product version in URL launched at the end, updated metada info that is visible in Control Panel.\n'
1510,'andreasohlund','SecondLevelRetries.Disabled does not reflect when feature has been disabled\nThis fix also checks if the endpoint is a Worker and not a Distributor, in this case the feature should be disabled too.'
1503,'johnsimons','SecondLevelRetries.Disabled does not reflect when feature has been disabled\n# Expected\r\nWhen SecondLevelRetries feature is disabled the satellite should not be started up.\r\n\r\n# Observed\r\nversion: 4.0.2\r\nlogging output shows that the timeoutmanager and secondlevelretries are both disabled, however the satellitelauncher is starting up the secondlevelretriesprocessor...\r\n![image](https://f.cloud.github.com/assets/81165/1084836/0259fb72-15b9-11e3-8a75-bfe71b77ab57.png)\r\n\r\n# Details\r\nThe SatelliteLauncher only launches satellites as follows:\r\n```csharp\r\n    var satellitesList = Configure.Instance.Builder\r\n                                          .BuildAll<ISatellite>()\r\n                                          .ToList()\r\n                                          .Where(s => !s.Disabled)\r\n                                          .ToList();\r\n```\r\nThe implementation of TimeoutDispatcherProcessor is:\r\n```csharp\r\n        public bool Disabled\r\n        {\r\n            get { return !Feature.IsEnabled<TimeoutManager>(); }\r\n        }\r\n```\r\nWhereas the implementation of SecondLevelRetriesProcessor is:\r\n```csharp\r\n        public bool Disabled { get; set; }\r\n```'
1495,'andreasohlund','ExpectSendToSites & ExpectNotSendToSites\nAdded ExpectSendToSites<T> and ExpectNotSendToSites<T>handlers\r\nAdded basic unit tests'
1492,'andreasohlund',"Unit Tests fail with ConfigurationErrorsException\nunit tests fail with 'Multiple serializers are not supported. Please make sure to only enable one' if using any serializer other than xml. Removed explicit serializer configuration & substituted with a default"
1481,'johnsimons',"When using DataBus with multiple subscribers that share the same storage causes exception\n**Problem**\r\n\r\nwe are setting up a Pub/Sub environment and have now the scenario, that the publisher wants to send a file via the DataBus capabilities of NSB.\r\nThere are two subscribers which simultaneously receive the event, so that both are accessing the file in the configured DataBus storage in parallel. For one subscriber this works fine, but the other gets an error (it’s more or less random which of both subscriber fails):\r\n \r\n\t[27.08.2013 13:12:21,346] [Worker.14] [Transactional.TransactionalTransport] Failed raising 'transport message received' event for message with ID=bf287a2a-198a-47b3-8084-4cec75b079ea\\88910\r\n\tSystem.IO.IOException: The process cannot access the file 'c:\\temp\\2013-08-27_01\\bd433df5-2de0-4011-a080-c2724d5a47ee' because it is being used by another process.\r\n\t   at NServiceBus.Unicast.UnicastBus.HandleTransportMessage(IBuilder childBuilder, TransportMessage msg) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast\\UnicastBus.cs:line 1300\r\n\t   at NServiceBus.Unicast.UnicastBus.TransportMessageReceived(Object sender, TransportMessageReceivedEventArgs e) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast\\UnicastBus.cs:line 1220\r\n\t   at System.EventHandler`1.Invoke(Object sender, TEventArgs e)\r\n\t   at NServiceBus.Unicast.Transport.Transactional.TransactionalTransport.OnTransportMessageReceived(TransportMessage msg) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\impl\\unicast\\transport\\NServiceBus.Unicast.Transport.Transactional\\TransactionalTransport.cs:line 480\r\n \r\n**Proposed Fix**\r\nThe file should be opened in read share mode with no lock\r\n"
1478,'johnsimons','Remove hard coded 20 sec limit on `IWantToRunWhenBusStartsAndStops.Stop`\nIn v4 `IWantToRunWhenBusStartsAndStops.Stop` is only allowed to run for a maximum of 20 seconds.\r\n\r\nThis limitation may not allow tasks to be completed successfully before shutting down the Windows service.\r\n\r\nAs such this timeout has been removed.'
1476,'andreasohlund','Add Configure.Component overload\nMake overload easier to discover over `Instance.Configurer.ConfigureComponent<T>(Func<IBuilder,T>, DependencyLifecycle)`\r\n\r\nThis is especially handy when using `IManageUnitsOfWork`\r\n\r\nSee [details](http://tech.groups.yahoo.com/group/nservicebus/message/20325)'
1473,'sfarmar','NHibernate integration \nSławomir Rosiek (rosieks@hotmail.com) from says:\r\n\r\n\r\nDocumention for NHibernate integration is out of date. I receive InvalidOperationException with message: No NHibernate properties found in your config file (in NSB 4.0.3) \r\n\r\n\r\nSent From URL: http://particular.net/articles/relational-persistence-using-nhibernate \r\nTimestamp: Fri Aug 23 2013 14:07:59 GMT+0200 (Central European Daylight Time) \r\n\r\nPage:\thttp://particular.net/articles/relational-persistence-using-nhibernate\r\nPhone:\t\r\nTime:\t08/23/2013 12:10:10'
1457,'mauroservienti','Author message lifecycle article\nSee initial details here: https://github.com/Particular/Website.Backend/issues/15'
1456,'mauroservienti','Author message pipeline article \nAn article containing and explaining a diagram illustration which shows the steps a message goes through when coming in and going out, plus additional examples on extensibility points and some sample code.'
1455,'mauroservienti','Author comparison table between transports \nFollow-up on #1454, including features, and pros and cons of each.'
1454,'mauroservienti','Author per-transport article\nSee, for example, article for [Windows Azure tranport](http://particular.net/articles/windows-azure-transport), including details on [config](http://particular.net/blog/nservicebus-v4.0-release-notes#transports), and referencing the VideoStore samples per transport'
1451,'mookid8000','Load message handlers\nTo get the Sql Server sample to work (in particular, feedback in the UI), the message handlers need to get loaded in the web client configuration.'
1445,'SimonCropp','Review MessageMapper IL generation\n'
1444,'johnsimons','Some installers logs that a trial license is used when beeing built\nThis results in a dialog box is being showed to the end user.\r\n\r\nPretty sure this issue is related to our main build agent beien provisioned dynamically. According to the AI license "a hardware change might cause the license to be invalidated"\r\n\r\nWorking master build (latest 4.0.3)\r\n\r\nhttp://builds.particular.net/viewLog.html?buildId=7107&buildTypeId=bt74&tab=buildLog\r\n\r\nFailing develop build (before merge back of 4.0.3)\r\nhttp://builds.particular.net/viewLog.html?buildId=7094&buildTypeId=bt26&tab=buildLog\r\n\r\nWorking develop build, same snapshot but different EC2 instance as the previous one.\r\n\r\nhttp://builds.particular.net/viewLog.html?buildId=7052&buildTypeId=bt26&tab=buildLog\r\n'
1443,'johnsimons',"FirstLevelRetries.TryInvokeFaultManager implementation can lose messages\nWhen an exception is caught in `FirstLevelRetries.TryInvokeFaultManager` it it is not re-thrown. As a result, processing of the current message is not rolled back and it is deleted from the input queue. The only way message loss does not occur is if the implementation of `Configure.Instance.RaiseCriticalError` kills the process immediately (the Azure host process does not do this). If the exceptions caught here were re-thrown it wouldn't be possible to lose them."
1435,'BogdanMitrache','Installer disregards custom port for Management Port\n'
1434,'andreasohlund','Add ReturnToSourceQueue script for Sql Server\n'
1433,'BogdanMitrache','Add [ProductVersion] to installation completed URL\ne.g. add the version parameter:\r\n\r\nhttp://www.particular.net/Installation-completed?installer=NServiceBus&version=[ProductVersion]'
1432,'BogdanMitrache',"Installer disregards RavenDB port number that's different from default\nChanging the ravendb port in the installer does not affect the actual configured port setting.\r\n\r\n![image](https://f.cloud.github.com/assets/3889023/961291/bfdb4534-04cf-11e3-93fb-4e72232da196.png)\r\n\r\n\r\n// @johnsimons "
1431,'SimonCropp','Better pipeline for the handler execution\nPartially inspired by the [Fubu Russian doll model](http://codebetter.com/jeremymiller/2011/01/09/fubumvcs-internal-runtime-the-russian-doll-model-and-how-it-compares-to-asp-net-mvc-and-openrasta/) the internal execution of handlers now takes a nested execution approach. \r\n\r\nWe refer to this nested approach referred to as a `Chain`. Each step in this `Chain` is referred to as a `Behavior`. \r\n\r\nSo part of the chain would be \r\n\r\n```\r\nStart chain\r\ninvokes ApplyIncomingMessageMutatorsBehavior \r\n    invokes CallbackInvocationBehavior \r\n        invokes LoadHandlersBehavior \r\n            invokes SagaPersistenceBehavior \r\n                invokes InvokeHandlersBehavior\r\n```\r\n\r\nThis allows each behavior to have control of \r\n\r\n * What is executed before the nested behavior \r\n * Optionally not invoke the nested behavior \r\n * Handle exceptions that occur during the nested execution\r\n * Optionally wrap the nested action in a transaction\r\n * What is executed after the nested behavior \r\n * Manipulate the data passed into and received from the nested behavior \r\n\r\n--'
1428,'BogdanMitrache','Installer metadata should have some links\nIt currently only shows:\r\n![image](https://f.cloud.github.com/assets/122651/959270/e5a50b2e-047f-11e3-8dcf-a06310702bfb.png)\r\n\r\nWe should add extra links eg:\r\n![image](https://f.cloud.github.com/assets/122651/959286/7278cf04-0480-11e3-8ae1-a395c62944de.png)\r\n\r\n//cc @dannycohen '
1426,'BogdanMitrache',"Offline release notes not up to date!\nThe installer currently has some offline release notes, see https://github.com/Particular/NServiceBus/blob/master/NServiceBus%20Setup/Files/OfflineHtml/NServiceBus%204.0%20Beta%20Release%20Notes.htm\r\n\r\nIt doesn't look like this file is being updated as part of the release.\r\n\r\nWhat was the procedure to update this file?\r\n\r\n/cc @dannycohen \r\n\r\nThis is what the file currently looks like:\r\n![image](https://f.cloud.github.com/assets/122651/959006/6d1e48c4-0474-11e3-9aeb-86a8068710d3.png)\r\n\r\n**As you can see, it is still using the old template too!**"
1425,'BogdanMitrache','Default port value for management service comes up blank\nWhen running the 4.0.3 installer the default port for the management service ( aka ServiceControl) comes up blank even though its set to 33333 in the project.\r\n\r\nLogfiles indicates that its set to "" when running on the user machine (Dannys in this case). But the issue replicates reliably on other machines as well.'
1424,'yvesgoeleven',"Azure BlobStorageDataBus shouldn't swallow storage exceptions\n`BlobStorageDataBus` catches `StorageExceptions` in the `DownloadBlobInParallel` and `UploadBlobInParallel` methods. This could result in data bus property values being lost."
1411,'johnsimons','Request/Response over Gateway fails to correlate\nWhen a reply message is sent over the Gateway between two sites, the CorrelationId gets a "\\0" appended to it. This causes the dispatcher to not find the correlated callback that is registered when sending the message using the ICallback mechanism.\r\n\r\nI\'ve built a repro project here: https://github.com/michaelnoonan/GatewayRequestResponseBug'
1410,'andreasohlund','Fix for 1407\n@SimonCropp @johnsimons code review please'
1407,'andreasohlund',"Cannot start different Saga from Timeout handler\nWe have a situation where a Saga requests a timeout, at which time another Saga should be started. This worked in the 4.0.0-unstable2996 release, but has broken in 4.0.2. Instead of starting the new Saga, the SagaDispatcher says the message has a SagaId header so it will use that strategy, doesn't find the data and executes the SagaNotFound handlers.\r\n\r\nI've created a repro project for this at https://github.com/michaelnoonan/CrossSagaMessagingBug"
1406,'johnsimons','Sending from SendOnly through Gateway throws NullReferenceException in v4.0.2\nThe specific line that throws is\r\nIn HeaderMapper.cs\r\n            to[NServiceBus + ReplyToAddress] = from.ReplyToAddress.ToString();\r\n\r\nAnd of course because it is from a SendOnly endpoint there is no ReplyToAddress.\r\nIf you simply skip over that line in the debugger everything works.\r\n\r\n'
1400,'johnsimons',"Null message property value in Azure Service Bus message results in Null Reference Exception\nThe BrokeredMessageConverter does not check for null values for message properties prior to calling ToString() on them.  The NServiceBus.RelatedToTimeoutId property is present on messages in my system, but the value is null.  When the BrokeredMessageConverter encounters these messages it throws a null reference exception.\r\n\r\nThis looks to be a pretty easy fix and I wouldn't mind trying to submit a pull-request as a way of cutting my teeth on contributing."
1399,'andreasohlund','Audit as a feature and disabling audit via code initialization\nFixes #1309 and also fixes #1339.\r\nWe need to standardize on if we want to use a config section or appSettings. This code uses AuditConfig as a config section and we need to decide on that.'
1397,'yvesgoeleven',"Made visibility timeout for messages the same as the configured value\nIt's better to use the configured invisible time rather than multiplying it by the batch size for the following reasons:\r\n\r\n1) Multiplying by the batch size makes it impossible to set a specific invisible time without changing the batch size.\r\n2) Using the configured invisible time is more intuitive."
1395,'sfarmar',"Create a automated post build test using the full duplex sample\nTo verify the produced assemblies we should perform a automated smoke test.\r\n\r\n### Proposed solution\r\n\r\nWe'll use TeamCity to drive the tests. For now we'll run them on our regular build agents but future needs might force us to move to dedicated agents. For now we only run for MSMQ but we'll expand this in the future to include the other transports\r\n\r\n1. Create a new build (Since this allows us to pull in other binaries when we split out the other transports)\r\n2. Take an artifact dependency on the core build to pull the compiled samples in\r\n3. Clear the msmq queues (see existing buildstep in the acceptance test build)\r\n4. Create a custom build step that installs the client and the server (fullduplex sample). Code for this already exists in our backend repository.\r\n5. Modify the sample to allow a commandline option to be specified that cause the client to send a message to the server. (we can expand here for future tests)\r\n6. Verify correctness by making sure that no message exists in the error q and 2 messages exists in the audit queue. We can later extend this to do more indepth checks\r\n\r\nAll the above can easily be done using powershell (see here for examples https://github.com/afyles/Blog/tree/master/PowerShell)\r\n"
1392,'johnsimons','NHibernate gateway deduplication fails on large messages\nSQL deduplication fails on messages larger than 8KB with error message\r\nThe length of the byte[] value exceeds the length configured in the mapping/parameter.'
1391,'johnsimons','NServiceBus.Host -dependsOn should be backwards compatible\nIn v3 it was possible to specify multiple dependencies using a comma delimited string:\r\n/dependsOn:"MSMQ,DTC,SQLSERVER"\r\n\r\nWe need to fix v4 so that it supports the same syntax'
1378,'johnsimons','Provide hook to notify users when messages are moved to error queue\nCurrently the only hook is by writing your own `IManageMessageFailures` which is not ideal because then you have to duplicate logic.\r\n\r\n### Proposed Solution\r\n- [ ] Add a new interface called `IWantToBeNotifiedWhenMessageIsSentToErrorQueue`\r\n```c#\r\nvoid Invoke(TransportMessage message, Exception e);\r\n```\r\n\r\n- [ ] Need to ensure this hook is using the same lifecycle as normal message handlers\r\n- [ ] It is instance per call\r\n- [ ] decide what happens when an exception occurs. Need to test circuit breaker logic.'
1352,'andreasohlund',"Only implicitly create exchanges for types being published. Limit queue ...\n# Background\r\n We are having a non-NServiceBus endpoint integrate with an NServiceBus endpoint over RabbitMQ. The non-NServiceBus endpoint application creates a temporary queue/exchange pair for itself, does the equivalent of a `Bus.Send` to the NServiceBus endpoint, expecting a response on the temporary exchange. However, when the NServiceBus endpoint does `Bus.Reply`, it first tries to create a queue/exchange pair for the recipient and fails because they have already been created, but are temporary instead of permanent.\r\n\r\n# Fix\r\nThis change makes it so that `Bus.Send` and `Bus.Reply` do not implicitly attempt to create queue/exchange pairs for the recipient. Only exchanges for the types being published are created implicitly.\r\n\r\n# Impact\r\n* If the recipient of a `Bus.Send` or a `Bus.Reply` does not exist, this will raise an exception. This behavior is in line with the MSMQ endpoint and I think is what we'd expect when we send a command to an endpoint. Queues will only get created by the subscribers that read from them."
1349,'yvesgoeleven','Throw fatal exception when attempting to subscribe to a Azure topic that does not exist\nThrow fatal exception when attempting to subscribe to a topic that does not exist (currently silently ignored)\r\n\r\nsplit from #1299'
1342,'andreasohlund','Allow user to control LockMode in NHibernate sagas\nThis issue is based on #1225 \r\n\r\n### Proposed solution\r\n- [x] Introduce a new attribute `LockMode` to specify the lock per Saga class. Options are the ones that comes with NHibernate\r\n- [x] Use the default `LockMode.UpdateLock` if no attribute\r\n- [x] Add the code fix, see https://github.com/NServiceBus/NServiceBus/pull/1225/files \r\n- [x] Add code fix [here](https://github.com/NServiceBus/NServiceBus/blob/master/src/nhibernate/NServiceBus.NHibernate/SagaPersisters/NHibernate/SagaPersister.cs#L41) too'
1341,'andreasohlund','Split azure into its own repository\n@andreasohlund thoughts?'
1339,'indualagarsamy','Does Auditing need its own configuration section, rather than using UnicastBusConfig?\nWhy is Auditing configuration stored in `UnicastBusConfig`?\r\n\r\nThe two properties, `ForwardReceivedMessagesTo` and `TimeToBeReceivedOnForwardedMessages` are currently stored in `UnicastBusConfig`.\r\n\r\nWe are currently planning to move Audit as its own feature, related GH #1309 \r\nShould we create `MessageAuditingConfig` and add these two properties to this new config section and obsolete the ones in `UnicastBusConfig`?\r\n\r\n\r\n'
1325,'johnsimons','Add extra params to url that is opened from nuget\nAdd the following extra params to https://github.com/NServiceBus/NServiceBus/blob/master/NuGet/NServiceBus/tools/init.ps1#L78\r\n\r\nNeed to add:\r\n**&installer=NServicebus&version=x.y.z&method=nuget**'
1324,'johnsimons','Update nugets to not reference a specific NSB version\nThe following nugets need to be updated:\r\n- NServiceBus.ActiveMQ\r\n- NServiceBus.Notifications\r\n- NServiceBus.RabbitMQ\r\n- NServiceBus.SqlServer\r\n\r\nWe need to change the nuget from:\r\n`<dependency id="NServiceBus" version="4.0.0-alpha0" />`\r\nto:\r\n`<dependency id="NServiceBus" version="[4.0.0-alpha0,5)" />`'
1323,'johnsimons','Saga with RequestTimeout crashes with an item with the same key has already been added\nI migrated my sample to NSB 4.0.1. It can be found here:\r\n\r\nhttps://github.com/danielmarbach/nservicebus.introduction\r\n\r\nWhen I order a facility the facility endpoint saga blows up with the following exception:\r\n\r\nFacilitySaga failed handling message.\r\nSystem.ArgumentException: An item with the same key has already been added.\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at NServiceBus.MessageHeaders.MessageHeaderManager.NServiceBus.MessageMutator.IMutateOutgoingTransportMessages.MutateOutgoing(Object[] messages, TransportMessage transportMessage) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\MessageHeaders\\MessageHeaderManager.cs:line 20\r\n   at NServiceBus.Unicast.UnicastBus.InvokeOutgoingTransportMessagesMutators(Object[] messages, TransportMessage result) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1420\r\n   at NServiceBus.Unicast.UnicastBus.MapTransportMessageFor(IList`1 rawMessages, TransportMessage result) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1379\r\n   at NServiceBus.Unicast.UnicastBus.Defer(DateTime processAt, Object[] messages) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 561\r\n   at NServiceBus.Unicast.UnicastBus.Defer(TimeSpan delay, Object[] messages) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 541\r\n   at NServiceBus.Saga.Saga`1.RequestTimeout[TTimeoutmessageType](TimeSpan within, TTimeoutmessageType timeoutMessage) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus\\Saga\\Saga.cs:line 184\r\n   at NServiceBus.Saga.Saga`1.RequestUtcTimeout[TTimeoutmessageType](TimeSpan within, TTimeoutmessageType timeoutMessage) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus\\Saga\\Saga.cs:line 251\r\n   at NServiceBus.Saga.Saga`1.RequestTimeout[TTimeoutmessageType](TimeSpan within) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus\\Saga\\Saga.cs:line 163\r\n   at SiriusCyberneticsCorp.Facility.FacilitySaga.Handle(Ordered message) in c:\\Projects\\nservicebus\\nservicebus.introduction\\SiriusCyberneticsCorp.Facility\\FacilitySaga.cs:line 33\r\n   at lambda_method(Closure , Object , Object )\r\n   at NServiceBus.Unicast.HandlerInvocationCache.Invoke(Object handler, Object message, Dictionary`2 dictionary) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\HandlerInvocationCache.cs:line 61\r\n   at NServiceBus.Unicast.HandlerInvocationCache.InvokeHandle(Object handler, Object message) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\HandlerInvocationCache.cs:line 22\r\n   at NServiceBus.Sagas.SagaDispatcherFactory.<>c__DisplayClass4.<GetDispatcher>b__0() in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Sagas\\SagaDispatcherFactory.cs:line 78\r\n   at NServiceBus.Unicast.UnicastBus.<>c__DisplayClass2f.<DispatchMessageToHandlersBasedOnType>b__2a(Action dispatch) in c:\\TeamCity\\buildAgent\\work\\d4de8921a0aabf04\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1095\r\n\r\nThe saga code is pretty straight forward:\r\n\r\n        public void Handle(Ordered message)\r\n        {\r\n            this.Data.FacilityId = message.FacilityId;\r\n            this.Data.OrderId = message.OrderId;\r\n            string facilityId = this.Data.FacilityId.ToString("N");\r\n            this.Data.Name = string.Format("VHPT-{0}", facilityId.Substring(0, 6)).ToUpper();\r\n\r\n            Console.WriteLine("Installing facility {0} with name {1} for order {2}.", this.Data.FacilityId, this.Data.Name, this.Data.OrderId);\r\n\r\n            // This is only for simulation\r\n            this.RequestTimeout<ReadyToInstall>(TimeSpan.FromSeconds(5));\r\n        }\r\n\r\nReadyToInstall is a poco message which is not mapped anywhere:\r\n\r\n    public class ReadyToInstall\r\n    {\r\n    }\r\n\r\nThe problem is that the Saga base class sets the following headers:\r\n\r\n            Headers.SetMessageHeader(toSend, Headers.SagaId, Data.Id.ToString());\r\n            Headers.SetMessageHeader(toSend, Headers.IsSagaTimeoutMessage, Boolean.TrueString);\r\n            Headers.SetMessageHeader(toSend, Headers.SagaType, GetType().AssemblyQualifiedName);\r\n\r\nWhich then sets the headers dictionary and when the message is sent it already contains those headers but the MessageHeaderManager wants to readd those to the message:\r\n\r\n![image](https://f.cloud.github.com/assets/174258/828249/fb61a6d6-f0af-11e2-9a75-97987e1948f3.png)\r\n\r\n![image](https://f.cloud.github.com/assets/174258/828250/0437b5b6-f0b0-11e2-8984-ac0d5cf25ef2.png)\r\n'
1292,'johnsimons','RabbitMqConnectionManager connection failure logic seems borken\nSo here\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/RabbitMQ/NServiceBus.RabbitMQ/RabbitMqConnectionManager.cs#L23\r\n\r\nThere is this code\r\n\r\n                if (connectionFailed)\r\n                    throw connectionFailedReason;\r\n\r\nBut `connectionFailed` and `connectionFailedReason` are never set. So is this a bug or  just some redundant code that should be deleted.\r\n\r\n@andreasohlund  thoughts?'
1289,'mookid8000','Improve assembly scanning time\nbased on this https://github.com/FakeItEasy/FakeItEasy/issues/133/'
1285,'johnsimons','Move timeout tests to acceptance test solution\nSince the timeout tests take almost 2min to run perhaps they should be moved to acceptance test solution\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/tree/master/tests/timeout/NServiceBus.Timeout.Tests\r\n\r\nor at least move the slow ones. thoughts? '
1280,'johnsimons','throw if sagainterfaces cannot be mapped to messages\nfixes issue #790'
1278,'johnsimons','Allow multiple implementations of IConfigureLoggingForProfile\n * Also ignore abstract types'
1277,'johnsimons',"Sagas: Published messages not being dispatched to sagas properly\nI have one endpoint hosting some sagas and another endpoint which handles commands. Events published as a result of handling commands (sent by sagas) are not being dispatched to other sagas that handle the events. \r\n\r\nHere's what happens using 4.0.0 RC1:\r\n1) Saga1 is started by GroupPendingEvent\r\n2) Saga2 sends OpenGroupCommand to the command handling endpoint.\r\n3) OpenGroupCommand is handling and GroupPendingEvent is published.\r\n4) GroupPendingEvent arrives at the endpoint hosting sagas.\r\n5) NSB notices that the event has saga id and saga type headers and dispatches it to Saga2.\r\n6) NSB never dispatches the event to Saga1.\r\n\r\nUsing the last 4.0.0 beta build everything works as expected (GroupPendingEvent is dispatched to Saga1).\r\n\r\n"
1276,'johnsimons','Preserve body for SLR/Error and audit queues\nFixes #1270\r\n\r\n@johnsimons please review and squash before you pull'
1274,'johnsimons','ProfileManager should not throw ConfigurationErrorsException\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Hosting/Profiles/ProfileManager.cs#L76\r\n\r\nit is not really a "Configuration" problem. also throwing a specific exception really adds no value here. people would not be catching it. So perhaps change to an Exception?'
1270,'andreasohlund','The original message body is not preserved when sending messages to audit/error/slr\nWe need to make sure to always use the original body even if mutators have changed them.\r\n\r\nTo repro just run the message mutators integration project and it will fail since the message going to the audit queue will be to large for msmq'
1269,'johnsimons','The video store samples are leaking memory\nAdd a hook and call IContainer.Release() when the controllers are disposed'
1268,'johnsimons','Introduce a Release method to our container abstraction\nIn order to support the containers that needs/supports explicit release for tracked components we need to add a Release method to instruct the container to release a given instance'
1266,'andreasohlund','SendLocal or sends to the local endpoint triggers callback to early\nSince we now set the correlation id for outgoing messages to the message id this will prematurely trigger any callback that is registered for the outgoing message\r\n\r\nTo reproduce: Run the wcfsample and it will blow up since the return code is not initialized and will cause a deserialization exception on the client side'
1262,'johnsimons',"WCF Integration sample is broken\nTo repro just open NServiceBus\\IntegrationTests\\WcfIntegration\\Client and hit F5\r\n\r\nError in deserializing body of request message for operation 'Process'. OperationFormatter encountered an invalid Message body. Expected to find node type 'Element' with name 'Process' and namespace 'http://nservicebus.com'. Found node type 'Element' with name 'Process' and namespace 'http://tempuri.org/'"
1261,'johnsimons','What is the equivalent of CopyHeaderFromRequest in 4.0.0?\nThe request / response sample in v3.3.8 has this\r\n\r\nvar response = Bus.CreateInstance<DataResponseMessage>(m => \r\n            { \r\n                m.DataId = message.DataId;\r\n                m.String = message.String;\r\n            });\r\n\r\n            response.CopyHeaderFromRequest("Test");\r\n            response.SetHeader("1", "1");\r\n            response.SetHeader("2", "2");\r\n\r\nThe compiler warning states:\r\n error CS0619: \'NServiceBus.ExtensionMethods.CopyHeaderFromRequest(object, string)\' is obsolete: \'Will be removed in version \'5.0\'.\'\r\n\r\nIs there any alternate approach to doing this?'
1260,'johnsimons','Exception on TransationScope commit trigger circular breaker.\nIn SQL Server transport exception on transaction scope commit (Complete + Dispose) trigger circular breaker instead of retry logic. \r\n\r\nAccording to MSDN (http://msdn.microsoft.com/pl-pl/library/system.transactions.transactionscope.dispose.aspx) commit is triggered on TransactionScope.Disposed.'
1258,'johnsimons','[v4.0.0.3205] NHibernate persistence throws InvalidCastException\nGetting the following exception;\r\n\r\n      Unhandled Exception: System.InvalidCastException: Unable to cast object of type \'System.Reflection.RtFieldInfo\' to type \'System.Reflection.PropertyInfo\'.\r\n         at NServiceBus.SagaPersisters.NHibernate.AutoPersistence.SagaModelMapper.ApplyPropertyConvention(IModelInspector mi,\r\n      PropertyPath type, IPropertyMapper map) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\nhibernate\\NServiceBus.NHibernate\\SagaPersisters\\NHibernate\\AutoPersistence\\SagaModelMapper.cs:line 104\r\n         at NHibernate.Mapping.ByCode.Impl.PropertyMappingHandler.Invoke(IModelInspector modelInspector, PropertyPath member, IPropertyMapper propertyCustomizer)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.InvokeBeforeMapProperty(PropertyPath member, IPropertyMapper propertycustomizer)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.ComponentRelationMapper.<>c__DisplayClass94.<MapProperties>b__8d(IPropertyMapper propertyMapper)\r\n         at NHibernate.Mapping.ByCode.Impl.ComponentElementMapper.Property(MemberInfo property, Action`1 mapping)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.ComponentRelationMapper.MapProperties(Type type, PropertyPath memberPath, IComponentElementMapper propertiesContainer, IEnumerable`1 persistentProperties)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.ComponentRelationMapper.<Map>b__83(IComponentElementMapper x)\r\n         at NHibernate.Mapping.ByCode.Impl.CollectionElementRelation.Component(Action`1 mapping)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.ComponentRelationMapper.Map(ICollectionElementRelation relation)\r\n         at NHibernate.Mapping.ByCode.Impl.AbstractPropertyContainerMapper.Bag(MemberInfo property, Action`1 collectionMapping, Action`1 mapping)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.MapBag(MemberInfo member, PropertyPath propertyPath, Type propertyType, ICollectionPropertiesContainerMapper propertiesContainer, Type propertiesContainerType)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.MapProperties(Type propertiesContainerType, IEnumerable`1 propertiesToMap, IPropertyContainerMapper propertiesContainer, PropertyPath path)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.MapProperties(Type propertiesContainerType, IEnumerable`1 propertiesToMap, IPropertyContainerMapper propertiesContainer)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.MapRootClass(Type type, HbmMapping mapping)\r\n         at NHibernate.Mapping.ByCode.ModelMapper.CompileMappingFor(IEnumerable`1 types)\r\n         at NServiceBus.SagaPersisters.NHibernate.Config.Internal.SessionFactoryBuilder.Build(Configuration nhibernateConfiguration) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\nhibernate\\NServiceBus.NHibernate\\SagaPersisters\\NHibernate\\Config\\Internal\\SessionFactoryBuilder.cs:line 45\r\n         at NServiceBus.ConfigureNHibernateSagaPersister.UseNHibernateSagaPersisterInternal(Configure config, Configuration configuration, Boolean autoUpdateSchema) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\nhibernate\\NServiceBus.NHibernate\\ConfigureNHibernateSagaPersister.cs:line 96\r\n         at NServiceBus.ConfigureNHibernateSagaPersister.UseNHibernateSagaPersister(Configure config) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\nhibernate\\NServiceBus.NHibernate\\ConfigureNHibernateSagaPersister.cs:line 67\r\n         at SomeProject.Bus.EndpointConfig.SetupEndpoint() in c:\\Source\\MyBusProject\\src\\Bus\\EndpointConfig.cs:line 56\r\n         at SomeProject.Bus.EndpointConfig.Init() in c:\\Source\\MyBusProject\\src\\Bus\\EndpointConfig.cs:line 45\r\n         at NServiceBus.Hosting.GenericHost.PerformConfiguration() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Hosting\\GenericHost.cs:line 102\r\n         at NServiceBus.Hosting.GenericHost.Start() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Hosting\\GenericHost.cs:line 27\r\n         at Magnum.StateMachine.EventActionList`1.Execute(T stateMachine, Event event, Object parameter) in :line 0   at NServiceBus.Hosting.Windows.Program.Main(String[] args) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\hosting\\NServiceBus.Hosting.Windows\\Program.cs:line 145\r\n\r\nConfig is as follows;\r\n\r\n    <appSettings>\r\n      <add key="NServiceBus/Persistence/NHibernate/dialect"  value="NHibernate.Dialect.SQLiteDialect"/>\r\n      <add key="NServiceBus/Persistence/NHibernate/connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>\r\n      <add key="NServiceBus/Persistence/NHibernate/connection.driver_class" value="NHibernate.Driver.SQLiteDriver"/>\r\n    </appSettings>\r\n\r\n    <connectionStrings>\r\n      <add name="NServiceBus/Persistence"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite;Version=3;New=True;" />\r\n      \r\n      <add name="NServiceBus/Persistence/NHibernate/Timeout"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite.timeout;Version=3;New=True;" />\r\n\r\n      <add name="NServiceBus/Persistence/NHibernate/Saga"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite.saga;Version=3;New=True;" />\r\n\r\n      <add name="NServiceBus/Persistence/NHibernate/Subscription"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite.subscription;Version=3;New=True;" />\r\n\r\n      <add name="NServiceBus/Persistence/NHibernate/Gateway"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite.gateway;Version=3;New=True;" />\r\n\r\n      <add name="NServiceBus/Persistence/NHibernate/Distributor"\r\n           connectionString="Data Source=SomeProject.Bus.sqlite.distributor;Version=3;New=True;" />  \r\n    </connectionStrings>'
1257,'andreasohlund','Portcheck and and azure samples\n'
1246,'andreasohlund',"Update AzureHost IntegrationTest to include all configuration to make azure deployments straightforward\nThis pull just tidy's up the azurehost integration test project so that someone can easily deploy it into either the emulator or azure.\r\n\r\nIncluded configuration properties which weren't present and which stopped test running in azure as they were defaulting to UseDevelopmentStorage=true"
1243,'johnsimons','Messages are being truncated to 8000 bytes when utilizing Second Level Retries and using NHibernate Timeout Persister\nWhen utilizing Second Level Retires and using NHibernate Timeout Persister with a SQL server database, messages are being truncated to 8000 bytes prior to being persisted to the TimeoutEntity table. The following message is logged:\r\n\r\n2013-06-17 15:04:04,831 [Worker.15] ERROR NHibernate.Event.Default.AbstractFlush\r\ningEventListener [(null)] <(null)> - Could not synchronize database state with s\r\nession\r\nNHibernate.PropertyValueException: Error dehydrating property value for NService\r\nBus.TimeoutPersisters.NHibernate.TimeoutEntity.State ---> NHibernate.HibernateEx\r\nception: The length of the byte[] value exceeds the length configured in the map\r\nping/parameter.\r\n   at NHibernate.Type.AbstractBinaryType.Set(IDbCommand cmd, Object value, Int32\r\nindex)\r\n   at NHibernate.Type.NullableType.NullSafeSet(IDbCommand cmd, Object value, Int\r\n32 index)\r\n   at NHibernate.Type.NullableType.NullSafeSet(IDbCommand st, Object value, Int3\r\n2 index, Boolean[] settable, ISessionImplementor session)\r\n   at NHibernate.Persister.Entity.AbstractEntityPersister.Dehydrate(Object id, O\r\nbject[] fields, Object rowId, Boolean[] includeProperty, Boolean[][] includeColu\r\nmns, Int32 table, IDbCommand statement, ISessionImplementor session, Int32 index\r\n)\r\n   --- End of inner exception stack trace ---\r\n   at NHibernate.Persister.Entity.AbstractEntityPersister.Dehydrate(Object id, O\r\nbject[] fields, Object rowId, Boolean[] includeProperty, Boolean[][] includeColu\r\nmns, Int32 table, IDbCommand statement, ISessionImplementor session, Int32 index\r\n)\r\n   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object id, Obje\r\nct[] fields, Boolean[] notNull, Int32 j, SqlCommandInfo sql, Object obj, ISessio\r\nnImplementor session)\r\n   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object id, Obje\r\nct[] fields, Object obj, ISessionImplementor session)\r\n   at NHibernate.Action.EntityInsertAction.Execute()\r\n   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)\r\n   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)\r\n   at NHibernate.Engine.ActionQueue.ExecuteActions()\r\n   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(I\r\nEventSource session)\r\n\r\nNserviceBus Version 3.3.8\r\nNhibernate Version 3.3.3.4000\r\nMS SQL Server 2008'
1236,'johnsimons','TimeoutTransportMessageHandler fails when saga id is Guid.Empty\n\r\nThe `TimeoutTransportMessageHandler` fails when the saga id is `Guid.Empty` which it should not.\r\n\r\nWhen saga id is null it should either just perform a cleanup with that value which by itself is valid or ignore the value but it should not result in the control message to endup in the error queue.\r\n\r\nAnother fix is that `Bus.ClearTimeoutsFor()` simply validates the given sagaId throwing an exception OR ignores\r\n\r\nAnother fix is that `SagaDispatcherFactory.NotifyTimeoutManagerThatSagaHasCompleted` checks the value before passing it to `Bus.ClearTimeoutsFor(Guid)`'
1231,'johnsimons',"Misspelled extension method 'AzureSubcriptionStorage' in 4.0.0 latest build\nMissing the 's'. Minor issue, but annoying so I'm reporting this.\r\n"
1230,'andreasohlund','Making gateway an IAdvancedSatellite\nAdded config to cater for longer transaction timeouts on messages\r\nforwarded to other sites. This is helpful when bandwidth between sites\r\nis limited.'
1223,'andreasohlund','#718 - Remove the gateway ACK call\nadded NHibernate deduplication and updated sample'
1203,'SzymonPobiega','Overlapping DI registrations\nGiven\r\n\r\n    public class Initialization : INeedInitialization\r\n    {\r\n        public void Init()\r\n        {\r\n            var configureComponents = Configure.Instance.Configurer;\r\n            Configure.Instance.Configurer.ConfigureComponent<MyService>(DependencyLifecycle.SingleInstance);\r\n        }\r\n    }\r\n\r\nand this\r\n\r\n    public class MyService: IWantToRunWhenBusStartsAndStops\r\n    {\r\n        public bool Initialized;\r\n        public void Start()\r\n        {\r\n            Initialized = true;\r\n        }\r\n\r\n        public void Stop()\r\n        {\r\n        }\r\n    }\r\n\r\n\r\nThe problem with this is that the next time something resolves `MyService` then `Initialized` will be false. The reason is because in here https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Configure.cs#L341 the usages of `ForAllTypes` re-register different registrations for the type in question.\r\n\r\nSo when `IWantToRunWhenBusStartsAndStops` is resolved is find the `InstancePerCall` copy but later on when other types resolve `MyService` they will get the `SingleInstance`.\r\n\r\nThe fix is to, in `Configure.Initialized` check if types are already registered before re-registering them.'
1202,'andreasohlund','CorrelationId changes cause "Identifier is not in the incorrect format"\nSo I update to the latest NSB and I am now getting some exceptions around the CorrelationId. \r\n\r\nThe exception is\r\n\r\n    System.InvalidOperationException occurred\r\n      HResult=-2146233079\r\n      Message=Identifier is not in the incorrect format.\r\n      Source=System.Messaging\r\n      StackTrace:\r\n           at System.Messaging.Message.IdToByteArray(String id)\r\n           at System.Messaging.Message.set_CorrelationId(String value)\r\n           at NServiceBus.Transports.Msmq.MsmqUtilities.Convert(TransportMessage message) in \\NServiceBus-develop\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqUtilities.cs:line 206\r\n      InnerException: \r\n\r\nI assume it is to do with this https://github.com/NServiceBus/NServiceBus/commit/1b1b177261cdfe4e73bf518c7e316bc993a76454 where the checkin comment is `Removed unnecessary null checks around correlation id`.\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/commit/1b1b177261cdfe4e73bf518c7e316bc993a76454#L11L229\r\n\r\nThe code changed from\r\n\r\n    if (!string.IsNullOrWhiteSpace(message.CorrelationId))\r\n    {\r\n        result.CorrelationId = message.CorrelationId + "\\\\0";//msmq required the id\'s to be in the {guid}\\{incrementing number} format so we need to fake a \\0 at the end to make it compatible\r\n    }\r\n\r\nTo\r\n\r\n    result.CorrelationId = message.CorrelationId + "\\\\0";//msmq required the id\'s to be in the {guid}\\{incrementing number} format so we need to fake a \\0 at the end to make it compatible\r\n\r\n\r\nThe `TransportMessage.Id` was `TimeoutData/3555` so I had a look in RavenDB and sure enough there are records in TimeoutData that have a null CorrelationId. I also checked our production DB and it has the same case.\r\n\r\nSo what was the null check for and why was it removed?  \r\n\r\nSorry I have not been following the changes around CorrelationId'
1201,'johnsimons',"Feature/develop/config cmdlets\nDidn't hit EVERY config section, but I think these comprise the base / most important? Up for debate on that.\r\n\r\nThis does make the help a little ungainly and I'm not sure if there's a better ordering or a way to reorganize all the Add-NServiceBus_____Config cmdlets within the about_NServiceBus help that would be more useful."
1197,'andreasohlund','Identifier in the incorrect format when storing audit event\nI\'ve got a class library that\'s a publisher with an event it\'s putting on the bus, and two web applications - an ASP.NET app and an ASP.NET MVC app that are subscribing to it. Both web applications receive the event and correctly write to the event log (using log4net) a message that they\'ve received the event.\r\n\r\nHowever, in the ASP.NET MVC application, when I look in the event log, immediately after logging that the event was received in the handler, there is an error within NServiceBus itself that "an identifier is in the incorrect format". The ASP.NET subscriber (non-MVC) does not get this error. I\'m using the latest version of 4.0 from nuget, version 4.0.0-unstable3090 posted yesterday. \r\n\r\nHere\'s my web.config settings related to NServiceBus (I\'ve wildcarded the assembly names to protect client info):\r\n\r\n```xml\r\n<MessageForwardingInCaseOfFaultConfig ErrorQueue="error" />\r\n\r\n  <UnicastBusConfig ForwardReceivedMessagesTo="audit">\r\n    <MessageEndpointMappings>\r\n      <add Assembly="*****" Endpoint="******" />\r\n    </MessageEndpointMappings>\r\n  </UnicastBusConfig>\r\n\r\n  <Logging Threshold="INFO"/>\r\n```\r\n\r\nHere\'s my endpoint initialization:\r\n\r\n```charp\r\nNServiceBus.SetLoggingLibrary.Log4Net(log4net.Config.XmlConfigurator.Configure);\r\n            NServiceBus.Configure.With().Log4Net();\r\n            return Configure.With()\r\n                .DefaultBuilder()\r\n                .ForMVC()\r\n                .XmlSerializer(dontWrapSingleMessages:true)\r\n                .PurgeOnStartup(true)\r\n                .UnicastBus()\r\n                .LoadMessageHandlers()\r\n                .CreateBus()\r\n                .Start(() => Configure.Instance.ForInstallationOn<Windows>().Install());\r\n```\r\n\r\nHere\'s the error I\'m getting:\r\n\r\n2013-05-22 08:18:27,418 [NServiceBus Dequeuer Worker Thread for [SMS@WIN8-CATAPULTJE] - 14] INFO  NServiceBus.Unicast.Transport.TransportReceiver [(null)] - Failed to process message\r\nNServiceBus.Unicast.Queuing.FailedToSendMessageException: Failed to send message to address: audit@WIN8-CATAPULTJE ---> System.InvalidOperationException: Identifier is not in the incorrect format.\r\n   at System.Messaging.Message.IdToByteArray(String id)\r\n   at System.Messaging.Message.set_CorrelationId(String value)\r\n   at NServiceBus.Transports.Msmq.MsmqUtilities.Convert(TransportMessage message) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqUtilities.cs:line 206\r\n   at NServiceBus.Transports.Msmq.MsmqMessageSender.Send(TransportMessage message, Address address) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqMessageSender.cs:line 44\r\n   --- End of inner exception stack trace ---\r\n   at NServiceBus.Transports.Msmq.MsmqMessageSender.ThrowFailedToSendException(Address address, Exception ex) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqMessageSender.cs:line 89\r\n   at NServiceBus.Transports.Msmq.MsmqMessageSender.Send(TransportMessage message, Address address) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Transports\\Msmq\\MsmqMessageSender.cs:line 80\r\n   at NServiceBus.Unicast.UnicastBus.ForwardMessageIfNecessary(TransportMessage m) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1343\r\n   at NServiceBus.Unicast.UnicastBus.HandleTransportMessage(IBuilder childBuilder, TransportMessage msg) in c:\\BuildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1231'
1191,'johnsimons',"Column TimeoutEntity.Endpoint length is incorrect\nThe TimeoutEntity table that is generated via NHibernate also requires an index called 'EndpointIdx' but creating this index results in the following warning:\r\n\r\nWarning! The maximum key length is 900 bytes. The index 'EndpointIdx' has maximum length of 2048 bytes. For some combination of large values, the insert/update operation will fail.\r\n\r\nSo either the Endpoint column length should be nvarchar(450) or varchar(900) or the whole EndpointIdx index should not be created."
1176,'andreasohlund','Use proper ActiveMQ Retries\n'
1175,'johnsimons','Develop\nINSTL 32 and 33 - Done'
1171,'johnsimons','RavenConventions changed to internal with no alternative and no ObsoleteAttribute\nSo RavenConventions has been made internal\r\n\r\nold\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/Persistence/RavenPersistence/NServiceBus.Persistence.Raven/RavenConventions.cs\r\n\r\nnew\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Persistence/Raven/RavenConventions.cs\r\n\r\ndone here\r\nhttps://github.com/NServiceBus/NServiceBus/commit/b4c56d2e291106404c92c3ee1dd00c89251a617f#src/NServiceBus.Core/Persistence/Raven/RavenConventions.cs\r\n\r\ntwo points\r\n\r\n1. Why is there no obsolete attribute?\r\n2. What is the alternative since I am using this class?'
1170,'andreasohlund',"Configuration locked exception in AzureHost integration test\nI was using AzureHost example from integrations test (latest develop branch)\r\nand got ConfigutationErrorException (The settings has been locked for modifications) during worker startup.\r\n\r\nThe problem is:\r\n```charp\r\nConfigure.Initialize()\r\n{ \r\n   [...]\r\n   //lockdown the settings\r\n   SettingsHolder.PreventChanges();\r\n   ActivateAndInvoke<IFinalizeConfiguration>(t => t.FinalizeConfiguration());\r\n   [..]\r\n}\r\n```\r\nIn FinalizedConfigurations features are being initialized. One of them (MessageDrivenPublisher) is changing configuration:\r\n\r\n```charp\r\npublic override void Initialize() {\r\n[..]\r\nConfigure.Component<StorageDrivenPublisher>(DependencyLifecycle.InstancePerCall);\r\n\r\nInfrastructureServices.Enable<ISubscriptionStorage>(); <--- exception\r\n}\r\n```\r\n\r\nSwapping    SettingsHolder.PreventChanges() and  ```ActivateAndInvoke<IFinalizeConfiguration>``` solves this problem, but I'm not sure if it is a proper fix."
1167,'johnsimons',"NServiceBus.host.exe /install hangs when using the rabbitmq transport\nWe've noticed that installs work successfully, but hang when using the RabbitMQ transport.\r\n\r\nI've pulled down the latest 4.0.0 source branch and tried to do some poking around.  I don't know the source well, but I believe it is in the realm of the PersistentConnection used to CreateQueues.\r\n\r\nWe do not have any custom Installers.  This happens before start."
1165,'andreasohlund','Correlation Id not set in latest develop\nWe recently upgraded to latest develop again and have now the issue that the correlation id is not set on the message. Any ideas where this regression comes from?'
1160,'mookid8000','When using SqlTransport, starting an endpoint using Master profile throws exceptions\nSteps to reproduce:\r\n\r\n1. In the Scale out sample, Change the `Orders.Sender` & `Orders.Handler` to use `SqlTransport`.\r\n2. Start the `Orders.Handler` (notice the exceptions on the `Orders.Handler` when run with the `NServiceBus.Master` profile)\r\n3. Run the `Orders.Handler`, removing the `NServiceBus.Master` profile, and also start the `Orders.Sender` and both endpoints work as expected, and are able to send messages to each other using `SqlServer` transport..\r\nStarting the Worker nodes (using `NServiceBus.Worker` profile) also starts up ok.\r\n\r\nHowever, using the Master profile, It seems to want to use MSMQ..\r\n\r\n\tSatellite NServiceBus.Distributor.DistributorSatellite, NServiceBus.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c failed to start.\r\n\tNServiceBus.Satellites.SatelliteLauncher.StartSatellite(c:\\TeamCity\\buildAgent\\work\\b0050f22cfad1731\\src\\NServiceBus.Core\\Satellites\\SatelliteLauncher.cs:117)\r\n\tSystem.Messaging.MessageQueueException (0x80004005): The queue does not exist or you do not have sufficient permissions to perform the operation.\r\n\tat System.Messaging.MessageQueue.MQCacheableInfo.get_Transactional()\r\n\tat System.Messaging.MessageQueue.get_Transactional()\r\n\tat NServiceBus.Transports.Msmq.WorkerAvailabilityManager.MsmqWorkerAvailabilityManager.Start() in c:\\TeamCity\\buildAgent\\work\\b0050f22cfad1731\\src\\NServiceBus.Core\\Transports\\Msmq\\WorkerAvailabilityManager\\MsmqWorkerAvailabilityManager.cs:line 110\r\n\tat NServiceBus.Satellites.SatelliteLauncher.StartSatellite(SatelliteContext ctx) in c:\\TeamCity\\buildAgent\\work\\b0050f22cfad1731\\src\\NServiceBus.Core\\Satellites\\SatelliteLauncher.cs:line 117\r\n\r\n\r\n'
1159,'johnsimons','Make InstallLicense tool default to HKLM\n'
1157,'johnsimons','Check SqlServerMessageSender TimeToBeReceived handling\nSqlServerMessageSender has this code:\r\n\r\n```csharp\r\nif (message.TimeToBeReceived.Ticks > DateTime.MaxValue.Ticks - DateTime.UtcNow.Ticks ||\r\n    message.TimeToBeReceived.Ticks < DateTime.MinValue.Ticks - DateTime.UtcNow.Ticks)\r\n{\r\n    command.Parameters.Add("Expires", SqlDbType.DateTime).Value = DBNull.Value;\r\n}\r\nelse\r\n{\r\n    command.Parameters.Add("Expires", SqlDbType.DateTime).Value = DateTime.UtcNow.Add(message.TimeToBeReceived);\r\n}\r\n```\r\n\r\nThe second check in the if block may be incorrect, as 1) it\'s subtracting a value from DateTime.MinValue, and 2) checking if something is less than that already too small value.\r\n\r\nYou should double check this code and make sure it\'s doing what you want it to.'
1155,'johnsimons','"Repeted" is spelled incorrectly in the SqlServer and RabbitMQ transports\nHere: \r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/4.0.0/src/RabbitMQ/NServiceBus.RabbitMQ/RabbitMqDequeueStrategy.cs#L194\r\n\r\nand here:\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/4.0.0/src/SqlServer/NServiceBus.SqlServer/SqlServerPollingDequeueStrategy.cs#L402\r\n\r\n'
1152,'andreasohlund','Should write the number of attempts when logging message faulure\nWhen logging that a message has failed the max number of times can we also write how many times it tried.\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Unicast/Transport/TransportReceiver.cs#L309\r\n\r\n\tif (Configure.Instance.Builder.Build<SecondLevelRetries>().Disabled)\r\n\t{\r\n\t\tLogger.ErrorFormat("Message has failed the maximum number of times allowed, ID={0}.", message.IdForCorrelation);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tLogger.WarnFormat("Message has failed the maximum number of times allowed, message will be handed over to SLR, ID={0}.", message.IdForCorrelation);\r\n\t}'
1150,'johnsimons','Change sql queue Headers field to varchar(max)\nWhen message handling fails the stack trace is included in the headers of the message sent to either SLR or error.  Very long stacks overflow the column and cause the failed message not to be able to be sent.'
1148,'johnsimons',"NServiceBus.NHibernate doesn't map the length of TimeoutEntity.State\nI've just moved over to using NHibernate persistence for Sagas and Timeouts and have hit an issue with the persistence of TimeoutEntity.\r\n\r\nFrom looking at the code, TimeoutEntityMap doesn't map the length of the State field, so it must be using some default (I couldn't work out exactly what that is). The problem is when a timeout message is created with a large State (eg 10K), I get the following error:\r\n\r\n> NHibernate.PropertyValueException: Error dehydrating property value for NServiceBus.TimeoutPersisters.NHibernate.TimeoutEntity.State ---> NHibernate.H\r\nibernateException: The length of the byte[] value exceeds the length configured in the mapping/parameter.\r\nat NHibernate.Type.AbstractBinaryType.Set(IDbCommand cmd, Object value, Int32 index)\r\nat NHibernate.Type.NullableType.NullSafeSet(IDbCommand cmd, Object value, Int32 index)\r\nat NHibernate.Type.NullableType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)\r\nat NHibernate.Persister.Entity.AbstractEntityPersister.Dehydrate(Object id, Object[] fields, Object rowId, Boolean[] includeProperty, Boolean[][] i\r\nncludeColumns, Int32 table, IDbCommand statement, ISessionImplementor session, Int32 index)\r\n\r\nNow this isn't normally a problem, as the timeout messages are usually very small. But, I've hit this issue when enabling Second Level Retries. I'm guessing that the message to retry is put into the State field of the timeout message."
1146,'andreasohlund','ActiveMQ Native transaction with FLR fixed, closes #1099\nNow as a pull request. @andreasohlund could you rework this into feature design?'
1143,'andreasohlund','Fixing issue 1138\nhandling messages without a "reply to" value (e.g. when sending from a send-only enpoint)'
1140,'andreasohlund','Fixing Windsor singleton registration issue (#1136)\n'
1138,'andreasohlund','4.0 Beta Azure ServiceBus send failure from a send-only endpoint\nIn the AzureServiceBusMessageQueueSender:\r\n\r\n    private void Send(TransportMessage message, QueueClient sender)\r\n\r\nif the message is sent fomr a send only endpoint the message does not contain a ReplyToAddress so this fails:\r\n\r\n    brokeredMessage.ReplyTo = message.ReplyToAddress.ToString();'
1136,'andreasohlund','[BUG] Windsor builder registration: component is not registered using the supplied type as service\nIn the WindsorObjectBuilder class\r\n\r\n    void IContainer.RegisterSingleton(Type lookupType, object instance)\r\n    {\r\n        var registration = container.Kernel.GetAssignableHandlers(lookupType).Select(x => x.ComponentModel).FirstOrDefault();\r\n        if (registration != null)\r\n        {\r\n            registration.ExtendedProperties["instance"] = instance;\r\n            return;\r\n        }\r\n        var services = GetAllServiceTypesFor(instance.GetType());\r\n        container.Register(Component.For(services).Activator<ExternalInstanceActivatorWithDecommissionConcern>().Instance(instance).LifestyleSingleton());\r\n    }\r\n\r\nthe register singleton method is registering types in Windsor ignoring the lookupType and GetAllServicesTypesFor deals only with interfaces, this method is called (e.g. in ConfigureAzureServiceBusMessageQueue) in this way:\r\n\r\n    config.Configurer.RegisterSingleton<NamespaceManager>(namespaceClient); \r\n    config.Configurer.RegisterSingleton<MessagingFactory>(factory);\r\n\r\nthe following test fails: https://gist.github.com/mauroservienti/897851c862af18988aa5, and this fixes the issue: https://gist.github.com/mauroservienti/98d61a6c5587a06c7ec3\r\n\r\n\r\n'
1135,'johnsimons',"Raven subscription storage isn't backwards compat with v3\nSince we store the Address class as is the endpoint will blow up if there is v3 data in the database:\r\n\r\neserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent) i\r\nn c:\\Builds\\RavenDB-Stable\\Imports\\Newtonsoft.Json\\Src\\Newtonsoft.Json\\Serializa\r\ntion\\JsonSerializerInternalReader.cs:line 155\r\n   at Raven.Imports.Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReade\r\nr reader, Type objectType) in c:\\Builds\\RavenDB-Stable\\Imports\\Newtonsoft.Json\\S\r\nrc\\Newtonsoft.Json\\JsonSerializer.cs:line 546\r\n   at Raven.Imports.Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader\r\n, Type objectType) in c:\\Builds\\RavenDB-Stable\\Imports\\Newtonsoft.Json\\Src\\Newto\r\nnsoft.Json\\JsonSerializer.cs:line 512\r\n   at Raven.Client.Connection.DocumentConventionJsonExtensions.Deserialize[T](Ra\r\nvenJObject self, DocumentConvention convention) in c:\\Builds\\RavenDB-Stable\\Rave\r\nn.Client.Lightweight\\Connection\\DocumentConventionJsonExtensions.cs:line 22\r\n   at Raven.Client.Document.InMemoryDocumentSessionOperations.ConvertToEntity[T]\r\n(String id, RavenJObject documentFound, RavenJObject metadata) in c:\\Builds\\Rave\r\nnDB-Stable\\Raven.Client.Lightweight\\Document\\InMemoryDocumentSessionOperations.c\r\ns:line 450\r\n   at Raven.Client.Document.InMemoryDocumentSessionOperations.TrackEntity[T](Str\r\ning key, RavenJObject document, RavenJObject metadata) in c:\\Builds\\RavenDB-Stab\r\nle\\Raven.Client.Lightweight\\Document\\InMemoryDocumentSessionOperations.cs:line 3\r\n68\r\n   at Raven.Client.Document.InMemoryDocumentSessionOperations.TrackEntity[T](Jso\r\nnDocument documentFound) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Do\r\ncument\\InMemoryDocumentSessionOperations.cs:line 351\r\n   at Raven.Client.Document.SessionOperations.MultiLoadOperation.<Complete>b__4[\r\nT](JsonDocument document) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\D\r\nocument\\SessionOperations\\MultiLoadOperation.cs:line 71\r\n   at System.Linq.Enumerable.<>c__DisplayClass12`3.<CombineSelectors>b__11(TSour\r\nce x)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Raven.Client.Document.SessionOperations.MultiLoadOperation.Complete[T]() i\r\nn c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\SessionOperations\\M\r\nultiLoadOperation.cs:line 70\r\n   at Raven.Client.Document.DocumentSession.LoadInternal[T](String[] ids) in c:\\\r\nBuilds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\DocumentSession.cs:line\r\n347\r\n   at Raven.Client.Document.DocumentSession.Load[T](IEnumerable`1 ids) in c:\\Bui\r\nlds\\RavenDB-Stable\\Raven.Client.Lightweight\\Document\\DocumentSession.cs:line 246\r\n\r\n   at NServiceBus.Persistence.Raven.SubscriptionStorage.RavenSubscriptionStorage\r\n.GetSubscriptions(IEnumerable`1 messageTypes, IDocumentSession session) in c:\\de\r\nv\\NServiceBus\\src\\NServiceBus.Core\\Persistence\\Raven\\SubscriptionStorage\\RavenSu\r\nbscriptionStorage.cs:li"
1133,'andreasohlund',"Messages retried through SLR breaks worker ready mechanism in scale out scenario \nI work with mariusin79 in #1115 and I've finally been able to track down the issue as described below. I've created a new issue as the title and description of #1115 aren't very  relevant for the actual problem. #1115 can be closed.\r\n\r\nAny message put in an input queue to a distributor which has the header NServiceBus.Retries on it will reduce the number of available workers by 1. If you put more such messages in than available workers in storage the processing grinds to a halt.\r\n\r\nWhen the worker gets the message the eventhandler in NServiceBus.Distributor.ReadyMessagesSender is run:\r\n```\r\nEndpointTransport.FinishedMessageProcessing += (a, b) =>\r\n                                                               {\r\n                                                                   if (((IBus)Bus).CurrentMessageContext.Headers.ContainsKey(NServiceBus.Headers.Retries))\r\n                                                                       return;\r\n                                                                       \r\n                                                                   SendReadyMessage(1);\r\n                                                               };\r\n```\r\nThe problem is that any message coming in to a worker with the header set will NOT send a ready message back, even though it should.\r\n\r\nNow the interesting part is why this would ever happen. Retries are done locally on the worker and when a message is finally put on the error queue it will not have the Retries header set, unless second level retries are enabled. With SLR enabled the message do indeed have the Retries header set when they are put in the error queue. If you then ~~ReturnToSourceQueue or~~ use Queue Explorer to put the messages back in distributor input queue, it eats a worker.\r\n\r\nRepro is simple: \r\n* Use the Scaleout-sample. \r\n* Make the messagehandler throw an exception. \r\n* Send some messages and let them make it through retries and second level retries. They will end up on the error queue. \r\n* Drag them back to the orders.handler queue and they will eat one available worker for every message.\r\n\r\nThis scenario pops up regularly for us in production when our operations team drag messages from error queues back to the input queues."
1132,'andreasohlund','Honor routing topology being used in RabbitMQMessageSender\nBus.Send for RabbitMQ should use the routing topology to determine how to publish to an endpoint. This changes RabbitMQMessageSender.cs to use the Routing Topology to send the message. Also adds a method in IRoutingTopology to allow sending to an endpoint.'
1130,'johnsimons','help.txt - correct default service name example\nIt does not default to the full class name of the endpoint config. Not sure if "the endpoint name" is specific enough for this context. But at least this is accurate.'
1125,'andreasohlund','Implement convention based routing on RabbitMQ transport\nImplements convention based routing described as take 4 at http://codebetter.com/drusellers/2011/05/08/brain-dump-conventional-routing-in-rabbitmq/.\r\n\r\nThis convention models the types as exchanges in RabbitMQ, eliminating the need for using routing keys for routing messages between producers and consumers. This makes the routing topology visible within RabbitMQ and potentially makes the routing more performant.'
1124,'johnsimons',"NHibernate persister doesn't honor ConnectionStringName\nAccording to the following line https://github.com/NServiceBus/NServiceBus/blob/develop/src/nhibernate/NServiceBus.NHibernate/Persistence/NHibernate/ConfigureNHibernate.cs#L147 NHibernate Persister require `connection.connection_string` so I can't use `connection.connection_string_name` instead."
1122,'andreasohlund',"Register all interfaces for func with Unity\nThe UnityObjectBuilder doesn't register funcs for all interfaces (unlike the other implementations), which causes problems in the v4 Beta."
1118,'andreasohlund','Add cluster support to RabbitMQ transport\nresolves issue #972\r\n\r\nI\'m reusing the https://github.com/mikehadlow/EasyNetQ implementation (see forum discussion: http://tech.groups.yahoo.com/group/nservicebus/message/18588)\r\n\r\nEasyNetQ code copied in exactly as-is, same namespaces and everything, so bringing in any future improvements to EasyNetQ should be as easy as copy/paste.  (EasyNetQ license is MIT, license also copied into the NSB project.)\r\n\r\nThe core NServiceBus implementation is now using the EasyNetQ connectionstring parser - I\'ve modified the RabbitMqTransportConfigurer to use the cluster-aware connection factory bits:\r\n```csharp\r\nvar connectionStringParser = new ConnectionStringParser();\r\nvar connectionConfiguration = connectionStringParser.Parse(connectionString);\r\nconfig.Configurer.ConfigureComponent<IConnectionConfiguration>(() => connectionConfiguration, DependencyLifecycle.SingleInstance);\r\nconfig.Configurer.ConfigureComponent<IClusterHostSelectionStrategy<ConnectionFactoryInfo>>(x => new DefaultClusterHostSelectionStrategy<ConnectionFactoryInfo>(), DependencyLifecycle.InstancePerCall);\r\nconfig.Configurer.ConfigureComponent<IConnectionFactory>(x => new ConnectionFactoryWrapper(\r\n                                                                         x.Build<IConnectionConfiguration>(),\r\n                                                                         x.Build<IClusterHostSelectionStrategy<ConnectionFactoryInfo>>()), DependencyLifecycle.InstancePerCall);\r\nvar connectionFactory = NServiceBus.Configure.Instance.Builder.Build < IConnectionFactory>();\r\n```\r\n\r\nI\'ve also created some integration tests to prove the failover - these stand up a (new) cluster of local rabbitMQ nodes, run the test and take the cluster down again.  See the readme in the cluster tests dir for requirements (although, assuming rabbit is installed then the tests *should* just work).  Please let me know if there are any aspects of the tests which do fall over if/when someone else runs them - I\'ve tried to make them machine-independent but there may be things I\'ve missed.\r\n\r\nexample log output from the test "when_connected_to_local_cluster_and_nodes_start_going_down":\r\n![17-04-2013 9-01-53 a-m-](https://f.cloud.github.com/assets/81165/388452/a7f6f2b8-a6da-11e2-8a84-47b59981a446.png)\r\n\r\nOne request:\r\nInternally we (my employer) are using daily NSB nuget packages off the develop branch - means we don\'t need to stand up our own NSB fork/nuget repo.  But...  this obviously means we  don\'t get the benefits of our pull requests until they make it into develop.  So...  given I convinced my employer it was worth giving me a day to do this PR I\'m now keen to see it progressed into develop sooner rather than later.  Please.  :)'
1117,'johnsimons',"Sql queues use deprecated timestamp type\nFrom http://msdn.microsoft.com/en-us/library/ms182776.aspx\r\n\r\n*The timestamp syntax is deprecated. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.*\r\n\r\nShould use rowversion instead, BUT..\r\n\r\nThere are good reasons NOT to use rowversion/timestamp at all, and to use a bigint identity(1,1) instead.\r\n- Messages are never updated, which is what rowversion is good at.\r\n- Rowversion is incremented for every insert/update in the database.  Identity is incremented only for every insert into the table.  Yes, it's 64-bits, but no use encouraging overflow when we don't need the features of rowversion.\r\n- Rowversion is not guaranteed to be unique when used in certain queries like SELECT INTO.  This is probably not a problem for stock NServiceBus, but could cause a problem in some integration scenarios.  This would break the clustered index.  Identity works fine with these scenarios.\r\n"
1112,'andreasohlund','Windows host does not persist profiles on install\nWhen installing the windows host as a service any profile specified is not added to the service commandline causing the service to startup in the default (production) profile.\r\n\r\nThis bug is only effecting 4.0'
1110,'johnsimons','Scheduler not logging errors\nThe current scheduler does start a new task in order to execute the scheduler action. But in case when the action throws and the task is faulted there is no error log.'
1104,'johnsimons',"Impersonation support needs to be renamed since it's not true impersonation\nDavid Boike:\r\n\r\nhttp://tech.dir.groups.yahoo.com/group/nservicebus/message/9928\r\n\r\nFrom everything I can figure out, the thread is correct. Impersonation yields a GenericPrincipal with a GenericIdentity. It would be impossible to actually impersonate as a WindowsIdentity or authenticate to any external resource with.\r\n\r\nSo I'm guessing the impersonation is really only fit for identifying the original user, as in for logging or auditing. Other than that it's pretty worthless.\r\nYou mean renaming plus deprecating .ImpersonateSender()? I suppose that's kind of a big deal since just about every fluent config example on the Interwebs includes it.\r\n\r\nSomething more accurate might be ... .IdentifySenderInThreadPrincipal(), or IdentifySenderInThreadIdentity()? Wordy but more accurate.\r\n\r\n"
1102,'johnsimons','[4.0.0-beta] TaskFactory not able to spawn new threads \nI am using NServiceBus 4 beta (unstable2911). We are using a library that spawns\r\na background listener thread using the task factory. It failed however since we\r\nmoved the logic of that part of our IT system to NServiceBus. After searching\r\nand stepping through the code it seems that TaskFactory is unable to start the\r\nnew task.\r\n\r\nWe can solve this issue by using the ThreadPool instead, for more information,\r\nsee http://sshnet.codeplex.com/workitem/1552\r\n\r\nHowever, if the result of using NServiceBus is that it is "forbidden" to use\r\nTaskFactory, then I think there is a big issue to solve.\r\n\r\nAlso see http://tech.groups.yahoo.com/group/nservicebus/message/18504'
1101,'andreasohlund','SQL Server Transport - Storing Machine Name with Subscription\nWhen using the SQL Server transport with pub/sub, the publisher is storing the endpoint name plus machine name (e.g. MySubscriber@DTCORP12592).\r\n\r\nThis results in receiving the same event multiple times when running a subscriber on more than one server.\r\n\r\n![screenshot](https://f.cloud.github.com/assets/4118789/364075/43ee3ff2-a215-11e2-9d98-b3584f213ffd.png)\r\n'
1100,'johnsimons','Add overloads that take actions when testing sagas.\nI\'ve found the lack of overloads that accept actions in testing to be an annoyance in an otherwise great product.  The reason I want to use Action is so that I can use NUnit assertions which provide more precise error information than just "the predicate failed somewhere."  (I often times have to make assertions on 5 or more message properties.)\r\n\r\nI\'ve done Sagas first and will be happy to do Handlers similarly if this contrib makes the team happy.  I added tests for my overloads only where tests for the corresponding Func<T, bool>  has them.'
1099,'andreasohlund',"FLR doesn't work for ActiveMQ when using native transactions\nHere is a repro: https://github.com/NServiceBus/NServiceBus/blob/a3cf17759873bd0b5e7763681890745e3552ba04/AcceptanceTests/NServiceBus.AcceptanceTests/Retries/When_doing_flr_with_default_settings.cs#L35"
1095,'andreasohlund','[4.0.0-beta] NServiceBus host not respecting serviceName\nIt took me a while to figure this out, but I finally got to the answer :)\r\n\r\nI am using NServiceBus.Host.4.0.0-unstable2914. When using the following command line:\r\n\r\nNServiceBus.Host.exe /install /serviceName:"NServiceBus_MyNode_Development" /displayName:"NServiceBus - MyNode (Development)" /description:"Service for MyNode"\r\n\r\nIt seems that it always falls back to the assembly name as service name. Next thing I did was download the 4.0.0 branch code and debug it. It worked perfectly there, so I didn\'t understand what was happening. The host nuget package is always built using the 4.0.0 branch, right?\r\n\r\nThen I thought: let\'s debug this! Here are the steps I followed:\r\n\r\n1) Install using my self-compiled host => works great\r\n2) Replace the NServiceBus.Host.exe with the latest available nuget package for the host => does not work\r\n\r\nIs there a difference between the final host file except that it is ilmerged? Or am I mistaken that the 4.0.0 branch is used for the new beta packages?'
1093,'andreasohlund','Add ROWLOCK hint to Sql transport dequeue\nhttps://github.com/NServiceBus/NServiceBus/blob/4.0.0/src/SqlServer/NServiceBus.SqlServer/SqlServerPollingDequeueStrategy.cs\r\n\r\nAdd ROWLOCK hint to SqlReceive query to be sure that locks are not escalated, so concurrent consumers are not blocked from receiving other messages that are not being dequeued.'
1092,'andreasohlund','NServiceBus.Transports.SQLServer.SqlServerQueueCreator.CreateQueueIfNecessary throws on startup\nNServiceBus 4.0.0-unstable2913\r\n\r\nSqlTransport throws System.NullReferenceException on startup\r\n\r\n<code>\r\n2013-04-05 12:55:03,625 [1] FATAL NServiceBus.Hosting.GenericHost [(null)] <(null)> - Exception when starting endpoint.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NServiceBus.Transports.SQLServer.SqlServerQueueCreator.CreateQueueIfNecessary(Address address, String account) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\SqlServer\\NServiceBus.SqlServer\\SqlServerQueueCreator\r\n.cs:line 33\r\n   at NServiceBus.Unicast.Queuing.QueuesCreator.Install(String identity) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Unicast\\Queuing\\QueuesCreator.cs:line 37\r\n   at NServiceBus.Installer`1.<InstallOtherInstallers>b__0(INeedToInstallSomething i) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Install.cs:line 105\r\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n   at NServiceBus.Installer`1.InstallOtherInstallers() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Install.cs:line 104\r\n   at NServiceBus.Installer`1.Install() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Install.cs:line 93\r\n   at NServiceBus.Hosting.Windows.Profiles.Handlers.WindowsInstallerRunner.Run() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\hosting\\NServiceBus.Hosting.Windows\\Profiles\\Handlers\\WindowsInstallerRunner.cs:line 30\r\n   at NServiceBus.Configure.<Initialize>b__13(IWantToRunWhenConfigurationIsComplete o) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 366\r\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n   at NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 365\r\n   at NServiceBus.Configure.CreateBus() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 284\r\n   at NServiceBus.Hosting.GenericHost.Start() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Hosting\\GenericHost.cs:line 31\r\n</code>'
1091,'andreasohlund','problem with sql server messaging sample\nIn the sql server messaging sample in the OrderCommandHandler class I throw new\r\nApplicationException("exception") right after the if (DebugFlagMutator.Debug)\r\nstatement. Problem is I never see the message in the error table. The message\r\nstays in the myserver table and the retries never stop so I get some kind of\r\n"never-ending-retry-loop". Can someone please take a look? Thanks.'
1090,'andreasohlund',"When using Scheduler (using SqlTransport & RabbitMQ), even when configured correctly, lambda's are not executed\nSteps to reproduce:\r\n1. Create a NSB host\r\n2. Create a command called DoSomething\r\n3. Create a command handler for it\r\n4. Create a bootstrapper, which will schedule this message to be sent every 5 seconds (using SendLocal)\r\n5. Start the endpoint.\r\n6. Notice that the message handlers are not being executed.\r\n7. Remove the UsingTransport<SqlServer> from the endpoint and execute the same code, and notice that the handlers are being executed, when run using Msmq.\r\n\r\n"
1089,'andreasohlund','NoConfigRequiredAutoSubscriptionStrategy should by default only subscribes to `IEvents`\nThere is currently 2 implementations for `IAutoSubscriptionStrategy`.\r\n\r\n`DefaultAutoSubscriptionStrategy` by default only subscribes to `IEvents`.\r\nWe should do the same for `NoConfigRequiredAutoSubscriptionStrategy`  and also support the `AutoSubscribePlainMessages()` flag'
1080,'andreasohlund','Obsolete ISagaEntity\n`ISagaEntity` has been replaced with `IContainSagaData`.\r\n\r\nWe should mark `ISagaEntity` as obsolete and change it so that `ISageEntity` derives from `IContainSagaData`:\r\n```c#\r\npublic interface ISagaEntity: IContainSagaData\r\n```\r\n\r\nWe then have to change everywhere we use `ISageEntity` to use `IContainSagaData` instead.\r\n\r\n'
1079,'andreasohlund','Make the NHibernate saga persister support nested saga data classes\nNested types has a "+" character in the typename and that causes sqlserver to blow up since + is not permitted in table names'
1077,'johnsimons','5 sec delay in scheduler\nA maximum of a 5sec delay can occur in the scheduler api.\r\nThe problem is because of [this code](https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Timeout/Hosting/Windows/TimeoutPersisterReceiver.cs#L66) \r\n\r\nI propose we change the code to look like:\r\n```c#\r\nif (nextRetrieval > DateTime.UtcNow)\r\n{\r\n    Thread.Sleep(TimeSpan.FromSeconds(Math.Min(Math.Max((nextRetrieval - DateTime.UtcNow).TotalSeconds, 0), SecondsToSleepBetweenPolls)));\r\n    continue;\r\n}\r\n```  \r\n\r\nThis way the maximum time we sleep for is `SecondsToSleepBetweenPolls`(5secs) but if a timeout is to expire within the next `SecondsToSleepBetweenPolls` then we only sleep for the difference between now and the timeout expire time.'
1076,'johnsimons','NServiceBus.Host startet with wrong arguments ignores it and starts normally\nWhen the NServiceBus.Host is started with a wrong argument, for example with wrong casing (NServiceBust.Host /Uninstall instead of /uninstall) it silently ignores those arguments but starts the process in console mode. This can lead to exceptions when the endpoint is already installed as a windows service.\r\n\r\nMy expected behavior would be that it fails when arguments are provided which are not understood.'
1075,'andreasohlund',"Added TestExecutionTimeout as an optional parameter for AcceptanceTest Run \nMoved the TestExecutionTimeout parameter to the RunDescriptor.\r\nAdded an optional parameter to the Scenario::Run to pass in the TestExecution timeout\r\nCorrected the object life time initialization, so that the endpoints won't be prematurely GCed."
1072,'johnsimons','NServiceBus.Host Nuget Package adds samples into app.config for message mapping which does not work\nWhen installing NSBHost nuget package the app.config has several commented out samples for the message endpoint mapping, one is following:\r\n\r\n      <add Assembly="assembly" endpoint="queue@machinename" />\r\n\r\nThis will not work because configuration sections are case sensitive!\r\n\r\n      <add Assembly="assembly" Endpoint="queue@machinename" />'
1071,'johnsimons','Fix bios name warning\n@johnsimons, I see your commit "Fixed NETBIOS name warning." (commit b8f58f794f28355c70733fab4ae08bc72614e3c7) from a week ago.\r\n\r\nAs per the forum discussion, 15 characters _is_ actually ok.  Only reason I care is because I keep seeing erroneous warnings in the logs and that\'s just unnecessary noise.\r\n\r\nrelevant forum post: http://tech.groups.yahoo.com/group/nservicebus/message/18178\r\nrelevant ms reference: http://support.microsoft.com/kb/163409\r\nand fwiw, I\'ve had NSB running fine with DTC and my machine name is exactly 15 char long.  :)\r\n\r\ncheers\r\njustin'
1070,'andreasohlund','Race conditions in the NHibernate timeoutperister is not handled correctly.\nWe should detect and just discard the dispatch request like the 4.0 version is already doing. This needs to be back ported to v3.3.\r\n\r\nBackground: Multiple requests to dispatch the same timeout can occur and the persister should not raise an error if the timeout has already been removed. This is not working for the NHibernate  timeout persister in v3. Everything works as expected but there is unessesary log entries and the dispatch request is sent to the error q. This confuses users and needs to be fixed.\r\n\r\n### To verify\r\n\r\nCreate a new endpoint, configure it to use the NHibernate timeoutpersister. Do a bus.Defer(). This would cause a duplicate dispatch request (turn on journaling on the timeoutdispatcher q). Verify that nothing is logged and no message ends up in the error q'
1069,'mookid8000','Better checks for Managed/Unmanaged assembles \nWhen NServiceBus scans for types, it looks at all *.dll in the bin folder.\r\nUnfortunately there are occasions where a dll is not a managed dll and causes an exception, see [code here](https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Hosting/Helpers/AssemblyScanner.cs#L35) and [here](https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Configure.cs#L558).\r\n\r\nTo try to minimise this exception the code below checks whether a dll is managed or not:\r\n```c#\r\npublic static class GlobalMembers\r\n    {\r\n\r\n        static CompilationMode IsManagedAssembly(string filename)\r\n        {\r\n\r\n            var data = new byte[4096];\r\n            var file = new FileInfo(filename);\r\n\r\n            using (var stream = file.Open(FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\r\n            {\r\n                stream.Read(data, 0, 4096);\r\n            }\r\n\r\n            // Verify this is a executable/dll\r\n            if ((data[1] << 8 | data[0]) != 0x5a4d)\r\n            {\r\n                return CompilationMode.Invalid;\r\n            }\r\n\r\n            // This will get the address for the WinNT header\r\n            var winNTHeader = data[63] << 24 | data[62] << 16 | data[61] << 8 | data[60];\r\n\r\n            // Verify this is an NT address\r\n            if ((data[winNTHeader + 3] << 24 | data[winNTHeader + 2] << 16 | data[winNTHeader + 1] << 8 |\r\n                 data[winNTHeader]) != 0x00004550)\r\n            {\r\n                return CompilationMode.Invalid;\r\n            }\r\n\r\n            Int32 lightningAddress = winNTHeader + 24 + 208;\r\n            Int32 sum = 0;\r\n            Int32 top = lightningAddress + 8;\r\n\r\n            for (var i = lightningAddress; i < top; ++i)\r\n            {\r\n                sum |= data[i];\r\n            }\r\n\r\n            if (sum == 0)\r\n            {\r\n                return CompilationMode.Native;\r\n            }\r\n\r\n            return CompilationMode.CLR;\r\n        }\r\n\r\n        private static void Main()\r\n        {\r\n            string file = @"C:\\Program Files (x86)\\IBM\\WebSphere MQ\\bin\\icudt32.dll";\r\n            Console.WriteLine("{0} is compiled {1}", file, IsManagedAssembly(file));\r\n\r\n            Console.Read();\r\n        }\r\n    }\r\n\r\n    public enum CompilationMode\r\n    {\r\n        Invalid,\r\n        Native,\r\n        CLR\r\n    }\r\n```\r\n\r\nThe next thing is to figure out if an assembly is x86 or x64!\r\n\r\n'
1067,'andreasohlund','Changed VitrualTopic to include namespace to avoid name clashes\nCurrently AMQ uses just the type name to generate the virtual topic name. This can lead to problems when there are two events with the same name in different namespaces.\r\n\r\nThe virtual topic now includes the namespace of the event.'
1063,'andreasohlund','Remove IdForCorrelation from transport message\nAt the moment we have two properties for the same on the transport message which makes it difficult to understand what to do when implementing a new transport. In fact both ActiveMQ and RabbitMq (most likely Azure too) don\'t seem to do it right.\r\n\r\nAs long as the communication is NSB to NSB everything is ok. But in situations where the sender of a command is not implemented using NSB but lets say it is a java client that uses the transport API directly it doesn\'t work unless a hack is done in the transport implementation in NSB.\r\n\r\nThe problem is that NSB uses IdForCorrelation as correlation ID for responses. This property returns a header value "CorrId" that is just there for backwards compatibility (V2.0?). When there is no such header on the received message it is equal to the message id. Hence when a message arives that has a correlation id on the message but no "CorrId" header then NSB will reply with the message id as correlation id instead of using the correlation id of the original message.\r\n\r\nCurrently transport implementations have to add a hack to work properly. If there is no "CorrId" header but a correlation id exists on the message then it has to assign the correlation id to a "CorrId" header.\r\n\r\nIn my opinion the correct way to solve that problem is:\r\n1. Remove IdForCorrelation\r\n2. Use "message.CorrelationId ?? message.Id" when replying\r\n3. Replace all the logging with message.ID\r\n4. Set the "CorrId" header in a outgoing message mutator to "message.CorrelationId ?? message.Id"\r\n5. Add an incomming message mutator that assigns message.CorrelationId from the "CorrId" header in case the message is from NSB < 3.0\r\n'
1060,'andreasohlund','Inconsistency in applying SLR defaults\nAn endpoint with stock config populated by Host NuGet package acts as if there are 3 levels of SLR.\r\n\r\nOnce you add the configSection declaration for SecondLevelRetriesConfig, but no SecondLevelRetriesConfig element itself, the default changes to no SLR at all.\r\n\r\nThis should be 3 levels of SLR in both cases.\r\n\r\nOnce this is verified, it would probably be a good idea to verify that the time increase parameter is consistent in both cases as well.'
1059,'andreasohlund','Inconsistency in applying MaxRetries default\nAn endpoint with stock config populated by Host NuGet package acts as if there are no retries.\r\n\r\nOnce you add the configSection declaration for TransportConfig, but no TransportConfig element itself, the default changes to MaxRetries = 5.\r\n\r\nThis should be 5 retries in both cases.'
1053,'johnsimons','NHibernate Subscription Persister reads incorrect configuration values\nWhen you pass a configuration into ConfigureNHibernateSubscriptionStorage.UseNHibernateSubscriptionPersister the configuration values are read into ConfigureNHibernate.TimeoutPersisterProperties instead of ConfigureNHibernate.SubscriptionStorageProperties. This causes the subsequent call to UseNHibernateSubscriptionPersisterInternal to throw when it checks for required properties in ConfigureNHibernate.SubscriptionStorageProperties'
1052,'andreasohlund','SendEmail retries all recipients\nIf you send an email to multiple recipients and one of the email addresses fails, the automatic retries either FLR or/and SLR will attempt to resend the same email to all the recipients again!\r\n\r\nWhat this means is that if for example you are sending an email to 20 recipients and 1 of those recipients email fails, all other 19 recipients will receive the same email multiple times (5x FLR + 3x SLR) so they end up receiving the same email 15 times!'
1050,'johnsimons','Incorrect usage of ObsoleteAttribute\nThe ObsoleteAttribute is for stuff that "still works but is scheduled for removal". As it stands NSB has several methods that voids the "still works" part.\r\n\r\neg\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureRavenPersistence.cs#L297\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureRavenPersistence.cs#L307\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureRavenPersistence.cs#L317\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureRavenPersistence.cs#L328\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureRavenPersistence.cs#L339\r\n\r\nThe problem with these is that ObsoleteAttribute is a compile time tool. However these methods have been stubbed out. So in effect changing the run time behavior. This means someone could, in theory, do an in place upgrade of NSB without a compile and have a runtime bug. It would be very hard for them to diagnose these bugs.\r\n\r\nAlso these methods have been decorated with attributes as such\r\n\r\n   [ObsoleteEx(Message = "If you need to customise Raven database naming convention, you can either initialise Raven using config.RavenPersistence(IDocumentStore documentStore) or use config.CustomiseRavenPersistence(Action<IDocumentStore> callback).", TreatAsErrorFromVersion = "4.0", RemoveInVersion = "5.0")] \r\n\r\nThe fact that it says `RemoveInVersion = "5.0"` implies that this method, while obsolete, will continue to function until version 5.\r\n\r\nSo there are a few options here\r\n\r\n1. Put the code back to make these methods work at runtime\r\n2. Remove the methods completely so people will get proper runtime errors\r\n3. Make all the methods throw NotImplementedExceptions and change the obsolete message to more accuratly reflect that these methods should not be called'
1049,'andreasohlund','NHibernate Saga Persistance does not work\nWe detected today that when you use the NH saga persister nothing is ever persistet. The problem is in the scoping on the container. \r\n\r\nCurrently there is the following:\r\n\r\nconfig.Configurer.ConfigureComponent<UnitOfWorkManager>(DependencyLifecycle.InstancePerCall)\r\n\r\nThe saga persister needs also the UnitOfWorkManager. But when a message arrives the unicast bus retrieves all IManageUnitsOfWork but the instance which the saga persister has is not the same as the instance which is resolved on the unicast bus. Therefore when the saga transport message is received and the End() is called the currentSession is always null.\r\n\r\nconfig.Configurer.ConfigureComponent<UnitOfWorkManager>(DependencyLifecycle.InstancePerUnitOfWork) should fix that (Verify)'
1041,'johnsimons','Loading NServiceBus via bytes results in ArgumentException.\nLoading NServicBus via bytes results in ArgumentException.\r\n\r\nSo I am merging NSB using this https://github.com/Fody/Costura. This effectively results in NSB being loaded from a embedded resource stream. But `VersionMutator` makes the assumption NSB will be loaded from the file system\r\n\r\n            var version = FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly().Location);\r\n            var semverVersion = string.Format("{0}.{1}.{2}", version.FileMajorPart, version.FileMinorPart, version.FileBuildPart);\r\n\r\nThat is `Assembly.GetExecutingAssembly().Location` will be an empty string.\r\n\r\nSo this happens\r\n\r\n\tUnhandled Exception: System.ArgumentException: The path is not of a legal form.\r\n\t   at System.IO.Path.NormalizePath(String path, Boolean fullCheck, Int32 maxPathLength)\r\n\t   at System.IO.Path.GetFullPathInternal(String path)\r\n\t   at System.IO.Path.GetFullPath(String path)\r\n\t   at System.Diagnostics.FileVersionInfo.GetFullPathWithAssert(String fileName)\r\n\t   at System.Diagnostics.FileVersionInfo.GetVersionInfo(String fileName)\r\n\t   at NServiceBus.Unicast.Monitoring.VersionMutator.Init() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Unicast\\Monitoring\\Ver\r\n\tsionMutator.cs:line 30\r\n\t   at NServiceBus.Configure.<Initialize>b__10(Type t) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 348\r\n\t   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n\t   at NServiceBus.Configure.ForAllTypes[T](Action`1 action) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 376\r\n\r\n\t   at NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Configure.cs:line 345\r\n\t   at NServiceBus.ConfigureExtensions.SendOnly(Configure config) in c:\\TeamCity\\buildAgent\\work\\28bfdd0d351fb1d3\\src\\NServiceBus.Core\\Config\\Configure\r\n\tExtensions.cs:line 18\r\n\r\nso VersionMutator.Init should be \r\n\r\n        public void Init()\r\n        {\r\n            var version = GetType().Assembly.GetName().Version;\r\n            var semverVersion = string.Format("{0}.{1}.{2}", version.Major, version.Minor, version.Revision);\r\n\r\n            Configure.Instance.Configurer.ConfigureComponent<VersionMutator>(DependencyLifecycle.SingleInstance)\r\n                .ConfigureProperty(p => p.NServiceBusVersion, semverVersion);\r\n        }\r\n\r\nalso `EndpointHelper.GetEndpointVersion` has the same bug\r\n\r\nThis is a pretty simple fix. Do you need a pull request for it?\r\n\r\nPath for files\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Config/Conventions/EndpointHelper.cs\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Unicast/Monitoring/VersionMutator.cs'
1038,'johnsimons',"Allow specifying handlers order without using First<T>\nI raised issue #1036 to cover this change, where it should be possible to specify ordering without the help of the 'First<T>' class and therefore dynamically order handlers at runtime during startup."
1035,'andreasohlund','Introduce a NServiceBus.EndpointVersion header\nTo capture the version of the users endpoint that is running. Extract the current code (used in side by side mode in the host) and make it available on the core.\r\n\r\n## New api in v5\r\n\r\n```\r\nvar configuration = new BusConfiguration();\r\nconfiguration.EndpointVersion("1.2.1"))\r\n```'
1034,'johnsimons','Added support to configure Error and Audit queue via HKLM\nSupport for NServiceBus to read from `HKLM\\Software\\NServiceBus` the Error and Audit queue addresses.\r\n![Capture](https://f.cloud.github.com/assets/122651/208399/e3e0ffd4-8228-11e2-9788-694508cdaa26.PNG)\r\n\r\n\r\nWith this change 2 new Powershell cmdlets are also available:\r\n```\r\nPS> Set-NServiceBusLocalMachineSettings -ErrorQueue "error@machine" -AuditQueue "audit@machine"\r\nPS> Get-NServiceBusLocalMachineSettings\r\n\r\nErrorQueue                                                  AuditQueue\r\n----------                                              ----------\r\nerror@machine                                            audit@machine\r\n```\r\n\r\n#### What does this mean?\r\nIf you specify an error queue in your config file then the endpoint uses that setting, eg:\r\n`<MessageForwardingInCaseOfFaultConfig ErrorQueue="myerrorqueue"/>`\r\nhowever if `<MessageForwardingInCaseOfFaultConfig>` is not defined in the config file then NServiceBus will look it up on the registry, if the registry does not have it defined either then the Endpoint reports an error (you need to have an error queue defined for non sendonly endpoints!).\r\n\r\nThe same logic applies to the audit queue, so if there is a `<UnicastBusConfig ForwardReceivedMessagesTo="myauditqueue"/>` then the endpoint uses that setting, otherwise checks the registry, if the registry does not have it defined either, then the endpoint runs without audit being turned on.\r\n'
1033,'andreasohlund',"Refactor endpoint type determination for Windows Host\nHi, this PR probably looks a lot bigger than it actually is.\r\n\r\ncouple of really minor changes - adding ncrunch to gitignore, adding R# settings for test proj.\r\n\r\nthe rest of the PR...\r\n\r\n## Why:\r\nI refactored the logic for determining the type of the Endpoint (for endpoints hosted by the Windows Host) because in my application code I wanted the ability to get the name of the endpoint so I can specify the process name (ie endpoint name) in logs.\r\nInitially I wanted to just borrow the NSB assemblyscanning logic but as this was private static methods I decided to make this public.\r\nNow in an external application you can get the name of the endpoint using public non-static NSB types, like so:\r\n```cs\r\nvar endpointTypeDeterminer = new EndpointTypeDeterminer(AssemblyScanner.GetScannableAssemblies(), () => null);\r\nvar endpointConfigurationType = endpointTypeDeterminer.GetEndpointConfigurationType();\r\nstring applicationName = endpointConfigurationType.EndpointName;\r\n```\r\n\r\n## Changes:\r\nI thought I'd clean up the logic for determining the type of the endpoint - by making this (EndpointTypeDeterminer) a public class it's now testable (so I wrote a bunch of tests) and it made sense to also encapsulate and test EndpointType and its associated getters.\r\nNow the host program only deals with Topshelf concerns - and the Endpoint type stuff is encapsulated in separate classes which can be and are tested.\r\nSo basically a whole lot of stuff has just been moved (and tests added) - out of Program and into SRP classes.\r\n\r\n## Testing:\r\nUnit tests cover almost every part (except use of INameThisEndpoint as it's obsolete and so causes compilation to fail) and hopefully also document the intended logic (ie priority of determining the endpoint name).\r\nI've also manually tested the actual host with the relevant hostargs, config settings, attributes and fallback to assembly scanning.  It all seems to work as before."
1032,'johnsimons','Allow for Action<TMessage> checks in Testing\nToday, we can only provide `Func<TMessage, bool>` to verify that a send message does what we want.  The problem with this is that we just get a message saying the check failed, but if there\'s 3 conditions that need to be met, we don\'t know which one failed.\r\n\r\nInstead, I would like to see an overload added with `Action<TMessage>` so we can do this (e.g. in NUnit):\r\n\r\n```\r\nAssert.That(() => msg.Property1, Is.EqualTo(value1), "Property1 is screwed up!");\r\nAssert.That(() => msg.Property2, Is.EqualTo(value2), "Wackness detected in Property2!");\r\n```\r\n\r\nIt feels a little more behavioral to me.  Again, this is one I\'d be happy to contrib.  What do we think, gents?'
1029,'andreasohlund','RabbitMqTransportMessageExtensions.ToTransportMessage fails if no header values are available\nWhen reading from an "external" RabbitMQ queue with the RabbitMqDequeueStrategy, the RabbitMqTransportMessageExtensions.ToTransportMessage fails if, for some reason, the BasicProperties.Headers are null.\r\n\r\nThis might happen when you try to use the NSB RabbitMq classes to read from queues that contains messages from other systems that doesn\'t force the sender to set headers.'
1028,'SimonCropp','Include git SHA in AssemblyInformationalVersion\nMakes it much easier to work out what source produced a given assembly\r\n\r\nPossible format\r\n\r\n    [assembly: AssemblyInformationalVersion("1.0.0.0 Head:\'master\' Sha:759e9ddb53271dfa9335a3b27e452749a9b22280")]'
1026,'johnsimons','Do not open an NHibernate session until the saga persister needs it\nToday, if you have sagas enabled, a NH session will be opened for all messages regardless if it is a saga message or not.\r\n\r\nThis PR delays the opening of a session until the saga persister actually needs it. If no saga persister is called (ie the message is not a saga message) then no session will be opened.\r\n\r\nBtw, this is the same behaviour as the raven persister.'
1025,'andreasohlund','Clarify the "subscription message received" warning mesage\n\r\n\r\nI am only using Bus.Reply() (not Bus.Publish()) in my endpoints (all configured AsA_Server). When I fire one of them up, I get the following warning:\r\n\r\n2013-02-27 14:11:02,574 [Worker.15] WARN NServiceBus.Unicast.UnicastBus [(null) ] <(null)> - Subscription message from [not the currently running endpoint\'s queue]@my machine arrived at this endpoint, yet this endpoint is not configured to be a publi sher.\r\n\r\nAndreas informs me that this is a warning that can be safely ignored.  Ok, cool.  Let\'s make the warning message clearer by adding the text "If you are only doing request/response, you may safely ignore this message.  Disable autosubscription in your configuration to make this warning go away."\r\n'
1022,'johnsimons','Ensure all logger names begin with NServiceBus\nas per forum post http://tech.groups.yahoo.com/group/nservicebus/message/17990\r\n\r\n'
1020,'andreasohlund','Sagas: Second level retries breaks timeout message handling\nThere is a bug in NServiceBus.Sagas.Impl.SagaDispatcherFactory (NSB v3.3.5).\r\n\r\nThe bug is here:\r\n\r\nif (isTimeoutMessage && !(message is TimeoutMessage))\r\n\tHandlerInvocationCache.Invoke(typeof(IHandleTimeouts<>),saga, message);\r\nelse\r\n\tHandlerInvocationCache.Invoke(typeof(IMessageHandler<>),saga, message);\r\n\r\nWhen second level retries are enabled, and multiple messages arrive for the same saga, the retry mechanism is activated, tagging the messages as timeout messages. When they are retried the code above attempts to invoke a handler of type IHandleTimeouts<>, resulting in a KeyNotFoundException. If the "message is TimeoutMessage" test is not negated, the problem would be solved for retried messages, but the new timeout functionality which doesn\'t require timeout messages to inherit from TimeoutMessage would be broken (correct me if I\'m wrong please). \r\n\r\nWorkarounds:\r\n1) Disable second level retries.\r\n2) Implement IHandleTimeouts<> for problem messages (yikes!).\r\n\r\nWorkaround 1 is problematic because second level retries help keep messges out of the error queue in high concurrency scenarios. Workaround 2 is ugly.'
1019,'johnsimons','Handler invocation cache\nthis needs a code review. any takers?\r\n\r\nissue #1017\r\nnote there is a TODO to remove the old version after you validate the performance tests\r\n\r\nin my basic perf tests for 100000 invokes ...\r\nbefore: 124ms\r\nafter: 33ms\r\n\r\nHowever the perf improvements will be greater with more handlers.\r\n'
1017,'johnsimons','Perf improvements to HandlerInvocationCache\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Unicast/HandlerInvocationCache.cs\r\n\r\nthese lines do a double lookup.. \r\n\r\n            foreach (var messageType in messageTypesToMethods.Keys)\r\n                if (messageType.IsInstanceOfType(message))\r\n                    messageTypesToMethods[messageType][interfaceType].Invoke(handler, new[] { message });\r\n\r\nShould just iterate through the keyvalues. then no need to do the `messageTypesToMethods[messageType]` since you will already have the value\r\n\r\n\r\nthis lines also does a double lookup.\r\n\r\n            if (!(handlerToMessageTypeToHandleMethodMap[handler].ContainsKey(messageType)))\r\n                handlerToMessageTypeToHandleMethodMap[handler].Add(messageType, GetHandleMethods(handler, messageType));\r\n\r\nShould do a `TryGetValue`.\r\n\r\nChange to use type handles and cached compiled delegates'
1016,'johnsimons','Obsolete IMessageHandler<T>\nThe preferred interface is now `IHandleMessages<T>`\r\n\r\nAt the moment we have the following hierarchy:\r\n```c#\r\n    public interface IMessageHandler<T>\r\n    {\r\n        void Handle(T message);\r\n    }\r\n\r\n    public interface IHandleMessages<T> : IMessageHandler<T> {}\r\n```\r\n\r\nI recommend we invert the hierarchy and obsolete `IMessageHandler<T>`, so that it looks like:\r\n```c#\r\n    public interface IHandleMessages<T>\r\n    {\r\n        void Handle(T message);\r\n    }\r\n\r\n    [Obsolete]\r\n    public interface IMessageHandler<T> : IHandleMessages<T> {}\r\n```\r\n\r\nDoes anyone see any problems with doing this?\r\n'
1012,'johnsimons',"Transaction failures with NHibernate TimeoutStorage\nIn the NHibernate TimeoutStorage.TryRemove method, if the TimeoutEntity can't be found, it returns without committing the transaction, this causes a transaction rollback. The outer transaction (if NServiceBus is used transactionally) then fails ((TransactionAbortedException) because the SQL transaction is already rolled back."
1011,'johnsimons','Nuget script init.ps1 fails in Visual Studio if UAC is enabled\nThe script should detect wether VS is running as administrator and quit prematurely.\r\n\r\nThis should work:\r\n\r\n    $isAdministrator = (New-Object Security.Principal.WindowsPrincipal ([Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)  \r\n\r\n    if (!$isAdministrator) {\r\n      Write-Warning "This script checks NServiceBus prerequisites and must be run in administrator mode. Please restart Visual Studio as administrator"\r\n      exit\r\n    }\r\n'
1003,'johnsimons','Endpoint name not used when specifying Raven connection string with Url only\nPull request based on #1000 done against develop branch'
1002,'andreasohlund','SQL Server transport crashing\n1. Open the Req/Resp sample and change it so that you using the SqlServer transport.\r\n2. start both endpoints in debug mode (so all the sql tables get created)\r\n3. stop the endpoints\r\n4. start client only and send about 200msgs (confirm they are in server queue)\r\n5.start server\r\n\r\nIn my machine, the server consumes about 100msg and then dies! No exceptions thrown!\r\n'
1001,'johnsimons','SqlServer Transport receives expired messages\nMSMQ and other transports automatically "purge" expired messages from their queues.\r\n\r\nFor the SQLServer transport we have to do it manually.\r\n'
997,'johnsimons','Remove the asmx web services support\nRemove project and nuget package'
993,'andreasohlund','MessageIntent is not saved in timeout data\nIf a message with intent of **Subscribe** arrives at a publisher and for some reason the subscription storage is down.\r\n1. The message is retried Maxretires\r\n2. Then SLR kicks in and stored the message in the timeout store\r\n3. The message data stored in the timeout store does not contain the _MessageIntent_\r\n4. So when message is retried again the MessageIntent is reset to **Send**\r\n\r\nThe _MessageIntent_ should be saved in the timeoutdata.'
992,'johnsimons','Replaced Apache.NMS.ActiveMQ assembly by custom build\nThe current released version of Apache.NMS.ActiveMQ has issues with DTC support.\r\n\r\nThis fixes the transaction acceptance tests'
990,'johnsimons','Consistent naming of transports\n* Rename all transports to NServiceBus.Transports.{Name of transport}.dll\r\n* NuGet stays the same as today eg. NServiceBus.ActiveMQ\r\n* Move the transport relevant interfaces to a NServiceBus.Transports namespace \r\n-ISendMessages\r\n-IDequeueStrategy\r\n-IDeferMessages\r\n-IPublishMessages\r\n-IManageSubscriptions\r\n\r\n\r\nShould we move the msmq support as well to be consistent? (still in the core but same NS)'
986,'johnsimons','Update to Castle 3.2\n'
985,'andreasohlund','Using defer and delete command data to delete saga unique identity. Fixe...\n...s #983'
982,'johnsimons',"SqlServer transport doesn't handle supressed DTC correctly\nThis test show it:\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/AcceptanceTests/NServiceBus.AcceptanceTests/Transactions/When_receiving_a_message_with_dtc_disabled.cs#L19\r\n\r\nThe fix is to detect if the DTC is supressed and use a plain ado.net TX instread.\r\n\r\nWe might have to fix the polling dequeue strategy as well or remove it since sql is the only polling transport ATM"
980,'johnsimons','DisableCompatibilityWithNSB2 should be removed for v4\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/encryption/NServiceBus.Encryption/Config/ConfigureEncryption.cs\r\n\r\nSince the upgrade path from v2 to v4 is via v3 we should not need this right?'
979,'johnsimons','Update to AutoFac 3.0.1\n'
978,'johnsimons','Worker restarts can cause extra ready messages in the distributor storage\n--\r\nThis can happen for at least the following use cases:\r\n\r\n## Worker auto subscribing at start up\r\n\r\nIf a worker auto subscribes to it self at start up the following can happen\r\n1. Distributor pops a message from storage and forwards the sub request to worker\r\n2. Worker start up message arrives, storage is cleared and new ready messages are added\r\n3. Worker processed the subscription and sends back a ready message\r\n4. Distributor now contains N+1 Ready messages where N is the number of threads in the worker\r\n\r\n## Worker restarts with messages in its input Q\r\n1. Worker stops\r\n2. N messages will arrive at the queue where N is the number of threads\r\n3. Worker restarts and sends a Control message\r\n4. Worker processed the old messages and sends ready messages\r\n5. Distributor clear the storage and add N ready messages\r\n6. Ready messages arrives to distributor and is added to storage\r\n7. Storage now contains approx N*2 readymessages for the worker\r\n\r\nThe proposed solutions is:\r\n\r\n1. Worker attaches a "session" id to each control/readymessage. This id reset on restarts. To avoid race conditions this should probably be the UtcNow at the worker\r\n2. Distributor stores this value in the storage Q\r\n3. Distributor keeps the value and worker address in a dictionary in memory\r\n4. Distributor forwards this value as a header when sending work to workers\r\n5. Workers flows the session id of the incoming message to the resulting ready message\r\n6. Distributor discards readymessages that belongs to and old session id (per worker)\r\n\r\n'
977,'johnsimons','Trim down Raven fluent API\nBecause we now support passing `IDocumentStore` to the RavenPersistence fluent API, I wonder if we should remove:\r\n* `DisableRavenRequestCompression(this Configure config)`\r\n* `EnableRavenRequestsWithUnsafeAuthenticatedConnectionSharingAndPreAuthenticate(this Configure config)`\r\n* `DefineRavenTagNameConvention(Func<Type, string> convention)`\r\n\r\nThoughts?'
976,'johnsimons','Create ITransportDefinition for Azure transports\nI think we need 2:\r\n- One that calls `AzureServiceBusMessageQueue`\r\n- And another of `AzureMessageQueue`\r\n\r\n@yvesgoeleven is this right?\r\n\r\nWhat should they be called?'
975,'johnsimons','Events are not received by saga if there is a timeout for the same message type\nIf a saga Implements IHandleMessage<> and IHandleTimeouts<> for the same event message type, the event will not be subscribed and received.\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/pull/974 demonstrates the problem\r\n\r\nThe test will fail with the error that the event was not received. When removing IHandleTimeout<> it will fail with Timeout not received.'
974,'johnsimons','Added saga timeout integration test\n'
971,'johnsimons','update Obsolete\nfix for #969\r\n-enable injection of editorbrowsable\r\n-improve doco a bit\r\n-bump Fody\r\n-remove existing editorbrowsable attributes\r\n'
969,'johnsimons','Hide obsolete members\nI had a chat with @johnsimons about obsolete members polluting intellisense. \r\n\r\nSee the screen shot.\r\n\r\nSo I added a feature to Obsolete.Fody that will apply [EditorBrowsable(EditorBrowsableState.Advanced)] to obsolete members https://github.com/Fody/Obsolete#hideobsoletemembers\r\n\r\nIt is off by default. Do you guys want a pull request that enables this for NSB?\r\n\r\n![ObsoleteIntellisense](https://f.cloud.github.com/assets/122666/147267/536028b8-74a9-11e2-9eb2-5cd400a51925.png)\r\n\r\n'
968,'johnsimons','Satelites are never stopped\nSateliteLauncher wil never stop any satelites, because SatelliteContext.Started is never assigned true.'
961,'johnsimons','Fixed Transaction handling of ActiveMQ\n- The introduction of EndProcessMessage has broken the transaction handling. Fixed in this version and refactored message receive\r\n- Fixed shutdown of ActiveMQ transport\r\n- Added stop to ITransport to provide deterministic stop of the dequeue strategies. Fixes #960\r\n- Fixed Azure.Logging.Log4Net assembly references'
958,'andreasohlund','SLR requests should be sent to the master node when scaled out\nWhen a master node is specified the retry requests should be routed to the retries queue on the masternode'
956,'andreasohlund','The timeoutmanager should not create queues and run if a remote TM is configured\nThis applies to the following use cases:\r\n\r\n1. A master node is defined -> timeouts should go to the master node\r\n\r\n2. A explicit TM address is specified to the user'
955,'andreasohlund','Timeout requests should be routed to the timeoutmanager on the masternode if there is a masternode defined\nWhen a worker requests a timeout that timeout should go to the timeoutmanager on the masternode'
954,'andreasohlund',"Calls to bus.Defer and Saga.RequestUtcTimeouts causes ready messages to build up in the distributor\nWhen a timeout is requested the timeout manager sends the message directly back to the worker when time is up. Since it won't pass through the distributor no ready message will be removed. When the messages is handled successfully by the worker a ReadyMessage will be sent to the distributor causing it to increase by one each time the worker processed a timeout."
952,'johnsimons','Programmatically add extra mapping to MessageEndpointMappings.fails\nThis should work:\r\n```c#\r\nclass UnicastBusConfigOverride : IProvideConfiguration<UnicastBusConfig>\r\n    {\r\n        public UnicastBusConfig GetConfiguration()\r\n        {\r\n            var unicastBusConfig = Configure.ConfigurationSource.GetConfiguration<UnicastBusConfig>();\r\n            unicastBusConfig.MessageEndpointMappings.Add(new MessageEndpointMapping() { Endpoint = "MyQueue", Messages = "MyMessages" });\r\n\r\n            return unicastBusConfig;\r\n        }\r\n    }\r\n```\r\nunfortunately the `MessageEndpointMappingCollection` is marked as **readonly** and because of it we get an exception:\r\n```\r\nException when starting endpoint, error has been logged. Reason: The configuration is read only.\r\n```\r\n'
951,'johnsimons','The configuration for transaction related settings is a mess\nWe split the settings into 2 modes of usage:\r\n#### Standard mode\r\n```c#\r\nConfigure.Transactions.Enable()\r\nConfigure.Transactions.Disable()\r\n```\r\n#### Advance mode\r\n```c#\r\nConfigure.Transactions.Advanced(s => {\r\n  s.IsolationLevel(IsolationLevel.ReadCommitted)\r\n    .DefaultTimeout(TimeSpan.fromSeconds(30))\r\n    .DisableDistributedTransations()\r\n    .DoNotWrapHandlersExecutionInATransactionScope();\r\n} )\r\n```\r\n\r\nThe Volatile setting is exposed at the Endpoint level, eg:\r\n```c#\r\nEndpoint.Volatile = true;\r\n```\r\nor\r\n```c#\r\nConfigure.Endpoint.AsVolatile();\r\nConfigure.Endpoint.AsNonVolatile();\r\n```'
949,'johnsimons','EncryptionMessageMutator fails on null objects\nTrying to send a message containing IEnumerable<int?> (actually typed collection which can contain nulls) with at least one null value fails in EncryptionMessageMutator. It tries to do GetType() on value which of course fails on null.\r\nTested with 3.3.3 and 3.3.4'
946,'johnsimons',"Embed Raven Client instead of ilmerging + internalize\nAt the moment we are ilmerging + internalizing Raven Client in NServiceBus.Core.dll.\r\nThe plan for after v4 is to split all the Raven stuff into its own assembly + nuget and also to not ilmerge it.\r\n\r\nBut for v4 we still want to provide Raven client out of the box.\r\nWe now have a use case where we need to be able to pass an external IDocumentStore to the NSB framework.\r\nSo we were wondering if Costura could help us here.\r\nSo we would not ilmerge/internalized the Raven client but instead embed it into  NServiceBus.Core.dll and then if the Raven client is already used by the user then we would use that one otherwise we would extract the embedded one and use it.\r\n\r\nHere is what needs to be done:\r\n- Setup Costura to embed all the assemblies required for Raven Client;\r\n- Update build script not to ilmerge Raven client\r\n- Change this method to pass a IDocumentStore instead of dynamic(the dynamic doesn't work anyway) "
945,'andreasohlund','Update to AutoFac 3.0\nhttp://www.paraesthesia.com/archive/2013/01/30/autofac-3-0-released.aspx'
938,'johnsimons','Remove TimeoutMessage\nfix for issue #908'
937,'johnsimons','Need to add leading zeros to pre-release nuget packages\nBecause:\r\nv1.0.0-alpha2> v1.0.0-alpha10> v1.0.0-alpha02\r\n\r\nRead all about it here (rule 2 & 3):\r\nhttp://msdn.microsoft.com/en-us/magazine/jj851071.aspx'
936,'johnsimons',"We need an unistall nuget script to unload PS module\nIf we try to upgrade our packages, we get the following error:\r\n```\r\nPM> Install-Package NServiceBus.Host -IncludePrerelease\r\nAttempting to resolve dependency 'T4Scaffolding.Core'.\r\nAttempting to resolve dependency 'NServiceBus (= 4.0.0-unstable2652)'.\r\nAttempting to resolve dependency 'NServiceBus.Interfaces (= 4.0.0-unstable2652)'.\r\nYou are downloading NServiceBus.Interfaces from NServiceBus Ltd, the license agreement to which is available at http://nservicebus.com/license.aspx. Check the package for additional dependencies, which may come with their own license agreement(s). Your use of the package and dependencies constitutes your acceptance of their license agreements. If you do not accept the license agreement(s), then delete the relevant components from your device.\r\nSuccessfully installed 'NServiceBus.Interfaces 4.0.0-unstable2652'.\r\nYou are downloading NServiceBus from NServiceBus Ltd, the license agreement to which is available at http://nservicebus.com/license.aspx. Check the package for additional dependencies, which may come with their own license agreement(s). Your use of the package and dependencies constitutes your acceptance of their license agreements. If you do not accept the license agreement(s), then delete the relevant components from your device.\r\nSuccessfully installed 'NServiceBus 4.0.0-unstable2652'.\r\n\r\nType 'get-help about_NServiceBus' to see all available NServiceBus commands.\r\n\r\nYou are downloading NServiceBus.Host from NServiceBus Ltd, the license agreement to which is available at http://nservicebus.com/license.aspx. Check the package for additional dependencies, which may come with their own license agreement(s). Your use of the package and dependencies constitutes your acceptance of their license agreements. If you do not accept the license agreement(s), then delete the relevant components from your device.\r\nSuccessfully installed 'NServiceBus.Host 4.0.0-unstable2652'.\r\nSuccessfully removed 'NServiceBus.Host 4.0.0-unstable2649' from ServiceBus.Management.\r\nSuccessfully removed 'NServiceBus 4.0.0-unstable2649' from ServiceBus.Management.\r\nSuccessfully removed 'NServiceBus.Interfaces 4.0.0-unstable2649' from ServiceBus.Management.\r\nSuccessfully added 'NServiceBus.Interfaces 4.0.0-unstable2652' to ServiceBus.Management.\r\nSuccessfully added 'NServiceBus 4.0.0-unstable2652' to ServiceBus.Management.\r\nSuccessfully added 'NServiceBus.Host 4.0.0-unstable2652' to ServiceBus.Management.\r\nSuccessfully uninstalled 'NServiceBus.Host 4.0.0-unstable2649'.\r\nAccess to the path 'C:\\Projects\\ServiceBus.Management\\packages\\NServiceBus.4.0.0-unstable2649\\tools\\NServiceBus.PowerShell.dll' is denied.\r\nThe directory is not empty.\r\n\r\nSuccessfully uninstalled 'NServiceBus 4.0.0-unstable2649'.\r\nSuccessfully uninstalled 'NServiceBus.Interfaces 4.0.0-unstable2649'.\r\nOne or more packages could not be completely uninstalled: NServiceBus.4.0.0-unstable2649. Restart Visual Studio to finish uninstall.\r\n```"
935,'johnsimons','Added XSD for configuration file\n'
934,'johnsimons',"Xml serialization fails when message has a Char property with a illegal character\nWe need to excape char properties as well\r\n\r\nTo reproduce:\r\n\r\n```\r\n\r\n [Test]\r\n        public void Serialize_ShouldSucceed_WhenCharContainsXmlSpecialCharacters()\r\n        {\r\n            // Arrange\r\n            var serializer = XmlMessageSerializerInit<TestMessageWithChar>();\r\n\r\n            var charMessage = new TestMessageWithChar { Character = '<' };\r\n\r\n            Stream stream = new MemoryStream();\r\n\r\n            // Act\r\n            serializer.Serialize(new object[] { charMessage }, stream);\r\n\r\n            stream.Position = 0;\r\n\r\n            object[] messageDeserialized = serializer.Deserialize(stream);\r\n\r\n            // Assert\r\n            Assert.IsNotNull(messageDeserialized);\r\n\r\n            Assert.AreEqual(1, messageDeserialized.Length);\r\n            \r\n            Assert.AreEqual(charMessage.Character, ((TestMessageWithChar)messageDeserialized[0]).Character);\r\n        }\r\n\r\n```"
933,'johnsimons','Testing message headers are not set\nThe following test should pass and it doesn\'t:\r\n```c#\r\n    [TestFixture]\r\n    public class HeaderAreSet\r\n    {\r\n        [TestFixtureSetUp]\r\n        public void TestFixtureSetUp()\r\n        {\r\n            Test.Initialize();\r\n        }\r\n\r\n        [Test]\r\n        public void SendMessageWithHeaderOne()\r\n        {\r\n            var command = new MyCommand();\r\n\r\n            Test.Handler<MyCommandHandler>()\r\n                .SetIncomingHeader("UserToken", "Header1")\r\n                .OnMessage(command);\r\n\r\n            Assert.AreEqual("Header1", command.Header);\r\n        }\r\n\r\n        [Test]\r\n        public void SendMessageWithHeaderTwo()\r\n        {\r\n            var command = new MyCommand();\r\n\r\n            Test.Handler<MyCommandHandler>()\r\n                .SetIncomingHeader("UserToken", "Header2")\r\n                .OnMessage(command);\r\n\r\n            Assert.AreEqual("Header2", command.Header);\r\n\r\n        }\r\n\r\n        public class MyCommand : ICommand\r\n        {\r\n            public string Header { get; set; }\r\n        }\r\n\r\n        public class MyCommandHandler : IHandleMessages<MyCommand>\r\n        {\r\n            public void Handle(MyCommand message)\r\n            {\r\n                message.Header = message.GetHeader("UserToken");\r\n            }\r\n        }\r\n    }\r\n```'
932,'andreasohlund','Apply consistent UseTransport to all transports\nFor example FtpTransport does not use ITransportDefinition.'
931,'johnsimons','Licence validation should *not* run every 5 minutes\nI noticed some instability in one of my generic host implementations...  A hard to find temporal problem...\r\n\r\nYesterday I noticed some suspicious exception activity generated by  Rhino Licencing...  Today I have looked a bit deeper. \r\n\r\nThe licencing code is **running every five minutes on a timer embedded in  Rhino.Licensing.AbstractLicenseValidator** to cut a long story short this causing unhandled  exceptions on thread pool threads.  Worst case it appears to chew up 12 pool threads while network requests are failing (the number of time servers).\r\n\r\nIt crops up again as the timer elapses 5 minutes later. \r\n\r\nThere is a method available on the abstract class to disable the timer and thus the code will **run just the once.** \r\n\r\nPlease add DisableFutureChecks() ; to the constructor of the derived type in NSB:  \r\n\r\n```C#\r\ninternal class StringLicenseValidator : AbstractLicenseValidator\r\n    {\r\n\t... \r\n        public StringLicenseValidator(string publicKey, string license)\r\n            : base(publicKey)\r\n        {\r\n            License = license;\r\n            DisableFutureChecks(); \r\n        }\r\n```\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Licensing/LicenseValidator.cs#L19\r\n\r\n**Is all the remote time server stuff really necessary? do you think that someone is really going to fiddle with the local clock in the NSB context?**\r\n\r\nRegards,\r\nAndrew Stone. \r\n\r\n\r\n### To verify\r\nStart an endpoint. Use Fiddler to verify that no network request for time information is performed\r\n'
929,'johnsimons','Pull in the lastest version of Rhino licensing\nTo fix this issue:\r\n\r\nhttps://github.com/ayende/rhino-licensing/issues/5'
921,'andreasohlund',"Don't include servername when creating tables in the sql transport\nJust like with Rabbit, Azure , Active etc the machine name is not relevant since users connect to a central db anyway. "
919,'andreasohlund','Improve the saga mapping syntax\nObsolete the old\r\n\r\n```\r\nConfigureMapping<OrderAccepted>(s => s.OrderId,m => m.OrderId)\r\n```\r\n\r\nand introduce a new\r\n\r\n```\r\nConfigureMapping<OrderAccepted>(m => m.OrderId)\r\n       .ToSaga(s => s.OrderId);\r\n```'
912,'andreasohlund','RabbitMQ does not Close connection\nIn the RabbitMQ transport we open the connection but we never Close it!\r\n\r\nWe need to either explicitly call Close or set AutoClose=true (we can only set autoclose to true after at least 1 channel has started otherwise the connection is closed straight away)'
909,'johnsimons','Too many ways to specify Transport\nWe should promote the usage of the new `UsingTransport<T>` fluent and role base API `WithTransport<T>`.\r\n\r\nWe should obsolete:\r\n* `public static Configure MsmqTransport(this Configure config)`\r\n\r\nAnd remove all other specific fluent transports APIs  (v4 API):\r\n* SqlServerTransport\r\n* ActiveMQTransport\r\n* RabbitMQTransport\r\n'
908,'johnsimons','Remove the obsoleted TimeoutMessage\n'
907,'andreasohlund','Update to Autofac.2.6.3.862\n'
906,'johnsimons','Change names of counters to be more descriptive\n"Current Throughput" -> "# of msgs pulled from the input queue /sec"\r\n"Success rate" -> "# of msgs successfully processed / sec"\r\n"Failure rate" -> "# of msgs failures / sec"\r\n\r\nThis makes it similar to what the .net perf counters do:\r\n![](https://f.cloud.github.com/assets/122651/73063/1b6f15a6-602f-11e2-9b9b-435d17f49474.PNG)\r\n\r\nand it also makes it very clear what information the counter is displaying, thoughts?'
905,'andreasohlund','Add Configure.Component<T>\nAs a shortened form of Configure.Instance.Configurer.ConfigureComponent<T>.'
902,'johnsimons','RavenDB logs are being captured by our logging\nIf you run the [ErrorHandling sample in the develop](https://github.com/NServiceBus/NServiceBus/tree/develop/Samples/ErrorHandling) branch and stop the Raven server, the following error appears on the console:\r\n```\r\n2013-01-18 13:25:11,248 [6] ERROR Raven.Client.Connection.ReplicationInformer [(\r\nnull)] <(null)> - Could not contact master for new replication information\r\nSystem.Net.WebException: Unable to connect to the remote server ---> System.Net.\r\nSockets.SocketException: No connection could be made because the target machine\r\nactively refused it 127.0.0.1:8080\r\n   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddre\r\nss socketAddress)\r\n   at System.Net.Sockets.Socket.InternalConnect(EndPoint remoteEP)\r\n   at System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Sock\r\net s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state,\r\nIAsyncResult asyncResult, Exception& exception)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.HttpWebRequest.GetResponse()\r\n   at Raven.Client.Connection.HttpJsonRequest.ReadJsonInternal(Func`1 getRespons\r\ne) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonReque\r\nst.cs:line 342\r\n   at Raven.Client.Connection.HttpJsonRequest.ReadResponseJson() in c:\\Builds\\Ra\r\nvenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonRequest.cs:line 240\r\n   at Raven.Client.Connection.ServerClient.DirectGet(String serverUrl, String ke\r\ny) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.\r\ncs:line 215\r\n   at Raven.Client.Connection.ReplicationInformer.RefreshReplicationInformation(\r\nServerClient commands) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Conn\r\nection\\ReplicationInformer.cs:line 351\r\n```\r\nthis error is actually logged by Raven API [here](https://github.com/ravendb/ravendb/blob/master/Raven.Client.Lightweight/Connection/ReplicationInformer.cs#L356)\r\n\r\nWe need to somehow not display these errors on our own logs.'
900,'andreasohlund','MasterNode address is appended to the local worker when running in the master profile\nWhile it should work in theory since the master profile only should be active on that endpoint on the master node machine it causes issues when a DNS alias is used. See https://github.com/NServiceBus/NServiceBus/issues/898'
899,'andreasohlund','XmlSerializer fails to deserialize array of messages\nIf you do a:\r\n```c#\r\nBus.Send(new MyMessage(), new MyMessage())\r\n```\r\nthe serializer throws an exception:\r\n```\r\nSystem.ArgumentOutOfRangeException : Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n   at System.SZArrayHelper.get_Item(Int32\xa0index)\r\n   at System.Linq.Enumerable.ElementAt(IEnumerable`1\xa0source,\xa0Int32\xa0index)\r\n   at NServiceBus.Serializers.XML.XmlMessageSerializer.Deserialize(Stream\xa0stream,\xa0IList`1\xa0messageTypesToDeserialize) in XmlMessageSerializer.cs: line 298\r\n```\r\n\r\nThe following unit test replicates the problem:\r\n```c#\r\n        [Test]\r\n        public void Should_be_able_to_deserialize_many_messages_of_same_type()\r\n        {\r\n            var serializer = SerializerFactory.Create<EmptyMessage>();\r\n\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                serializer.Serialize(new[] { new EmptyMessage(), new EmptyMessage(), new EmptyMessage()  }, stream);\r\n                stream.Position = 0;\r\n\r\n                var msgArray = serializer.Deserialize(stream, new[] {typeof(EmptyMessage).FullName});\r\n\r\n                Assert.AreEqual(3, msgArray.Length);\r\n            }\r\n        }\r\n```'
897,'johnsimons','Introduce a connection string for MSMQ\n1. Add a NServiceBus/Transport connection string for MSMQ and add options to:\r\n\r\n* Turn caching on and off - On by default\r\n* Turn dead lettering on and off - On by default\r\n* Turn journaling on and off - Off by default\r\n\r\n2. Obsolete the MsmqQueuingConfig - https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Config/MsmqMessageQueueConfig.cs'
896,'johnsimons','Obsolete IMessageModule in favour of IManageUnitsOfWork\nWith the introduction of `IManageUnitsOfWork` is there a reason to keep `IMessageModule` ?'
894,'johnsimons','Remove /installinfrastructure from host\nBecause we are not using/running INeedToInstallInfrastructure we need to remove that option from the Hosts.\r\n\r\nOr the other option is to thrown an exception with a nice error message to tell the user to use the powershell cmdlets.\r\n\r\n'
893,'johnsimons','Mark CompletionMessage as obsolete\nShould we mark CompletionMessage as obsolete in v4?\r\nOr are we still compatible with v2.6 endpoints?\r\n\r\nActually if this class is really only to keep compatibility with v2.6 endpoints then we should probably remove it, if v4 is no longer compatible, thoughts?'
892,'johnsimons','Stop using the ISessionFactory directly from the NHibernate saga persister\nSince we stopped merging NHibernate in 3.X we are now creating problems for users registering their own ISessionFactory in the container. \r\n\r\nHere is an example: http://tech.groups.yahoo.com/group/nservicebus/message/17486\r\n\r\nThis happens since our saga persister rely on the ISessionFactory directly\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/nhibernate/NServiceBus.NHibernate/SagaPersisters/NHibernate/SagaPersister.cs#L64\r\n\r\n1. We need to abstract this so that our session factory can coexist with the one the user is registering.\r\n2. We should add an option to use the user supplied one if requested so by the user\r\n\r\n'
891,'andreasohlund','Exceptions on Scope.Complete causes message failures to not increment\n'
889,'johnsimons','Enable WCF hosting in Unobtrusive mode\n__WCF hosting stops working when Unobtrusive mode is enabled__\r\n\r\nThis is because WcfManager.cs tests the parameters to see if they implement IMessage:\r\n\r\n```C# \r\n private static bool IsWcfService(Type t)\r\n        {\r\n            var args = t.GetGenericArguments();\r\n            if (args.Length == 2)\r\n                if (typeof(IMessage).IsAssignableFrom(args[0]))\r\n                {\r\n                    var wcfType = typeof(WcfService<,>).MakeGenericType(args);\r\n                    if (wcfType.IsAssignableFrom(t))\r\n                        return true;\r\n                }\r\n\r\n            if (t.BaseType != null)\r\n                return IsWcfService(t.BaseType) && !t.IsAbstract;\r\n\r\n            return false;\r\n        }\r\n```\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/hosting/NServiceBus.Hosting/Wcf/WcfManager.cs\r\n\r\nSo when Unobtrusive mode is enabled, the IsWcfService() method returns false as the first parameter (the message type) no longer implements IMessage and thus WCF hosting stops working.\r\n\r\nKind Regards,\r\nAndrew. \r\n'
887,'andreasohlund',"It shouldn't be required to assign Headers.Expire in IDefereMessages implementations\nCurrently Headers.Expire has to by assigned by every IDeferMessages implementation so that Sagas work properly.\r\n\r\nThere are two options to fix this problem:\r\n1. This header is assigned before it is passed to the IDefereMessages implementation\r\n2. Change Saga implementation so that it does not depend on this header.\r\n\r\nI think option 2 is the way to go. Sagas don't have to check again if the timeout has expired. It is the task of the defer mechanism to ensure that a message that has not expired is not delivered.\r\n\r\nHeaders.Expire is an implementation detail of the TimeoutManagerBasedDeferral."
886,'johnsimons','Passing an empty list to Bus.SendLocal(params object[] messages) causes "Sequence contains no elements" exception\n4.0.0-unstable2565\r\n\r\nProb should swallow this?? ie ignore if empty \r\n\r\n\tSystem.InvalidOperationException was unhandled by user code\r\n\t\tHResult=-2146233079\r\n\t\tMessage=Sequence contains no elements\r\n\t\tSource=System.Core\r\n\t\tStackTrace:\r\n\t\t\t\t at System.Linq.Enumerable.Min[TSource](IEnumerable`1 source)\r\n\t\t\t\t at System.Linq.Enumerable.Min[TSource,TResult](IEnumerable`1 source, Func`2 selector)\r\n\t\t\t\t at NServiceBus.Unicast.UnicastBus.MapTransportMessageFor(IEnumerable`1 rawMessages, TransportMessage result) in c:\\TeamCity\\buildAgent\\work\\36dd35accd0955b0\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 1412\r\n\t\t\t\t at NServiceBus.Unicast.UnicastBus.SendMessage(List`1 addresses, String correlationId, MessageIntentEnum messageIntent, Object[] messages) in c:\\TeamCity\\buildAgent\\work\\36dd35accd0955b0\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 697\r\n\t\t\t\t at NServiceBus.Unicast.UnicastBus.SendMessage(Address address, String correlationId, MessageIntentEnum messageIntent, Object[] messages) in c:\\TeamCity\\buildAgent\\work\\36dd35accd0955b0\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 637\r\n\t\t\t\t at NServiceBus.Unicast.UnicastBus.NServiceBus.IBus.Send(Address address, Object[] messages) in c:\\TeamCity\\buildAgent\\work\\36dd35accd0955b0\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 548\r\n\t\t\t\t at NServiceBus.Unicast.UnicastBus.NServiceBus.IBus.SendLocal(Object[] messages) in c:\\TeamCity\\buildAgent\\work\\36dd35accd0955b0\\src\\NServiceBus.Core\\Unicast\\UnicastBus.cs:line 516\r\n'
882,'johnsimons','Msmq queue creator is not using the /username to ACL the queue\nWe are assigning the passed in username here:\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/hosting/NServiceBus.Hosting.Windows/Installers/WindowsInstaller.cs#L67\r\n\r\nBut then we are not using that value anywhere!\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/Unicast/Queuing/Msmq/MsmqUtilities.cs#L26'
879,'andreasohlund','Action is executed immediately ignoring timeout\nThis line https://github.com/NServiceBus/NServiceBus/blob/develop/src/core/NServiceBus/Saga/Saga.cs#L157 states\r\n\r\n    /// <param name="timeoutMessage">The message to send after <paramref name="within"/> expires.</param>\r\n\r\nHowever tracing the logic through\r\n\r\n    saga.RequestTimeout<TTimeoutmessageType>(TimeSpan within, Action<TTimeoutmessageType> action)\r\n\r\ncalls\r\n\r\n    Bus.CreateInstance(action)\r\n\r\ncalls\r\n\r\n    MessageMapper.CreateInstance\r\n\r\nWhich execute the action immediately.\r\n\r\n        public T CreateInstance<T>(Action<T> action)\r\n        {\r\n            T result = CreateInstance<T>();\r\n\r\n            if (action != null)\r\n                action(result);\r\n\r\n            return result;\r\n        }\r\n \r\nAm i missing something?\r\n'
878,'johnsimons','Gateway with Ninject fails to start endpoint\nI have a server application that I\'m trying to configure using Ninject and I\'m running into an issue on startup.\r\n\r\nThe exception summary is the following:\r\n```\r\n2013-01-04 14:08:51,989 [1] FATAL NServiceBus.Hosting.GenericHost - Ninject.ActivationException: Error activating IRouteMessagesToEndpoints\r\nMore than one matching bindings are available.\r\nActivation path:\r\n  2) Injection of dependency IRouteMessagesToEndpoints into parameter endpointRouter of constructor of type GatewayReceiver\r\n  1) Request for GatewayReceiver\r\n```\r\n\r\nThis is what my EndpointConfig looks like:\r\n\r\n```c#\r\nnamespace Router\r\n{\r\n    public class EndpointConfig : IConfigureThisEndpoint, AsA_Server, IWantCustomInitialization, IWantCustomLogging\r\n    {\r\n        public void Init()\r\n        {\r\n            SetLoggingLibrary.Log4Net(log4net.Config.XmlConfigurator.Configure);\r\n\r\n            Configure.With().\r\n                NinjectBuilder().\r\n                XmlSerializer().\r\n                RijndaelEncryptionService().\r\n                MsmqSubscriptionStorage();\r\n        }\r\n    }\r\n}\r\n```\r\nAnd in my App.config, I have this:\r\n```xml\r\n<configSections>\r\n    <section name="MessageForwardingInCaseOfFaultConfig" type="NServiceBus.Config.MessageForwardingInCaseOfFaultConfig, NServiceBus.Core"/>\r\n    <section name="GatewayConfig" type="NServiceBus.Config.GatewayConfig, NServiceBus.Core"/>\r\n    <section name="RijndaelEncryptionServiceConfig" type="NServiceBus.Config.RijndaelEncryptionServiceConfig, NServiceBus.Core"/>\r\n    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>\r\n  </configSections>\r\n  \r\n  <GatewayConfig>\r\n    <Channels>\r\n      <Channel Address="http://localhost:25899/Router/" ChannelType="Http" Default="true"/>\r\n    </Channels>\r\n  </GatewayConfig>\r\n  \r\n...\r\n```\r\n\r\nFinally, this is the full exception stack trace logged:\r\n```\r\n2013-01-04 14:08:51,989 [1] FATAL NServiceBus.Hosting.GenericHost - Ninject.ActivationException: Error activating IRouteMessagesToEndpoints\r\nMore than one matching bindings are available.\r\nActivation path:\r\n  2) Injection of dependency IRouteMessagesToEndpoints into parameter endpointRouter of constructor of type GatewayReceiver\r\n  1) Request for GatewayReceiver\r\n\r\nSuggestions:\r\n  1) Ensure that you have defined a binding for IRouteMessagesToEndpoints only once.\r\n\r\n   at Ninject.KernelBase.Resolve(IRequest request) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\KernelBase.cs:line 380\r\n   at Ninject.Planning.Targets.Target`1.GetValue(Type service, IContext parent) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Planning\\Targets\\Target.cs:line 197\r\n   at Ninject.Planning.Targets.Target`1.ResolveWithin(IContext parent) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Planning\\Targets\\Target.cs:line 165\r\n   at Ninject.Activation.Providers.StandardProvider.GetValue(IContext context, ITarget target) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Activation\\Providers\\StandardProvider.cs:line 114\r\n   at Ninject.Activation.Providers.StandardProvider.<>c__DisplayClass4.<Create>b__2(ITarget target) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Activation\\Providers\\StandardProvider.cs:line 96\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Ninject.Activation.Providers.StandardProvider.Create(IContext context) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Activation\\Providers\\StandardProvider.cs:line 96\r\n   at Ninject.Activation.Context.Resolve() in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Activation\\Context.cs:line 157\r\n   at Ninject.KernelBase.<>c__DisplayClass10.<Resolve>b__c(IBinding binding) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\KernelBase.cs:line 386\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n   at Ninject.ResolutionExtensions.Get(IResolutionRoot root, Type service, IParameter[] parameters) in c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Syntax\\ResolutionExtensions.cs:line 151\r\n   at NServiceBus.ObjectBuilder.Ninject.NinjectObjectBuilder.Build(Type typeToBuild)\r\n   at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.NServiceBus.ObjectBuilder.IBuilder.Build[T]() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\impl\\ObjectBuilder.Common\\ObjectBuilder.Common\\CommonObjectBuilder.cs:line 141\r\n   at NServiceBus.GatewayBootstrapper.Run() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\gateway\\NServiceBus.Gateway\\Config\\GatewayBootstrapper.cs:line 15\r\n   at NServiceBus.Unicast.Config.StartupRunners.<Run>b__5(IWantToRunWhenTheBusStarts r) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast.Config\\StartupRunners.cs:line 23\r\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n   at NServiceBus.Unicast.Config.StartupRunners.<Run>b__4(Object obj, EventArgs ev) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast.Config\\StartupRunners.cs:line 22\r\n   at NServiceBus.Unicast.UnicastBus.NServiceBus.IStartableBus.Start(Action startupAction) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast\\UnicastBus.cs:line 839\r\n   at NServiceBus.Unicast.UnicastBus.NServiceBus.IStartableBus.Start() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\unicast\\NServiceBus.Unicast\\UnicastBus.cs:line 793\r\n   at NServiceBus.Hosting.GenericHost.Start() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting\\GenericHost.cs:line 32\r\n```'
875,'andreasohlund','IManageSubscriptions should not have a predicate\nThe Predicate for subscriptions is something that can be evaluated on the subscriber only. Therefore the logic can be implemented once for all transports.\r\n\r\nI suggest to extract the ingomming message mutator from MessageDrivenSubscriptionManager into an EventMessageFilter. In UnicastBus we do \r\n\r\n    SubscriptionManager.Subscribe(messageType, destination); \r\n    EventMessageFilter.AddCondition(messageType, condition);\r\n\r\nAlso the message filter seems to have a bug. Currently it allows multiple subscriptions of the same type with different conditions. The message will be processed if all the conditions are met. But it seems more natural to process the message when one or more conditions are met.'
874,'johnsimons','ConfigureRavenPersistence.WarnUserIfRavenDatabaseIsNotReachable fails on RavenDB 2.0\nCurrently running Raven 2.0 Stable\r\n\r\nThis code \r\n\r\n        private static void WarnUserIfRavenDatabaseIsNotReachable(IDocumentStore store)\r\n        {\r\n            try\r\n            {\r\n                store.Initialize();\r\n                store.DatabaseCommands.GetDatabaseNames(1);\r\n            }\r\n\r\ngives InvalidOperationException "The request \'/databases/\' can only be issued on the system database"\r\n\r\nStack\r\n\r\n \t\tNServiceBus.Core.dll!Raven.Client.Connection.HttpJsonRequest.HanldeErrors(System.Net.WebException e) Line 416 + 0x3c bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.HttpJsonRequest.ReadStringInternal(System.Func<System.Net.WebResponse> getResponse) Line 285 + 0xc bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.HttpJsonRequest.ReadResponseString() Line 195 + 0x40 bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.HttpJsonRequest.ReadResponseJson() Line 611 + 0x9 bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.ServerClient.ExecuteGetRequest.AnonymousMethod__6(string serverUrl) Line 147 + 0xa bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.ServerClient.TryOperation<Raven.Json.Linq.RavenJToken>(System.Func<string,Raven.Json.Linq.RavenJToken> operation, string operationUrl, bool avoidThrowing, out Raven.Json.Linq.RavenJToken result) Line 223 + 0x14 bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.ServerClient.ExecuteWithReplication<Raven.Json.Linq.RavenJToken>(string method, System.Func<string,Raven.Json.Linq.RavenJToken> operation) Line 193 + 0x43 bytes\tC#\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.ServerClient.ExecuteGetRequest(string requestUrl) Line 139 + 0x34 bytes\tUnknown\r\n\t\tNServiceBus.Core.dll!Raven.Client.Connection.ServerClient.GetDatabaseNames(int pageSize) Line 524 + 0x30 bytes\tC#\r\n\t\tNServiceBus.Core.dll!NServiceBus.ConfigureRavenPersistence.WarnUserIfRavenDatabaseIsNotReachable(Raven.Client.IDocumentStore store) Line 184 + 0x1a bytes\tC#\r\n\r\n\r\nOn another note that method is flawed. it effectively assumes any issue with the Db is a connectivity issue and gives the user a misleading message.'
869,'johnsimons','Deserialisation exception with ReturnToSource tool\n\r\nThere is an issue with the ReturnToSource tool. It gives the following message:\r\n\r\n    Could not return message to source queue. Reason: There is an error in XML document (28, 14).\r\n\r\nAfter investigation it fails at the following line: https://github.com/NServiceBus/NServiceBus/blob/master/src/utils/MsmqUtilities.cs#L380\r\n\r\nThe input on which it fails is the following:\r\n\r\n    <?xml version="1.0"?>\r\n    <ArrayOfHeaderInfo xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n      <HeaderInfo>\r\n        <Key>NServiceBus.ExceptionInfo.Message</Key>\r\n        <Value>\'&#x19;\', hexadecimal value 0x19, is an invalid character. Line 779, position 123.</Value>\r\n      </HeaderInfo>\r\n    </ArrayOfHeaderInfo>\r\n\r\nSo it seems to fail on the ampersand character which is strange as it seems pretty valid xml wise but the xml serializer fails. I reproduced this with the following simple code:\r\n\r\n    var ser = new XmlSerializer(typeof(HeaderInfo[]));\r\n    using (var s = File.OpenRead(@"data.xml"))\r\n    {\r\n    \tvar headerInfo = ser.Deserialize(s);\r\n    }\r\n\r\n'
868,'johnsimons','fix up comments in DateTimeExtensions\n'
867,'johnsimons','Return if error queue already set\nThis allows people to easily set the error queue in code'
866,'johnsimons','Invalid types are being picked up as message types\n[This code](https://github.com/NServiceBus/NServiceBus/blob/master/src/unicast/NServiceBus.Unicast.Config/ConfigUnicastBus.cs#L82) is registering a lot of types that are not valid message types.\r\nIt looks like is not using conventions to figure out what are considered message types and which ones are not!'
864,'johnsimons','Added .OnMessage<TMessage>(TMessage) to remove noise of forced message id during testing\n- Added NServiceBus.Testing.Tests project to solution\r\n- Fixed NServiceBus.Testing.Tests references and NUnit nuget package\r\n- Added implementation for Handler<T>.OnMessage(T) for simplicity + test case\r\n\r\nAfter messing around with pull requests, I finally made it :)\r\n** Rectified pull request for pull request #862 and #863 (on develop branch) **'
861,'johnsimons','XmlSerializer / JsonSerializer dontWrapSingleMessages : true when no EnclosedMessageType is available fails\nThe current ActiveMQ implementation needs dontWrapSingleMessages to be set to true. This serializes a message like the following (example XML):\r\n\r\n       <?xml version=\\"1.0\\"?><UpdatePrice><ProductId>23</ProductId></UpdatePrice>\r\n\r\nThis is fine as long as messages are only produced by NSB endpoints because they set the enclosed message type header. \r\n\r\nBut for example when you use the gateway samples website a JSONP request is sent to the gateway. If you send:\r\n\r\n       <?xml version=\\"1.0\\"?><UpdatePrice><ProductId>23</ProductId></UpdatePrice>\r\n\r\nwith JSONP to the gateway the headquarter is not able to deserialize the message. Their are two possibilities to overcome this issue:\r\n\r\n1. The JSONP request MUST set the enclosed message type header\r\n2. The XmlSerializer also includes the namespace definition when serializing a single message. \r\n\r\nFor option 2 this would mean single messages like the example above get serialized like:\r\n\r\n       <?xml version=\\"1.0\\"?><UpdatePrice xmlns=\\"http://tempuri.net/Headquarter.Messages\\"><ProductId>23</ProductId></UpdatePrice>\r\n\r\nFor example this test currently fails:\r\n\r\n        [Test]\r\n        public void Should_deserialize_a_single_message_without_providing_typename_externally()\r\n        {\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                var writer = new StreamWriter(stream);\r\n                writer.WriteLine("<MessageWithDouble><Double>23.4</Double></MessageWithDouble>");\r\n                writer.Flush();\r\n                stream.Position = 0;\r\n\r\n                var msgArray = SerializerFactory.Create(typeof(MessageWithDouble)).Deserialize(stream);\r\n\r\n                Assert.AreEqual(typeof(MessageWithDouble), msgArray[0].GetType());\r\n            }\r\n        }\r\n\r\nBut this one works:\r\n\r\n        [Test]\r\n        public void Should_deserialize_a_single_message_without_providing_typename_externally()\r\n        {\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                var writer = new StreamWriter(stream);\r\n                writer.WriteLine("<MessageWithDouble xmlns=\\"http://tempuri.net/NServiceBus.Serializers.XML.Test\\"><Double>23.4</Double></MessageWithDouble>");\r\n                writer.Flush();\r\n                stream.Position = 0;\r\n\r\n                var msgArray = SerializerFactory.Create(typeof(MessageWithDouble)).Deserialize(stream);\r\n\r\n                Assert.AreEqual(typeof(MessageWithDouble), msgArray[0].GetType());\r\n            }\r\n        }\r\n\r\n@andreasohlund I prefer option 2 but as you designed that you might have another opinion.\r\n\r\nBy the way I haven\'t thought that through for the JSON Serializer.'
860,'johnsimons',"Improve exception handling\nHi,\r\nIt will be great I could you improve exception handling in NSB. When message is forwarding to error queue there is logged error but without exception so my custom logger target can't save exception. On the other hand message in error queue contains exception details but without inner exception so when I have eg. NHibernateADOException I can't read message from database because it was in inner exception. It will be great to have Exception.ToString instead of StackTrace in error message"
859,'andreasohlund','Create a WebSphereMQ Transport\n'
857,'andreasohlund','Gateway is broken in v4\nThe [refactoring of IdForCorrelation](https://github.com/NServiceBus/NServiceBus/commit/dbb0966e173a123ece6957d43b94c16219d6dcb3) broke the gateway.\r\n\r\nIt looks like the correlation id is being incorrectly sent across the gateway'
856,'johnsimons','Standardise Transport definitions namespace \nThe new implementations of ` ITransportDefinition` are all in different namspaces:\r\n* NServiceBus.Transports.RabbitMQ\r\n* NserviceBus.Msmq\r\n* NServiceBus.ActiveMQ.ActiveMQ\r\n* NServiceBus.SqlServer\r\n\r\nI think all  implementations of ` ITransportDefinition`  should be in the same namespace ?\r\n\r\nAnd if we want to make them easily discoverable then we should put them in `NServiceBus` namespace ?'
851,'johnsimons',"HandleCurrentMessageLater on workers causes workers to send extra ready messages\nHi!\r\n\r\nUnfortunately we've found another bug with the distributor.\r\n\r\nWhen you use HandleCurrentMessageLater() in a message handler on a worker, a ready message is sent back to the distributor when the message handler completes, even though the message is just put back on the local queue on the worker. This makes the storage on the distributor grow erroneously by 1 for every time you do a HandleCurrentMessageLater(). This can generate a lot of messages on the distributors control and/or storage queues quickly if you have a single message on your queue that you need to handle at a later time.\r\n\r\nThis is related to issue #571 and #806 as functionality working in a non-distributor scenario suddenly breaks when you scale out. Maybe a code review of all functionality in a distributor scenario is called for? \r\n\r\nHow to reproduce:\r\n\r\nExtend the ScaleOut sample by changing ProcessOrderCommandHandler to do a HandleCurrentMessageLater().\r\nStart solution and send an order.\r\n\r\nExpected behaviour:\r\n\r\nWorker doing HandleCurrentMessageLater() should EITHER \r\n\r\na) put the message back on the distributor input queue AND send a ready message to the distributor control queue\r\nOR \r\nb) put the message back on the local queue and NOT send ready messages back to the distributor.\r\n\r\nObserved behaviour:\r\n\r\nMessage is put on local queue AND ready message is sent to distributor.control order.handler.distributor.storage increases unbounded as quickly as the infrastructure can write the message back on the local queue and read it again.\r\n\r\nTested on 3.3.3"
850,'andreasohlund','Turn off the TimeoutManager, Notification and SLR for the As_aClient role\nIt makes no sense to have them turned on for clients'
848,'johnsimons','Better error message if RabbitMQ connection string is missing\nWe should throw a nice error message if the user forgets to supply a connection string to configure rabbitMQ.\r\n\r\nSee https://github.com/NServiceBus/NServiceBus/blob/develop/src/NServiceBus.Core/ConfigureSqlServerTransport.cs#L44 for a good exception.'
847,'johnsimons','Update nugets to include a upper bound version\nAll nugets that dependant on third party assemblies should include an upper bound version number.\r\n\r\nSee http://docs.nuget.org/docs/reference/versioning for more info.\r\n\r\nAs an example, update [NServiceBus.Autofac.nuspec](https://github.com/NServiceBus/NServiceBus/blob/master/NuGet/NServiceBus.Autofac/NServiceBus.Autofac.nuspec) and change:\r\n`<dependency id="Autofac" version="2.6.1.841" />`\r\nto\r\n`<dependency id="Autofac" version="[2.6.1.841,3)" />`\r\n'
836,'johnsimons','Throw a better exception for Indexed properties on messages\nRelates to #832.\r\n\r\nIndexed properties were never meant to be supported on messages.\r\nWe should throw a nicer and helpful error message in case a message contains indexed properties.\r\n\r\n'
835,'johnsimons','Standardise Address configuration\nCurrently we have different "connection strings"  keys and `ConfigurationSections` to specify transport and persistence addresses.\r\n\r\nThe following are currently used as keys:\r\n* NServiceBus.RabbitMQ -> the RabbitMQ transport address\r\n* NServiceBus/Persistence ->this one is used by NHibernate persistence + the sql transport\r\n* NServiceBus.Persistence -> this one is used by Raven persistence\r\n* `<ActiveMqTransportConfig BrokerUri=""/>` -> this one uses a `ConfigurationSection` and is used by ActiveMQ\r\n\r\nWe should standardise all these "addresses" in one location.\r\n\r\nThe proposed solution is to put all these in the ConnectionStrings section using the following key names :\r\n* NServiceBus/Persistence  (we only need one since we only support one persistence type at runtime)\r\n* NServiceBus/Transport (we only need one since we only support one transport at runtime)\r\n\r\n'
833,'andreasohlund','Make message deferal pluggable so that transports can override if needed\nWe need this so that RabbitMq can override and use a more native way of doing it:\r\n\r\nhttp://www.javacodegeeks.com/2012/04/rabbitmq-scheduled-message-delivery.html\r\n\r\nthis probably applies to both ActiveMq and windows/Azure Service Bus as well\r\n\r\nIDeferMessages will likely be the abstraction'
830,'johnsimons','Create a RabbitMQ nuget package\n'
829,'johnsimons',"DataBus bootstrapper too eager to fail on serialization\nThe DataBus config bootstrapper [deliberately fails](https://github.com/NServiceBus/NServiceBus/blob/master/src/databus/NServiceBus.Databus/Config/Bootstrapper.cs#L22) if any DataBus properties are not marked as serializable and a debugger is attached. This doesn't make sense if the `IDataBusSerializer` implementation doesn't require them to be. This means our service bus works fine, but can't be debugged.\r\n\r\n Please remove the eager failure or move it to something like `IDataBusSerializer.Validate(property)`."
822,'johnsimons','/endpointConfigurationType specified via cmd line is not added to service\nWhen we install a service using eg:\r\n`NServiceBus.Host.exe /install /endpointConfigurationType:"Server.EndpointConfig, Server"\'\r\nThe endpointConfigurationType if not included in the service path to execute:\r\n![Capture](https://f.cloud.github.com/assets/122651/9985/980c8554-44db-11e2-806f-b28743ecbf5b.PNG)\r\n\r\nMaking this setting useless!'
821,'andreasohlund','Create a RabbitMQ transport\nAdd support for using RabbitMQ as the underlying transport'
819,'johnsimons','Check for XmlIgnore *before* throwing that a type is not allowed\n'
817,'andreasohlund','Introduce a UsingTransport<T> profile to make transport selection more explicit\n'
816,'johnsimons','TimeoutStorage is configured for sendonly endpoints\nThe timeout manager should not be used if the endpoint is sendonly.\r\n\r\nOn line https://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/Timeout/Hosting/Windows/Config/TimeoutManagerDefaults.cs#L12\r\n\r\nwe need to check if the endpoint is sendonly as well'
815,'andreasohlund','SubscriptionStorage should not query for the "__impl" type.\nIn the GetSubscriberAddressesForMessage method of the default SubscriptionStorage (NServiceBus.Unicast.Subscriptions.Raven.RavenSubscriptionStorage but it might be the same for other ISubscriptionStorage implementations), the logic currently also queries the storage for subscription to the "__impl" type. Clearly this should never happen - and it produces some unnecessary overhead. You could even argue that it should never query for any concrete types but just for interfaces - but that might break it for someone not using interfaces for events...\r\n\r\n \r\n \r\n'
812,'johnsimons','ConfigureComponent marked as obsolete with no help text\nSo ConfigureComponent has been maked as obsolete\r\n\r\nso this\r\n\r\n    config.Configurer.ConfigureComponent<MessageSerializer>(ComponentCallModelEnum.Singleton);\r\n\r\nshould now be this\r\n    \r\n    config.Configurer.ConfigureComponent<MessageSerializer>(DependencyLifecycle.SingleInstance);\r\n\r\nThis is fine but shouldnt it go through the Obsolete attribute process Warn>Error>Remove over multiple versions. \r\n\r\nAlso the attribute is currently\r\n\r\n    [Obsolete("Will be removed in version \'4.0\'.", true)]\r\n\r\nWhen it should be something like \r\n\r\n    [Obsolete("Will be removed in version \'4.0\'. Please use ConfigureComponent<T>(DependencyLifecycle) instead.", true)]\r\n'
811,'johnsimons','RunTimeoutManager removed when it should be marked as obsolete\nSo as I understand it timeout manager is on by default as of 3.4 so `.RunTimeoutManager` is redundant.\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/issues/317\r\n\r\nThis is fine but shouldnt it go through the Obsolete attribute process Warn>Error>Remove\r\n\r\nIf you have to remove it in 3.4 can u please have a Obsolete with an error and include information on "Why it is redundant"\r\n\r\n'
809,'johnsimons','SendOnly test scenario is broken in 3.4 \nSo based on this sample\r\nhttp://nservicebus.com/OnewaySendonlyendpoints.aspx\r\n\r\nI have this code \r\n\r\n        var bus = Configure.With()\r\n             .DefineEndpointName("fakeNameForTests")\r\n               .DefaultBuilder()\r\n               .JsonSerializer()\r\n               .MsmqTransport()\r\n               .UnicastBus()\r\n               .SendOnly();\r\n\r\n        bus.Send("Audit", new TestMessage { Id = Guid.NewGuid() });\r\n\r\nWhich used to work in 3.3.2. Now in 3.4 it gives\r\n\r\n\t\tTest method MessageSender.Install threw exception: \r\n\t\tSystem.InvalidOperationException: No version of the endpoint could not be retrieved using the default convention, please specify your own convention using Configure.DefineEndpointVersionRetriever()\r\n\t\t\t\tat NServiceBus.Config.Conventions.EndpointHelper.GetEndpointVersion() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Config\\Conventions\\EndpointHelper.cs: line 56\r\n\t\t\t at NServiceBus.Configure.<.cctor>b__1() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Configure.cs: line 447\r\n\t\t\t at NServiceBus.Persistence.Raven.RavenPersistenceConstants.get_DefaultResourceManagerId() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Persistence\\Raven\\RavenPersistenceConstants.cs: line 52\r\n\t\t\t at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure\xa0config) in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\ConfigureRavenPersistence.cs: line 51\r\n\t\t\t at NServiceBus.ConfigureTimeoutManager.UseRavenTimeoutPersister(Configure\xa0config) in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\ConfigureTimeoutManager.cs: line 33\r\n\t\t\t at NServiceBus.Timeout.Hosting.Windows.Config.TimeoutManagerDefaults.<.cctor>b__0() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Timeout\\Hosting\\Windows\\Config\\TimeoutManagerDefaults.cs: line 8\r\n\t\t\t at NServiceBus.Timeout.Hosting.Windows.Config.TimeoutManagerDefaults.Run() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Timeout\\Hosting\\Windows\\Config\\TimeoutManagerDefaults.cs: line 14\r\n\t\t\t at NServiceBus.Configure.<Initialize>b__f(Type\xa0t) in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Configure.cs: line 313\r\n\t\t\t at System.Collections.Generic.List`1.ForEach(Action`1\xa0action)\r\n\t\t\t at NServiceBus.Configure.ForAllTypes(Action`1\xa0action) in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Configure.cs: line 335\r\n\t\t\t at NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Configure.cs: line 310\r\n\t\t\t at NServiceBus.Config.Endpoint.SendOnly(Configure\xa0config) in c:\\TeamCity\\buildAgent\\work\\a17072a5c5743007\\src\\NServiceBus.Core\\Config\\Endpoint.cs: line 32'
806,'johnsimons','SendLocal on workers causes workers to send extra ready messages\nWhen you use SendLocal on a worker, a ready message is sent back to the distributor when the message is handled. This makes the storage on the distributor grow erroneously by 1 for every time you do a SendLocal on a worker. \n\nThis is a "duplicate" of issue #571, just for SendLocal instead of SLR.\n\nHow to reproduce:\n\n1. Extend the ScaleOut sample by extending the ProcessOrderCommandHAndler to do a SendLocal(SomeCommand).\n2. Add a handler for SomeCommand.\n3. Start solution and send some orders.\n\nExpected behaviour:\n* Worker doing send local should NOT send ready messages back to the distributor when handling message it sent to itself with SendLocal and thus NOT increase the number of messages in order.handler.distributor.storage above 2.(which is the number of workers)\n\nObserved behaviour:\n* order.handler.distributor.storage increases unbounded by one every time you send an order.\n\nTested on 3.3.2\n'
805,'johnsimons','SQL Transport configuration fluent API\nWe should support both:\r\n* Specify connectionstring via Func\r\n* Specify ConnectionStringName\r\n\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/ConfigureSqlServerTransport.cs#L23'
804,'johnsimons','SqlServerTransportConfig is redundant\nThe sql transport should read its connectionstring from the prescribed [connectionString section](http://msdn.microsoft.com/en-us/library/bf7sd233(v=vs.100).aspx) instead of creating a new section `SqlServerTransportConfig`\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/Config/SqlServerTransportConfig.cs'
803,'johnsimons','Adjust the message on our license expired pop-up to be more gentle\nThe license popup:\r\n![Capture.PNG](https://f.cloud.github.com/assets/122651/2706/d6edd7de-424f-11e2-8475-b3345b7e115d.PNG)\r\n\r\nWe need to be able to answer the following questions:\r\n* Does this mean, I cannot continue working until I get a license?\r\n* But then I see the ignore option? Assuming, ignore will dismiss the dialog and run the endpoint in 1msg/sec throttled mode? \r\n\r\nWould be nice to know what the consequences are : ) \r\nThis dialog gives me the "Uh oh, you can\'t run this software until you\'ve got your license" instead of "Hey, seems like you have don\'t have your license squared away, until then your will be restricted to\r\nprocessing 1msg/sec"'
802,'andreasohlund','Added purging support for ActiveMQ\n'
801,'andreasohlund','Invalid usage of retrieving the main transport\nhttps://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/Impersonation/ImpersonationManager.cs#L20\r\n\r\nThe above will retrieve a new  `ITransport`!'
799,'johnsimons','ObjectDisposedExceptions are thrown during operations\nThe Rhino licencing component seems to be doing some async licensing check, and if you are running in the debugger and have break-on-CLR-exceptions turned on, it occasionally will break with this stack:\r\n\r\nSystem.dll!System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP) + 0x112 bytes\t\r\n \tNServiceBus.Core.dll!Rhino.Licensing.SntpClient.EndReceive(System.IAsyncResult ar) + 0x84 bytes\tUnknown\r\n \tSystem.dll!System.Net.LazyAsyncResult.Complete(System.IntPtr userToken) + 0xc8 bytes\t\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) + 0x285 bytes\t\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) + 0x9 bytes\t\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) + 0x57 bytes\t\r\n \tSystem.dll!System.Net.ContextAwareResult.Complete(System.IntPtr userToken) + 0xc2 bytes\t\r\n \tSystem.dll!System.Net.Sockets.BaseOverlappedAsyncResult.CompletionPortCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* nativeOverlapped) + 0x121 bytes\t\r\n \tmscorlib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP) + 0x96 bytes\t\r\n\r\nThis does not take down the process, but is not a good sign.\r\n\r\n### To verify\r\n\r\nStart an endpoint, use Fiddler to check that no SNTP requests are being issued by the endpoint'
798,'johnsimons','Make make the integration profile use Raven as subscription storage\n'
797,'johnsimons','Raven persistence is always configured by the default production profile\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/hosting/NServiceBus.Hosting.Windows/Profiles/Handlers/ProductionProfileHandler.cs#L13\r\n\r\nWe should refactor this to detect if the user has chosen anothe persitence tech\r\n\r\nAlso check if sagas are enabled before defaulting the raven saga persister\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/hosting/NServiceBus.Hosting.Windows/Profiles/Handlers/ProductionProfileHandler.cs#L15 '
795,'johnsimons','init.ps1 causing significant lag when solution is opened in VS\n** The following was originally posted to the yahoo discussion group (http://tech.groups.yahoo.com/group/nservicebus/message/17185), but copied here by request.\n\nWe recently upgraded our VS solution to use NServiceBus 3 and we installed it via the nuget package. And ever since, when I open visual studio it hangs before finally popping up an NServiceBus web site with some red x\'s. I discovered this behavior is in the NServiceBus nuget package in the init.ps1 script. And my simple hack to restore my visual studio load time was just to rename this file...\n\nI think this init.ps1 file is a terrible idea and I\'d like to explain why I think setting up NSB should be opt in, and not run automatically when you open a solution file!\n\n#1: Not every member of the team needs to have NServiceBus configured locally. In order to make it very easy for devs to get started with a project, we mock out most services by default. Allowing devs to start with the bare minimum of infrastructure possible, and turn on only the pieces of the application they might actually be working on. The init.ps1 is making the exact opposite assumption, that every dev MUST have NServiceBus fully configured. I don\'t think this decision should be up to a NuGet package!\n\n#2: It\'s failing. I don\'t know why, but it has failed to install Msmq, DTC, and RavenDB (maybe because my VS isn\'t running as admin?). Whatever the cause, I don\'t care (yet) because of #1. The result of it failing is that it fails EVERY TIME I open the solution causing significant lag. \n\n#3: Running a script that could take a noticeable amount when a VS solution opens just doesn\'t seem like a good idea.\n\nFinally, it looks like there is a way to disable this script by setting the HKCU:SOFTWARE\\NServiceBus\\DontCheckMachineSetup registry key. Obviously I found it significantly easier to to just rename init.ps1 in the packages folder than to set a *registry* key!\n\nI\'d much rather see this script exposed through the nuget console and not run automatically in init.ps1.\n\nThe version is NServiceBus 3.3.0.\nIn answer to the request here: http://tech.groups.yahoo.com/group/nservicebus/message/17188\nThe install-* commandlets all fail immediately with "You need to run this command with administrative rights."  So they are not the cause of the slow down.  Perhaps the cause is in $dte.ExecuteCommand(...)?\n\nWhich reminds me to mention that even if this wasn\'t slow, I would absolutely not want a webpage to open up in VS every time I opened my solution...  I think you can understand how annoying that is.\n\nThanks,\nKevin'
790,'johnsimons','Poco IAmStartedByMessages fails to start a saga\nIf you use IAmStartedByMessages with a poco object (no IMessage, ICommand etc) the saga does not start. \n\nTo replicate \n\n * Go to the timeout manager sample \n * change it to use   JsonSerializer\n * Remove `:IMessage` from `StartSagaMessage` \n * Set a breakpoint in `public void Handle(StartSagaMessage message)`\n * Then run and send the message. \n\nInstead of hitting the breakpoint you will get the warning \n\n    Could not find a saga for the message type MyServer.Saga.StartSagaMessage with id f4f99d02-13dd-4ad9-a042-088bc1c279ff\\10463. Going to invoke SagaNotFoundHandlers.\n\nEither this scenario should be supported or NSB should through an exception.'
789,'andreasohlund','Create nuget package for ActiveMQ\n'
788,'johnsimons','Nuget package for NServiceBus.Host32 sets incorrect exe in project settings\nFrom Package Manager Console, \ninstall-package nservicebus.host32 for a newly generated class library project\nHit f5\n\nThe Start External Program points to NServiceBus.Host.exe instead of the 32 bit version.\n\n\n\n'
785,'johnsimons','On a critical error, shut down the bus\nThe default [onCriticalErrorAction ](https://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/ConfigureCriticalErrorAction.cs#L10) should shut down the bus in a graceful way.\r\n\r\nThis should also shut down all the satellites.\r\n\r\nWe need to expose a way to shut down the bus.'
784,'johnsimons','Do not post append "(SideBySide)" to the display service name\nWe shouldn\'t post append "(SideBySide)" to the display service name when we are performing a sidebyside install.\r\nBoth the service and display names already contain the semver making them distinct.'
780,'andreasohlund','Concolidate thread backoff (SleepTimeBetweenPolls) into the PollingDequeueStrategy\nToday we sleep in both Azure and Sql implementations we should move this into:\n\nhttps://github.com/NServiceBus/NServiceBus/blob/3.4.0/src/NServiceBus.Core/Unicast/Transport/Transactional/DequeueStrategies/PollingDequeueStrategy.cs#L63\n\n'
776,'johnsimons','Add AttributeUsageAttribute to UniqueAttribute class\nBased on the outcome of  #772, we need to add:\r\n` [AttributeUsage(AttributeTargets.???, Inherited = false)]`\r\nto UniqueAttribute class.\r\n'
774,'andreasohlund','Nuget install.ps1 include start program multiple times\nThe nuget [install.ps1](https://github.com/NServiceBus/NServiceBus/blob/master/NuGet/NServiceBus.Host/tools/install.ps1#L8) adds:\r\n```xml\r\n<PropertyGroup>\r\n    <StartAction>Program</StartAction>\r\n    <StartProgram>$(ProjectDir)$(OutputPath)NServiceBus.Host.exe</StartProgram>\r\n</PropertyGroup>\r\n```\r\neven if user already has this defined!\r\n\r\nMaybe we should try to use the DTE to add this?\r\n'
773,'johnsimons','Turn on Raven compression by default\nAnd add a way to Disable it:\r\n`.DisableRavenRequestCompression()` '
772,'johnsimons','Sagas ConfigureMapping should support public fields\n`ConfigureMapping<MyMessage>(s => s.TransactionId, m => m.TransactionId);`\r\n\r\nAt compile-time I\'ve no negative feedback. :smile: \r\n"MyMessage" is a type defined like this:\r\n```C#\r\npublic class MyMessage : IMessage\r\n{\r\n    ...\r\n    public Guid TransactionId;\r\n    ...\r\n}\r\n```\r\nRunning this saga produces the following error:\r\n`System.ArgumentException: Member is not a property`\r\n\r\nSo, I\'ve tried to investigate through the codebase and I\'ve found that within ConfigureHowToFindSagaWithMessageDispatcher there\'s the implementation of "IConfigureHowToFindSagaWithMessage.ConfigureMapping<TSagaEntity, TMessage>" that explicitly lookup for a property:\r\n```c#\r\nvoid IConfigureHowToFindSagaWithMessage.ConfigureMapping<TSagaEntity, TMessage>(Expression<Func<TSagaEntity, object>> sagaEntityProperty, Expression<Func<TMessage, object>> messageProperty)\r\n{\r\n    var sagaProp = Reflect<TSagaEntity>.GetProperty(sagaEntityProperty, true);\r\n    var messageProp = Reflect<TMessage>.GetProperty(messageProperty, false);\r\n    ...\r\n}\r\n```'
771,'johnsimons',"Incorrect MSMQ perms cause high CPU in web application\nI've seen multiple examples of this problem now on Stack Overflow: [Example 1][1] and [Example 2][2]\n\nEssentially you create a webapp, and it runs once, and the queues get created for it, but then you monkey around with IIS and change the account the webapp runs under.\n\nThe result is a tight loop causing max CPU:\n\n1. Try to get a message from the queue\n2. Don't have proper permissions to get a message from the queue\n3. Wash, rinse, repeat.\n\nI think the solution for this should be twofold:\n\n1. Raise the issue visibly on the website. Too frequently the problem isn't observed by browsing unless you specifically trigger some Bus-dependent code. People frequently don't have the logging output from a web-hosted Bus to tell them there's a problem.\n2. Introduce some sleeps so that while the problem is being fixed, the processor at least is not maxed out. Maybe some sort of back-off system - after 10 successive failures start sleeping 10ms, then after 100 go to 100ms, or whatever - something like how RavenDB handles failovers. Or maybe this isn't a problem that can possibly be transient and there's no way it can be fully corrected save for a full app pool recycle, and in that case it should just blow up on bus initialization and stay blown up.\n\n[1]: http://stackoverflow.com/questions/13608560/mqsvc-exe-pegs-cpu-at-full-usage-when-deploying-nservicebus-to-production/13611841#13611841\n[2]: http://stackoverflow.com/questions/11848342/high-cpu-usage-with-nservicebus-when-iis-hosted-asp-net-and-wcf/11938432#11938432"
768,'johnsimons','Autosubscribe doesnt work when using namespace in mapping\nTo reproduce define the subscribedevents using the namespace mapping. This causes no autosubscription message to be sent'
767,'johnsimons','Conventions no longer works if set in IWantToRunBeforeConfiguration\nSome change in 3.4.0 has broken the support from setting the message conventions from a class implementing IWantToRunBeforeConfiguration. To repro modify the unobtrusive sample to set the conventions is a class implementing IWantToRunBeforeConfiguration instead of doing it in the endpoint config'
765,'johnsimons','Upgrade the Castle Windsor container to the latest 3.1 release\n'
762,'johnsimons','Should be Import-Module\nhere http://nservicebus.com/powershell.aspx\n \n    ImportModule .\\NServiceBus.Core.dll\n\nshould be \n\n    Import-Module .\\NServiceBus.Core.dll'
759,'johnsimons','Add hook to specify number of working threads per satellite\nWe need to give more control to customise satellites to other hosts like Azure.\r\n\r\nAlso have a way to set the default. Windows defaults to "Same a main transport" but Azure should default to 1'
758,'johnsimons','Add HKLM for scanning of license\nRelates to #672\r\n\r\nBased on some demand for it in mailing list, see http://tech.groups.yahoo.com/group/nservicebus/message/16796'
757,'andreasohlund','"Unable to delete file" error being thrown in RavenDB when trying to start multiple endpoints at once\nWhen I try to start multiple (between 5 and 10) NServiceBus hosts at one time, I receive the error shown below in some endpoints:\n\n> 2012-11-20 13:32:05,044 [1] FATAL - (null) - NServiceBus.Hosting.GenericHost - System.AggregateException: One or more errors occurred. ---> System.IO.IsolatedStorage.IsolatedStorageException: Unable to delete file.\n   at System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(String file)\n   at Raven.Client.Document.DTC.PendingTransactionRecovery.Execute(IDatabaseCommands commands) in c:\\Work\\ravendb-1.0\\Raven.Client.Lightweight\\Document\\DTC\\PendingTransactionRecovery.cs:line 73\n   --- End of inner exception stack trace ---\n   at Raven.Client.Document.DTC.PendingTransactionRecovery.Execute(IDatabaseCommands commands) in c:\\Work\\ravendb-1.0\\Raven.Client.Lightweight\\Document\\DTC\\PendingTransactionRecovery.cs:line 81\n   at Raven.Client.Document.DocumentStore.RecoverPendingTransactions() in c:\\Work\\ravendb-1.0\\Raven.Client.Lightweight\\Document\\DocumentStore.cs:line 410\n   at Raven.Client.Document.DocumentStore.Initialize() in c:\\Work\\ravendb-1.0\\Raven.Client.Lightweight\\Document\\DocumentStore.cs:line 402\n   at NServiceBus.ConfigureRavenPersistence.EnsureDatabaseExists(DocumentStore store) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\impl\\Persistence\\RavenPersistence\\NServiceBus.Persistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 186\n   at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure config, IDocumentStore store) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\impl\\Persistence\\RavenPersistence\\NServiceBus.Persistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 150\n   at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure config) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\impl\\Persistence\\RavenPersistence\\NServiceBus.Persistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 54\n   at NServiceBus.Hosting.Windows.Profiles.Handlers.ProductionProfileHandler.NServiceBus.Hosting.Profiles.IHandleProfile.ProfileActivated() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting.Windows\\Profiles\\Handlers\\ProductionProfileHandler.cs:line 13\n   at NServiceBus.Hosting.Profiles.ProfileManager.<ActivateProfileHandlers>b__1c(IHandleProfile hp) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting\\Profiles\\ProfileManager.cs:line 143\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Hosting.Profiles.ProfileManager.ActivateProfileHandlers() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting\\Profiles\\ProfileManager.cs:line 144\n   at NServiceBus.Hosting.Profiles.ProfileActivator.Run() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting\\Profiles\\ProfileActivator.cs:line 20\n   at NServiceBus.Configure.<Initialize>b__c(Type t) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\config\\NServiceBus.Config\\Configure.cs:line 296\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Configure.ForAllTypes[T](Action`1 action) in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\config\\NServiceBus.Config\\Configure.cs:line 317\n   at NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\config\\NServiceBus.Config\\Configure.cs:line 299\n   at NServiceBus.Configure.CreateBus() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\config\\NServiceBus.Config\\Configure.cs:line 263\n   at NServiceBus.Hosting.GenericHost.Start() in c:\\TeamCity\\buildAgent\\work\\nsb.master_1\\src\\hosting\\NServiceBus.Hosting\\GenericHost.cs:line 30\n---> (Inner Exception #0) System.IO.IsolatedStorage.IsolatedStorageException: Unable to delete file.\n   at System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(String file)\n   at Raven.Client.Document.DTC.PendingTransactionRecovery.Execute(IDatabaseCommands commands) in c:\\Work\\ravendb-1.0\\Raven.Client.Lightweight\\Document\\DTC\\PendingTransactionRecovery.cs:line 73<---\n\nI am starting the endpoints by debugging inside Visual Studio 2012. The error does not seem to occur if I just start a single endpoint at a time.\n\nFrom looking at the stack trace, the problem appears to be related to pending/incomple DTC transactions. Here is an excerpt of the log file from RavenDB that seems like it is relevant:\n> 2012-11-20 13:39:21.8550,Raven.Storage.Esent.StorageActions.DocumentStorageActions,Debug,"Attachment with key \'transactions/recoveryInformation/b89a4cd0-0906-4001-8232-9ec994f4f0b9\' was not found, and considered deleted",\n2012-11-20 13:39:21.8550,Raven.Database.Indexing.WorkContext,Debug,Incremented work counter to 2 because: ROLLBACK b89a4cd0-0906-4001-8232-9ec994f4f0b9,\n2012-11-20 13:39:21.8550,Raven.Database.Indexing.WorkContext,Debug,"No work was found, workerWorkCounter: 2, for: IndexingExecuter, will wait for additional work",\n2012-11-20 13:39:21.8670,Raven.Database.Indexing.WorkContext,Debug,"No work was found, workerWorkCounter: 2, for: ReducingExecuter, will wait for additional work",\n2012-11-20 13:39:21.8670,Raven.Database.Server.HttpServer,Debug,Request #  34: POST    -    19 ms - MyHandler - 200 - /transaction/rollback?tx=b89a4cd0-0906-4001-8232-9ec994f4f0b9,\n\nNote the last entry indicates that a rollback is being attempted on the "MyHandler" database. "MyHandler" is the name of the endpoint that received the "unable to delete file" exception.\n'
756,'andreasohlund','Introduce a throughput performance counter\nAdd a counter that displays the current throughput in msg/s for each transport.\r\n\r\nRelated to #608'
755,'johnsimons','Raven unit of work is not disposing of session in case of exception\nSimple saga that correlates that it got both CommandA and CommandB with a common orderId, a guid. I concurrently send in CommandA and CommandB(with the same guid in both messages). Having multiple worker threads enabled this leads to 2 threads each trying to create the saga. One of them gets a Raven.Abstractions.Exceptions.ConcurrencyException because of the optimistic locking. No problem, NServiceBus automatically retries the victim and the saga completes correctly and is removed from RavenDB as it should.\r\n\r\nNow the interesting part. I repeat the scenario by generating new tuples of CommandA and CommandB(with new matching guids). Same thing happens, except that regularly the saga data documents for some of the sagas are not removed from RavenDB. Or more precisely, they are actually removed on saga completion but reappear(!) when later sagas complete. \r\n\r\nSay I have 3 sagas: \r\nSaga1(CommandA1, CommandB1, OrderId=guid1). It completes at time T1.\r\nSaga2(CommandA2, CommandB2, OrderId=guid2). It completes at time T2.\r\nSaga3(CommandA3, CommandB3, OrderId=guid3). It completes at time T3.\r\n\r\nSaga1 completes and is removed. Saga2 completes and is removed. At this point, NO saga data documents for T1 and T2 are in the data store. Then Saga3 completes, but as the transaction that removes saga3 commits, a copy of Saga1 reappears in the raven store. This new copy of Saga1 gets a modified timestamp of T3, which is really weird considering saga1 completed at T1. I\'ve looked at the RavenDB logs and I\'m pretty sure I\'m seeing a PUT of Saga1 in the very same transaction that DELETES Saga3. \r\n\r\nSetting worker threads to just 1 removes the problem. All sagas complete and everything is removed from RavenDB.\r\n\r\nI\'m "pretty sure" I\'m not doing anything unsupported here. Shared saga storage is a must for any scale out scenario, so anybody have an idea on what\'s going on here? Raven session not cleared before reuse of a worker thread?\r\n\r\n```c#\r\npublic interface CommandA : ICommand\r\n{\r\nGuid OrderId { get; set; }\r\n}\r\n\r\npublic interface CommandB: ICommand\r\n{\r\nGuid OrderId { get; set; }\r\n}\r\n\r\npublic class SagaData : IContainSagaData\r\n{\r\npublic Guid Id { get; set; }\r\npublic string Originator { get; set; }\r\npublic string OriginalMessageId { get; set; }\r\n\r\n[Unique]\r\npublic Guid OrderId { get; set; }\r\npublic bool GotA { get; set; }\r\npublic bool GotB { get; set; }\r\n}\r\n\r\npublic class Saga : Saga<SagaData>, IAmStartedByMessages<CommandA>, IAmStartedByMessages<CommandB>\r\n{\r\npublic override void ConfigureHowToFindSaga()\r\n{\r\nConfigureMapping<CommandA>(s => s.OrderId, m => m.OrderId);\r\nConfigureMapping<CommandB>(s => s.OrderId, m => m.OrderId);\r\n}\r\n\r\npublic void Handle(CommandA command)\r\n{\r\nData.OrderId = command.OrderId;\r\nData.GotA = true;\r\nTryFinish();\r\n}\r\n\r\npublic void Handle(CommandB command)\r\n{\r\nData.OrderId = command.OrderId;\r\nData.GotB = true;\r\nTryFinish();\r\n}\r\n\r\nprivate void TryFinish()\r\n{\r\nif (Data.GotA && Data.GotB)\r\n{\r\nMarkAsComplete();\r\n}\r\n} \r\n}\r\n\r\npublic class EndpointConfig : IConfigureThisEndpoint, AsA_Publisher, IWantCustomInitialization\r\n{\r\nprivate const string EndpointName = "Test";\r\n\r\npublic void Init()\r\n{\r\nSetLoggingLibrary.Log4Net(log4net.Config.XmlConfigurator.Configure);\r\nConfigure.With()\r\n.DefineEndpointName(EndpointName)\r\n.Log4Net()\r\n.DefaultBuilder() \r\n.XmlSerializer()\r\n.MsmqTransport()\r\n.IsolationLevel(System.Transactions.IsolationLevel.RepeatableRead)\r\n.Sagas()\r\n.RavenSagaPersister()\r\n.UseRavenTimeoutPersister()\r\n.RavenSubscriptionStorage()\r\n.UnicastBus()\r\n.DisableSecondLevelRetries();\r\n}\r\n}\r\n```\r\n\r\nI\'ve created a complete narrowed down repro as a git repository: https://github.com/janovesk/nservicebus_multiissues\r\n\r\nThe SagaTest project is a saga endpoint that listens on queue "test". Run it with NServiceBus.Host.Exe NServiceBus.Integration. The Sender project is a small console helper that generates a new tuple of CommandA and CommandB and sends them to the saga endpoint. Simply press enter to generate a new tuple. I can repro the issue on multiple machines by installing RavenDB 980, starting both projects and just pressing enter a couple of times. Expected end result is NO saga data in RavenDB, actual result is saga data still in RavenDB.'
753,'andreasohlund','Introduce a TransportConfig section to hold the settings for retries and parallelism (number of threads)\nThe current settings is on the MsmqTransportConfig element which is obviously tied to Msmq\r\n\r\nExample usage:\r\n\r\n\r\n```\r\n  <TransportConfig MaxDegreeOfParallelism="30" MaxRetries="2"/>\r\n```\r\nAnd with the section:\r\n```\r\n <section name="TransportConfig" type="NServiceBus.Config.TransportConfig, NServiceBus.Core"/>\r\n```'
752,'johnsimons','DoNotCreateQueues is broken\nSeems like it been broken we refactored the queue creation. \r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/unicast/NServiceBus.Unicast.Msmq/NServiceBus.Unicast.Transport.Msmq.Config/ConfigureMsmqTransport.cs#L15'
747,'johnsimons','Force raven to use the default/given port when installing\nTo avoid confusion when raven starts up and chooses a port we should make sure that it either uses the default 8080 or the one requested by the user.\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/Setup/NServiceBus.Setup.Windows/RavenDB/RavenDBSetup.cs#L38'
746,'johnsimons','Find a available port to install raven on if 8080 is taken\nFind port\r\nTell raven to use it\r\nSave the port in the registry so that nsb uses it by default'
745,'johnsimons','Improve the exception message when failing to connect to raven db\nCatch it and tell the user to check if the mgmt studio is working. If not figure out where raven is and add a connection string to redirect the endpoint accordingly'
744,'johnsimons',"TimeoutDispatcherProcessor Stop fails with NullReferenceException\nI'm using 3.4 development branch. I have a component which uses IWantToRunWhenBusStartsAndStops. Interestingly when this component is added even without implementation I can produce a race condition in the TimeoutDispatcherProcessor. The Stop method tries to Stop the internal TimeoutPersisterReceiver which can be null. I think the code should check for:\r\n\r\n        public void Stop()\r\n        {\r\n            if (timeoutPersisterReceiver != null)\r\n            {\r\n                timeoutPersisterReceiver.Stop();\r\n            }\r\n\r\n            if (inputTransport != null)\r\n            {\r\n                inputTransport.Dispose();\r\n            }\r\n        }"
742,'johnsimons','NuGet init warns for non existing Raven even if the user is running it manually on the console\nAdd a check for the Raven.Server.exe running as well. Current workaround is to add the DontCheckMachineSetup erg key\r\n\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_CURRENT_USER\\Software\\NServiceBus\\3.3]\r\n"DontCheckMachineSetup"="true"\r\n'
741,'gbiellem','Illegal operation attempted on a registry key that has been marked for deletion.\nStacktrace:\r\n\r\n[IOException: Illegal operation attempted on a registry key that has been marked for deletion.\r\n]\r\n   Microsoft.Win32.RegistryKey.Win32Error(Int32 errorCode, String str) +6505003\r\n   Microsoft.Win32.RegistryKey.CreateSubKeyInternal(String subkey, RegistryKeyPermissionCheck permissionCheck, Object registrySecurityObj, RegistryOptions registryOptions) +889\r\n   Microsoft.Win32.RegistryKey.CreateSubKey(String subkey, RegistryKeyPermissionCheck permissionCheck) +21\r\n   NServiceBus.Licensing.LicenseManager.ConfigureNServiceBusToRunInTrialMode() in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\impl\\licensing\\NServiceBus.Licensing\\LicenseManager.cs:248\r\n   NServiceBus.Licensing.LicenseManager.Validate() in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\impl\\licensing\\NServiceBus.Licensing\\LicenseManager.cs:233\r\n   NServiceBus.Unicast.Transport.Transactional.Config.LicenceConfig.GetAllowedNumberOfThreads(Int32 numberOfWorkerThreadsInConfig) in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\impl\\unicast\\transport\\NServiceBus.Unicast.Transport.Transactional.Config\\LicenceConfig.cs:12\r\n   NServiceBus.Unicast.Transport.Transactional.Config.Bootstrapper.Init() in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\impl\\unicast\\transport\\NServiceBus.Unicast.Transport.Transactional.Config\\Bootstrapper.cs:45\r\n   System.Collections.Generic.List`1.ForEach(Action`1 action) +13957572\r\n   NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\config\\NServiceBus.Config\\Configure.cs:293\r\n   NServiceBus.Configure.SendOnly() in c:\\TeamCity\\buildAgent\\work\\nsb.master_2\\src\\config\\NServiceBus.Config\\Configure.cs:366\r\n\r\n\r\nNo license installed.\r\n\r\nRunning under IIS 7 .Net 4.0 using Application Pool identity.\r\n\r\nI cannot find the offending key in Registry.'
740,'andreasohlund','For better interop we should allow a plain message to be sent without the "messages" wrapper\n'
739,'andreasohlund','Allow type info to be passed into the serializers\nTo allow for more flexible serialization we should allow the message types being passed into to the serializers explicitly in addition to being inferred from namespaces and element names. This makes less assumptions on the capabilities of the serialization format.'
738,'andreasohlund','Sagas that correlate on the saga id should use a get instead of a property lookup\nIf we detect that a saga is correlated on the saga id we should use a Get(sagaId) instead of a property lookup. This allows the persister to optimize the query more efficiently. In this case the raven persister was doing a Query instead of a Load which might yield stale results'
737,'johnsimons',"Headers exceed the 4000 character limit for the NHibernate timeout persister\nSome users seems to hit the 4000 char limit when doing SLR's on messages with long call stacks\r\n\r\nhttp://stackoverflow.com/questions/13229627/nservicebus-nhibernate-exception-on-sending-message\r\n\r\nWe need to change \r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/nhibernate/TimeoutPersister/NServiceBus.TimeoutPersisters.NHibernate/Config/TimeoutEntityMap.cs#L21\r\n\r\nto nvarchar(max)"
733,'andreasohlund',"DataBus properties that isn't initialized caused the receiving side to blow up\nTo repro just send a message with a DataBusProperty set to null"
732,'andreasohlund','Encryption support causes performance issue on large byte arrays\nThe recursive traversal of all properties causes issues when we go through a big byte array. We need to detect that the list contains only primitives and skip the iteration. This means anyone using the databus feature would experience this issue'
731,'andreasohlund',"Spring support is broken since we resolve the LicenseManager to early in the startup process\nSpring doesn't support registrations after the first component has been resolved. The licensemanager have to be refactored to do without DI in order to work with spring"
727,'johnsimons','Fixes#716\nSwitched`ThreadPool.SetMaxThreads`to use`Semaphore`instead of introducing a custom`TaskScheduler`'
725,'johnsimons','Fixes #723\nFix failed deserialization of classes with a closed implementation of IList<T>'
724,'johnsimons','Fixes #709\nFix StackOverflowException with IEnumerable and self-referencing generic interface implementations.'
723,'johnsimons','Classes That Close The Generic Type On IList<T> Fail to Deserialize If Defined in Different Namespace Than Message \nWhen a class implements implements IList<T>  and closes the generic type, the NServiceBus XML deserializer will not be able to deserialize it correctly if the list and its item type are in a different namespace than the message being serialized.\r\n\r\nFor example, the following combination of messages and classes will fail to deserialize:\r\n```    \r\nnamespace A \r\n{\r\n    public class CustomList : List<CustomItem>\r\n\t{\r\n\t}\r\n\r\n\tpublic class CustomItem\r\n\t{\r\n\t\tpublic string Data { get; set; }\r\n\t}\r\n}\r\n\r\nnamesapce B \r\n{\r\n    public class MyEvent : IEvent\r\n    {\r\n        public CustomList Items {get;set;}\r\n    }\r\n}\r\n```\r\n'
719,'johnsimons','Upgrade to 3.3 with nuget failed\nI\'ll add this for future reference. I just updated my sample application here https://github.com/danielmarbach/nservicebus.introduction to the newest version of NServiceBus. All my app.configs got modified and the new EndpointConfig classes where added. I had first to delete the EndpointConfig classes which I have already defined (but in my sample they are called Endpoint) and then I had to git reset the modified app.configs. When I started the hosts with the modified app.configs the following exception occurred while starting.\r\n\r\nUnhandled Exception: Magnum.StateMachine.StateMachineException: Exception occurr\r\ned in Topshelf.Internal.ServiceController`1[[NServiceBus.Hosting.Windows.Windows\r\nHost, NServiceBus.Host, Version=3.3.0.0, Culture=neutral, PublicKeyToken=9fc3864\r\n79f8a226c]] during state Initial while handling OnStart ---> Microsoft.Practices\r\n.ServiceLocation.ActivationException: Activation error occured while trying to g\r\net instance of type WindowsHost, key "SiriusCyberneticsCorp.Complaint.Frontend.E\r\nndpoint, SiriusCyberneticsCorp.Complaint.Frontend, Version=1.0.0.0, Culture=neut\r\nral, PublicKeyToken=null" ---> System.TypeInitializationException: The type init\r\nializer for \'NServiceBus.Configure\' threw an exception. ---> Common.Logging.Conf\r\nigurationException: Failed obtaining configuration for Common.Logging from confi\r\nguration section \'common/logging\'. ---> System.Configuration.ConfigurationErrors\r\nException: Configuration system failed to initialize ---> System.Configuration.C\r\nonfigurationErrorsException: Sections must only appear once per config file.  Se\r\ne the help topic <location> for exceptions. (C:\\Projects\\nservicebus.introductio\r\nn\\SiriusCyberneticsCorp.Complaint.Frontend\\bin\\Debug\\SiriusCyberneticsCorp.Compl\r\naint.Frontend.dll.config line 14)\r\n   at System.Configuration.ConfigurationSchemaErrors.ThrowIfErrors(Boolean ignor\r\neLocal)\r\n   at System.Configuration.BaseConfigurationRecord.ThrowIfParseErrors(Configurat\r\nionSchemaErrors schemaErrors)\r\n   at System.Configuration.ClientConfigurationSystem.EnsureInit(String configKey\r\n)\r\n   --- End of inner exception stack trace ---\r\n   at System.Configuration.ClientConfigurationSystem.EnsureInit(String configKey\r\n)\r\n   at System.Configuration.ClientConfigurationSystem.System.Configuration.Intern\r\nal.IInternalConfigSystem.GetSection(String sectionName)\r\n   at System.Configuration.ConfigurationManager.GetSection(String sectionName)\r\n   at Common.Logging.LogManager.<>c__DisplayClass3.<BuildLoggerFactoryAdapter>b_\r\n_0() in c:\\CCNet\\netcommon\\trunk\\modules\\Common.Logging\\src\\Common\\Common.Loggin\r\ng\\Logging\\LogManager.cs:line 246\r\n   at Common.Logging.Configuration.ArgUtils.<>c__DisplayClass13.<Guard>b__12() i\r\nn c:\\CCNet\\netcommon\\trunk\\modules\\Common.Logging\\src\\Common\\Common.Logging\\Logg\r\ning\\Configuration\\ArgUtils.cs:line 279\r\n   at Common.Logging.Configuration.ArgUtils.Guard[T](Function`1 function, String\r\n messageFormat, Object[] args) in c:\\CCNet\\netcommon\\trunk\\modules\\Common.Loggin\r\ng\\src\\Common\\Common.Logging\\Logging\\Configuration\\ArgUtils.cs:line 304\r\n   --- End of inner exception stack trace ---\r\n   at Common.Logging.Configuration.ArgUtils.Guard[T](Function`1 function, String\r\n messageFormat, Object[] args) in c:\\CCNet\\netcommon\\trunk\\modules\\Common.Loggin\r\ng\\src\\Common\\Common.Logging\\Logging\\Configuration\\ArgUtils.cs:line 314\r\n   at Common.Logging.LogManager.BuildLoggerFactoryAdapter() in c:\\CCNet\\netcommo\r\nn\\trunk\\modules\\Common.Logging\\src\\Common\\Common.Logging\\Logging\\LogManager.cs:l\r\nine 251\r\n   at Common.Logging.LogManager.get_Adapter() in c:\\CCNet\\netcommon\\trunk\\module\r\ns\\Common.Logging\\src\\Common\\Common.Logging\\Logging\\LogManager.cs:line 164\r\n   at Common.Logging.LogManager.GetLogger(String name) in c:\\CCNet\\netcommon\\tru\r\nnk\\modules\\Common.Logging\\src\\Common\\Common.Logging\\Logging\\LogManager.cs:line 2'
716,'johnsimons',"Running gateway with multiple channels exhausting thread pool\nUnder high load, the HTTP gateway receiver (HttpListener) blocks for 60 seconds at a time and doesn't accept any more requests. After 60 seconds, number of distributed transactions time out and the process locks up again. Once in this state, no more messages get through the channel (ie complete the process of de-duplication/enqueuing messages). The issue was found on 3.2.8, but can also be replicated on 3.3.0\r\n\r\nI've traced the blocking problem down to a call made by NServiceBus.Gateway.Channels.Http.HttpChannelReceiver\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/gateway/NServiceBus.Gateway/Channels/Http/HttpChannelReceiver.cs#L26\r\n\r\nIt appears my process exhausts the thread pool workers while trying to service the HttpListener, commit distributed transactions (deduplication + enqueue MSMQ) and service my WCF requests at the same time.\r\n\r\nNumber of threads in the thread pool is a process wide setting. The OS (W7SP1) defaults for the number of thread pool workers is around 1000. Based on the above gateway config, HttpChannelReceiver limits it down to 10 workers. The gateway channel configuration treats it as if it was configurable per channel and affects performance of the entire process.\r\n\r\nI'd be eager to remove the call to ThreadPool.SetMaxThreads altogether. Is this a bug? Why is the gateway receiver trying to limit the number of requests processed on a channel?"
713,'andreasohlund',"Connections string settings isn't picked up when configuring a RavenDB connection string\nTo repro:\r\n\r\nSecify a ApiKey, the initialized DocumentStore will miss the setting since we always create a new one and copy over what we think is the relevant settings. We should let raven do the parsing instead."
711,'johnsimons','Multiple workers on the same machine is not supported\nThe validation code for the master node prevents  multiple workers on the same machine since it auto generates the input queue if the masternode translate to localhost\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/distributor/NServiceBus.Distributor/Config/ConfigureDistributor.cs#L82\r\n\r\nWe should add a override to allow users to run workers in this mode'
709,'johnsimons',"StackOverflowException Mapping TypesImplementing IEnumerable and Self-Referencing Generic Interface\nWhen you have message that references a class A that implements IEnumerable<T> and some generic interface where A itself is the type parameter, a StackOverflowException will occur in MessageMapper.  \r\n\r\nFor example, using the class and interface below, a StackOverflowException will occur if ClassImplementingIEnumerableAndIReturnMyself`<string`> is included on a message.\r\n\r\n```\r\nclass ClassImplementingIEnumerableAndIReturnMyself<TItem> : IEnumerable<TItem>, IReturnMyself<ClassImplementingIEnumerableAndIReturnMyself<TItem>>\r\n\t\t{\r\n\t\t\tpublic IEnumerator<TItem> GetEnumerator()\r\n\t\t\t{\r\n\t\t\t\treturn new List<TItem>.Enumerator();\r\n\t\t\t}\r\n\r\n\t\t\tIEnumerator IEnumerable.GetEnumerator()\r\n\t\t\t{\r\n\t\t\t\treturn GetEnumerator();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tpublic ClassImplementingIEnumerableAndIReturnMyself<TItem> ReturnMe()\r\n\t\t\t{\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface IReturnMyself<T>\r\n\t\t{\r\n\t\t\tT ReturnMe();\r\n\t\t}\r\n```\r\n\r\nThis example is obviously very contrived, but it was the simplest way I could find to reproduce the problem.  The actual use case for the self-referencing interface implementations was to implement something similar to a generic version of ICloneable but with better defined copy semantics.\r\n\r\nTwo variations of this using a stripped down version of the PubSub sample can be found at:\r\nhttps://github.com/dennismsmith/IssueAttachments/blob/master/StackOverflowInMessageMapper%20-%20Case%201.zip\r\nhttps://github.com/dennismsmith/IssueAttachments/blob/master/StackOverflowInMessageMapper%20-%20Case%202.zip\r\n\r\nI've fixed this in the source for my own use for the time being and I'll submit a pull request to get my changes included for a future release."
708,'johnsimons','Fixes #702\nAdded implementation of `SqlPersistence.UpdateHeader` + reduced code\r\nCould you put this in 3.4?'
707,'johnsimons','Fixes #671\nSaga data is deep cloned by using JsonMessageSerializer and serialised both going in and out of persistence\r\nConcurrency check is against Thread.CurrentThread.ManagedThreadId\r\nAdded unit tests\r\n\r\nThanks @johnsimons for tip => `core.autocrlf=false`'
704,'johnsimons','Access to the registry key \'HKEY_CURRENT_USER\\SOFTWARE\\NServiceBus\\3.3\' is denied\nWe\'ve installed the 3.3.0-unstable63 nuget package and deployed to our test server.\r\nNow our web endpoints throw the exception pasted below about trying to access the registry.\r\nThese web endpoints are defined as SendOnly endpoints with configuration similar to this:\r\n```            \r\nvar bus = NServiceBus.Configure.With()\r\n                .DefineEndpointName(() => "WebSite")\r\n                .DefiningCommandsAs(t => t.Namespace != null && t.Namespace.EndsWith(".Commands"))\r\n                .Log4Net()\r\n                .DefaultBuilder()\r\n                .XmlSerializer()\r\n                .MsmqTransport()\r\n                .UnicastBus()\r\n                .SendOnly();\r\n```\r\nWe did not run any additional installation or configuration on this server since we updated to 3.3.  I believe we ran the RunMeFirst.bat on this server with an earlier 3.x version downloaded from nservicebus.com\r\n\r\nWhen our nservicebus host endpoints are started, we see these log messages:\r\n```\r\n2012-10-17 12:25:01,239 [1] DEBUG - (null) - NServiceBus.Licensing.LicenseManager - First time running NServiceBus v3.3, setting trial license start.  \r\n2012-10-17 12:25:01,239 [1] DEBUG - (null) - NServiceBus.Licensing.LicenseManager - Trial for NServiceBus v3.3 is still active, trial expires on 3.3.  \r\n2012-10-17 12:25:01,239 [1] INFO  - (null) - NServiceBus.Licensing.LicenseManager - Configuring NServiceBus to run in trial mode.  \r\n```\r\n\r\nI do not get this exception when i run the site on my machine, although i did acquiesce and click yes when the nservicebus popup appeared in visual studio asking me to configure nservicebus.\r\n\r\nI also got a free Express license from here: http://nservicebus.com/License.aspx\r\nand put it in /bin/License/License.xml in my web application, and it still didn\'t fix the issue.\r\n\r\nI had to change the web site to run as a local administrator account to finally get the site to work...And changing it back to pass thru authentication gets the exception again. \r\n\r\nEven though we\'re using a trial license on our server, I assume we should not have been getting an exception, correct?\r\n\r\n```\r\n[UnauthorizedAccessException: Access to the registry key \'HKEY_CURRENT_USER\\SOFTWARE\\NServiceBus\\3.3\' is denied.]\r\n   Microsoft.Win32.RegistryKey.Win32Error(Int32 errorCode, String str) +6345029\r\n   Microsoft.Win32.RegistryKey.CreateSubKeyInternal(String subkey, RegistryKeyPermissionCheck permissionCheck, Object registrySecurityObj, RegistryOptions registryOptions) +888\r\n   Microsoft.Win32.RegistryKey.CreateSubKey(String subkey, RegistryKeyPermissionCheck permissionCheck) +21\r\n   NServiceBus.Licensing.LicenseManager.ConfigureNServiceBusToRunInTrialMode() in c:\\TeamCity\\buildAgent\\work\\19f271e8a69e4959\\src\\impl\\licensing\\NServiceBus.Licensing\\LicenseManager.cs:200\r\n   NServiceBus.Licensing.LicenseManager.Validate() in c:\\TeamCity\\buildAgent\\work\\19f271e8a69e4959\\src\\impl\\licensing\\NServiceBus.Licensing\\LicenseManager.cs:192\r\n   NServiceBus.Licensing.Configure.Init() in c:\\TeamCity\\buildAgent\\work\\19f271e8a69e4959\\src\\impl\\licensing\\NServiceBus.Licensing\\Configure.cs:11\r\n   System.Collections.Generic.List`1.ForEach(Action`1 action) +64\r\n   NServiceBus.Configure.Initialize() in c:\\TeamCity\\buildAgent\\work\\19f271e8a69e4959\\src\\config\\NServiceBus.Config\\Configure.cs:293\r\n   NServiceBus.Configure.SendOnly() in c:\\TeamCity\\buildAgent\\work\\19f271e8a69e4959\\src\\config\\NServiceBus.Config\\Configure.cs:366\r\n   WebSite.DependencyResolution.NServiceBusRegistry..ctor() in f:\\BuildAgent\\work\\81dc02d48ff93cf1\\Src\\WebSite\\DependencyResolution\\NServiceBusRegistry.cs:13\r\n\r\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\r\n   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck) +0\r\n   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache) +117\r\n   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +247\r\n   System.Activator.CreateInstance(Type type, Boolean nonPublic) +106\r\n   StructureMap.Graph.PluginGraph.ImportRegistry(Type type) in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\Graph\\PluginGraph.cs:232\r\n   System.Collections.Generic.List`1.ForEach(Action`1 action) +64\r\n   StructureMap.Configuration.DSL.Registry.ConfigurePluginGraph(PluginGraph graph) in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\Configuration\\DSL\\Registry.cs:397\r\n   StructureMap.Graph.AssemblyScanner.ScanForAll(PluginGraph pluginGraph) in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\Graph\\AssemblyScanner.cs:249\r\n   StructureMap.Graph.PluginGraph.Seal() in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\Graph\\PluginGraph.cs:121\r\n   StructureMap.PluginGraphBuilder.Build() in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\PluginGraphBuilder.cs:72\r\n   StructureMap.ObjectFactory.Initialize(Action`1 action) in c:\\BuildAgent\\work\\767273992e840853\\src\\StructureMap\\ObjectFactory.cs:65\r\n   website.DependencyResolution.IoC.Initialize() in f:\\BuildAgent\\work\\81dc02d48ff93cf1\\Src\\website\\DependencyResolution\\IoC.cs:9\r\n   website.App_Start.StructuremapMvc.Start() in f:\\BuildAgent\\work\\81dc02d48ff93cf1\\Src\\website\\App_Start\\StructuremapMvc.cs:11\r\n\r\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\r\n   System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeType typeOwner) +0\r\n   System.RuntimeMethodHandle.InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeType typeOwner) +152\r\n   System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks) +393\r\n   System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) +38\r\n   System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters) +35\r\n   WebActivator.BaseActivationMethodAttribute.InvokeMethod() +341\r\n   WebActivator.ActivationManager.RunActivationMethods() +534\r\n   WebActivator.ActivationManager.RunPreStartMethods() +38\r\n   WebActivator.ActivationManager.Run() +56\r\n\r\n[InvalidOperationException: The pre-application start initialization method Run on type WebActivator.ActivationManager threw an exception with the following error message: Exception has been thrown by the target of an invocation..]\r\n   System.Web.Compilation.BuildManager.InvokePreStartInitMethods(ICollection`1 methods) +11535262\r\n   System.Web.Compilation.BuildManager.CallPreStartInitMethods() +465\r\n   System.Web.Hosting.HostingEnvironment.Initialize(ApplicationManager appManager, IApplicationHost appHost, IConfigMapPathFactory configMapPathFactory, HostingEnvironmentParameters hostingParameters, PolicyLevel policyLevel, Exception appDomainCreationException) +1087\r\n\r\n[HttpException (0x80004005): The pre-application start initialization method Run on type WebActivator.ActivationManager threw an exception with the following error message: Exception has been thrown by the target of an invocation..]\r\n   System.Web.HttpRuntime.FirstRequestInit(HttpContext context) +11524352\r\n   System.Web.HttpRuntime.EnsureFirstRequestInit(HttpContext context) +141\r\n   System.Web.HttpRuntime.ProcessRequestNotificationPrivate(IIS7WorkerRequest wr, HttpContext context) +4782309\r\n```'
702,'johnsimons','SqlPersistence for Gateway deduplication has no implementation of UpdateHeader\nDatabus properties cannot be sent over the gateway when using SqlPersistence for deduplication of messages\r\n\r\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/gateway/NServiceBus.Gateway/Persistence/Sql/SqlPersistence.cs#L113'
701,'johnsimons',"EncryptionMessageMutator fails when parsing object with no getter\nI found this issue with the latest nuget package of the build (4.0.0-unstable2482) and also managed to reproduce it with the 3.2.8 (and 3.3.0) source from github.\r\n \r\nBasically I need to include some legacy objects into an IMessage I am tring to send, however one of the objects has an XmlDocument with XmlAttributes in it that the bus is attempting to serialise. The issue comes up when for some reason the EncryptionMessageMutator (that seems to be switched on by default?) tries to mutate the outgoing message. As it recurses through the object graph, the mutator finds an instance of XmlAttribute, and serialises each of its properties. The problem is one of the properties on XmlAttribute, InnerText has no getter, which causes the mutator to fail.\r\n \r\nThe situation can be very easily repro'd in the unit tests, specifically Mailing_list_complex_dto, by modifying TestDto to have an additional property with no setter e.g:\r\n\r\n```C#\r\npublic class TestDto\r\n{\r\n   public TestDto()\r\n   {\r\n      Options = new TestOptions();\r\n   }\r\n\r\n   public TestOptions Options { get; set; }\r\n\r\n   public TestOptions Options2\r\n   {\r\n      set \r\n      { \r\n         //do nothing\r\n      }\r\n   }\r\n}\r\n```\r\nThis breaks the test as follows:\r\n \r\n<pre>\r\nThis_whould_work : \r\nFailedSystem.ArgumentException : Property Get method was not found.\r\nat System.Reflection.RuntimePropertyInfo.GetValue(Object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\nat System.Reflection.RuntimePropertyInfo.GetValue(Object obj, Object[] index)\r\nat NServiceBus.Encryption.MemberInfoExtensions.GetValue(MemberInfo member, Object source) in EncryptionMessageMutator.cs: line 256\r\nat NServiceBus.Encryption.EncryptionMessageMutator.ForEachMember(Object root, Action`2 action, Func`2 appliesTo) in EncryptionMessageMutator.cs: line 97\r\nat NServiceBus.Encryption.EncryptionMessageMutator.MutateOutgoing(Object message) in EncryptionMessageMutator.cs: line 23\r\nat NServiceBus.Encryption.Tests.Mailing_list_complex_dto.This_whould_work() in WireEncryptedStringSpecs.cs: line 140 \r\n</pre>\r\n\r\nAt first glance at the code, a fix looks pretty easy - calling PropertyInfo.CanRead()?"
700,'johnsimons','startManually parameter for NServiceBus.Host.exe starts it in Startup Type = "Automatic"\nShould start it as "Manual"'
697,'johnsimons','Support the ResourceManagerId setting in RavenDb connection strings\nCurrently the ResourceManagerId setting in RavenDb connection strings is ignored, and  a default value used instead. \r\n\r\nThis could be confusing. Besides there should be a way to explicitly control the ResourceManagerId\r\n\r\n\r\n        static Configure RavenPersistenceWithConnectionString(Configure config, string connectionStringValue, string database)\r\n        {\r\n            var store = new DocumentStore\r\n            {\r\n                ResourceManagerId = RavenPersistenceConstants.DefaultResourceManagerId\r\n            };'
696,'johnsimons','RavenDB connectionstring should support Database\nAccording to ravendb a database name can be either specified using Database ro DefaultDatabase via the connectionstring.\r\nBut we only support DefaultDatabase!\r\n\r\nWe should also support Database.'
695,'johnsimons','SendAsync does not work with Castle Windsor container\nFor some reason, if we change to use Castle Windsor as the container in AsyncPagesMVC3 website, the SendAsync does not work.\r\n\r\nIt looks like the message is received in the server and a reply sent back to the client, but then the client is not calling a callback!'
691,'johnsimons',"Can't Deserialize string NSB Serialized\nIt appears that NSB is serializing a message that it can't deserialize.  The message contains a string that has the control character 0x1C.\r\n\r\nI am using v3.2.8 on sender and receiver.\r\n\r\nI received an NSB error:\r\n\r\n<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.ExceptionType</Key>\r\n\t\t<Value>System.Xml.XmlException</Value>\r\n\t</HeaderInfo>\r\n\t<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.HelpLink</Key>\r\n\t</HeaderInfo>\r\n\t<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.Message</Key>\r\n\t\t<Value>'&#x1C;', hexadecimal value 0x1C, is an invalid character. Line 19, position 64.</Value>\r\n\t</HeaderInfo>\r\n\t<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.Source</Key>\r\n\t\t<Value>System.Xml</Value>\r\n\t</HeaderInfo>\r\n\t<HeaderInfo>\r\n\t\t<Key>NServiceBus.ExceptionInfo.StackTrace</Key>\r\n\t\t<Value>   at System.Xml.XmlTextReaderImpl.Throw(Exception e)\r\n   at System.Xml.XmlTextReaderImpl.Throw(String res, String[] args)\r\n   at System.Xml.XmlTextReaderImpl.ParseText(Int32&amp; startPos, Int32&amp; endPos, Int32&amp; outOrChars)\r\n   at System.Xml.XmlTextReaderImpl.ParseText()\r\n   at System.Xml.XmlTextReaderImpl.ParseElementContent()\r\n   at System.Xml.XmlTextReaderImpl.Read()\r\n   at System.Xml.XmlLoader.LoadNode(Boolean skipOverWhitespace)\r\n   at System.Xml.XmlLoader.LoadDocSequence(XmlDocument parentDoc)\r\n   at System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)\r\n   at System.Xml.XmlDocument.Load(XmlReader reader)\r\n   at NServiceBus.Serializers.XML.XmlMessageSerializer.Deserialize(Stream stream) in c:\\TeamCity\\buildAgent\\work\\nsb.master_7\\src\\impl\\Serializers\\NServiceBus.Serializers.XML\\XmlMessageSerializer.cs:line 237\r\n   at NServiceBus.Unicast.UnicastBus.Extract(TransportMessage m) in c:\\TeamCity\\buildAgent\\work\\nsb.master_7\\src\\unicast\\NServiceBus.Unicast\\UnicastBus.cs:line 1043</Value>\r\n\t</HeaderInfo>\r\n\t<HeaderInfo>\r\n\t\t<Key>NServiceBus.OriginalId</Key>\r\n\t\t<Value>51e81fbc-6140-45da-9cd3-4ae673e9dfab\\1574529</Value>\r\n\t</HeaderInfo>\r\n\r\n-----\r\n\r\nInspecting the message through QueueExplorer, line 19 looks like this:\r\n\r\n<FileFieldInfo>\r\n<FieldId>1000035</FieldId>\r\n<FileFieldId>247062384</FileFieldId>\r\n<Name>PlaintiffLongName</Name>\r\n<NewValue>HSBC Bank USA, National Association, as trustee (the \x1cTrustee\x1d) for the holders of Deutsche Alt-A Securities, Inc. Mortgage Loan Trust, Series 2007-RAMP1</NewValue>\r\n<CallTas>false</CallTas>\r\n</FileFieldInfo>\r\n\r\n-----\r\n\r\nOr looking at hex view, we see:\r\n\r\n002F0\t72 75 73 74 65 65 20 28  74 68 65 20 1C 54 72 75  | rustee (the  Tru\r\n00300\t73 74 65 65 1D 29 20 66  6F 72 20 74 68 65 20 68  | stee ) for the h\r\n\r\nError is caused by 0xIC appearing at index 12 on the first line.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
690,'andreasohlund',"NRE on IEnumerable<T> members with null elements\nXmlSerializer couldn't work out the type to serialize for elements of\r\nIEnumerable which were null resulting in a NullReferenceException"
687,'andreasohlund',"InMemory gateway storage doesn't report deleted items correctly\n"
686,'andreasohlund','Install.ps1 fails to find the messageforwarding section \nUser are reporting that the install.ps1 in the host fails to find the section on Win8 machines'
685,'johnsimons','Upgrade to Raven 2.0\nWe should get the develop branch onto Raven 2.0'
682,'andreasohlund',"Don't reinstall Msmq without user approval\nRight now we reinstall msmq without asking for approval. Since this will wipe out any local queues this is dangerous.\r\n\r\nThe powershell commandlet is already supporting this by requiring a -Force. We should modify our infra installer to do the same"
678,'johnsimons','Configuring Raven with fluent API fails to assign default database \nIf you configure Raven with fluent API and specify a database name:\r\nEg:\r\n```c#\r\n.RavenPersistence(connectionStringName:"RavenDb", database:"Client")\r\n```\r\nthe database name is overwritten by the default profiler'
677,'andreasohlund','Verify if the machine is setup correctly on nuget initialization (init.ps1)\n* Check regkey to see if we have prepped the machine (optional, see how easy this)\r\n* if not verify if the machine is setup ok (pull the code into powershell)\r\n* if not pop a browser to a nservicebus.com/machinerequirements?MissingComponents={msm|dtc|etc}\r\n\r\nDo the above for each install|update'
675,'johnsimons','Install trial license when users install|update the NServiceBus package\n* Embed the regscript in the package\n* Run the regscript on both install.ps1 and update.ps1 (inline the script)'
674,'johnsimons','Modify the licensing to only prompt the users when trial license expire\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/licensing/NServiceBus.Licensing/LicenseManager.cs\n\nOnly do this in DEBUG mode\n\n* Pop a messagebox asking the users to go to nservicebus.com/getlicense if they want to continue using NServiceBus.\n* If they cancel, just let them continue running the endpoint\n* Make a browse button to browse and install the license\n\n* If the trial period hasn\'t expired run the endpoint with the equivalent of a "full" license(even if not in debug mode)'
673,'johnsimons','Convert the zip download to a msi\nTo give us a way to set things up automatically for users we need to change the zip download to be a msi instead. This way we can automatically setup a license for them etc\n\nHave the msi:\n\n* Unpack the folder structure\n* Install the trial license reg script'
672,'johnsimons','Add support for a single license file per machine\nTo simplify for users we should support a single license per machine.\n\nThe logic is as follows\n\n1. Look for a specific license in the bin folder (just like today) and use that one if found\n2. If not found look for a Registry key\n```\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\NServiceBus\\License]\n"Path"="c:\\\\program files\\\\nservicebus\\\\license\\\\license.xml"\n```\n3. If regkey is found pull license information from that location\n\nWe probably have to modify RHino.Licensing for this to work'
671,'johnsimons','Add optimistic concurrency checks to the inmemory saga persister\nAt the moment multiple threads can read the same data and later update it without the persister throwing any exceptions. We need to add a version/timestamp so that we can detect if data has been changes between read and update so that we can throw a concurrency exception just like a database would do.\n\nThe current workaround is to run single threaded but since we are adding the "Volatile" mode of operations in 4.0 this needs to be fixed'
668,'andreasohlund',"Satellites always run with one worker thread\nThe satellites should use the same number of worker threads as it's main transport. Right now they only run with one.\n\n\nThis is a problem on both develop and master\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/satellites/NServiceBus.Satellites/SatelliteTran\nsportBuilder.cs"
667,'johnsimons',"Create a solution for all NServiceBus projects\nGiven that Vs2012 supports async loading of project it's now feasible to have one big solution for all projects (we can still keep more fine grained ones as well like NHibernate.sln, Azure.sln and so on)\n\n@kblooie has already done some spikes using http://code.google.com/p/merge-solutions/wiki/HOWTO and it looks promising"
664,'johnsimons',"NServiceBus.Core has a dependency on System.Web.Mvc (version 2.0.0.0) \nOfficial package 3.2.8\n\nNServiceBus.Core has a dependency on System.Web.Mvc (version 2.0.0.0) ?\nOther adjacent references (system.xml for example)  are pointing at version 4.0.0.0\n\n<b>Why does an ESB need a dependency to a web MVC framework?</b>\n\nThe one example of this is demonstrated by binding faults in the  FullDuplex Sample, when version 2 of asp.mvc is not installed.\n\n```bash\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of i\nts dependencies. The system cannot find the file specified.\nFile name: 'System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'\n   at NServiceBus.Unicast.Callback.NServiceBus.ICallback.Register[T](Action`1 callback)\n   at MyClient.ClientEndpoint.Run() in f:\\NServiceBus.3.2.8\\samples\\FullDuplex\\MyClient\\ClientEndpoint.cs:line 27\n   at NServiceBus.Hosting.Configuration.ConfigManager.<>c__DisplayClass1.<Startup>b__0() in c:\\TeamCity\\buildAgent\\work\\nsb.master_8\\src\\hosting\\NServiceBus.Hos\nting\\Configuration\\ConfigurationManager.cs:line 70\n\n=== Pre-bind state information ===\nLOG: User = MS08R2-X64-NSB\\root\nLOG: DisplayName = System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\n (Fully-specified)\nLOG: Appbase = file:///F:/NServiceBus.3.2.8/samples/FullDuplex/MyClient/bin/Debug/\nLOG: Initial PrivatePath = NULL\nCalling assembly : NServiceBus.Core, Version=3.2.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c.\n===\nLOG: This bind starts in default load context.\nLOG: Using application configuration file: F:\\NServiceBus.3.2.8\\samples\\FullDuplex\\MyClient\\bin\\Debug\\MyClient.dll.config\nLOG: Using host configuration file:\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\nLOG: Post-policy reference: System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nLOG: Attempting download of new URL file:///F:/NServiceBus.3.2.8/samples/FullDuplex/MyClient/bin/Debug/System.Web.Mvc.DLL.\nLOG: Attempting download of new URL file:///F:/NServiceBus.3.2.8/samples/FullDuplex/MyClient/bin/Debug/System.Web.Mvc/System.Web.Mvc.DLL.\nLOG: Attempting download of new URL file:///F:/NServiceBus.3.2.8/samples/FullDuplex/MyClient/bin/Debug/System.Web.Mvc.EXE.\nLOG: Attempting download of new URL file:///F:/NServiceBus.3.2.8/samples/FullDuplex/MyClient/bin/Debug/System.Web.Mvc/System.Web.Mvc.EXE.\n```"
662,'mookid8000','Make sure SQL queues are created under the correct user identity\n'
659,'johnsimons','Local build script parametrizable\n'
657,'johnsimons',"Saga timeout testing fails if Saga doesn't implement IHandleTimeout<t>\nWhen using the NServiceBus testing framework to test sagas if  the saga calls \n\nRequestUtcTimeout<TMyTimeput>(TimeSpan.FromMinutes(x));\n\nbut doesn't implemement IHandleTimeout<TMyTimeout> then the testing framework will throw:\n\nObject of type 'System.TimeSpan' cannot be converted to type 'System.DateTime'.\n\n\n\n"
650,'andreasohlund',"Assign specific versions to nuget dependencies\nAt the moment if a user installs NServiceBus.NHibernate they get NHibernate 3.3.1.4000 because that is the latest stable release, however we are using NHibernate 3.3.0.4000 and because we use strong name versions, the users need to add binding redirects for this to work.\n\nBecause of a decision by the nuget team to not automatically add binding redirects for class lib projects (see http://nuget.codeplex.com/workitem/1428) our users need to manually invoke `Add-BindingRedirects`.\n\n99% of the time users don't do this because it is not intuitive.\n\nSo I'm wondering if we should lock in our nuget packages to use specific versions instead of greater or equal?\n\n"
649,'johnsimons','Turn on optimistic concurrency by default for NHibernate sagas\nIf the saga data isn\'t containing a Version property turn on  "optimistic-all".\n\nhttp://ayende.com/blog/3946/nhibernate-mapping-concurrency\n\nThis makes sure that the users isn\'t exposed to concurrency issues.\n\nGiven that user can be on "serializable" transaction scopes today without a Version property I don\'t think we can add this to  3.X in a backwards compatible way'
647,'andreasohlund','Suppress the "no handlers found" warning if a callback is fired\nUsers transitioning from a more RPC like styles of systems sometimes needs to do a .Register() to get the results of a bus.Reply. This results in a the warning above since we only suppress that warning for Bus.Return\n\nEven though it\'s recommended to do it in this way (they shouldn\'t be using callbacks for any thing other than status codes) we should make sure to not warn if we detect that there was a callback that got invoked.\n\nThe current workaround is to either configure log4net to ignore the warn or add a dummy handler for the reply message.'
645,'johnsimons','Expanding registration options to work with Tasks\nAdding two new ways to register a callback that are more easily used with the Task Parallel Library and the new async/await features of .net 4.5.  These methods return a Task, or a Task<T> such that they can be consumed, for example, by an async webapi controller - or some other asynchronous operation.'
643,'johnsimons','Turn off SLR for both the TimeoutManager and TimeoputDispatcher\nIn order to prevent a endless message loop SLR should not be used for the timeoutmanger and its dispatcher. This is because the SLR relies on the TM.\n\nRight now the SLR is "hardcoded" into to FaultsForwarder but we need to make it a first class concept in the TransactionalTransport'
642,'johnsimons','"Received an empty message" warning is misleading\nI get warning "Received an empty message". This message is misleading because, message body was not empty, but message was not registered in serializer. I think that this message should be corrected and should provide some valuable information about problem with deserializing.\n\nI\'m also think that no message should be ignored. There should be threw exception, and message should go to error queue.'
635,'johnsimons',"In ExtensionMethods for Messages, check if the object passed is a message\nThis code looks great:\n`Bus.CurrentMessageContext.GetHeader(EventChainHeaderKey)`\n\nAnd will always return null. Thanks.\n\nOffering extension methods on object is bad by default. Doing so in the root namespace is irresponsible :-)\n\nNServiceBus.ExtensionMethods should check if the object passed is a Message (Command or Event), and fail if it isn't.\n*Code that asks for Headers on non-Messages should rather fail today!*\n\nAlso, as soon as breaking changes are allowed, the class should be moved to NServiceBus.Unobtrusive - but then offer those extensions for ICommand and IEvent directly in the root namespace."
633,'johnsimons','Upgrade to Raven 1.0.975\nIn order to fix the instability issues with the TM we need to upgrade to the patched raven.\n\nMake sure to update the resource files with the new server binaries as well'
632,'johnsimons',"Fix compiler warning\nWhen I reference NServiceBus from a .net 4.5 project, I get several compiler warnings similar to the following:\nThe predefined type 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder' is defined in multiple assemblies in the global alias; using definition from 'c:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\mscorlib.dll'\n\nThis seems to be caused by the line I'm removing here. \xa0See the following:\nhttp://www.wwco.com/~wls/blog/2010/10/14/defined-in-multiple-assemblies/"
625,'andreasohlund',"Encryption doesn't support List<WireEncryptedString|Convention>\n## Testing procedures\n\n1. Run the encryption sample\n2. Make sure that the list of creditcard details are transmitted properly\n3. Verify that the message in the queue are indeed encrypted\n4. Verify the above with the json serilaizer as well"
624,'johnsimons',"Bug fix for WIndsorObjectBuilder.ConfigureProperty method.\nThis is a bug fix for: http://tech.groups.yahoo.com/group/nservicebus/message/15329.\n\nTargetType parameter of DependencyModel needs to be the concrete type of the property that we want to force to be resolved for the property on this component.\n\nLet me know if I did any of this wrong, I'm not too familiar with git and GitHub.\n\nThanks,\nCris"
622,'johnsimons','Gateway does not work with SQL Transport\nRelated to issue #477'
620,'johnsimons',"UnityBuilder and IMessageModule\nHi, I having two problems with using IMessageModule with UnityBuilder in NSB 3.2.7. \n\nDuring building invoking UnityBuilder's method BuildAll there is checking that passed type is in DefaultInstances. Unfortunately it doesn't have IMessageModule interface (my current workaround is to add it manually). \n\nAnother problem is that BuildAll invoke Resolve of the Unity, so unity try Resolve interface IMessageModule which isn't registered.  I have registered two implementation of IMessageModule - both are registered with name."
619,'andreasohlund','Fixes #618\nGateway replies were working accidentally, by using KeyPrefixConventionSiteRouter instead of OriginatingSiteHeaderRouter.'
618,'andreasohlund','Cannot reply to gateway messages over HTTPS - KeyNotFoundException thrown\nI\'m using NSB 3.2.7\n\nConfiguration of SSL:\nI\'ve created a self-signed SSL certificate using\n`makecert -n "CN=localhost" -r -pe -eku 1.3.6.1.5.5.7.3.1 -ss MY -sr localmachine -sky exchange`\nUsing mmc console Certificates snap-in & wizards, I copied my localhost certificate from Personal->Certificates to Trusted Root Certification Authorities\n\nI then used the above certificate\'s thumbprint (found by double clicking the certificate->Details tab) to configure a HTTPS port\n`netsh http add sslcert ipport=0.0.0.0:25899 certhash=thumbprint appid={461f29bc-9243-4930-a132-88419d8d53cb}`\nnote: the appid is irrelevant and can be any valid Guid\n\nRan the gateway sample.\nBoth sites (SiteA and SiteB) receive the PriceUpdated message\nHowever, SiteA is unable to reply to the gateway message - Headers.DestinationSites contains `http,https://localhost:25899/Headquarter/NumberOfWorkerThreads=1Default=False`\nHowever, `GatewaySender.OnTransportMessageReceived` sees `https` as the channel type\nFor some reason, the `Headers.OriginatingSite` is not present in the headers\n\nHeadquarter\n```\n<GatewayConfig>\n    <Sites>\n      <Site Key="SiteA" Address="https://localhost:25899/SiteA/" ChannelType="Http"/>\n      <Site Key="SiteB" Address="https://localhost:25899/SiteB/" ChannelType="Http"/>\n    </Sites>\n    <Channels>\n      <Channel Address="https://localhost:25899/Headquarter/" ChannelType="Http" Default="true"/>\n      <Channel Address="https://localhost:25899/Headquarter2/" ChannelType="Http"/>\n    </Channels>\n</GatewayConfig>\n```\nSiteA\n```\n  <GatewayConfig>\n    <Channels>\n      <Channel Address="https://localhost:25899/SiteA/" ChannelType="Http" Default="true"/>\n    </Channels>\n  </GatewayConfig>\n```\nSiteB\n```\n  <GatewayConfig>\n    <Channels>\n      <Channel Address="https://localhost:25899/SiteB/" ChannelType="Http" Default="true"/>\n    </Channels>\n  </GatewayConfig>\n```\n\n### How to test\n\nSee above'
616,'johnsimons','Enable specification of WCF namespaces\nAllow users to do the following:\n\n[ServiceContract(Namespace = "http://myorg.com/wcfintegration")]\npublic class CancelOrderService : WcfService<CancelOrder, ErrorCodes>\n\nWhich will set the namespace of the WCF binding in the WCF hosting code we have in NServiceBus.Hosting.\n\nInclude this in the sample.'
615,'andreasohlund','v2.X encryption is not compatible with 3.X endpoints\nThe serialization format has changed.\n\nv2.X\n```\n<Messages xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://tempuri.net/Messages">\n\t<MessageWithSecretData>\n\t\t<Secret>\n\t\t\t<EncryptedBase64Value>X040LyS4rEiJCOhx6Zs5m/hWVBF2/XqWGnLbIffihaA=</EncryptedBase64Value>\n\t\t\t<Base64Iv>8vdq6uGOMadA3TUAblNx6Q==</Base64Iv>\n\t\t</Secret>\n\t</MessageWithSecretData>\n</Messages>\n```\nv3.X\n```\n<Messages xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://tempuri.net/Messages">\n\t<MessageWithSecretData>\n\t\t<Secret>\n\t\t\t<EncryptedValue>\n\t\t\t\t<EncryptedBase64Value>7iTSSNQNahX339aIqVS/ecKhmrjPhMZUONdIRxOyORo=</EncryptedBase64Value>\n\t\t\t\t<Base64Iv>jp9B7prGYev+p82gaJ9Mcg==</Base64Iv>\n\t\t\t</EncryptedValue>\n\t\t</Secret>\n\t</MessageWithSecretData>\n</Messages>\n```\nNote that `<EncryptedValue >` is now wrapping the actual data.\n\nPossible solutions:\n\n1. Use a Incoming mutator to update v2.X messages. This will only work one way since we don\'t have that hook on the 2.X side.\n2. Add a setting to 3.2.8 that runs encryption in "2.X compat mode" essentially enabling another mutator that does the above.\n\nThis is only valid for customers using the xmlserializer.\n\n\nTo reproduce using Encryption sample\n\n1. Run client from 2.X\n2. Run server from 3.X\n3. Send a message\n\n## Test procedures\n\nUsing the encryption sample\n* Send a message from a 2.X client to a 3.2.8 server and make sure that it works\n* Send a message from a 3.2.8 client to a 2.X server\n* Verify that all content in the queues are encrypted\n* Turn of the compatibility mode (see the 3.2.8 client) and make sure that no extra properties are sent over the wire'
614,'andreasohlund','Msmq receives still require DTC to be on even though .SupressDTC is set\nWe need to use "Single" msmq transaction instead of "automatic" when .SupressDTC is set.\n\nThe workaround is to set .IsTransactional = false but that will disable the first level retries so it\'s not always acceptable\n\n### How to test\n\n* Configure a endpoint to supress dtc\n* Disable the DTC service\n\nRun the endpoint and make sure that it doesn\'t blow up'
613,'andreasohlund',"The TimeoutManager doesn't preserve the ReplyToAddress\nWhen sending a timeout to the TM the ReplyToAddress will always be set to Address.Local when the timeout fires.\n\n### How to test\nIn the timeout manager sample - Create a new endpoint (needs to be a new endpoint) that sends a message to start the SimpleSaga. Set a timeout and do a bus.reply when the timeout fires.\n\nReply should go back to the new endpoint"
612,'johnsimons',"SLR only retries once after a message has been sent back using ReturnToSourceQueue\nTo replicate:\n\n1. Run the ErrorHandling sample\n2. After a message reaches the Error Q, run RTTSQ.exe and have it sent back\n3. Notice that it's retried but then sent back to the error q immediately\n\nThe fix is to have the tool remove the NServiceBus.Retries header"
611,'andreasohlund','If SLR is on only log messagas failing the max times as WARN instead of ERROR\nThe ERROR log should happen when the SLR gives up'
610,'andreasohlund','Have the nuget nsb.host packate setup a EndpointConfig on install\nWhen the host package is installed in a new project we should create a template endpointconfig.cs\n\nEndpointConfig:IConfigureThisEndpoint,As_aServer //make this As_aPublisher if you intend to publish from this endpoint'
609,'andreasohlund','Reintroduce the SkipDeserialization flag\nIn 2.X we had this flag that turned of deserialization and prevented the invocation of handlers. This got lost when we refactored the transport in 3.0. We should add it back since its needed for users doing more infrastructure related things on the main endpoint.\n\n### How to test\nCreate a endpoint and new up a transactional transport. Set the flag to false and add a handler from TransportMessageReceived. Make sure that no serializer is invoked '
608,'andreasohlund',"Support throughput limitation across multiple threads\nRight now the MaxThroughput limit is confusing users since we force them to run on on thread and that makes the throughput bound to the time it takes for the messagehandler to execute. Eg. if your handler takes 100 ms the max throughput will be 10 msg/s even if you have a 32 msg/s license. We've already had a support case complaining about this. The code for this will be very tricky so there are great risks involved though. One way would be to create our own TaskScheduler like suggested here:\n\n#498\n\nThe upside would be:\n\n* Throughput limits would now be for the entire endpoint regardless of number of threads. Which makes more sense to our users.\n* We can remove the whole thread limitation thing. Essentially only using the throughput to limit the users , this makes it easier to explain to our users as well as simplifying license generation and management.\n* More flexible for users that needs multithreaded but not for throughput reasons.\n\nDownside\n* The code to do this will probably be non-trivial\n\nOther related issues:\n#384 "
607,'johnsimons','Timeouts may increase on endpoint restarts\nIf the endpoint is restarted while there are timeouts queued up in the timeout queue two things may happen:\n1. This only happens if using more than 1 thread:\n```\n2012-08-14 12:56:37,355 [4] FATAL NServiceBus.Hosting.GenericHost [(null)] - Raven.Client.Exceptions.NonAuthoritativeInformationException: Document TimeoutData/27285 returned Non Authoritative Information (probably modified by a transaction in progress) and AllowNonAuthoritativeInformation is set to false\nat Raven.Client.Document.InMemoryDocumentSessionOperations.TrackEntity[T](String key, RavenJObject document, RavenJObject metadata)\nat Raven.Client.Document.SessionOperations.QueryOperation.Deserialize[T](RavenJObject result)\nat System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\nat System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\nat System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\nat Raven.Client.Document.SessionOperations.QueryOperation.Complete[T]()\nat Raven.Client.Document.AbstractDocumentQuery`2.GetEnumerator()\nat Raven.Client.Linq.RavenQueryInspector`1.GetEnumerator()\nat System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\nat NServiceBus.Timeout.Hosting.Windows.Persistence.RavenTimeoutPersistence.GetAll()\nat NServiceBus.Timeout.Core.TimeoutRunner.CacheExistingTimeouts()\nat NServiceBus.Timeout.Core.TimeoutRunner.Run()\nat System.Collections.Generic.List`1.ForEach(Action`1 action)\nat NServiceBus.Unicast.UnicastBus.NServiceBus.IStartableBus.Start(Action startupAction)\nat NServiceBus.Hosting.GenericHost.Start() in c:\\TeamCity\\buildAgent\\work\\nsb.master_4\\src\\hosting\\NServiceBus.Hosting\\GenericHost.cs:line 34\n```\n  This brings down the endpoint\n\n2.The timeouts increase in the timeout queue if there were timeouts queued before the endpoint is shutdown\n'
600,'andreasohlund','Fixes #599\nReceiveChannel.Default on every channel returned from GatewayConfig.GetChannels() was always false'
599,'andreasohlund','Replies to gateway messages always come back on the first channel\nMoving Default=true to the second channel in the configuration of Headquarter project (gateway sample) does nothing\n\n&lt;Channels&gt;\n  &lt;Channel Address=&quot;http://localhost:25899/Headquarter/&quot; ChannelType=&quot;Http&quot;/&gt;\n  &lt;Channel Address=&quot;http://localhost:25899/Headquarter2/&quot; ChannelType=&quot;Http&quot; Default=&quot;true&quot;/&gt;\n&lt;/Channels&gt;\n\nThe reply from SiteA always comes back through the first channel\n\n### How to test\nRun the gateway sample and make sure that the response from site A is arriving on the channel marked as default'
597,'johnsimons','Remove Get|SetHeader extension methods from object\nWe need to find another way to get|set the headers since having them as extension methods on object is cluttering the intellisense for our users. Related to #596\n\nPerhaps move them back to IMessage and add a Bus.SetMessageHeader(msg,key,value) +Bus.GetMessageHeader(msg,key) for users in unobtrusive mode'
596,'johnsimons','Remove unneeded extension methods from Object\nRemove all extension methods for object except GetHeader and SetHeader\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/core/NServiceBus/ExtensionMethods.cs#L66\n\nNot that SetDestinationSitesHeader is used. Just replace it with msg.SetHeader(Headers.DestinationSites, "xyz");'
594,'andreasohlund','Enable dependency injection for our regular installers\n'
590,'johnsimons','Some gateway messages do not get sent when mixing convention and key addresses\n```\r\nBus.SendToSites(new[] { "http://localhost:25899/SiteA/", "SiteB" }, new PriceUpdated\r\n                {\r\n                    ProductId = 2,\r\n                    NewPrice = 100.0,\r\n                    ValidFrom = DateTime.Today\r\n                });\r\n```\r\nMessage is delivered to SiteB only\r\n\r\nProblem\'s in `GatewaySender.OnTransportMessageReceived().` `CloneAndSendLocal()` is called only once\r\n\r\nChanging \r\n`var destinationSites = GetDestinationSitesFor(messageToDispatch);`\r\nto\r\n`var destinationSites = GetDestinationSitesFor(messageToDispatch).ToList();`\r\nfixes the problem but seems like a hack.\r\n\r\nNot sure what the underlying issue is.\r\n\r\n'
589,'johnsimons','StackOverflowException at startup in the MessageMapper\nFound a strange behavior here in the MessageMapper:\n\n        private static string GetTypeName(Type t)\n        {\n            var args = t.GetGenericArguments();\n            if (args.Length == 2)\n                if (typeof(KeyValuePair<,>).MakeGenericType(args) == t)\n                    return t.SerializationFriendlyName();\n\n            return t.FullName;\n        }\n\nWe get at startup a StackOverflowException in the “GetGenericArguments” call, we do not know which is the type causing the exception, debugging it is a pain due to the stack overflow and the fact that we have something like 4000 types that get registered in the serializer.\nQuestion: should not the code be safely changed to?\n\n        private static string GetTypeName(Type t)\n        {\n            If( t.IsGenericType )\n           {\n                var args = t.GetGenericArguments();\n                 if (args.Length == 2)\n                     if (typeof(KeyValuePair<,>).MakeGenericType(args) == t)\n                         return t.SerializationFriendlyName();\n            }\n            return t.FullName;\n        }\n\nBecause I’ve seen that GetGenericArguments does a recursion that can be very long and maybe there are cases where if the type is not a generic type that recursion leads to a StackOverflowException.\n\n.m\n'
586,'andreasohlund','SLR retry: Wrong \'Response\' header value in MSMQ message\nThis issue is related to issue #525.\n\nThe fix for issue #525 makes sure that the messages in the error queue have the correct header.\n\nProblem now is with messages that don\'t reach the error queue, but are successfully processed during one of the Second level retries. These messages have the incorrect Response header.\n\n### How to test\nRun the ErrorHandling sample and make sure that the printed "ReplyToAddress" stays consistent across retries'
585,'johnsimons','Remove the IReceiveMessages.HasMessage\nAlso refactor the existing implementations and the transactional transport to not use it'
584,'andreasohlund','DataBus Properties do not get sent via the Gateway\nIdempotentChannelForwarder.TransmittDataBusProperties() never goes into the foreach loop, so IdempotentChannelForwarder.Transmit is never called for the databus messages. \nThe problem appears to be with the header prefix. All header keys appear to have "NServiceBus.Header" at the start.\n\n### How to test\nRun the gateway sample and make sure that the "LargeString" property is printed ok in both site A and B'
583,'johnsimons',"Misleading exception during send large message\nWhen I send message that is bigger than 4MB I get ConfigurationException, that contains QueueNotFoundException. It's a little misleading because configuration is valid and queue exist.\n\nCommon.Logging.ConfigurationException: The destination queue 'consoletest@slawek' could not be found. You may have misconfigured the destination for this kind of message (ConsoleApplication9.MyMessage) in the MessageEndpointMappings of the UnicastBusConfig section in your configuration file. It may also be the case that the given queue just hasn't been created yet, or has been deleted. ---> NServiceBus.Unicast.Queuing.QueueNotFoundException ---> System.Messaging.MessageQueueException: Insufficient resources to perform operation.\n   at System.Messaging.MessageQueue.SendInternal(Object obj, MessageQueueTransaction internalTransaction, MessageQueueTransactionType transactionType)\n   at System.Messaging.MessageQueue.Send(Object obj, MessageQueueTransactionType transactionType)\n   at NServiceBus.Unicast.Queuing.Msmq.MsmqMessageSender.NServiceBus.Unicast.Queuing.ISendMessages.Send(TransportMessage message, Address address)\n   --- End of inner exception stack trace ---\n   at NServiceBus.Unicast.Queuing.Msmq.MsmqMessageSender.NServiceBus.Unicast.Queuing.ISendMessages.Send(TransportMessage message, Address address)\n   at NServiceBus.Unicast.UnicastBus.SendMessage(List`1 addresses, String correlationId, MessageIntentEnum messageIntent, Object[] messages)\n   --- End of inner exception stack trace ---\n   at NServiceBus.Unicast.UnicastBus.SendMessage(List`1 addresses, String correlationId, MessageIntentEnum messageIntent, Object[] messages)\n   at NServiceBus.Unicast.UnicastBus.SendMessage(Address address, String correlationId, MessageIntentEnum messageIntent, Object[] messages)\n   at NServiceBus.Unicast.UnicastBus.SendMessage(String destination, String correlationId, MessageIntentEnum messageIntent, Object[] messages)\n   at NServiceBus.Unicast.UnicastBus.NServiceBus.IBus.Send(String destination, Object[] messages)\n   at ConsoleApplication9.Program.Main(String[] args)"
582,'andreasohlund','When configuring the SLR in app.config enabled should default to true\nIf you just add:\n\n  <SecondLevelRetriesConfig TimeIncrease="00:00:05" NumberOfRetries="1"/>\n\nit will be disabled'
580,'andreasohlund','The gateway notification mechanism is broken\nChange MessageNotifier to be singlecall so that users can register for the notification.\n\nWe should also consider creating a better mechanism for those notifications\n\n### How to test\nRun the gateways sample and make sure that the sample notifier in the gateway project is invoked when a message has been sent to a site'
578,'johnsimons',"RavenDB and ResourceManagerId\nIn a side by side deployment (this also affect the Distributor if we have more than 1 worker on the same machine), RavenDB distributed transaction get assigned the same ResourceManagerId.\nAnd this causes the following error:\n```\n2012-08-08 13:33:50,470 [Worker.14] WARN  NServiceBus.Unicast.Transport.Transactional.TransactionalTransport [(null)] <(null)> - Failed raising 'transport message received' event for message with ID=6601cd40-306c-41fc-a0d5-fc5aa25d3218\\15347598\nSystem.Runtime.InteropServices.COMException (0x8004D102): A resource manager with the same identifier is already registered with the specified transaction coordinator. (Exception from HRESULT: 0x8004D102)\n   at System.Transactions.Oletx.IDtcProxyShimFactory.CreateResourceManager(GuidresourceManagerIdentifier, IntPtr managedIdentifier, IResourceManagerShim& resourceManagerShim)\n   at System.Transactions.Oletx.OletxResourceManager.get_ResourceManagerShim()\n   at System.Transactions.Oletx.OletxResourceManager.EnlistDurable(OletxTransaction oletxTransaction, Boolean canDoSinglePhase, IEnlistmentNotificationInternalenlistmentNotification, EnlistmentOptions enlistmentOptions)\n   at System.Transactions.Oletx.OletxTransaction.EnlistDurable(Guid resourceManagerIdentifier, ISinglePhaseNotificationInternal singlePhaseNotification, Boolean canDoSinglePhase, EnlistmentOptions enlistmentOptions)\n   at System.Transactions.TransactionStatePromotedBase.EnlistDurable(InternalTransaction tx, Guid resourceManagerIdentifier, IEnlistmentNotification enlistmentNotification, EnlistmentOptions enlistmentOptions, Transaction atomicTransaction)\n   at System.Transactions.Transaction.EnlistDurable(Guid resourceManagerIdentifier, IEnlistmentNotification enlistmentNotification, EnlistmentOptions enlistmentOptions)\n   at Raven.Client.Document.InMemoryDocumentSessionOperations.TryEnlistInAmbientTransaction() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\InMemoryDocumentSessionOperations.cs:line 874\n   at Raven.Client.Document.InMemoryDocumentSessionOperations.PrepareForSaveChanges() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\InMemoryDocumentSessionOperations.cs:line 773\n   at Raven.Client.Document.DocumentSession.SaveChanges() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\DocumentSession.cs:line 406\n   at NServiceBus.Timeout.Hosting.Windows.Persistence.RavenTimeoutPersistence.Remove(String timeoutId) in c:\\Projects\\NServiceBus\\src\\timeout\\NServiceBus.Timeout.Hosting.Windows\\Persistence\\RavenTimeoutPersistence.cs:line 110\n   at NServiceBus.Timeout.Core.Dispatch.TimeoutDispatchHandler.Handle(TransportMessage message) in c:\\Projects\\NServiceBus\\src\\timeout\\NServiceBus.Timeout.Core\\Dispatch\\TimeoutDispatchHandler.cs:line 23\n   at NServiceBus.Timeout.Hosting.Windows.TimeoutMessageProcessor.OnTransportMessageReceived(Object sender, TransportMessageReceivedEventArgs e) in c:\\Projects\\NServiceBus\\src\\timeout\\NServiceBus.Timeout.Hosting.Windows\\TimeoutMessageProcessor.cs:line 49\n   at NServiceBus.Unicast.Transport.Transactional.TransactionalTransport.OnTransportMessageReceived(TransportMessage msg) in c:\\Projects\\NServiceBus\\src\\impl\\unicast\\transport\\NServiceBus.Unicast.Transport.Transactional\\TransactionalTransport.cs:line 480\n```\nThe problem is that we use the [endpoint address to generate a deterministic guid](https://github.com/NServiceBus/NServiceBus/blob/master/src/impl/Persistence/RavenPersistence/NServiceBus.Persistence.Raven/RavenPersistenceConstants.cs#L30) to use as ResourceManagerId\n\nHowever as explained in [this thread](https://groups.google.com/d/topic/ravendb/LqnFP8dSgYM/discussion) we shouldn't need to assign a deterministic `Guid` and instead we could use `Guid.NewGuid`."
577,'johnsimons','Obsolete the LegacySiteRouter in the gateway\nAnd the LegacyEndpointRouter'
576,'johnsimons',"Message type header check in Unicastbus breaks v3 compatibility\nWe can't throw when 'the message intent is Subscribe, but the subscription message type header is missing' as this would break backward compatibility with v3 subscription messages"
572,'johnsimons','Lambda support for Unity container\nSee #386'
571,'andreasohlund','SLR retries causes workers to send extra ready messages\nWith SLR enabled each retry will cause the worker to send a readymessage which will fool the distributor to think that the worker has more capacity that it really has. The fix is to not send a new ready message as the result of a retried message beeing processes.\n\n\n### Testing procedures\n1. Run the ScaleOut sample and have the handler throw an exception.\n2. This should not lead to the number of messages in the storage queue increasing beyond 3 (the sample has 3 workers with one thread each)'
569,'johnsimons','Upgrade to Windsor 3.1\n'
568,'johnsimons','SatelliteTransportBuilder always use MsmqMessageReceiver\nSatelliteTransportBuilder always use MsmqMessageReceiver so it is impossible to use this feature with custom transport. It should be way to setup custom receiver like in TimeoutMessageProcessor.'
566,'johnsimons','DBSubscriptionStorageConfig and hibernate-configuration in the same configuration file\nI am trying to configure DBSubscriptionStorageConfig with NSB 3.2.6 and NHibernate 3.3.0.400. Service is hosted with NServiceBus.Host.exe.\n\nMessage handlers are also using NHibernate as part of their logic and that leads us to have both \n```xml\n<DBSubscriptionStorageConfig UpdateSchema="true">\n...\nconfiguration for Subscription Storage database\n...\n</DBSubscriptionStorageConfig>  \n```\nand  \n```xml\n<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">\n...\nconfiguration for service database\n...\n</hibernate-configuration>\n```\nsections in configuration file.\n\nWhen I initialize the bus with the following code\n\n```C#\nconfigure\n   .DefaultBuilder()           \n   .DBSubcriptionStorage() \n```\nit fails with the following exception.\n\n```c#\nSystem.ArgumentException: An item with the same key has already been added.\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\n   at NHibernate.Cfg.Configuration.AddProperties(IDictionary`2 additionalProperties)\n   at NServiceBus.ConfigureNHibernateSubscriptionStorage.DBSubcriptionStorage(Configure config)\n   at IfInsurance.Core.MessagingCommon.DefaultNServiceBusEndpointConfig.ConfigureNServiceBus()\n   at IfInsurance.Core.MessagingCommon.DefaultNServiceBusEndpointConfig.Init()\n```\nIf I remove nhibernate-configuration section from config file it does not fail, but I have to specify NHibernate configuration for service database.\n\nAs a workaround service nhibernate configuration setting can be specified in hibernate.cfg.xml file. '
565,'johnsimons','Saga.RequestUtcTimeout(TimeSpan) seems mis-named\nNote: I may be confused about the intent of this method. feel free to correct me :)\n\nSo a timeout can be requested in 2 ways \n\n * A given date+time in the future. This is where UTC is important\n * A give period of time from now. In this case UTC is irrelevant\n\nIn fact talking about "timespans" in the context of UTC seems to make no sense in this case.\n\nTo further illustrate would ther be any difference bewtween the current Saga.RequestUtcTimeout(TimeSpan) and a hypothetical method Saga.RequestTimeout(TimeSpan)  ?\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/core/NServiceBus.Saga/Saga.cs'
563,'johnsimons',"Fix #562: Create fluent configuration for .DisableGateway()\nSorry about the first commit with the spacing. I'll make sure Visual Studio is set to keep spaces from now on."
560,'johnsimons','Timeouts set in the past blows up with KeyNotFoundExceptions\nTo reproduce: (using the TimeoutManager sample)\n\nModify the start handler in the SimpleSaga to set a timeout in the past:\n\nRequestUtcTimeout<MyTimeOutState>(DateTime.Now.AddSeconds(-10));\n\nThis causes the saga infrastructure to do a SendLocal instead of a defer:\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/core/NServiceBus.Saga/Saga.cs#L144\n\nthis in turn causes the "NServiceBus.Expiry" header to not be set (that happens in the defer).\n\nWhen the message comes back in with no header this means that its not considered a timeout message:\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/Sagas/NServiceBus.Sagas.Impl/SagaDispatcherFactory.cs#L27\n\nand this means that the wrong method is invoked:\n\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/Sagas/NServiceBus.Sagas.Impl/SagaDispatcherFactory.cs#L76\n\n\nWe need to make sure that the header is set before we send local. Or push that check down into bus.Defer (which I think we already do on the master)\n\n'
559,'johnsimons','Call document store dispose on exit\nTo prevent:\n```\nStackTrace of un-disposed document store recorded. Please make sure to dispose any document store in the tests in order to avoid race conditions in tests.\nat Raven.Client.Document.DocumentStore..ctor()\nat Commenter.Handlers.SetupContainer.Init()\nat NServiceBus.Hosting.Configuration.ConfigManager.ConfigureCustomInitAndStartup()\nat NServiceBus.Hosting.GenericHost.PerformConfiguration()\nat NServiceBus.Hosting.GenericHost.Start()\nat Magnum.StateMachine.EventActionList`1.Execute(T stateMachine, Event event, Object parameter)\nat Magnum.StateMachine.State`1.RaiseEvent(T instance, BasicEvent`1 eevent, Object value)\nat Magnum.StateMachine.StateMachine`1.RaiseEvent(Event raised)\n```\nfrom showing to the user.\n\nSee https://github.com/ravendb/ravendb/blob/master/Raven.Client.Lightweight/Document/DocumentStore.cs#L263\n'
558,'andreasohlund','Use a comb guid as the transport message id instead of the MSMQ message id\nIn order to better support users running without the DTC we should use a guid generated by the unicastbus as the transportmessage id instead of relying on the id that MSMQ gives us back. This way we can know the ids ahead of time and there by support the "outbox" pattern mentioned here:\n\nhttp://blogs.msdn.com/b/clemensv/archive/2012/07/30/transactions-in-windows-azure-with-service-bus-an-email-discussion.aspx\n\nThis also decouples us further from MSMQ by not relying in the id.\n\nQ: What do we do about the datatype (header? new property on TM?, change the ID property to guid? keep it as string?)\n\n* Move the combguid generator to a more comon location so we can reuse it\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/impl/Sagas/NServiceBus.Sagas.Impl/GuidCombGenerator.cs\n\n* Assign the guid when creating the transport message\n\n* Investigate how this affects the "OriginalId" header which is pretty much redundant with this change\n\n* Make sure that the id stays consistent across retries, SLR and the error q just like today\n\n* Make sure that we\'re backwards compatible with NSB 2.X /3.X messages\n\n* Test for performance implications\n\n'
557,'andreasohlund','DataBusProperty does not serialize correctly using XMLMessageSerializer in NSB v4.0\nHere is what the serialized message looked like before:\n```xml\n<?xml version="1.0"?>\n<Messages xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://tempuri.net/Receiver.Messages">\n\t<MessageWithLargePayload>\n\t\t<SomeProperty>This message contains a large blob that will be sent on the data bus</SomeProperty>\n\t\t<LargeBlob>\n\t\t\t<Key>2012-07-26_03\\cef1c00c-8853-491d-b250-59a0d0387bd1</Key>\n\t\t\t<HasValue>true</HasValue>\n\t\t</LargeBlob>\n\t</MessageWithLargePayload>\n</Messages>\n```\n\nHere is what it looks now:\n```xml\n<?xml version="1.0"?>\n<Messages xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://tempuri.net/Receiver.Messages">\n\t<MessageWithLargePayload>\n\t\t<SomeProperty>This message contains a large blob that will be sent on the data bus</SomeProperty>\n\t\t<LargeBlob>\n\t\t\t<value>\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</value>\n\t\t\t<_x003C_Key_x003E_k__BackingField>2012-07-30_10\\10e62ed0-364c-48b0-a745-ae8a4d9b15d1</_x003C_Key_x003E_k__BackingField>\n\t\t\t<_x003C_HasValue_x003E_k__BackingField>true</_x003C_HasValue_x003E_k__BackingField>\n\t\t</LargeBlob>\n\t</MessageWithLargePayload>\n</Messages>\n```'
553,'johnsimons','#551 Added signing to NServiceBus.Testing assembly\n'
551,'johnsimons','NServiceBus.Testing is not signed\nNServiceBus.Testing assembly should be signed to allow InternalsVisibleTo attribute to work.'
546,'johnsimons',"New send emails won't work if the users are not using the XmlSerializer\nNew public API to send emails (`public static void SendEmail(this IBus bus, MailMessage message)`) won't work if the users are not using the `XmlSerializer`.\n\n`System.Net.Mail.MailMessage` is not serializable."
544,'johnsimons','Add .DefineTimeToBeReceived(Func<Type,TimeSpan) as extension method on Configure\nAllow users to define Time To Be Received during Bus initialization.'
540,'johnsimons','Disabling TimeoutManager and using AllowSubscribeToSelf in config fails at startup\nusing the following config:\n\nclass EndpointConfig : IConfigureThisEndpoint,\n     AsA_Publisher,\n     IWantCustomInitialization\n{\n     public void Init()\n     {\n          NServiceBus.Configure.With()\n                .Log4Net()\n                .DefaultBuilder()\n                .XmlSerializer()\n                .MsmqSubscriptionStorage()\n                .DisableRavenInstall()\n                .DisableTimeoutManager()\n                .Sagas()\n                     .WithMongoSagaPersister()\n                .MsmqTransport()\n                     .IsTransactional( true )\n                     .PurgeOnStartup( false )\n                .UnicastBus()\n                .AllowSubscribeToSelf()\n                .ImpersonateSender( false );\n     }\n}\n\nwith ".DisableTimeoutManager()" and ".AllowSubscribeToSelf()" fails at startup with the following exception:\n\nNo destination could be found for message type NServiceBus.Saga.TimeoutMessage. Check the <MessageEndpointMappings> section of to…. Bla bla…\n'
536,'johnsimons','Unobtrusive definition needed for using DataBus feature\nIt would be nice to be able to use the DataBus feature with unobtrusive mode. This should be definable just like the unobtrusive encryption feature.'
531,'johnsimons','ArgumentException with the message "interface not found"\nIf user has "Break when exceptions cross AppDomain or managed/native boundaries (Managed only)" set, it cause the debugger to break on `HandlerInvocationCache` with the following error:\nArgumentException with the message "interface not found"\n\nSee http://tech.groups.yahoo.com/group/nservicebus/message/14800 for more info.'
530,'johnsimons'," NServiceBus.Core referencing 'AsyncCtpLibrary'\nThis assembly is part of RavenDB.\nIt should be internalized!"
525,'johnsimons',"SLR set the wrong 'Response' value in MSMQ message\nIf SLR is enabled, the response value that the message has is incorrect in the following scenario:\n\n1. Originating Endpoint (NSB Host, configured as a publisher) sends a command to ServerA (NSB Host, configured as a server)\n2. ServerA has SLR enabled\n3. Server A handles the command and responds with a reply\n4. Originating Endpoint has a handler for the reply message\n\nSend a command such that, that command will fail and end up in the error queue.\n\nIf the command fails in ServerA and is forwarded to the errorQ, the response value has ServerA, instead of OriginatingEndpoint.\nSo, the problem is when I reprocess the error message from the error q(after fixing the message content, so ServerA can now reply), ServerA will get the message, but when it tries to reply, it will bomb out, with No handlers found for the message, because it is trying to respond to itself and it doesn't have a handler for the reply message.\n\nWith SLR enabled, the response value (when you look at the message properties in the error q, especially at the Response, its OS:<machinename>\\private$\\servera, instead it should be OS:<machinename>\\private$\\originatingendpoint).\n"
520,'johnsimons',"InMemoryTimeoutPersistence doesn't assign a value to Id\nWhen I defer messages on the bus they go to storage field of `InMemoryTimeoutPersistence` class instance. \nHowever, `Id` property for each of `TimeoutData` is null. \nSo, when the time comes for a message to be processed it goes to error queue because `storage.Remove(storage.Single(t=>t.Id == timeoutId))` throws mentioned above exception. "
518,'johnsimons','Running /installinfrastructure from an endpoint output does not install MSMQ\nMSMQ should be installed when running /installinfrastructure, even if it is done from an endpoint, unless explicitly disabled via the api.'
517,'johnsimons','Automatic endpointname assumes class named "Program"\nSee http://tech.groups.yahoo.com/group/nservicebus/message/14686\n\nIn summary, `DefaultEndpointName.Get()` assumes the entry point class is called *Program*.\nAnd it also assumes that a namespace is used, Namespaces are optional in c#!'
515,'johnsimons','Batch Send fails when sending multiple commands from different namespaces using the XmlSerializer\nRepro steps:\n\n1) Configure an NServiceBus host like so:\n\n```c#\nConfigure.With()\n   .DefineEndpointName(this.GetType().Assembly.GetName().Name.ToLower())\n   .StructureMapBuilder()\n   .XmlSerializer()\n   .Log4Net()\n   .UnicastBus()\n   .LoadMessageHandlers()\n   .MsmqTransport()\n   .IsTransactional(true)\n   .IsolationLevel(IsolationLevel.RepeatableRead)\n   .RunTimeoutManagerWithInMemoryPersistence()\n   .RunTimeoutManager()\n   .MsmqSubscriptionStorage();\n```\n\n2) Define a command in namespace A:\n\n```c#\nnamespace MyApp.Messages.Commands.A\n{\n   [Serializable]\n   public class Command1 : ICommand\n   {\n      public Guid Id { get; set; }\n\n      public Command1(Guid id)\n      {\n         this.Id = id;\n      }\n   }\n}\n```\n\n3) Define a command in namespace B:\n\n```c#\nnamespace MyApp.Messages.Commands.B\n{\n   [Serializable]\n   public class Command2 : ICommand\n   {\n      public Guid Id { get; set; }\n\n      public Command2(Guid id)\n      {\n         this.Id = id;\n      }\n   }\n}\n```\n\n4) Add a command handler to the host service:\n\n```c#\npublic class MyCommandHandler : IHandleMessages<Command1>,\n                                IHandleMessages<Command2>\n{\n   public void Handle(Command1 message)\n   {\n      Console.WriteLine(string.Format("Command1: {0}", message.Id));\n   }\n\n   public void Handle(Command2 message)\n   {\n      Console.WriteLine(string.Format("Command2: {0}", message.Id));\n   }\n}\n```\n\n5) From any client application, REST service, etc., send both commands in a\nbatch:\n\n```c#\nvar commands = new List<ICommand>();\n\ncommands.Add(new Command1(Guid.NewGuid()));\ncommands.Add(new Command2(Guid.NewGuid()));\n\nbus.Send(commands.ToArray());\n```\n\n6) Run the host and the client app and observe the output:\n\n2012-07-02 16:38:36,539 [Worker.17] WARN NServiceBus.Unicast.UnicastBus [(null)\n] <(null)> - Received an empty message - ignoring.\n2012-07-02 16:38:36,539 [Worker.17] WARN NServiceBus.Unicast.UnicastBus [(null)\n] <(null)> - Received an empty message - ignoring.\n\n7) Change the 2 Command definitions to use the same namespace and observe the\noutput:\n\nCommand1: bbe3b63d-f03d-40e1-b0d4-813334cd4e90\nCommand2: a3b578f6-80b5-4bf9-8338-95fca7638628\n\n8) Use different namespaces, but configure NServiceBus to use the\nBinarySerializer. Observe the output:\n\nCommand1: 33c1ccd8-6ada-4a8a-b01a-765d09990a99\nCommand2: 80aa3363-f418-4af2-9563-4f3894c5682c\n\n9) Use different namespaces and the XMLSerializer, but instead send the commands\none at a time and observe the output:\n\nCommand1: 45c3821a-9e16-4b85-8e6c-9546ab663850\nCommand2: 5323e18b-7651-4f3e-a256-b79aeda45b61\n\nObviously this is an over-simplified, non-semantic example, but it should be\nenough to demonstrate the error. Step 6 fails 100% of the time for us.\n\nLet me know if you need any more info.'
514,'johnsimons',"Possible deadlock with Ninject.ObjectBuilder\nI have recently upgraded NServiceBus from 3.0 to 3.2 (and as a result, Ninject from 2.2 to 3.0) and I started to see some weird behaviour on our production server. The server endpoint is configured with 8 worker threads and it stops any processing after a random period of time (ranging from as soon as it gets started to 30 min) without logging any error. When I enabled more logging on the server, the issue was still there, but it was hanging much less frequently. This indicated that it is most likely a thread locking issue as the only thing that changed was the thread blocking pattern.\n\nSo I created a dump file of the process and inspected it with WinDbg. I've found that at the moment I created the dump file, there were 2 threads that were holding 3 locks and both threads had the same end of stack trace:\n\n\t000000002183e0c0 000007fef4643a67 System.Collections.Generic.HashSet`1[[System.__Canon, mscorlib]].Contains(System.__Canon)\n\t000000002183e130 000007ff0023b2a0 NServiceBus.ObjectBuilder.Ninject.Internal.NewActivationPropertyInjectStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)\n\t000000002183e170 000007ff00213668 Ninject.Infrastructure.Language.ExtensionsForIEnumerableOfT.Map[[System.__Canon, mscorlib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>) [c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Infrastructure\\Language\\ExtensionsForIEnumerableOfT.cs @ 32]\n\t000000002183e1c0 000007ff002247bc Ninject.Activation.Context.Resolve() [c:\\Projects\\Ninject\\ninject\\src\\Ninject\\Activation\\Context.cs @ 180]\n\nThe 8 threadpool worker threads were all either on ntdll!NtWaitForSingleObject or on ntdll!ZwWaitForMultipleObjects which means that they were blocked. I can provide more information if needed, like sending the full dump file or extracting more specific information, like call stacks of each thread."
513,'johnsimons',"Cannot deserialize Dictionary<string,string>\nThis was observed on build 4.0.0-alpha2313. \n\nI have a simple Dictionary\\<string, string\\> defined on one of my messages. When I do a Bus.Send() with the message containing the string dictionary, it seems to get serialized correctly, but when the message is de-serialized, the dictionary is always empty. \n\nHas anyone else noticed this? I could try upgrading to the latest 4.0 build, but from reviewing the changesets this doesn't seem likely to produce any different results.\n\nDan"
512,'johnsimons','.RavenPersistence(connectionstringname) always reads "NServiceBus.Persistence" instead of the passed in value\nNSB is not taking into consideration the correct raven url if I specify a different connection string name and pass that into \n`.RavenPersistence(myconnectionstringname)` as opposed to "NServiceBus.Persistence".\n\nI have a NSB server endpoint, whose app.config is\n```xml\n<?xml version="1.0" encoding="utf-8"?>\n<configuration>\n  <configSections>\n    <section name="MessageForwardingInCaseOfFaultConfig" type="NServiceBus.Config.MessageForwardingInCaseOfFaultConfig, NServiceBus.Core" />\n  </configSections>\n  <MessageForwardingInCaseOfFaultConfig ErrorQueue="error" />\n  <connectionStrings>\n    <add name="NServiceBus.Persistence.Something" connectionString="Url = http://localhost:8081;" />\n  </connectionStrings>\n</configuration>\n```\n\nAnd here\'s my initialization code, where I pass a specified connection string that I defined in the app.config.\n```c#\n class ConfigurePersistence : IWantCustomInitialization\n    {\n        public void Init()\n        {\n            NServiceBus.Configure.Instance\n               .RavenPersistence("NServiceBus.Persistence.Something")\n               .RavenSubscriptionStorage()\n               .RavenSagaPersister()\n               .RunTimeoutManager();\n        }\n    }\n```\nThere\'s no way, this endpoint should start, because locally, Raven runs on 8080 on my machine, but it starts fine (its connecting to 8080!) and since I have raven running on 8080 it works!\n\nIf I change the app.config to \n```xml\n<connectionStrings>\n    <add name="NServiceBus.Persistence" connectionString="Url = http://localhost:8081;" />\n  </connectionStrings>\n```\nand my code to \n```c#\nclass ConfigurePersistence : IWantCustomInitialization\n    {\n        public void Init()\n        {\n            NServiceBus.Configure.Instance\n               .RavenPersistence()\n               .RavenSubscriptionStorage()\n               .RavenSagaPersister()\n               .RunTimeoutManager();\n        }\n    }\n```\nI then get the expected unable to connect error, because now, its actually using the url that I have provided!'
510,'andreasohlund','The wrong handle method fire when requesting a timeout for a message that the saga it self handles\nTo reproduce: (using the TimeoutManager sample)\n\n1. Modify the simple saga to request a timeout using the StartMessage (in the same method that handles the start message)\n2. Implement IHandleTimeouts of StartMessage\n3. Notice that when the timeout fires the Handle method fires instead of the Timeout method\n\nThis essentially creates a endless loop. The fix is to add the handler interface (IHandleMessages,IHandleTimeouts) to the invocation cache so that we can pick the correct one)'
509,'johnsimons','Running /installinfrastructure from an endpoint ouput\nIf I run NServiceBus.Host.exe /installinfrastructure on a fresh machine (no previous install of RavenDB) when there is a class implementing IConfigureThisEndpoint, then I get this error:\n\n```text\nNServiceBus.Host.exe /installInfrastructure\nInitializing the installer in the Install AppDomain\nExecuting the NServiceBus installers\n2012-07-02 15:05:12,515 [1] INFO  NServiceBus.Licensing [(null)] <(null)> - Chec\nking available license...\n2012-07-02 15:05:12,706 [1] INFO  NServiceBus.Licensing [(null)] <(null)> - Coul\nd not find license file: C:\\Projects\\NServiceBus\\Samples\\Notifications\\NotifySam\nple\\bin\\Debug\\License\\License.xml\n2012-07-02 15:05:12,716 [1] WARN  NServiceBus.Licensing [(null)] <(null)> - No v\nalid license file was found. The host will be limited to a throughput of 1msg/s.\n\nFailed to execute installers: System.Net.WebException: Unable to connect to the\nremote server ---> System.Net.Sockets.SocketException: No connection could be ma\nde because the target machine actively refused it 127.0.0.1:8080\n   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddre\nss socketAddress)\n   at System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Sock\net s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state,\nIAsyncResult asyncResult, Int32 timeout, Exception& exception)\n   --- End of inner exception stack trace ---\n   at System.Net.HttpWebRequest.GetResponse()\n   at Raven.Client.Connection.HttpJsonRequest.ReadStringInternal(Func`1 getRespo\nnse) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonReq\nuest.cs:line 288\n   at Raven.Client.Connection.HttpJsonRequest.ReadResponseString() in c:\\Builds\\\nRavenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonRequest.cs:line 207\n   at Raven.Client.Connection.HttpJsonRequest.ReadResponseJson() in c:\\Builds\\Ra\nvenDB-Stable\\Raven.Client.Lightweight\\Connection\\HttpJsonRequest.cs:line 611\n   at Raven.Client.Connection.ServerClient.DirectGet(String serverUrl, String ke\ny) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.\ncs:line 270\n   at Raven.Client.Connection.ServerClient.<>c__DisplayClass1.<Get>b__0(String u\n) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Connection\\ServerClient.c\ns:line 114\n   at Raven.Client.Connection.ServerClient.TryOperation[T](Func`2 operation, Str\ning operationUrl, Boolean avoidThrowing, T& result) in c:\\Builds\\RavenDB-Stable\\\nRaven.Client.Lightweight\\Connection\\ServerClient.cs:line 231\n   at Raven.Client.Connection.ServerClient.ExecuteWithReplication[T](String meth\nod, Func`2 operation) in c:\\Builds\\RavenDB-Stable\\Raven.Client.Lightweight\\Conne\nction\\ServerClient.cs:line 195\n   at Raven.Client.Connection.ServerClient.Get(String key) in c:\\Builds\\RavenDB-\nStable\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:line 114\n   at Raven.Client.Extensions.MultiTenancyExtensions.EnsureDatabaseExists(IDatab\naseCommands self, String name, Boolean ignoreFailures) in c:\\Builds\\RavenDB-Stab\nle\\Raven.Client.Lightweight\\Extensions\\MultiTenancyExtensions.cs:line 53\n   at NServiceBus.ConfigureRavenPersistence.EnsureDatabaseExists(DocumentStore s\ntore) in c:\\Projects\\NServiceBus\\src\\impl\\Persistence\\RavenPersistence\\NServiceB\nus.Persistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 148\n   at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure config, I\nDocumentStore store) in c:\\Projects\\NServiceBus\\src\\impl\\Persistence\\RavenPersis\ntence\\NServiceBus.Persistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 114\n\n   at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure config) i\nn c:\\Projects\\NServiceBus\\src\\impl\\Persistence\\RavenPersistence\\NServiceBus.Pers\nistence.Raven\\Config\\ConfigureRavenPersistence.cs:line 33\n   at NServiceBus.Hosting.Windows.Profiles.Handlers.ProductionProfileHandler.NSe\nrviceBus.Hosting.Profiles.IHandleProfile.ProfileActivated() in c:\\Projects\\NServ\niceBus\\src\\hosting\\NServiceBus.Hosting.Windows\\Profiles\\Handlers\\ProductionProfi\nleHandler.cs:line 13\n   at NServiceBus.Hosting.Profiles.ProfileManager.<ActivateProfileHandlers>b__1c\n(IHandleProfile hp) in c:\\Projects\\NServiceBus\\src\\hosting\\NServiceBus.Hosting\\P\nrofiles\\ProfileManager.cs:line 126\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Hosting.Profiles.ProfileManager.ActivateProfileHandlers() in c\n:\\Projects\\NServiceBus\\src\\hosting\\NServiceBus.Hosting\\Profiles\\ProfileManager.c\ns:line 126\n   at NServiceBus.Hosting.Profiles.ProfileActivator.Run() in c:\\Projects\\NServic\neBus\\src\\hosting\\NServiceBus.Hosting\\Profiles\\ProfileActivator.cs:line 19\n   at NServiceBus.Configure.<Initialize>b__10(Type t) in c:\\Projects\\NServiceBus\n\\src\\config\\NServiceBus.Config\\Configure.cs:line 303\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Configure.ForAllTypes[T](Action`1 action) in c:\\Projects\\NServ\niceBus\\src\\config\\NServiceBus.Config\\Configure.cs:line 322\n   at NServiceBus.Configure.Initialize() in c:\\Projects\\NServiceBus\\src\\config\\N\nServiceBus.Config\\Configure.cs:line 300\n   at NServiceBus.Installer`1.Install() in c:\\Projects\\NServiceBus\\src\\installat\nion\\NServiceBus.Installation\\Install.cs:line 101\n   at NServiceBus.Hosting.GenericHost.Install[TEnvironment]() in c:\\Projects\\NSe\nrviceBus\\src\\hosting\\NServiceBus.Hosting\\GenericHost.cs:line 68\n   at NServiceBus.Hosting.Windows.WindowsHost.Install() in c:\\Projects\\NServiceB\nus\\src\\hosting\\NServiceBus.Hosting.Windows\\WindowsHost.cs:line 77\n   at NServiceBus.Hosting.Windows.Installers.WindowsInstaller.RunInstall() in c:\n\\Projects\\NServiceBus\\src\\hosting\\NServiceBus.Hosting.Windows\\Installers\\Windows\nInstaller.cs:line 45\nStackTrace of un-disposed document store recorded. Please make sure to dispose a\nny document store in the tests in order to avoid race conditions in tests.\n   at Raven.Client.Document.DocumentStore..ctor()\n   at NServiceBus.ConfigureRavenPersistence.RavenPersistence(Configure config)\n   at NServiceBus.Hosting.Windows.Profiles.Handlers.ProductionProfileHandler.NSe\nrviceBus.Hosting.Profiles.IHandleProfile.ProfileActivated()\n   at NServiceBus.Hosting.Profiles.ProfileManager.<ActivateProfileHandlers>b__1c\n(IHandleProfile hp)\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Hosting.Profiles.ProfileManager.ActivateProfileHandlers()\n   at NServiceBus.Hosting.Profiles.ProfileActivator.Run()\n   at NServiceBus.Configure.<Initialize>b__10(Type t)\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Configure.ForAllTypes[T](Action`1 action)\n   at NServiceBus.Configure.Initialize()\n   at NServiceBus.Installer`1.Install()\n   at NServiceBus.Hosting.GenericHost.Install[TEnvironment]()\n   at NServiceBus.Hosting.Windows.WindowsHost.Install()\n   at NServiceBus.Hosting.Windows.Installers.WindowsInstaller.RunInstall()\n```'
508,'johnsimons','NSB.Testing, ExpectTimeoutToBeSetAt w/ timeout in the past\nIf you set a timeout that\'s in the past, NSB.Testing will fail `ExpectTimeoutToBeSetAt` specifications, although the timeout was set as expected. How NSB internally implements the timeout delivery (sending locally vs. using TimeoutManager) does not matter, IMHO. The observation *that* a timeout appeared does matter.\n\nI found a workaround (see `TimeoutInThePastAssertingSendLocal`) that works as long as you don\'t assert on actions happening after the timeout (see `TimeoutInThePastWithSendOnTimeout`).\n\nA little background: Just today a spec that was green turned red. It used 30/06/2012 12 PM as the timeout as has been green for a couple of weeks (when the timeout would be in the future). Today the timeout turned being the past, hence the red specs. The current implementation is not neccessarily making me fall into the pit if success and I would very much like it to be changed.\n\nThanks!\n\nSample/repro:\n```C#\n  public class Test\n  {\n    [TestFixtureSetUp]\n    public void TestFixtureSetUp()\n    {\n      MessageConventionExtensions.IsMessageTypeAction = t => t.Namespace != null &&\n                                                             t.Namespace.Contains(".Messages");\n      NServiceBus.Testing.Test.Initialize();\n    }\n\n    [Test]\n    public void TimeoutInThePast()\n    {\n      // Fails\n      // NSB doesn\'t handle the timeout with the TimeoutManager but sends the timeout immediately.\n\n      var message = new TheMessage { TimeoutAt = DateTime.MinValue };\n\n      NServiceBus.Testing.Test\n        .Saga<TheSaga>()\n        .ExpectTimeoutToBeSetAt<TheTimeout>((m, at) => at == DateTime.MinValue.ToUniversalTime())\n        .When(s => s.Handle(message));\n    }\n\n    [Test]\n    public void TimeoutInThePastAssertingSendLocal()\n    {\n      // Succeeds\n      // We can assert that the message is sent locally. I don\'t care, conceptually I\'m interested in the timeout.\n\n      var message = new TheMessage { TimeoutAt = DateTime.MinValue };\n\n      NServiceBus.Testing.Test\n        .Saga<TheSaga>()\n        .ExpectSendLocal<TheTimeout>(m => true)\n        .When(s => s.Handle(message));\n    }\n\n    [Test]\n    public void TimeoutInThePastWithSendOnTimeout()\n    {\n      // Fails\n      // More fun: Despite the fact that the timeout was asserted, WhenSagaTimesOut now throws a KeyNotFoundException.\n      // The error message probably something that can be improved as well (when the Saga cannot timeout).\n\n      var message = new TheMessage { TimeoutAt = DateTime.MinValue };\n\n      NServiceBus.Testing.Test\n        .Saga<TheSaga>()\n        .ExpectSendLocal<TheTimeout>(m => true)\n        .When(s => s.Handle(message))\n        .ExpectSend<TheMessageSentAtTimeout>()\n        .WhenSagaTimesOut();\n    }\n\n    [Test]\n    public void TimeoutInTheFuture()\n    {\n      // Succeeds\n\n      var message = new TheMessage { TimeoutAt = DateTime.MaxValue };\n\n      NServiceBus.Testing.Test\n        .Saga<TheSaga>()\n        .ExpectTimeoutToBeSetAt<TheTimeout>((m, at) => at == DateTime.MaxValue.ToUniversalTime())\n        .When(s => s.Handle(message));\n    }\n  }\n\n  public class TheSaga : Saga<TheData>,\n                         IAmStartedByMessages<TheMessage>,\n                         IHandleTimeouts<TheTimeout>\n  {\n    public void Handle(TheMessage message)\n    {\n      RequestUtcTimeout<TheTimeout>(message.TimeoutAt.ToUniversalTime());\n    }\n\n    public void Timeout(TheTimeout state)\n    {\n      Bus.Send(new TheMessageSentAtTimeout());\n      MarkAsComplete();\n    }\n  }\n\n  public class TheData : ISagaEntity\n  {\n    public Guid Id { get; set; }\n    public string Originator { get; set; }\n    public string OriginalMessageId { get; set; }\n  }\n\n  namespace Messages\n  {\n    public class TheMessage\n    {\n      public DateTime TimeoutAt { get; set; }\n    }\n\n    public class TheTimeout\n    {\n    }\n\n    public class TheMessageSentAtTimeout\n    {\n    }\n  }\n```'
507,'andreasohlund','Hanging DTC transaktions / only failed to notify\nFrom time to time I have left-over "only failed to notify" transactions. It seems to be an issue with distributed transactions across MSMQ and RavenDB.\n\nI can\'t really reproduce it. But it would be good to know, if the NSB team has seen those? Maybe after running mass tests?\n\nI have a very bad feeling about using this in production without having tracked it down.\n\nJust as a hint: when we used Raven sessions with uow, we had much more of these - now we are using very short living sessions.\n\nMight also be necessary to engage Oren Eini in this discussion.'
500,'andreasohlund','Using SynchronizationContext.Post instead of Send which does not block c...\n...alling threads. Closes #495'
498,'johnsimons','Use TaskScheduler to manage our own pool of threads\nWith the new [TaskScheduler](http://msdn.microsoft.com/en-us/library/system.threading.tasks.taskscheduler.aspx) in .Net4 we should create a custom (or multiple) implementation of TaskScheduler that implements our rules:\n* Throttle;\n* Maximum concurrency;\n* ...\n'
497,'johnsimons','Separate nuget install.ps1 script from build script\nAt the moment the install.ps1 is generated by the build script.\nWe should separate it into its own file for easier maintenance.'
491,'johnsimons','Nuget install.ps1 fails to modify project file to include start program\nThe package gets installed properly.\nThen it prompts for the project file changes (overwrite, discard, cancel, etc dialog).\nClicking on Discard (to keep the new changes to the project file), the project becomes unavailable.\n\nThe problem is the xmlns tag in the PropertyGroup.\nRemoved it, saved it and reloaded the project and everything seems ok.'
490,'johnsimons','Enable bundling license more tightly\nFrom group: Perhaps only for royalty free license, e.g. Configure.With().RoyaltyFreeLicense(XmlElement elem) or something like that...that way, royalty free licenses can be included as a ressource in an application. \n\nJohannes: Configure.With().License("path\\license.xml") or in app.config\n\nJohn: Maybe a static License class file with 2 props, LicensePath and License.\nNot sure how this would marry with the multhost solution?\n\nHow about also support cmd line argument, like licensepath="path to license file".\nThis would make it a lot simpler for us to automate testing with different licenses.\n\nRavenDB allows 2 different ways in app.config:\nRaven/License which allows you to specify the full license string.\nRaven/LicensePath which allows you to specify the full license path.\nWhich I think is nice, thoughts?\n'
489,'johnsimons','NSB.Testing: ExpectSend cannot handle Bus.Send(m1, m2, m3)\nI just tried NSB.Testing for the first time:\n\n```csharp\nnamespace Blah\n{\n  public class TheHandler : IHandleMessages<Incoming>\n  {\n    public IBus Bus { get; set; }\n\n    public void Handle(Incoming message)\n    {\n      var one = Bus.CreateInstance<Ougoing>(m =>\n      {\n        m.Number = 1;\n      });\n\n      var two = Bus.CreateInstance<Ougoing>(m =>\n      {\n        m.Number = 2;\n      });\n\n      // Fails:\n      Bus.Send(one, two);\n\n      // Works:\n      // Bus.Send(one);\n      // Bus.Send(two);\n    }\n  }\n\n  public class Ougoing\n  {\n    public int Number { get; set; }\n  }\n\n  public class Incoming\n  {\n  }\n\n  public class When_an_incoming_message_is_received\n  {\n    It should_send_an_outgoing_message_with__one__ =\n      () => Test\n              .Handler<TheHandler>()\n              .ExpectSend<Ougoing>(m => m.Number == 1)\n              .OnMessage<Incoming>();\n\n    It should_send_an_outgoing_message_with__two__ =\n      () => Test\n              .Handler<TheHandler>()\n              .ExpectSend<Ougoing>(m => m.Number == 2)\n              .OnMessage<Incoming>();\n  }\n}\n```\n\nIt seems as if `ExpectSend` does not handle sending multiple messages as one transport message:\n```\nExpectedSendInvocation<Blah.Outgoing> not fulfilled.\nCalls made:\nSendInvocation<Blah.Outgoing>\n```'
488,'johnsimons','Upgrade to nuget 2.0\n'
487,'johnsimons','Centralize the NHibernate configuration properties\nToday you have to duplicate the NH properties for each of the storage types (Sub,Saga,Timeout). We should have a centrilized way to do this like we do with the .RavenPersistence().\n\n* .NHibernatePersistence()  \n* <NHibernatePersitenceConfig>\n<prop>\n* Keep the others for overrides + backwards compat'
486,'johnsimons','Limitation on number of workers for a distributor is not kept\nWhen starting ScaleOut sample, more than often, all three workers can get messages:\nThe distributor internal worker, worker1 and worker2.\n\nLimitation enforced by the license key should work.'
485,'johnsimons','Exception in serializer is swallowed with no error.\nIssue found when creating own IMessageSerializer implementation. If an exception occurs in Serialize/Deserialize, it is swallowed and an empty message is passed on in the pipeline. This is observed: Exception happening in Serialize. Logfile says handler received an empty message and ignoring. No exception is thrown and no error is written to log file. \n\nHowever, the message is correctly moved to error queue and the message headers contains the exception details from the serializer. So it seems that NSB is missing some rethrow actions.\n'
484,'andreasohlund','Add support for specifying addresses using IpV6\n<add Messages="MyMessages" Endpoint="MyServer@fe80::79f4:df9c:ae9c:2c9c%15"/>'
483,'johnsimons','Create a WorkerAvailabilityManager for NHibernate\nTo support running the distributor on non msmq platforms we should have a WorkerAvailabilityManager for relational datastores'
478,'johnsimons','Refactor the distributor to be a satellite\n'
477,'johnsimons','Refactor the gateway to be a satellite\n'
476,'johnsimons','Refactor the timeoutmanager to be a satellite\n'
475,'johnsimons','NHibernate persisters implementation need refactoring\nAt the moment our NHibernate persisters:\n* NServiceBus.SagaPersisters.NHibernate\n* NServiceBus.TimeoutPersisters.NHibernate\n* NServiceBus.Unicast.Subscriptions.NHibernate\n\nDo not differentiate between **Install** time vs **Running** time.\nAll the fluent APIs allow users to update the schema at run time, and do not have `INeedToInstallSomething` implementations to create the sql tables.'
474,'johnsimons','Convert Starbucks sample to use NHibernate for everything\nWith us now supporting NHibernate for Timeouts, Subscriptions and Sagas, we should have a NHibernate only sample to show the users how to go about configuring NHibernate for everything.'
471,'andreasohlund',"Support multiple timeout managers to store their data in the same Raven database\nCurrently we load all timeouts when we start, we should only load the ones that are related to our endpoint. This will allow multiple TM's to share the same DB"
470,'andreasohlund','Cache the results of the ip lookup\nWhen sending messages to servers identified by a IP-number the return address of the client is set to the local ip. The lookup to get that ip taked rougly 50-60 ms and slows down the sender since its performed on every send. We should cache this when we start to improve the performance. It also avoids exceptions caused by network devices coming online/offline'
469,'andreasohlund','Encrypted properties are only supported on the root message\nhttp://tech.groups.yahoo.com/group/nservicebus/message/14394\n\n## Test procedures\n1. Run the encryption sample and verify that all values are received correctly\n2. Only run the client and verify that all data in the queue is encrypted\n3. Run a < 3.2.8 client and verify that the server throws an exception when receiving the message\n4. Run a 3.X client and verify that it works\n5. Have the 3.2.8 client send a message to a 2.X server. Make sure it works'
466,'andreasohlund','Improve API for saga message mapping\nSimilar to the rebus way: Incoming&lt;CustomerCreated&gt;(m => m.CustomerId).CorrelatesWith(s => s.CrmCustomerId);\n\nHave the API: ConfigureMapping&lt;SomeMessage&gt;(m => m.SomeProperty).ToSaga(s => s.SomeProperty);\n\n'
465,'johnsimons','Change the License Warning when the host starts and a license file is not present\nCurrently, when starting an endpoint, the licensing warning states "No valid license file was found. The host will be limited to 1 worker thread."?\nSince the basic version throttles message processing to 1 msg per second, please change the license warning to include that information.\nConsider changing the warning to "No valid license file was found. The host will be limited to a throughput of 1msg/s"'
464,'johnsimons','SpringObjectBuilder use with IApplicationContextAware, IObjectPostProcessor\nHi, Just found a line of code missing for the proper use of spring GenericApplicationContext with IApplicationContextAware, IObjectPostProcessor & other spring plumbing features.\n\nCan you just add the following line :\ncontext.Refresh() in the init method, just before setting \n"initialized = true;"\n\nThanks by advance.\n\nRegards.'
462,'johnsimons','Fix the spelling mistakes in ConfigureNHibernateSubscriptionStorage\nAll methods are spelled Subcription instead of Subscription.'
461,'johnsimons','Overload RunGateway(this Configure config, Type persistence) with a standard call\nIn addition to the following (non-standard):\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/gateway/NServiceBus.Gateway/Config/ConfigureGateway.cs#L39\nAdd an overload (more standard):\n\nRunGatewayWithSqlPersistence(this Configure config) ?'
458,'andreasohlund','MsmqUtilities.GetReturnAddress throwing IndexOutOfRange exception\nI commented on the line of code here that I think is causing the issue. https://github.com/NServiceBus/NServiceBus/commit/b584490b1bd1c700ce44141e32510d82a052ae91. '
457,'johnsimons','Remove ForwardCurrentMessageTo from the testing api\nSee http://tech.groups.yahoo.com/group/nservicebus/message/14292'
456,'johnsimons','Create a NHibernate persister for the gateway\nNot sure we need it but we only support sqlserver today'
455,'johnsimons','Create a NHibernate storage for the gateway\n'
454,'johnsimons','Upgrade to NHibernate 3.3.1.4000\n'
453,'johnsimons','/installIfrastructure does not terminate the process after is finished\nThis happens when the /installinfrastructure is called from a location that contains an endpoint configuration, it starts hosting the endpoint and waits indefinitely.'
452,'andreasohlund','Empty message received in unobstrusive mode with BinarySerializer\nWhen trying to send a command in unobstrusive mode (without implementing IMessage, ICommand, ... ) and BinarySerializer I am getting a "Received an empty message - ignoring" message.  \n\n- Adding the ICommand interface to the commands solves the issue. \n- Just detected in BinarySerializer; XmlSerializer is working fine with the same configuration in unobstrusive mode.'
451,'johnsimons','Make sure that startup project is set when the host nuget is installed\nWe should modify the .csproj to contain the currect macros to start the host to get a better "F5 experience"'
448,'johnsimons','IWantToRunBeforeConfiguration is called to many times at startup\nExpected is : 1 time for a regular start + 1 if the installers are invoked from the generic host\n\nTo reproduce (will be called 3 times) \n\npublic class MyClass:IWantToRunBeforeConfiguration\n    {\n        public void Init()\n        {\n            Console.WriteLine("Init");\n        }\n    }'
446,'andreasohlund','Create a Bus.SendEmail satellite\nIn order to make sending of emails easier we should add a "Norification" satellite that wraps the SmtpClient.SendEmail()'
445,'johnsimons',"log4net errors when running NServiceBus.Host.exe with /installinfrastructure\nIf I run NServiceBus.Host.exe /installinfrastructure when there is a class implementing IConfigureThisEndpoint, then I get an error about acquiring a lock on the log file (as shown below).\n\nIf I delete the assembly containing my implementation of IConfigureThisEndpoint then re-run NServiceBus.Host.exe /installinfrastructure, then everything works as expected.\n\nError Details:\n\n> 2012-06-05 21:55:14,749 [1] INFO  NServiceBus.Licensing [(null)] <(null)> - Checking available license...\nlog4net: FileAppender: Opening file for writing [C:\\dev\\MyProject\\src\\MyProject.Billing.Handlers\\bin\\Debug\\Logs\n\\log4net.log] append [True]\nlog4net:ERROR [RollingFileAppender] Unable to acquire lock on file C:\\dev\\MyProject\\src\\MyProject.Billing.Handl\ners\\bin\\Debug\\Logs\\log4net.log. The process cannot access the file 'C:\\dev\\MyProject\\src\\MyProject.Billing.Hand\nlers\\bin\\Debug\\Logs\\log4net.log' because it is being used by another process.\nlog4net:ERROR [RollingFileAppender] OpenFile(C:\\dev\\MyProject\\src\\MyProject.Billing.Handlers\\bin\\Debug\\Logs\\log\n4net.log,True) call failed.\nlog4net.Appender.FileAppender+LockingStream+LockStateException: The file is not currently locked\n   at log4net.Appender.FileAppender.LockingStream.AssertLocked()\n   at log4net.Appender.FileAppender.LockingStream.get_CanWrite()\n   at System.IO.StreamWriter..ctor(Stream stream, Encoding encoding, Int32 bufferSize)\n   at log4net.Appender.FileAppender.OpenFile(String fileName, Boolean append)\n   at log4net.Appender.RollingFileAppender.OpenFile(String fileName, Boolean append)\n   at log4net.Appender.FileAppender.SafeOpenFile(String fileName, Boolean append)\nlog4net:ERROR [RollingFileAppender] No output stream or file set for the appender named [file].\n\n"
444,'johnsimons','License file or directory should be named less generically\nNobody looking at the directory structure of an application that uses NSB will know that "Licence\\License.xml" is for NServiceBus.  Please consider renaming the directory and/or file to include your product name.'
442,'johnsimons','Add MessageEndpointMappings based on namespaces\nHi,\n\nAt the moment  add Messages works either at the assembly or type level. This means that every message needs to be specified manually if an assembly contains messages for more than one endpoint.  This is a tedious task and could be eliminated by having ability to map namespaces to endpoints.\n\nThanks\n\nPawel'
436,'johnsimons',"Cannot run any hosts in build 3.2.2279 due to error with Performance Counters\nWhen running /installInfrastructure on an endpoint that has perf copunters enabled the following exception occures:\n\n> Failed to execute installers: System.InvalidOperationException: NServiceBus performance counter for Critical Time not set up correctly. Please run the NServiceBus infrastructure installers to rectify this problem. ---> System.InvalidOperationException: The requested Performance Counter is not a custom counter, it has to be initialized as ReadOnly.\n   at System.Diagnostics.PerformanceCounter.InitializeImpl()\n   at System.Diagnostics.PerformanceCounter..ctor(String categoryName, String counterName, String instanceName, Boolean readOnly)\n   at NServiceBus.Unicast.Monitoring.PerformanceCounterInitializer.InstantiateCounter(String counterName)\n   --- End of inner exception stack trace ---\n   at NServiceBus.Unicast.Monitoring.PerformanceCounterInitializer.InstantiateCounter(String counterName)\n   at NServiceBus.Unicast.Monitoring.PerformanceCounterInitializer.Run()\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\n   at NServiceBus.Configure.Initialize()\n   at NServiceBus.Installer`1.Install()\n   at NServiceBus.Hosting.Windows.Installers.WindowsInstaller.RunInstall() in d:\\BuildAgent-01\\work\\nsb.develop_2272\\src\\hosting\\NServiceBus.Hosting.Windows\\Installers\\WindowsInstaller.cs:line 45\n\nI get the exact same error when I run NServiceBus.Host.exe with the /installinfrastructure switch. The workaround is to either use RunMeFirst.bat or invoke the host.exe in a empty directory to avoid the endpoint config beeing loaded.\n\nThe reason for the bug is that all config code is invoked before the installers are run and that code assumed that the counters is installed. The fix is to change that code to put put a warning if no counters are installed\n\nThis only seems to happen on some systems. It is consistently reproducible on our Development server (Windows Server Datacenter SP2), but not on my local machine (Win7). It was also reproducible on another developer's machine that was running Win7 in a VM on a MacBook.\n\nI suspect that the following commit has something to do with the problem:\nhttps://github.com/NServiceBus/NServiceBus/commit/6e558ac85998b0b050df5b8bba635a50c1d44cd4\n\nI downgraded to build 3.1.2266 which is from the day before the above commit and then re-deployed to my Development environment and everything works fine again."
433,'johnsimons','CI Builds should publish to Nuget as Prerelease packages\nThe CI builds should only show up in Nuget when the "Show Prerelease Packages" is selected.  Stable Builds should be the NSB releases only.\n\nhttp://nuget.codeplex.com/wikipage?title=Pre-Release%20Packages'
432,'johnsimons','Add a .gitattribute file\nTo deal with issues with CRLF.'
430,'johnsimons','Stop using HttpContext.Current to identify if running under web context\nWith all these new web frameworks (FubuMVC, NancyFx,...), HttpContext.Current is not a reliable way to identify if NSB is running under a web context, a better way is to use HttpRuntime.AppDomainAppId. \nIf HttpRuntime.AppDomainAppId is null then we are not running on web context otherwise we are. '
426,'johnsimons','Move IWantToRunWhenTheBusStarts to NSB.dll\nSplit from #258'
424,'andreasohlund','Timeouts fails to load if there are more than 30*1024 timeouts in storage\nThis only applies to the RavenDB storage. If there are more than 30*1024 timeouts in storage Raven will throw the "max 30 calls per session limit was breached" exception. The fix is so turn this value up higher. This also relates to issue #388 and #389.\n\nBug was found after Johannes comment https://github.com/NServiceBus/NServiceBus/issues/388#issuecomment-5970646 and can be verified by changing the unit test to add 31*1024 timeouts and modifying the query to use WaitForNonStaleResults()'
420,'andreasohlund','AsyncPages sample using WithWeb()\nupdate to newer api With()'
417,'johnsimons','Create a timeout storage for relational db using NHibernate\n'
415,'johnsimons','Add Copyright to Nuget packages\nSee http://docs.nuget.org/docs/reference/nuspec-reference on how to do it.'
414,'andreasohlund','class EndpointConfig : IConfigureThisEndpoint \nWhen the EndpointConfig only implements IConfigureThisEndpoint no input queue is created (only error and retries are created).'
411,'johnsimons','Add a way to configure the max calls per session limit in raven\nWhen running multiple sagas per endpoint users risk hitting the limit (15 sagas is currently the max)'
410,'synhershko','Unnessesary calls to ISagaPersister.Get\nWhen running multiple saga types started by the same message on the same endpoint the number of calls to the sagapersister is numsagatypes squared. This can cause problems for the sagapersisters. Eg raven has a limit of 30 calls per session which means that 5 sagas per endpoint is the max limit.\r\n\r\nWhen adding a unique attribute on the property the problems goes away'
408,'johnsimons','NServiceBus.Ninject NuGet package shows incorrect dependancy\nThe latest version of the NServiceBus.Ninject (3.1.1) NuGet package states that it depends on Ninject 2.2.1.4 however upon updating, it seems that the package has been updated to use Ninject 3.0.0.0.'
401,'johnsimons',"Use static indexes in TimeoutManager\nBy default temp indexes in RavenDB automatically get promoted to static if they are used frequently, in our case, the timeout manager is using them quite frequently (from the code it looks like is every 1 sec) so I don't see the point of letting RavenDB create temp indexes that will be  promoted to static later on."
399,'andreasohlund','Lower Timeout log messages from Info to Debug\nINFO  Timeouts [(null)] <(null)> - Going to fetch existing timeouts from persister (RavenTimeoutPersistence)\nINFO  Timeouts [(null)] <(null)> - 0 timeouts loaded from storage in 0.2282566 seconds\nINFO  Timeouts [(null)] <(null)> - Total time for cache priming 0.2298256 seconds'
394,'johnsimons','Improve configuration override for gateway\nBased on this:\n\nhttp://stackoverflow.com/questions/10627745/nservicebus-need-to-configure-channels-for-my-gateway-with-code'
389,'johnsimons','Only cache the timeout id and expiry\nTo keep memory consumption down we should only cache the timeout id and expiry date. This means that we have to reload the timeout when it expires.'
388,'johnsimons','Load timeouts on demand\nToday we load all timeouts into memory. This can take a while so we should consider to only load the timeouts that are about to expire in the coming X hours'
382,'andreasohlund','Install the modeling tools when users run RunMeFirst.bat\n* Verify that the nuget extension is installed\n* Call the vsix in /Modelling/'
381,'andreasohlund','Fix for #366: Upgrade to NHibernate 3.3.0.4000\n'
379,'andreasohlund','Port fix for #133 from 2.5 to 3.0\n'
378,'johnsimons','We have 2 Nuget folders under tools!\nsee https://github.com/NServiceBus/NServiceBus/tree/develop/tools'
377,'udidahan','Make WcfService<T> and WebService<T> not require IMessage\n'
372,'andreasohlund','Improve error message when a to long type name causes the Unique constraint impl in Raven to blow up\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13692'
371,'johnsimons','Remove ExceptionSanitizer\nIn the FaultManager there is a check, if (SanitizeProcessingExceptions) { e = ExceptionSanitizer.Sanitize(e); }. The Sanitize method only throws a NotImplementedException.'
370,'johnsimons','IWantToRunWhenTheBusStarts runs on the same thread as the host\nUnlike IWantToRunAtStartup (https://github.com/NServiceBus/NServiceBus/blob/master/src/hosting/NServiceBus.Hosting/Configuration/ConfigurationManager.cs#L81) IWantToRunWhenTheBusStarts  runs on the main thread. This means that you might hit the 30 second startup limit for windows services. In order to make both behave them same we should consider to run the IWantToRunWhenTheBusStarts  on a seprate thread as well.'
369,'andreasohlund','Existing timeouts are not fired after a restart when stored in RavenDB\nWhen restarting the TM we load the existing timeouts from storage. When we use RavenDB as storage the default limit of max 128 documents returned causes the TM to only cache the first 120 timeouts. The other timeouts will be left in the storage and expire on subsequent restarts.'
366,'andreasohlund','Upgrade to NHibernate 3.3.0.4000\n'
364,'johnsimons',"Retry on subscription failure when queue doesn't exist\nWhen running a solution for the first time, sometimes a subscriber starts up before a publisher has a chance to create its input queue thus causing the subscriber to blow up because it can't find the publisher.\r\n\r\nWe should catch that exception, sleep a couple of seconds, and retry (say, up to 5 times), and only if it still fails then throw the exception all the way out. "
363,'johnsimons',"When a unit of work fails in HandleTransportMessage, ProcessingStatistics.End throws another exception\nRunning NSB 3.0.3\r\n\r\nWhen there is an issue in a handler or another set up error the exception two exceptions get logged (see below).\r\n```\r\n2012-05-10 18:26:53,029 [Worker.13] ERROR NHibernate.Transaction.AdoTransaction [(null)] <(null)> - Begin transaction failed\r\nSystem.Data.SqlClient.SqlException (0x80131904): The server failed to resume the transaction. Desc:df0000000b.\r\nThe transaction active in this session has been committed or aborted by another session.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()\r\n   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at System.Data.SqlClient.TdsParser.TdsExecuteTransactionManagerRequest(Byte[] buffer, TransactionManagerRequestType request, String transactionName, TransactionManagerIsolationLevel isoLevel, Int32 timeout, SqlInternalTransaction transaction, TdsParserStateObject stateObj, Boolean isDelegateControlRequest)\r\n   at System.Data.SqlClient.SqlInternalConnectionTds.ExecuteTransactionYukon(TransactionRequest transactionRequest, String transactionName, IsolationLevel iso, SqlInternalTransaction internalTransaction, Boolean isDelegateControlRequest)\r\n   at System.Data.SqlClient.SqlInternalConnection.BeginSqlTransaction(IsolationLevel iso, String transactionName)\r\n   at System.Data.SqlClient.SqlInternalConnection.BeginTransaction(IsolationLevel iso)\r\n   at System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel isolationLevel)\r\n   at System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel isolationLevel)\r\n   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)\r\n   \r\n2012-05-10 18:26:53,107 [Worker.13] WARN  NServiceBus.Unicast.Transport.Transactional.TransactionalTransport [(null)] <(null)> - Failed raising 'transport message received' event for message with ID=9ec84006-a0a7-4032-8604-bc825b11d216\\143272\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at NServiceBus.Unicast.Monitoring.ProcessingStatistics.End(Exception ex)\r\n   at NServiceBus.Unicast.UnicastBus.<>c__DisplayClass33.<HandleTransportMessage>b__30(IManageUnitsOfWork uow)\r\n   at System.Collections.Generic.List`1.ForEach(Action`1 action)\r\n   at NServiceBus.Unicast.UnicastBus.HandleTransportMessage(IBuilder childBuilder, TransportMessage msg)\r\n   at NServiceBus.Unicast.UnicastBus.TransportMessageReceived(Object sender, TransportMessageReceivedEventArgs e)\r\n   at System.EventHandler`1.Invoke(Object sender, TEventArgs e)\r\n   at NServiceBus.Unicast.Transport.Transactional.TransactionalTransport.OnTransportMessageReceived(TransportMessage msg)\r\n```\r\nThe message errors and is sent to the error queue, but the exception in the message is the 2nd exception (when the 1st is the real failure).  This looks to be caused by a second exception happening in ProcessingStatistics.End(Exception ex) which is called when the first exception is caught."
362,'johnsimons',"Installers are not being invoked if NServiceBus dll's are excluded from scanning\nIt seems like the installer are not run if you pass a list of assemblies not including the NSB  asm to Configure.With()"
361,'johnsimons','Enable users to define their own convention for express messages\nTo set Express on a message NSB must be referenced. To enable users to do this in unobtrusive mode we need to extract this into a convention'
359,'andreasohlund',"Wrong method being called if message handler class contains more than one method accepting the message type\nIf you have more than one method accepting the message type we'll choose the one that we first find. We need to also check that it implements IHandleMessages or IHandleTimeouts. Workaround is to move the message handler method to the top of the class"
358,'johnsimons','Queues get created with permissions for the account running NServiceBus.Host /install\nWhen running install with NServiceBus.Host (3.0.3) permissions for the queues created is set for the account running the install, not the configured service account. This results in:\r\n\r\nFATAL NServiceBus.Unicast.Queuing.Msmq.MsmqMessageReceiver [(null)] <(null)> -\r\nDo not have permission to access queue [private$\\somequeue]. Make sure that the current user [someuser] has permission to Send, Receive, and Peek  from this queue. \r\n\r\nException: [System.Messaging.MessageQueueException (0x80004005): Access to Message Queuing system is denied.'
348,'johnsimons',"Randomly use different containers in samples\nAs part of the testing of the samples and the different combination of containers, I've noticed that most if not all of the samples are using the default container.\r\n\r\nTo ease the testing of the combination of containers per sample, we should change the samples to use different containers as the default.\r\n\r\nExample:\r\nAsyncPages           Windsor\r\nAsyncPagesMVC3    Ninject\r\nDataBus                AutoFac\r\nEncryption             Unity\r\nFullDuplex              StructureMap\r\nGenericHost           Unity\r\nManufacturing        Spring/StructureMap (Client/Server) \r\nMessageMutators   AutoFac\r\nPubSub                 Windsor\r\n....\r\n\r\nThis way we're always dogfooding our container integration as part of running different samples locally and we have samples to point users to go to in case they need help integrating a specific container."
347,'johnsimons','Obsolete Configure.WithWeb\nNo reason to burden the user to pick the correct `With`.\r\n\r\nReplace:\r\n```C#\r\n        /// <summary>\r\n        /// Creates a new configuration object scanning assemblies\r\n        /// in the regular runtime directory.\r\n        /// </summary>\r\n        /// <returns></returns>\r\n        public static Configure With()\r\n        {\r\n            if (HttpContext.Current != null)\r\n                throw new InvalidOperationException("NServiceBus has detected that you\'re running in the context of a web application. The method \'NServiceBus.Configure.With()\' is not recommended for web scenarios. Use \'NServiceBus.Configure.WithWeb()\' instead, or consider explicitly passing in the assemblies you want to be scanned to one of the overloads to the \'With\' method.");\r\n \r\n            return With(AppDomain.CurrentDomain.BaseDirectory);\r\n        }\r\n \r\n        /// <summary>\r\n        /// Configures NServiceBus to scan for assemblies \r\n        /// in the relevant web directory instead of regular\r\n        /// runtime directory.\r\n        /// </summary>\r\n        /// <returns></returns>\r\n        public static Configure WithWeb()\r\n        {\r\n            return With(HttpRuntime.BinDirectory);\r\n        }\r\n```\r\n\r\nWith:\r\n```C#\r\n        /// <summary>\r\n        /// Creates a new configuration object scanning assemblies\r\n        /// </summary>\r\n        /// <returns></returns>\r\n        public static Configure With()\r\n        {\r\n            if (HttpContext.Current != null)\r\n                return With(HttpRuntime.BinDirectory);\r\n \r\n            return With(AppDomain.CurrentDomain.BaseDirectory);\r\n        }\r\n```\r\n\r\nAnd Obsolete `WithWeb`.'
345,'andreasohlund','Timeouts fireing at the same time might be discarded if there is a problem with the previous timeout\nWe need to modify the eventhandler to supress exception and instead retry them\r\nRelated to: https://github.com/NServiceBus/NServiceBus/issues/238'
344,'andreasohlund','Timeouts with short expiry can cause duplicate timeouts to be fired\nWhen a timeout with short or negative expiry arrives there is a race condition that might cause the timeout to be left in the storage (the save occurs after the delete). To avoid this we need to check for expired timeouts in the timeout transportmessage handler'
341,'johnsimons',"Remove .RunTimeoutManager() and NServiceBus.Time profile from Unobtrusive sample\nThe client uses the Time profile which is obsolete. \r\nThe Server uses .RunTimeoutManager() but it's not needed anymore since the profile is AsA_Publisher"
339,'johnsimons','Add ExpectNotSend and other nots to testing\n'
336,'andreasohlund','Make sure that replication works for sagas and subscriptions\n'
334,'johnsimons','Pull the Ninject child container fix\nhttps://github.com/remogloor/NServiceBus/commit/631e255b4c58c20ee4f7c707b1322345ea66d9f3#diff-1'
325,'johnsimons','IndexOutOfRangeException in MessageHeaderManager\nI have come across this exception in version 3.0.3\r\n\r\nThe original code in ~\\src\\headers\\NServiceBus.MessageHeaders\\MessageHeaderManager.cs\r\n\r\n\r\n\tvoid IMutateOutgoingTransportMessages.MutateOutgoing(object[] messages, TransportMessage transportMessage)\r\n\t{\r\n\t\tforeach(var key in staticOutgoingHeaders.Keys)\r\n\t\t\ttransportMessage.Headers.Add(key, staticOutgoingHeaders[key]);\r\n\r\n\t\tif (messageHeaders != null)\r\n\t\t\tif (messageHeaders.ContainsKey(messages[0]))\r\n\t\t\t\tforeach(var key in messageHeaders[messages[0]].Keys)\r\n\t\t\t\t\ttransportMessage.Headers.Add(key, messageHeaders[messages[0]][key]);\r\n\t}\r\n\r\nThere are cases that messageHeaders is not null but it does not contain any items at index 0.\r\n\r\nthis is the amended code to fix this issue:\r\n\r\n\tvoid IMutateOutgoingTransportMessages.MutateOutgoing(object[] messages, TransportMessage transportMessage)\r\n\t{\r\n\t\tforeach(var key in staticOutgoingHeaders.Keys)\r\n\t\t\ttransportMessage.Headers.Add(key, staticOutgoingHeaders[key]);\r\n\r\n\t\tif (messageHeaders != null && messages.Length > 0 && messageHeaders.ContainsKey(messages[0]))\r\n\t\t\t\tforeach(var key in messageHeaders[messages[0]].Keys)\r\n\t\t\t\t\ttransportMessage.Headers.Add(key, messageHeaders[messages[0]][key]);\r\n\t}\r\n\r\nwhich is also found correctly in ~\\src\\unicast\\NServiceBus.Unicast.Tests\\Helpers\\MessageHeaderManager.cs\r\n\r\nRegards,\r\nSarmaad'
323,'johnsimons','SuppressDTC is misspelled\nI can not configure the SupressDTC property from external configuration. It would be nice to have a configuration point (perferrably external config) that allows me switch this flag in the transport. Currently I have to create a IWantCustomInitialization class that resolves a TransactionalTransport, or do it by Configure.Instance.Configurer.ConfigureProperty() and read it from the configuration file somehow. Would be nice to have this internally.\r\n\r\nAs a side note, SuppressDTC is spelled incorrectly (with one "p"), just thought you might want to fix that as well.'
321,'andreasohlund',"Duplicate WindowsIdentityName header when processing 2.6 messages\nWe need to add a check to make sure that we don't add the WindowsIdentityName twice when processing 2.6 messages in NSB 3.0"
320,'andreasohlund','Exception when multiple application messages are sent using the gateway\nThe HttpHeaderManager will blow up with a duplicate key exception since we try to add the same transportmessage id more than once'
318,'johnsimons','IWantToRunAtStartup.Stop method is not called if process is running longer than 5 minutes. \nTo reproduce the error (was tested in 2.6):\r\nSamples\\FullDuplex\\RequestResponse.sln.\r\n\r\n**1st scenario (Success)**\r\nPut breakpoint in stop method in client code - ClientEndpoint.cs. \r\nRun sample after few seconds press CTRL+BREAK. \r\nOn my machine Stop is handled, debugger breaks execution at breakpoint. \r\nAfter pressing F5 application stops.\r\n\r\n**2nd scenario (Failed)**\r\nRun application again, but wait more than 5 minutes before pressing CTRL+BREAK. (I remember that lease timeout is about 5 minutes). Stop method is not called now. \r\n\r\nI verified both scenarios by logging information to file, and by running host as windows service. Each time after 5 minutes the stop method was not called. \r\n\r\n'
307,'andreasohlund',"Make it so that it doesn't need ITimeoutState anymore\nAs I see it is also needed to implement ITimeoutState in order to be able to use IHandleTimeouts. This is another restriction like ISagaMessage in the current implementation. I need to reference NSB in my message assemblies."
305,'andreasohlund',"Make it so we don't need ISagaMessage any more\n- deprecate the ISagaMessage, but still support\r\n- set the sagaid+sagatype on out messages from sagas\r\n- refactor the settimeout\r\n- When a saga id+type header is received, store it in a thread static\r\n- When doing a reply or return on a saga message (id + type) make sure to copy the type and id over)\r\n- Fix the sample to use it"
302,'andreasohlund','Upgrade Raven to Version 960 and disable HTTP compression\nstore.JsonRequestFactory.DisableHttpCompression = true;\n\n## How to test\n\nRun the TimeoutManager sample against a 960 version of Raven db and make sure that all works as expected'
294,'johnsimons','Upgrade to Ninject 3.0\n'
292,'andreasohlund','Fix for AzureSagas sample logic\nFixing logical error when late payment is accepted despite disposed drink that got cold.'
291,'andreasohlund','Better exception message when a concurrency exception occurs in the raven persister\nCatch and retrow a better exception explaining to the user what\'s just happened (today we just emit the raven "put on non currrent etag" which make no sense to users at all.'
290,'andreasohlund','Unity reused instances across child containers\nLooking at the code for the Unity 2 ObjectBuilder, I noticed that the code assumes the container will properly dispose of the created instances. Unity will not actually call Dispose on its contained objects.\r\n\r\nThe way around this is to use child containers and the HierarchicalLifetimeManager. More details can be found on this at:\r\n\r\nhttp://www.devtrends.co.uk/blog/introducing-the-unity.mvc3-nuget-package-to-reconcile-mvc3-unity-and-idisposable\r\n\r\nAssuming NSB already creates a child container for every message, I think the solution is as simple as changing the LifetimeManager from TransientLifetimeManager to HierarchicalLifetimeManager.'
289,'udidahan',"Getting access to mocked IBus instance when testing\nI'm writing some tests to verify my class under test correctly publishes a message to the bus, the problem is I can not access the mocked IBus object that is intialized using Test.Initialize(). \r\n\r\nThe Test.Handler method has an overload with a callback that is called with the instance of the mock bus, so I'm going through a hoop to get instance of that, wondering if you could add an similar overload to Test.Initialize that accepts a callback?\r\n\r\nI don't want to create the IBus mock object myself as it is too much involved and there's already the support in the Tests assembly."
286,'andreasohlund','Send/Publish as the result of a gateway message being received blows up\nThe gateway message mutator assumes that correlation id is always set. This is not true for a when sending messages so it will blow up.'
281,'andreasohlund','Remove the need for a endpoint config when only using one of the satellites\nUsers that only wants to run the distributor,gateway, timeoutmanager stand alone should not have to create a dummy endpoint config. Modify the host to support running without a endpointconfig.'
277,'johnsimons','Using NServiceBus.Host, DefineEndpointName is useless\nIf using NServiceBus.Host, the name established with Configure.With().DefineEndpointName("endpoint") is overwritten and ignored, using the assembly name as queue name.'
269,'andreasohlund','Add a option to avoid regular messages to be autosubscribed\nIn 3.0 we autosubscribe everything that is not a "command". This is to make sure that we\'re backwards compat with 2.6. We should add a option to only autosubscribe "events". And perhaps make this the default when we go to 3.2.'
268,'andreasohlund',"Please find sagas faster by eliminating unnecessary Query (with WaitForNonStaleResults)\n\r\n1. 90% of the time finding a Saga is spent in `Thread.Sleep(..)`. This actually results in 35% of our average message processing time\r\n\r\n2. The WaitForNonStaleResults is totally unnecessary, **if [UniqueProperty] is used**.\r\n\r\n3. NServiceBus should not allow `Get<T>(prop, val)` with non-unique properties (with configurable backwardscompat-switch)\r\n\r\n4. NServiceBus *might* allow multiple unique properties (which would be compatible to this patch)\r\n\r\n5. If NServiceBus in the future wants to support finding multiple sagas for a message, `WaitForNonStaleResults`shouldn't be part of the solution :-)"
266,'andreasohlund',"Failures in satellites gets the wrong FailedQ address \nFailures in the Gateway, distributor or gateway can't be returned using returntosourcequeue.exe since they have the wrong FailedQ address. "
265,'johnsimons','Allow more powerful expressions with AllAssemblies\n- ignoring case\r\n- wildcard match using trailing dot\r\n- prefer to load from CurrentAppDomain instead of Assembly.Load\r\n- includes/excludes instead of only excludes\r\n\r\n**Example:**\r\n\r\n        AllAssemblies\r\n            .Matching("SomeAssembly") // NServiceBus. is included by default\r\n            .And("SomeOtherAssemblies.")\r\n            .Except("AsyncCtpLibrary")\r\n            .And("FluentAssertions")'
264,'johnsimons',"Make sure that the nservicebus dll's always are included when we scan\nThis will avoid these kind of issues:\r\n\r\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13343\r\n\r\nand make sure that our own initializers always are being called."
261,'andreasohlund',"Make sure that we don't resolve components from the container before all config is done\nSpring doesn't support this so we need to make sure not to call .Build before all config is done.\r\n\r\nThis means that we need to introduce a INeedToRunWhenUserConfigurationIsDone so that we have a hook to set our defaults that will run after all other config code is done.\r\n\r\nThis also means that we need to refactor a few IWantToRunWhenConfiguration is complete to use the new interface"
260,'andreasohlund',"Refactor the configuration of the message mapper and xml serializer to not require multiple calls to RegisterSingleton\nSince spring doesn't support it we need to avoid it"
258,'johnsimons','Move INeedInitalization and IWantToRunWhenTheBusStarts to NSB.dll\nTo make it easier for users to bootstrap their own things we should move INeedInitalization and IWantToRunWhenTheBusStarts to NSB.dll. For this to work we need to give them access to IConfigurer. We can pass this as a parameter to Init().\r\n\r\nSteps:\r\n\r\n1. Move interfaces to the core and make sure they are in the root NServiceBus namespace\r\n2. Add a the IConfigurer as a parameter to Init()\r\n3. Obsolete  IWantToRunAtStartup \r\n4. Add a warning if IWantCustomInitialization is used in other places than the endpoint config. Have the warning text guide users to INeedInitalization instead'
254,'andreasohlund','Clear timeouts for a saga leaves older timeouts in the cache\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/timeout/NServiceBus.Timeout.Core/DefaultTimeoutManager.cs#L78\r\n\r\nWe need to modify the logic to remove all timeouts regardless of what time they are set at.'
252,'andreasohlund','Reverse the push and the add when processing a TimeoutMessage to avoid storing it in memory if the call to raven fails\nhttps://github.com/NServiceBus/NServiceBus/blob/master/src/timeout/NServiceBus.Timeout.Core/TimeoutTransportMessageHandler.cs#L43'
251,'johnsimons','Enable TCP connection sharing to improve raven performance\nAnd avoid:\r\n\r\nFrom time to time "Raven" gives up throwing System.Net.Sockets.SocketException (0x80004005): An operation on a socket could not be performed because the system lacked sufficient buffer space or because a queue was full 127.0.0.1:8080\r\n\r\n\r\nhttp://msdn.microsoft.com/en-us/library/system.net.httpwebrequest.unsafeauthenticatedconnectionsharing.aspx\r\n\r\n\r\nTo set it:\r\ndocumentStore.JsonRequestFactory => req => ((HttpWebRequest)req).UnsafeAuthenticatedConnectionSharing = true;\r\n'
249,'andreasohlund','Spring blows up with "Could not register object [Raven.Client.Document.DocumentStore] \n{"Could not register object [Raven.Client.Document.DocumentStore] under object name \'Raven.Client.IDocumentStore\': there\'s already object [Raven.Client.Document.DocumentStore] bound."}\r\n\r\nSeems like spring doesn\'t support multiple registrations even though the type is different'
247,'johnsimons','Add a more gracefull way to shut the transport threads down.\nITransport.Shutdown() perhaps with a max time to wait before killing the threads.\n\nAlso make sure that we shutdown the satellite transports as well'
246,'andreasohlund','The timeout manager clear all timeouts for a saga on every timeout\nThis will cause future timeouts to be discarded for sagas that have more than one timeout set'
243,'johnsimons','Missing interfaces from NServiceBus.Interfaces package\nThe interfaces for NServiceBus.MessageMutator are still defined in NServiceBus.Core so they are not part of the NServiceBus.Interfaces package.'
241,'johnsimons','NSB should handle critical errors more gracefully\nThe default behavior now is:\r\nhttps://github.com/NServiceBus/NServiceBus/blob/develop/src/hosting/NServiceBus.Hosting.Windows/WindowsHost.cs#L46\r\n\r\n        private void OnCriticalError()\r\n        {\r\n            Thread.Sleep(10000); // so that user can see on their screen the problem\r\n            Process.GetCurrentProcess().Kill();\r\n        }\r\n\r\nThe `so that user can see on their screen the problem` is already a small step towards developer-friendliness.\r\n\r\nI\'d suggest to go further, towards more fault-tolerance and some customer-friendliness :-)\r\n\r\nSee #238, why the current behavior is an issue with regards to DTC-transactions.\r\n\r\n1. Set NumberOfWorkerThreads to 0 to prevent the endpoint from doing more work\r\n2. Wait a configurable TimeSpan (rather 30 secs); "constantly" looking, if "CurrentNumberOfWorkingThreads" hits 0\r\n     * when a critical error happens at start time, CurrentNumberOfWorkingThreads will be 0 and the process will terminate immediately...\r\n3. If it doesn\'t hit 0, abort them individually.\r\n4. Kill the process. Maybe put a thread dump somewhere.'
239,'andreasohlund',"Stop using the childcontainers to manage the raven UoW since Ninject doesn't support them\nNot sure we should do this. Just putting it here as a placeholder. Spring dosn't support this either. So we need to fix this or remove support for sub-standard containers"
238,'andreasohlund','TimeoutRunner kills the endpoint when Poll fails\nWhen the timeout runner fails polling the raven db, it will just KILL the whole endpoint. This can leave to dtc transactions aborting ungracefully. (Left in "only failed to notify")\r\n\r\nInstead, the Timeout manager should just retry later; maybe, after a retry fail count somehow flag the error.\r\nI\'m not really sure how it could flag the error in a good way.\r\n\r\nIf the polls were triggered by messages, it would just apply the "default" fail-behaviour. Maybe Bus.SendLocal is an option. The message would be something like "FireTimeouts { UpUntilUtc = DateTime.UtcNow }".\r\n\r\n(I\'m running on build 2098, which has #211 yet applied => thread.IsBackground=true)'
237,'andreasohlund','Upgrade to Autofac 2.6.1.841\n'
235,'andreasohlund',"Auto subscribe for sagas doesn't work when handling the parent class of a event\nhttps://twitter.com/#!/iceiony/statuses/182149524230373376"
232,'andreasohlund','Message Deferment throws exception on current message.\nI may decide to defer a message while I\'m handling it.  For example:\r\n\r\n```csharp\r\npublic void Handle(HireEmployee cmd)\r\n{\r\n  if (command.HireDate > DateTime.Now)\r\n  {\r\n    _bus.Defer(command.HireDate, cmd);\r\n    return;\r\n  }\r\n\r\n  var employee = Employee.Hire(cmd.EmployeeId, cmd.Name, cmd.HireDate);\r\n  this._repository.Add(employee);\r\n}\r\n```\r\n\r\nHowever, it throws an InvalidOperationException "Cannot change headers on the message being processed."\r\n\r\nI can only defer the message successfully if I clone it first.'
230,'andreasohlund','Headers are not thread safe, casing sagas to not be found\nWhen running multiple threads the header management fails to return the correct headers. This causes the saga id to become null if a new message is starting to process. This causes the saga header id finder to get a null saga id and not find the saga.'
227,'andreasohlund',"Warnings are displayed when sending timeouts\nRemove the warning that ICommand should be used when doing bus.Send since we really can't know if the users are doing a request response. We can consider putting it back in if we ever introduce  IRequest/IResponse interfaces"
225,'andreasohlund','Add a Action<T> overload to RequestUtcTimeout to improve the syntax\n'
224,'johnsimons','Add support for child containers to the Ninject builder\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13153'
223,'andreasohlund','Remove enums and other non-reference types from scanning\nThis can be done after we have applied the system conventions and any user convention'
222,'andreasohlund','Make SynchronizedInvoker inherit from ContextBoundObject\n'
220,'andreasohlund','Possible bug with headers in unit tests\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13018'
216,'andreasohlund','Impersonation blows up if the identity passed in the headers is null\nhttp://stackoverflow.com/questions/9685771/nservicebus-impersonation-issue-after-upgrading-from-2-6-to-3-0\r\n\r\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13140'
214,'andreasohlund','Testing sagas that use interface messages fails\nTo reproduce just run the tests in the manufacturing sample'
213,'andreasohlund','Make the 3.0 timeoutmanager compatible with 2.6 timouts\n'
212,'andreasohlund','Inherited sagas causes timeouts to blow up\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13123'
210,'andreasohlund',"ReturnToSourceQueue doesn't work for clustered MSMQ\nhttp://tech.groups.yahoo.com/group/nservicebus/message/13109"
194,'johnsimons','Re enable multi gets in the Raven sub storage\nWhen we upgrade to the next stable release of Raven we should put the multiget back in to get better performance. Was disabled in RC4 since there is a bug in Raven that blows up when you do a multi load with non existing ids'
192,'johnsimons','Wrap the raven IDocumentStore\nTo avoid any risk for conflicts (castle use a id generation scheme that might cause issues). We should wrap the store behind a \r\n\r\nNServiceBus.Persistence.IPersistenceSessionFactory to avoid any issues in the future.\r\n\r\nRelated to: https://github.com/NServiceBus/NServiceBus/issues/190'
190,'andreasohlund','Castle builder blows up when you try to register your own IDocumentStore\nWorks for the other builders. Castle seems to thing that the internalized store is the same as the external'
188,'andreasohlund','Add a profile that run the distributor exclusively\n'
186,'andreasohlund',"Raven store is disposed when using StructureMap\nThe documentstore seems to be disposed even though its a singeton.\r\n\r\nThe SM documenation confirms that it shouldn't be disposed\r\nhttp://codebetter.com/jeremymiller/2010/02/10/nested-containers-in-structuremap-2-6-1/\r\n"
182,'andreasohlund','Msmq subscription storage blows up when you specify a explicit queue name\nhttp://stackoverflow.com/questions/8912954/msmqsubscriptionstorageconfig-in-nservice-bus-3-beta'
161,'andreasohlund',"MessageModule.Begin is not called when message gets forwarded to the error queue\nWill only be fixed on 3.0 since it's not deemed to be a critical bug"
147,'andreasohlund','Bus.CurrentMessageContext has incorrect value in IMessageModule.HandleBeginMessage method\nBus.CurrentMessageContext has the previous message value in  IMessageModule.HandleBeginMessage method but  it should has current processing message inside.\r\n\r\nBus.CurrentMessageContext should be the same in IMessageModule.HandleBeginMessage  and IMessageModule.HandleEndMessage methods. But now it has correct message context in HandleEndMessage and incorrect in HandleBeginMessage.\r\n\r\nFound it issue in 2.5 version'
145,'andreasohlund','TimeToBeReceived attribute has no affect without explicit endpoint config\nThe TimeToBeReceived attribute on a message has no affect if there is no explicit endpoint configured for the message type. Issue reproduced in NSB 2.6.\r\n\r\nThere is a message:\r\n\r\n[TimeToBeReceived("0:00:05.000")]\r\npublic class TestMessage : IMessage\r\n...\r\n\r\nWhich is sent:\r\n\r\n_bus.Send<TestMessage>("ANoneExistingQueue@AMachineFarAway", m => { });\r\n\r\nResult: the message stays in the out queue for more than 5 seconds.\r\n\r\nCause: RegisterMessageType of UnicastBus sets the TTLs per message type. However, it is only called for explicit message endpoints.\r\n\r\nWorkaround: add to your config.\r\n\r\n<MessageEndpointMappings>\r\n<add Messages="NSBSystemTests" Endpoint="WeReallyDont@Care" />\r\n</MessageEndpointMappings>'
143,'andreasohlund','Use the deadletter queue by default\nWith an option to turn it off in the fluent interface'
133,'johnsimons','xml serializer outputs documents with non-valid ASCII characters\nMessageSerializer.Serialize() performs (just before returning) a crude Encoding.UTF8.GetBytes() over the generated string, which may in some cases contain non-valid XML characters (like NULL which is a valid .net string character, but which sould be encoded as an entity on XML.\r\n\r\nFor example, serializing a message with an string property with value like "hello\\0" generates a messages which cannot be deserialized back.\r\n\r\nSample code demostrating the issue:\r\n\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing System.Collections.Generic;\r\n\r\nnamespace Test\r\n{\r\n        public class TestMessage : NServiceBus.IMessage {\r\n                public string Data { get; set; }\r\n        }\r\n\r\n        public static class Program {\r\n                public static void Main() {\r\n                        var tmp = new NServiceBus.Serializers.XML.MessageSerializer();\r\n                        var maper = new NServiceBus.MessageInterfaces.MessageMapper.Reflection.MessageMapper();\r\n\r\n                        tmp.MessageTypes = new List<Type>() { typeof(TestMessage) };\r\n                        maper.Initialize(new[] { typeof(TestMessage) });\r\n                        tmp.MessageMapper = maper;\r\n\r\n                        using (var ms = new MemoryStream())\r\n                        {\r\n                                var obj = new TestMessage() { Data = "Hello\\0" };\r\n                                tmp.Serialize(new NServiceBus.IMessage[] { obj }, ms);\r\n\r\n                                ms.Seek(0, SeekOrigin.Begin);\r\n\r\n                                var ret = tmp.Deserialize(ms);\r\n                        }\r\n                }\r\n        }\r\n}\r\n'
131,'andreasohlund','Change the NHibernate sub storage to use varchar instead of nvarchar\nTo avoid exceeding the maximum primary key size '
125,'andreasohlund','Unhandled StructureMapException (build 1664)\nThis exception was thrown while running the Starbucks sample:\r\n\r\n```StructureMap.StructureMapException was unhandled\r\n  Message=StructureMap Exception Code:  207\r\nInternal exception while creating Instance \'bb2e8928-0ffe-4cb4-86fa-76eea6ec36f1\' of PluginType NServiceBus.Config.IWantToRunWhenConfigurationIsComplete, NServiceBus.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c.  Check the inner exception for more details.\r\n  Source=StructureMap\r\n  ErrorCode=207\r\n  StackTrace:\r\n       at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 31\r\n       at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n       at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n       at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n       at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n       at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n       at StructureMap.BuildSession.CreateInstanceArray(Type pluginType, Instance[] instances) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 178\r\n       at StructureMap.Container.GetAllInstances(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\Container.cs:line 310\r\n       at NServiceBus.ObjectBuilder.StructureMap.StructureMapObjectBuilder.NServiceBus.ObjectBuilder.Common.IContainer.BuildAll(Type typeToBuild)\r\n       at NServiceBus.ObjectBuilder.Common.CommonObjectBuilder.<NServiceBus.ObjectBuilder.IBuilder.BuildAll>d__1`1.MoveNext() in c:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\src\\impl\\ObjectBuilder.Common\\ObjectBuilder.Common\\CommonObjectBuilder.cs:line 150\r\n       at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n       at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n       at NServiceBus.Configure.Initialize() in c:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\src\\config\\NServiceBus.Config\\Configure.cs:line 263\r\n       at NServiceBus.Configure.CreateBus() in c:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\src\\config\\NServiceBus.Config\\Configure.cs:line 207\r\n       at Cashier.Bootstrapper.BootstrapNServiceBus() in C:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\Samples\\Starbucks\\Cashier\\Bootstrapper.cs:line 24\r\n       at Cashier.Bootstrapper.Bootstrap() in C:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\Samples\\Starbucks\\Cashier\\Bootstrapper.cs:line 14\r\n       at Cashier.Program.Main() in C:\\Projects\\NServiceBus\\git\\master\\NServiceBus\\Samples\\Starbucks\\Cashier\\Program.cs:line 15\r\n       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\r\n       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Threading.ThreadHelper.ThreadStart()\r\n  InnerException: StructureMap.StructureMapException\r\n       Message=StructureMap Exception Code:  207\r\nInternal exception while creating Instance \'35e6d989-7acf-453e-8332-1edbf373abf3\' of PluginType NServiceBus.IStartableBus, NServiceBus, Version=3.0.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c.  Check the inner exception for more details.\r\n       Source=StructureMap\r\n       ErrorCode=207\r\n       StackTrace:\r\n            at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 31\r\n            at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n            at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n            at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n            at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n            at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n            at StructureMap.BuildSession.<>c__DisplayClass3.<.ctor>b__1() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 34\r\n            at StructureMap.BuildSession.CreateInstance(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 192\r\n            at StructureMap.Pipeline.DefaultInstance.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\DefaultInstance.cs:line 22\r\n            at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n            at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n            at StructureMap.Pipeline.ConstructorInstance.Get(String propertyName, Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 74\r\n            at StructureMap.Pipeline.ConstructorInstance.Get[T](String propertyName, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 79\r\n            at StructureMap.Pipeline.Arguments.Get[T](String propertyName) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Arguments.cs:line 18\r\n            at lambda_method(Closure , IArguments , Bootstrapper )\r\n            at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass11.<buildUp>b__e(IArguments args, T target) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 101\r\n            at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass2.<CreateBuilder>b__0(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 58\r\n            at StructureMap.Construction.InstanceBuilder.BuildInstance(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\InstanceBuilder.cs:line 34\r\n            at StructureMap.Pipeline.ConstructorInstance.Build(Type pluginType, BuildSession session, IInstanceBuilder builder) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 247\r\n            at StructureMap.Pipeline.ConstructorInstance.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 218\r\n            at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n            at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n            at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n            at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n            at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n            at StructureMap.BuildSession.<>c__DisplayClass3.<.ctor>b__1() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 34\r\n            at StructureMap.BuildSession.CreateInstance(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 192\r\n            at StructureMap.BuildSession.GetInstance[T]() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 78\r\n            at NServiceBus.ObjectBuilder.StructureMap.StructureMapExtensions.Registration`2.<RegisterServiceInterface>b__0(IContext ctx)\r\n            at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 25\r\n       InnerException: StructureMap.StructureMapException\r\n            Message=StructureMap Exception Code:  207\r\nInternal exception while creating Instance \'b69e8512-b067-4bc3-85e0-b29bf3b1898a\' of PluginType NServiceBus.Unicast.Subscriptions.ISubscriptionStorage, NServiceBus.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=9fc386479f8a226c.  Check the inner exception for more details.\r\n            Source=StructureMap\r\n            ErrorCode=207\r\n            StackTrace:\r\n                 at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 31\r\n                 at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n                 at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n                 at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n                 at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n                 at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n                 at StructureMap.BuildSession.<>c__DisplayClass3.<.ctor>b__1() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 34\r\n                 at StructureMap.BuildSession.CreateInstance(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 192\r\n                 at StructureMap.Pipeline.DefaultInstance.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\DefaultInstance.cs:line 22\r\n                 at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n                 at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n                 at StructureMap.Pipeline.ConstructorInstance.Get(String propertyName, Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 74\r\n                 at StructureMap.Pipeline.ConstructorInstance.Get[T](String propertyName, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 79\r\n                 at StructureMap.Pipeline.Arguments.Get[T](String propertyName) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Arguments.cs:line 18\r\n                 at lambda_method(Closure , IArguments , UnicastBus )\r\n                 at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass11.<buildUp>b__e(IArguments args, T target) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 101\r\n                 at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass2.<CreateBuilder>b__0(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 58\r\n                 at StructureMap.Construction.InstanceBuilder.BuildInstance(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\InstanceBuilder.cs:line 34\r\n                 at StructureMap.Pipeline.ConstructorInstance.Build(Type pluginType, BuildSession session, IInstanceBuilder builder) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 247\r\n                 at StructureMap.Pipeline.ConstructorInstance.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 218\r\n                 at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n                 at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n                 at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n                 at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n                 at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n                 at StructureMap.BuildSession.<>c__DisplayClass3.<.ctor>b__1() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 34\r\n                 at StructureMap.BuildSession.CreateInstance(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 192\r\n                 at StructureMap.BuildSession.GetInstance[T]() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 78\r\n                 at NServiceBus.ObjectBuilder.StructureMap.StructureMapExtensions.Registration`2.<RegisterServiceInterface>b__0(IContext ctx)\r\n                 at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 25\r\n            InnerException: StructureMap.StructureMapException\r\n                 Message=StructureMap Exception Code:  206\r\nInvalid property value(s), InstanceKey "6b142061-7c27-4ea4-bd82-9521b753f724"\r\n                 Source=StructureMap\r\n                 ErrorCode=206\r\n                 StackTrace:\r\n                      at StructureMap.Pipeline.ConstructorInstance.Build(Type pluginType, BuildSession session, IInstanceBuilder builder) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 247\r\n                      at StructureMap.Pipeline.ConstructorInstance.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 218\r\n                      at StructureMap.Pipeline.Instance.createRawObject(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 109\r\n                      at StructureMap.Pipeline.Instance.Build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Instance.cs:line 69\r\n                      at StructureMap.Pipeline.ObjectBuilder.ConstructNew(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 39\r\n                      at StructureMap.Pipeline.ObjectBuilder.Resolve(Type pluginType, Instance instance, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ObjectBuilder.cs:line 27\r\n                      at StructureMap.BuildSession.CreateInstance(Type pluginType, Instance instance) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 153\r\n                      at StructureMap.BuildSession.<>c__DisplayClass3.<.ctor>b__1() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 34\r\n                      at StructureMap.BuildSession.CreateInstance(Type pluginType) in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 192\r\n                      at StructureMap.BuildSession.GetInstance[T]() in c:\\code\\structuremap\\Source\\StructureMap\\BuildSession.cs:line 78\r\n                      at NServiceBus.ObjectBuilder.StructureMap.StructureMapExtensions.Registration`2.<RegisterServiceInterface>b__0(IContext ctx)\r\n                      at StructureMap.Pipeline.LambdaInstance`1.build(Type pluginType, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\LambdaInstance.cs:line 25\r\n                 InnerException: System.InvalidCastException\r\n                      Message=Unable to cast object of type \'System.String\' to type \'NServiceBus.Address\'.\r\n                      Source=StructureMap\r\n                      StackTrace:\r\n                           at StructureMap.Pipeline.ConstructorInstance.Get[T](String propertyName, BuildSession session) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 82\r\n                           at StructureMap.Pipeline.Arguments.Get[T](String propertyName) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\Arguments.cs:line 18\r\n                           at lambda_method(Closure , IArguments , MsmqSubscriptionStorage )\r\n                           at StructureMap.Construction.SetterBuilder`1.<>c__DisplayClass1.<BuildOptionalSetter>b__0(IArguments args, T target) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\SetterBuilder.cs:line 36\r\n                           at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass11.<buildUp>b__e(IArguments args, T target) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 107\r\n                           at StructureMap.Construction.BuilderCompiler.FuncCompiler`1.<>c__DisplayClass2.<CreateBuilder>b__0(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\BuilderCompiler.cs:line 58\r\n                           at StructureMap.Construction.InstanceBuilder.BuildInstance(IArguments args) in c:\\code\\structuremap\\Source\\StructureMap\\Construction\\InstanceBuilder.cs:line 34\r\n                           at StructureMap.Pipeline.ConstructorInstance.Build(Type pluginType, BuildSession session, IInstanceBuilder builder) in c:\\code\\structuremap\\Source\\StructureMap\\Pipeline\\ConstructorInstance.cs:line 233\r\n                      InnerException: \r\n```'
121,'johnsimons','Ensure that the 3.0 gateway is compatible with the 2.6 gateway\nIn order to drop the 3.5 version we need to ensure that the gateways remain compatible'
120,'andreasohlund','Change the subscriptions to only store the major assembly version\n'
118,'andreasohlund','Better exception when exceeding the 256 char limit for msmq labels\nHi Udi,\r\n \r\n  I figured out the problem. The maximum Label size is only 250 symbols and in our case we exceeded the maximum size (http://msdn.microsoft.com/en-us/library/ms703218%28v=VS.85%29.aspx). \r\n \r\n  We fixed the problem by changing the queue name but it something that you might to think about in future.\r\n \r\n----------------  MESSAGE IS TOO BIG ---------------------------------------------------------\r\n<CorrId>7a88a8b4-19ae-4029-a787-51ae56e1d691\\6626</CorrId>\r\n<WinIdName>IIS APPPOOL\\publisher.sec.local</WinIdName>\r\n<FailedQ>Q4Orion.ServiceBus.SECFiling.Subscriber.InputQueue@q4orion-maximv</FailedQ>\r\n<OriginalId>a99e979c-e59f-4d44-9bba-069ae83e102a\\12913164</OriginalId>\r\n----------------  MESSAGE IS TOO BIG ---------------------------------------------------------'
116,'udidahan','Add ICommand and IEvent marker interfaces\nAnd allow the users to override using lambdas'
103,'udidahan','Remove the need for the IMessage marker interface\nRefactor the code to allow user to define their own conventions/marker interface for their messages. This will improve the versioning story since users no longer need to reference NServiceBus.dll from in their message assemblies'
98,'andreasohlund','NServiceBus Gateway still hardwired to only support Http Channel Types\nVarious components in the NServiceBus Gateway are still hardwired to only support "Http" as the channel type. It should become possible to add other channel types for non-http urls as needed (some potential examples: tcp, ftp etc...)'
91,'andreasohlund',"Serializer doesn't support multiple arrays in a message\npublic class MyMessage {\r\n Foo[] Foos { get; set; }\r\n Bar[] Bars { get; set; }\r\n}\r\n\r\nhttp://groups.yahoo.com/group/nservicebus/message/11039"
72,'johnsimons',' DBSubscriptionStorageConfig, NHibernateProperties not typed as NServiceBus.Config.NHibernatePropertyCollection\nThe property NHibernateProperties is typed as NServiceBus.Unicast.Subscriptions.NHibernate.Config.NHibernatePropertyCollection instead of \r\nNServiceBus.Config.NHibernatePropertyCollection like how its defined in the NHibernateSagaPersisterConfig class.\r\n\r\nThere is no reason why these types should be different in both these classes.\r\n\r\nThis causes problems, when I try to add code to load both these configurations from the database assigning NHibernateProperties in code.\r\n\r\n\r\n'
59,'johnsimons',"FileLoadException\nA FileLoadException (Could not load file or assembly. Access is denied.) is being thrown by the HostServiceLocator on line 25 (NServiceBus v2.5) when starting many endpoints simultaneously (Easy to repro with 20+ endpoints). This doesn't seem to be a problem with windows file system permissions or background indexers/virus scanners deadlocking the files.\n\n```\nMagnum.StateMachine.StateMachineException was unhandled\nMessage=Exception occurred in\nTopshelf.Internal.ServiceController`1[[NServiceBus.Host.Internal.GenericHost,\nNServiceBus.Host, Version=2.0.0.0, Culture=neutral,\nPublicKeyToken=9fc386479f8a226c]] during state Initial while handling OnStart\nSource=NServiceBus.Host\nStackTrace:\nServer stack trace:\nat Magnum.StateMachine.ExceptionActionDictionary`1.HandleException(T\nstateMachine, Event event, Object parameter, Exception exception)\nat Magnum.StateMachine.EventActionList`1.Execute(T stateMachine, Event\nevent, Object parameter)\nat Magnum.StateMachine.State`1.RaiseEvent(T instance, BasicEvent`1\neevent, Object value)\nat Magnum.StateMachine.StateMachine`1.RaiseEvent(Event raised)\nat\nSystem.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr\nmd, Object[] args, Object server, Int32 methodPtr, Boolean fExecuteInContext,\nObject[]& outArgs)\nat\nSystem.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage\nmsg, Int32 methodPtr, Boolean fExecuteInContext)\nException rethrown at [0]:\nat System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage\nreqMsg, IMessage retMsg)\nat System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&\nmsgData, Int32 type)\nat Topshelf.Internal.ServiceControllerProxy.Start()\nat Topshelf.Internal.ServiceCoordinator.Start()\nat Topshelf.Internal.Hosts.ConsoleHost.Run()\nat NServiceBus.Host.Program.Main(String[] args)\nInnerException:\nMessage=Exception when starting endpoint, error has been logged. Reason:\nCould not load file or assembly 'file:///MyEndpoint.dll' or one of its dependencies.\nAccess is denied.\nSource=NServiceBus.Host\nStackTrace:\nat NServiceBus.Host.Internal.GenericHost.Start()\nat Magnum.StateMachine.EventActionList`1.Execute(T stateMachine,\nEvent event, Object parameter)\nInnerException:\n```"
36,'andreasohlund','InMemorySagaPersister is not thread-safe\nRunning the InMemorySagaPersister under high load and with multiple worker threads causes "Collection has been modified" exceptions in the Get method. The Save methods potentially corrupt the dictionary.'
21,'udidahan','Specifying a DistributorControlAddress results in an exception\nBranch: master\n\nRepro:\n\nSpecify a DistributorControlAddress and a DistributorDataAddress in the App.config of MyServer in the RequestResponce sample and launch the debugger.\n\n(This also happens in my test project using different object builders)\n\nResult:\n\nNServiceBus.Grid.MessageHandlers.ReadyManager.SendReadyMessage()  (ReadyManager.cs line 41) is invoked before the Bus is initialised/started. This results in Transport.NumberOfWorkerThreads returning zero and Bus.Send(DistributorControlAddress, messages) (ReadyManager.cs line 70) being invoked with an empty set of messages. Even if messages where being sent the Bus would still exception as it is not yet started.\n\nThis means that buses cannot be configured to use Distributor.\n\nIt *looks* like SendReadyMessage() on the Grid.ReadyManager is being invoked too early during spin up.\n\nSorry I haven’t submitted an automated test\n'
19,'andreasohlund','InMemorySagaPersister throws InvalidCastException\nhttp://tech.groups.yahoo.com/group/nservicebus/message/9867'
6,'andreasohlund','Make the transactional transport default to "transactional"\n Right now the transactional transport is non-transactional by default.\r\n\r\nI would suggest that we make it transactional by default and remove the\r\nTransactional() config method with NonTransactional()'
2421,'gbiellem','Impact on NSB license when changing languages\nProblem raised by Startup customer jostein.aksnes@gmail.com\r\n\r\nTheir license file worked on one developer\'s machine, but not on another.  Upon further checking:\r\n\r\n"It seems like the problem was related to changing the date format on the\r\ndeveloper machine from Thai to English. When this was done NServicebus was\r\ncomplaining, and once it was set back to Thai it worked fine again.\r\n\r\nThe license was applied when the thai date time format was applied, so\r\nmaybe there are some issues when the dates are stored in the registry etc.\r\nfor the license?"'
2169,'synhershko','Remove TimeoutData.Id\nTo separate persistence from this DTO\r\n\r\nSee https://github.com/Particular/NServiceBus.RavenDB/commit/5d053f256e55bac528de4916c0883bc6dae16578#commitcomment-6581498\r\n\r\n@andreasohlund @johnsimons @SimonCropp '
1920,'yvesgoeleven','Get rid of shared endpoint definitions in acceptance tests\nTests can influence each other because of this, if one fails, a bad message (or subscription in the case where I detected it), may cause another test to behave differently. '
1545,'indualagarsamy','Fix the Scaleout Sample\n**Problem:**\r\n\r\nThe sample for the ScaleOut has the following issues:\r\n\r\n- It leads users in thinking that they can run distributor + worker on the same box!!! (which is an anti-pattern)\r\n- It gets confusing (rightfully so) when the messages occasionally get lost (while they hide in the Orders.Handler.Guid queue)\r\n\r\n\r\n**Suggested fix:**\r\n\r\n- Modify the scaleout sample to only contain the master node.\r\n- Document how to scale out by either copying the bin folder to another machine or copy to the local machine and tweek the endpoint name + distributor address to simulate a scale out scenario\r\n- Also point the users to the ScaleOut HOL\r\n- Remove the code in the core that auto generates unique input queue names\r\n- Create a acceptance test that runs a master node (valid for msmq only)'
