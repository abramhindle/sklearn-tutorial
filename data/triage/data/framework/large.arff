@relation large.json
@attribute id integer
@attribute owner string
@attribute content string
@data
1637,'',"ajaxPostTimeout doesn't have to be multiplied by 1000, because it is use...\n...d as is on ScriptRenderer, so the client should just get the same value in both cases\r\n\r\n(well, ajaxPostTimeout should be the same timeout + 500ms)\r\n\r\nfixes #1617"
1636,'','Renaming the Position.scala file to ScalaPosition.scala to avoid\nname conflicts with the private class\r\n\r\nfixes #1635'
1635,'fmpwizard',"scala.io.Position needs renaming\nFurther to discussion on https://groups.google.com/forum/#!topic/liftweb/nafcSekSmjI the scala.io.Position class needs to be renamed to avoid a potential runtime error. If the class loader happens to load the official, private, scala.io.Position class before lift's public copy, then the jre will throw an IllegalAccessException if lift attempts to use it.\r\n\r\nIt also causes issues for people using sbt-assembly since assembly quite rightly complains if there are two copies of the class available."
1633,'','RequestVar not shared with custom generated AJAX\nEssentially the issue is that RequestVars have their default value when accessed in AJAX requests not generated via Lift mechanisms.\r\n\r\nSee https://groups.google.com/forum/#!topic/liftweb/h37z7msorWA for related discussion as well as https://groups.google.com/forum/#!topic/liftweb/B0A1S3JbLyU'
1632,'','Lift JSON 2.6-RC1 parser breaks with Java 8\nWe try to migrate from Java 7 to Java 8, but we get a very estrange ScalaSigParserError at the servers.\r\n\r\nI tried to isolate the error at:\r\n\r\nhttps://github.com/listatree/lift-json-java8\r\n\r\nBut it only breaks sometimes (in our servers breaks all the time).\r\n\r\nAn stacktrace error from our servers (not from the running tests) is at:\r\nhttps://github.com/listatree/lift-json-java8/blob/master/stacktrace.txt\r\n\r\nNotice the "net.liftweb.json.MappingException: unknown error" and the "scala.tools.scalap.scalax.rules.ScalaSigParserError: Unexpected failure"\r\n\r\nBy the way with java 8 at Mac OS X is running OK, the error is with java 8 at Debian GNU/Linux 7.7.\r\n\r\nThe exact versions:\r\n\r\nJava 8u25 (server version for Linux 64 bits)\r\nDebian GNU/Linux 7.7\r\nScala 2.11.2\r\nLift JSON 2.6-RC1\r\n\r\nJVM startup parameters: -Xms3072m -Xmx3072m -server -Xss8m -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=30\r\n\r\nSince it\'s working on Java 7 we are delaying the migration until we can clear this bug.\r\n\r\nThank you very much for Lift, it\'s an amazing piece of software !! (Y) :)'
1631,'','Remove unnecessary synchronization\nSee the thread referred to in issue #1629 for more info'
1630,'','Add implicit from tuple to SelectableOption\nfixed #1628 Add implicit from tuple to SelectableOption'
1628,'fmpwizard','Add implicit from tuple to SelectableOption\nas discussed here\r\nhttps://groups.google.com/d/topic/liftweb/bQa_jqzGMw0/discussion\r\n\r\nadd:\r\n\r\n```\r\nimplicit def tupleToSelectableOption[T](tuple: (T, String)): SelectableOption[T] =\r\n    SelectableOption(tuple._1, tuple._2)\r\n```\r\n\r\nto the object `SHtml.SelectableOption`\r\n\r\n'
1627,'','MatchError in Mappers decodeFromJSON_!\nGroup Discussion: https://groups.google.com/forum/#!topic/liftweb/fszGw9C3u_A'
1625,'',"Issue #1622 - Use property to set DefaultConnectionIdentifier.jndiName a...\n...nd change to val\r\n\r\nI wasn't sure of the best way to get #1623 onto the main branch, so I just created a new commit."
1623,'','Revert DefaultConnectionIdentifier.jndiName to var\nFixes #1622 '
1622,'eltimn','Use property to set DefaultConnectionIdentifier.jndiName and change to val\n'
1621,'tuhlmann','Signature of asJValue inconsistent\nI was subclassing BsonRecordListField (Lift 2.5.1, Scala 2.10) to extend it with some specialized methods.\r\nI also wanted to override asJValue to make it return a json object instead of the JArray that this field returns.\r\n\r\nThe compiler complained because the type signature in this specific case would be "def asJValue: JArray", because the overridden method does not state any return type so its inferred by the compiler.\r\n\r\nTo correct this, add the proper type signature to all overrides of asJValue in Lift 3.\r\n\r\nDiscussion in the list: https://groups.google.com/forum/#!topic/liftweb/kTBHlK7xBHM'
1620,'','Comet bug fix + Improve handling of non-cached comet actors\n  - Make lastRenderTime, delta timestamps, and lastListenerTime\r\n    consistent with each other as they are directly compared\r\n  - Add alwaysReRenderOnPageLoad as alternative to devMode\r\n  - Try to reduce number of renders for non-cached actors'
1617,'',"ajaxPostTimeout isn't properly respected in server-side request handling\nWhile investigating #1614, I uncovered a mistake in the retry handling code: we actually multiply the `ajaxPostTimeout` by 1000 server-side, so we basically tie up a request thread per retry until the original request completes correctly, even if the original requests have been timed out correctly by the browser.\r\n\r\nThe fix for this is trivial, but it's a bug that's been around since the 2.5 release without complaint, so I'm thinking it may be worth letting 2.6 go out the door in final form given its Scala 2.11 support and such, and making the fix in Lift 3… Thoughts?"
1616,'','Defer Ajax requests until initialization is complete\n'
1614,'','LiftRules.ajaxPostTimeout not taken into account in 2.6-RC1\nUnless I\'m missing something, LiftRules.ajaxPostTimeout doesn\'t work anymore in 2.6-RC1, whereas it was working in 2.5.1. My Ajax calls time out after 5 seconds even if I set LiftRules.ajaxPostTimeout to 10,000 or 1,000,000.\r\n\r\nThe generated script liftAjax.js seems to be correct (i.e. the "timeout" values seem to be computed from LiftRules.ajaxPostTimeout as expected).'
1613,'',"S.request should be empty for CometActors\nThis isn't a complete PR, but as Antonio was about to work on it and last night I did some work on it, I figured it makes sense to post it in the open.\r\n\r\nSee the ticket #1495 for details\r\n \r\nfixes #1495\r\n\r\n"
1612,'',"Fix issue with new password verification in ProtoUser.\nWhen we converted from the original bind strategy, I forgot that the old\r\nbind strategy evaluated things eagerly, while CSS selector transforms\r\ncall by name. This meant that the old bind strategy, when it bound both\r\nnew password fields (the new password and repeat new password fields) to\r\na single SHtml.password_* invocation, actually bound both fields to the\r\nsame password input with the same GUID.\r\n\r\nIn the CSS selector transform port, the result was instead two fields\r\nwith two different GUIDs, which broke the expected behavior of the\r\npassword field (it was supposed to generate a List of two passwords,\r\nwhich could then be checked for equality).\r\n\r\nTo fix this, we now create the single field ahead of time and pass that\r\nto the selector transform so that the same field gets used twice instead\r\nof a different field being generated each time.\r\n\r\nFixes #1594 .\r\n\r\n@karma4u101 if you can have a look at this branch and see if it fixes\r\nyour issue, that'd be supah-cool :)"
1611,'','Build clean up now that we are only building for scala 2.11.x\n* Simpler crossMapped\r\n* Removed scalaz6\r\n* Just use latest versions of specs2, scalatest and scalaz'
1610,'',"Bad wizard-all.html template in 2.6-RC1 lift_blank\nI'm new to Lift, but it seems to me that the wizard-all.html template in the lift_blank project of the Lift 2.6 RC1 distribution is missing the bindings for the actual form fields. The result is that a form defined with Screen doesn't display any fields.\r\n\r\nI was able to make it work by copying the same file from the lift_basic project.\r\n\r\ntags: screen LiftScreen"
1607,'',"Lazy Susan: Implement lazy-load and future CanBind support in AJAX responses\nThis PR really does three things:\r\n - Reworks the `LazyLoad` snippet and separates out the `AsyncRenderComet` to its own\r\n   file. This refactoring allows the `LazyLoad` snippet to work even if you're rendering an AJAX\r\n   response, thanks to the fiery comets work that went in a few weeks ago.\r\n - Adds a `CanResolveAsync` type class that can be used to handle any object that can be\r\n   resolved to a value asynchronously in the same way. Right now, two `CanResolveAsync`\r\n   implicits are provided: one for Scala `Future` and one for `LAFuture`.\r\n - Adds a `CanBind` for any type that has a `CanResolveAsync` implicit defined for it. This\r\n   uses some of the helper functions exposed by `AsyncRenderComet` to handle asynchronously\r\n   sending down the results of resolving the object in question.\r\n\r\nConcretely, this means four big things:\r\n - `LazyLoad` now works correctly even if it's rendered during an AJAX response. This wasn't\r\n   the case in Lift 2.x.\r\n - You can use Scala `Future` and `LAFuture` on the right-hand-side of a CSS selector transform\r\n   out-of-the-box. Like @fmpwizard's original implementation and unlike my dirt-simple one, this\r\n   does not waste a thread trying to resolve the futures.\r\n - Those futures can be used even if rendering during an AJAX response. I know my implementation\r\n   couldn't do this, I didn't check if Diego's could.\r\n - Support for additional future-like types (for example, Twitter `Future`s as used by Finagle) is\r\n   just a matter of providing a `CanResolveAsync` implicit. Their implementations are incredibly\r\n   simple (they are simply abstractions over `onSuccess` or whatever equivalent is provided).\r\n\r\nIf you want to see this in action, check out the [`lift_30` branch of my `lift-future-canbind-example` repository](https://github.com/Shadowfiend/lift-future-canbind-example/tree/lift_30). It mostly keeps the same code as the original example I posted a few days ago on the list, but uses Lift 3's built-in `CanBind` support for futures. It also demonstrates futures and lazy loads continuing to work even when re-rendered via an `idMemoize`.\r\n\r\nI've also created a [`failing-lift-2` branch](https://github.com/Shadowfiend/lift-future-canbind-example/tree/failing-lift-2) in that repo that has basically the same code as the `lift_30` branch, but uses Lift 2.6 and the original `FutureBinds` `CanBinds`. This illustrates the non-functioning AJAX lazy loading/future handling."
1606,'','Move to Scala 2.11.2\n'
1605,'',"Minor LiftScreen tweaks\n  - DisplayIf should take the target field as a parameter\r\n  - Hack around erasure warnings (which strangely weren't reported\r\n    before 2.11)\r\n  - Add set_? and otherValueSet_? methods to field\r\n\r\nThis ticket is just to document a commit already in master \r\nhttps://github.com/lift/framework/commit/cc613f84995e574c82608d59f14434b925cf32d5\r\n"
1604,'','Remove automatic lift:surround with="default" insertion\nHere is a first try at this (which may need some more Markdown-related work).\r\n\r\nRemove automatic lift:surround with="default" insertion, but wrap top level templates in <html></html> if the template contains multiple top level nodes and does not already contain <html>. This is necessary to support Markdown templates.\r\n\r\nFixes #1599 '
1601,'','Dead link on liftweb.net home page nav menu\nThe Tickets site linked to from the Lift home page, in Resources > Tickets, seems to be down.\r\n\r\nhttp://ticket.liftweb.net/\r\n\r\nI believe tickets are now mainly tracked as GitHub issues, is this correct? If so, please change the menu link to point to:\r\n\r\nhttps://github.com/lift/framework/issues'
1600,'',"AJAX errors omitting the full stack trace\nCurrently, errors in JavaScript retrieved with AJAX and then executed, only show the first line of the error in the browser inspector console.\r\n\r\nPlease include the full stack trace, by returning `e.stack` rather than just `e` by itself.\r\n\r\n(I'll also petition to make Error.toString() default to the full stack trace, as this behaviour is rather unintuitive)."
1599,'',"Nuke the auto wrapping HTML content with lift:surround if the outer element isn't html\nIn Lift 3 we introduced a feature whereby when rendering stuff, if what you were sending down or rendering didn't start with an html node, we automatically threw it inside a `lift:surround` before sending it down. This has caused some unanticipated pain and the general consensus seems to be to remove this behavior and return to how Lift 2.x handled these - by not wrapping them in a surround.\r\n\r\nMailing list discussion here: https://groups.google.com/d/msg/liftweb/zzKHiRGYs9U/zRomN1aS-oIJ"
1598,'',"RedirectResponse doesn't honor previously set response headers\nRedirectResponse ignores any previously set S.addHeader() values, replacing with just URL and ContentType headers. It should follow the model of the other response types that appends the existing headers with the newly added ones.\r\n\r\nThis may seem odd to add headers to a 302 request, but is necessary to honor IE security limitations in iFramed pages (P3P header)."
1597,'','Fix a couple of Ajax related path issues\n  - Include context path when generating page specific JS\r\n  - Include context path when making Ajax requests\r\n  - Fix Ajax path matching (previously renderVersion was being set to\r\n    "ajax")\r\n\r\nfixes #1591 '
1596,'','Fix MongoDB specs.\nMongoDB changed how they report errors a bit in one of the latest\nreleases. Error messages no longer start with the string we were\nchecking, but they do contain it - so this commit will get our specs\npassing again and should keep them passing on older mongos.'
1595,'','Pending 2.6 changes (pbrant)\n* Include option attributes in multiSelect_*\r\n* Share init key value\r\n    * Previously an effectively independent value was used for each *Var backing store.  Depending on the situation this can result in large amounts of wasted memory (particularly with ScreenVars).\r\n* Provide explicit parameter type when looking for snippet methods.\r\n* Set Date header when sending mail'
1594,'','Regression in ProtoUser\'s changePassword function  \nAfter switching from using bind to use css selectors transforms with updated xml forms new and repeated new password that should (and has been) saved in the newPassword List inside the changePassword function dose no longer contain both the new and the repeated new password resulting in a constant failure to change password. \r\n\r\nThe problem lays in the transaction from using bind like this \r\n    bind("user", changePasswordXhtml,\r\n         "old_pwd" -> SHtml.password("", s => oldPassword = s),\r\n         "new_pwd" -> SHtml.password_*("", LFuncHolder(s => newPassword = s)),\r\n         "submit" -> changePasswordSubmitButton(S.?("change"), testAndSet _)) \r\n\r\nTo using the following css transform \r\n    val bind = {\r\n      ".old-password" #> SHtml.password("", s => oldPassword = s) &\r\n      ".new-password" #> SHtml.password_*("", LFuncHolder(s => newPassword = s)) &\r\n      "type=submit" #> changePasswordSubmitButton(S.?("change"), testAndSet _)\r\n    }\r\n    bind(changePasswordXhtml)\r\n\r\nIn the older bind code "new_pwd" was mapped to the two new password input fields with identical GUID name fields resulting in booth new password field values being held in the newPassword List. \r\nIn the new bind val css transform using the ".new-password" selector unique GUID name\'s will be created for the two matching input fields and only one of the new password values will be held in the newPassword List resulting in  a user.validate error when tested. \r\n\r\nOne way to solve this could be to add one more css transform in the bind val, something like the following and update the xml form class value for the repeat password.\r\n    val bind = {\r\n      ".old-password" #> SHtml.password("", s => oldPassword = s) &\r\n      ".new-password" #> SHtml.password_*("", LFuncHolder(s => newPassword = s)) &\r\n      ".rep-password" #> SHtml.password_*("", LFuncHolder(s => newPassword = newPassword++s)) &\r\n      "type=submit" #> changePasswordSubmitButton(S.?("change"), testAndSet _)\r\n    }\r\n\r\nThere is a discussion thread on this topic here [1]\r\n\r\n[1] https://groups.google.com/forum/embed/?place=forum/liftweb&theme=default&showsearch=true&showpopout=true&parenturl=http://liftweb.net/forum/#!topic/liftweb/W63r81smcGw'
1593,'','BsonRecordListField should validate all elements by default on validate\nThis makes Record validation more complete.'
1592,'','BsonRecordListField should validate all elements by default on validate\n...ate is called on it.\r\n\r\nThis makes Record validation more complete.'
1591,'','LiftRules.liftPath is not contextPath relative\ncontextPath is not taken into account when calculating ajax/comet/page-js URIs.'
1590,'',"Conditionally exclude the Position.scala file in Scala <2.11.\nPosition is something we imported from scala.io because it was removed in Scala\r\n2.11; in 2.10, we can lean on the one in the scala library. For people who used\r\nsbt assembly to build fat JARs, having both in two different JARs resulted in\r\nnasty-sauce. We now exclude it when building for Scala versions below 2.11 so\r\nthis issue doesn't come up.\r\n\r\nThis fixes #1588."
1589,'',"Conditionally exclude the Position.scala file in Scala <2.11.\nPosition is something we imported from scala.io because it was removed in Scala\r\n2.11; in 2.10, we can lean on the one in the scala library. For people who used\r\nsbt assembly to build fat JARs, having both in two different JARs resulted in\r\nnasty-sauce. We now exclude it when building for Scala versions below 2.11 so\r\nthis issue doesn't come up.\r\n\r\nThis fixes #1588."
1588,'',"[Lift 2.6] Lift 2.6M4 for scala 2.10 contains scala.io.Position\nThe presence of scala.io.Position causes issues for sbt-assembly because it finds a conflicting class: \r\n\r\n  [error] (*:assembly) deduplicate: different file contents found in the following:\r\n  [error] /Users/channing/.sbt/boot/scala-2.10.4/lib/scala-library.jar:scala/io/Position$.class\r\n  [error] /Users/channing/.ivy2/cache/net.liftweb/lift-util_2.10/jars/lift-util_2.10-2.6-M4.jar:scala/io/Position$.class\r\n\r\nWhilst this can be dealt with by sbt-assembly, I don't think this scala.io class should be shipped with lift 2.10\r\nSuggestions on the mailing list were:\r\n1. remove it from the 2.10 build\r\n2. copy and rename it\r\n\r\n**Update**\r\nmailing list thread https://groups.google.com/d/topic/liftweb/nafcSekSmjI/discussion"
1586,'',"So You Can Dexy While You Dexy: Early Documentation Automation Work\nThis PR does three big things:\r\n - Introduce documentation for CSS selector transforms in the `doc/` directory. This is in the\r\n   [asciidoc](http://asciidoctor.org) format.\r\n - Introduce [dexy](http://dexy.it) for automating documentation builds. The current configuration is very\r\n   preliminary, and we'll probably want to be running things like API doc generation through there\r\n   soon.\r\n - Add some helper stuff that lets `dexy` verify the examples in the CSS selector transforms\r\n   are correct.\r\n\r\nThat last bit is the big one. There is a series of examples at the very beginning of the CSS\r\nselector docs, and they are presented as input, CSS selector transform, output. There is a\r\nScala helper (`ExtractCssSelectorExamples`) that reads the compiled document (once it's\r\nbeen compiled to HTML), extracts the input/transform/output triplets, and generates a fully-\r\nfunctioning specs2 specification from them with one specs2 example per documentation\r\nexample. When you run `dexy`, it will compile the document to HTML, run the extractor,\r\nand then execute the specification. The build will fail if there are errors in the spec.\r\n\r\nThe documentation is emitted into `target/docs/`, but it can also be viewed as rendered by\r\nGithub at https://github.com/lift/framework/blob/so-you-can-dexy-while-you-dexy/docs/css-selectors.adoc ."
1585,'','Fiery Comets: Support for AJAX responses with comets (shifted to master)\nThis is #1565 reopened with respect to `master`.\r\n\r\nTo support AJAX responses that send down comets, this PR actually\r\nrefactors a few aspects of comet creation:\r\n - `LiftSession` now has a new internal (private) API for finding or creating\r\n   a comet. There are two variations of `findOrCreateComet`, one that takes\r\n   a type parameter (`findOrCreateComet[MyCometType](name, html, attributes)`)\r\n   and one that takes a string comet type (`findOrCreateComet("MyCometType", ...)`)\r\n   The type parameter version uses manifests to allow direct instantiation of a\r\n   comet without reflection overhead and without requiring the comet to be in the\r\n   regular comet package if not wanted.\r\n - `LiftSession`\'s comet-related code has been significantly refactored to\r\n   eliminate duplication and make things a little easier to follow. Notably, there\r\n   are still some anonymous subclasses of `CometActor` created for round-trips\r\n   and streaming promises; those will be refactored to independent subclasses\r\n   at some point, but I didn\'t do it in this PR.\r\n - Comet ID info (type + name) now has a (private) case class `CometId` to represent\r\n   it in `LiftSession`.\r\n - The `CometCreationInfo` case class, which was in the `Templates.scala` file, is\r\n   now in the `CometActor.scala` file, and is used pervasively to pass comet creation\r\n   info around (before, we were using separate parameters in many places). This is\r\n   still mostly an internal class, however.\r\n - Publicly, `S` has a new API for finding or creating a comet, `S.findOrCreateComet`.\r\n   It works much like the `LiftSession` API, taking either a type parameter or a string\r\n   that is a comet class\'s name. Both of the overloads also have a\r\n   `receiveUpdatesOnPage` parameter that is defaulted to `false`. When set to `true`,\r\n   it will automatically append the created `CometActor` to the page or AJAX request\r\n   so that it will receive updates.\r\n - `S` also has a method for adding a comet to the currently rendering page or page\r\n   that invoked the current AJAX callback, `S.addComet`. It takes a `LiftCometActor`,\r\n   which you can get from `S.findOrCreateComet` if you don\'t have a direct handle\r\n   to it already.\r\n - The internal client-side JavaScript API now supports aborting the current comet\r\n   request, mostly in order to support restarting the current comet cycle. This is used\r\n   when a new comet is received from the server to ensure the comet starts receiving\r\n   updates immediately.\r\n - The comet snippet has been updated and simplified to work with these changes.\r\n   It also now has a `containerForCometActor` method that is publicly available and\r\n   lets you get the HTML container for any given comet actor. This lets you do your\r\n   own work to create a comet container without directly invoking the comet snippet.'
1584,'',"JField is no longer a JValue (shifted to master)\nThis is #1561 reopened with respect to `master`.\r\n\r\nThis means more type safety since it is no longer possible\r\nto create invalid JSON where `JField`s are added directly into `JArray`s for\r\ninstance. Most noticeable consequence of this change is that `map`, `transform`, `find` and `filter` come in two versions:\r\n\r\n```scala\r\n    def map(f: JValue => JValue): JValue\r\n    def mapField(f: JField => JField): JValue\r\n    def transform(f: PartialFunction[JValue, JValue]): JValue\r\n    def transformField(f: PartialFunction[JField, JField]): JValue\r\n    def find(p: JValue => Boolean): Option[JValue]\r\n    def findField(p: JField => Boolean): Option[JField]\r\n    ...\r\n```\r\n\r\nUse `*Field` functions to traverse fields in the JSON, and use the functions\r\nwithout `Field` in the name to traverse values in the JSON.\r\n\r\n---------\r\n\r\nThis isn't mergable yet; I'll reconcile with the latest `lift_30` branch soon, just wanted to\r\nget the PR open.\r\n\r\nCloses #1300."
1583,'','avoid double  tag in pom, which sonatype does not like\nsmall fix to get sbt 0.13 to create a proper pom file.\r\n\r\nalready tested against sonatype'
1581,'','Deal with deprecations in mongo-java-driver v2.12\nFixes #1579 '
1579,'eltimn','Deal with deprecations in mongo-java-driver v2.12\n'
1578,'','More time for spec\nWhen tests run on cloudbees (or any other slow server), the time specs tend to take longer that 500 ms,\r\nso give these two tests up to a second to still be considered correct (this is how master is right now)'
1577,'',"StackableMaker.doWith method needs to be documented to warn about its thread-local behavior\nThe issue is discussed here:\r\nhttps://groups.google.com/forum/#!searchin/liftweb/aleksey$20izmailov/liftweb/eBanLOmKtLA/Ny-q3SvwL8IJ\r\n\r\nConclusion:\r\nlet's add scaladocs"
1576,'','StackableMaker.doWith method needs to be documented to warn about its thread-local behavior\nThe issue is discussed here:\r\nhttps://groups.google.com/forum/#!searchin/liftweb/aleksey$20izmailov/liftweb/eBanLOmKtLA/Ny-q3SvwL8IJ\r\n\r\nConclusion:\r\nadd scaladocs'
1575,'',"updateListeners(Any)->sendListenersMessage.\nWe do this because it's particularly confusing to have the two methods\r\nnamed the same thing when they behave differently.\r\n\r\nWe name the method that sends all listeners a message that is passed in\r\n`sendListenersMessage` and leave `updateListeners` for sending all\r\nlisteners the message generated by `createUpdate`.\r\n\r\nThe old updateListeners(Any) method is deprecated for the 2.6 cycle."
1574,'',"Listener Renaming: Rename updateListeners(Any) in ListenerManager\nWe do this because there is an updateListeners overload that takes a\r\nlist of actors to update, which is optional. Having an updateListeners\r\noverload that takes an Any makes it really easy to accidentally call the\r\nwrong updateListeners method by having the wrong type of List.\r\nAdditionally, it's particularly confusing to have the two methods named\r\nthe same thing when they behave differently.\r\n\r\nWe name the method that sends all listeners a message that is passed in\r\n`sendListenersMessage` and leave `updateListeners` for sending all\r\nlisteners the message generated by `createUpdate`."
1573,'farmdawgnation','Failing Mongo Specs due to error message changes.\nMongoDocumentExamplesSpec and MongoDirectSpec are currently failing under Mongo 2.6 on my local machine with the following failure (or some variation thereof)\r\n\r\n> \'insertDocument :: caused by :: 11000 E11000 duplicate key error index: lift_mongodirectspec.testCollection.$name_1  dup key: { : "MongoSession" }\' doesn\'t start with \'E11000 duplicate key error index\' (MongoDirectSpec.scala:234)\r\n\r\nIt looks like this is caused by Mongo changing their error messages to be more informative. We should update the spec to be a contains check instead of a starts with check.'
1572,'',"Boolean value roundtrip fix\nFound this guy floating around aimlessly in my local copy. Don't know how or why\r\nI forgot to push it; @antidata noticed that I had missed the fix when I moved\r\nthe Lift JS over to the new consolidated file."
1571,'','Comet Deflection: ResponseShortcutException redirects in comet.\nComets now properly handle *only* ResponseShortcutExceptions that do redirection. Specs\r\nadded accordingly.\r\n\r\nImplements #1570 .'
1570,'Shadowfiend',"ResponseShortcutException does not work in CometActor\nThis fundamentally means that you can't use Lift's built-in redirection stuff\r\nin a CometActor. Instead, it would be better if the default comet exception\r\nhandler handled `ResponseShortcutException` specially and partial-updated\r\na `RedirectTo` `JsCmd` with the appropriate URI.\r\n\r\nSee https://groups.google.com/d/msg/liftweb/d9zrBh3tXt8/riEe-SFnS5oJ for\r\nthe original ML thread."
1569,'',"Change Email Attachment Behavior to wrap mail parts in multipart/related\nThis is the same work in #1403 by @limansky rebased on top of the current master branch. Going to do some testing here to ensure that email behavior works as expected across various email clients. If this works, then it closes #1197 and we'll have working Outlookyness.\r\n\r\nI may take the opportunity to do some spec addition and variable name cleanup as well."
1568,'',"Bounded Binding: Remove old bind strategy\n#1548 reopened with respect to `lift_30`. This is now ready for review.\r\n\r\nThe PR blows away `bind` and most things that came with it. It preserves a few functions\r\nthat were in `BindHelpers` that were related to more general HTML manipulation, which\r\nnow live in an `HtmlHelpers` trait instead. It also rearranges the `ToCssBindPromoter`\r\nimplicits so that they are implicit classes and in a single centralized place (a\r\n`CssBindImplicits` trait). These are mixed into `HtmlHelpers` and through there into\r\n`Helpers`, so importing `Helpers._` will continue to import the appropriate implicit\r\nconversions.\r\n\r\nThe second thing this does is rewrite few points where we were still leaning on\r\nthe old binding strategy, particularly `PaginatorSnippet`, the `Menu` snippet, mapper\r\nview support stuff, `LiftScreen`, and lift-proto's `Crudify` and `ProtoUser`. The\r\nsnippets themselves may not be optimal now; however, I made the rewriting function\r\nvery similarly to how it functioned before (using CSS classes instead of the element\r\nnames that the binding style was using), leaving decisions on whether the snippets\r\nshould be further reworked for another time.\r\n\r\nDone/pending work:\r\n - [x] Remove `BindHelpers` and `BindHelpersSpec`\r\n - [x] Move still-used generic stuff to `HtmlHelpers`\r\n - [x] Preserve `BindHelpersSpec`s for `HtmlHelpers` stuff in `HtmlHelpersSpec`\r\n - [x] Port snippets still using `bind` to CSS selector transforms\r\n - [x] Put implicits for `ToCssBindPromoter` in a common place\r\n - [x] Ensure untested stuff in `HtmlHelpers` is tested\r\n - [x] Make `LiftScreen` compile without `bind`\r\n - [x] Promote `CssBoundLiftScreen` to `LiftScreen`\r\n - [x] Make `lift-proto` compile without `bind`\r\n - [x] Make `lift-mapper` compile without `bind`\r\n - [x] Make sure all specs are passing"
1567,'',"ListenerManager.listenerService AddAListener fix\nEnsure the correct updateListeners function is called when a listener is added.\r\n\r\nI've tested this fix in our application and confirmed that it works correctly."
1566,'','Mongo enhancements\nThis is a bunch of mongo related stuff I added. Hopefully the commit messages explain well enough.\r\n\r\nAlso fixes #1549 '
1565,'','Fiery Comets: Support for AJAX responses with comets\nTo support AJAX responses that send down comets, this PR actually\r\nrefactors a few aspects of comet creation:\r\n - `LiftSession` now has a new internal (private) API for finding or creating\r\n   a comet. There are two variations of `findOrCreateComet`, one that takes\r\n   a type parameter (`findOrCreateComet[MyCometType](name, html, attributes)`)\r\n   and one that takes a string comet type (`findOrCreateComet("MyCometType", ...)`)\r\n   The type parameter version uses manifests to allow direct instantiation of a\r\n   comet without reflection overhead and without requiring the comet to be in the\r\n   regular comet package if not wanted.\r\n - `LiftSession`\'s comet-related code has been significantly refactored to\r\n   eliminate duplication and make things a little easier to follow. Notably, there\r\n   are still some anonymous subclasses of `CometActor` created for round-trips\r\n   and streaming promises; those will be refactored to independent subclasses\r\n   at some point, but I didn\'t do it in this PR.\r\n - Comet ID info (type + name) now has a (private) case class `CometId` to represent\r\n   it in `LiftSession`.\r\n - The `CometCreationInfo` case class, which was in the `Templates.scala` file, is\r\n   now in the `CometActor.scala` file, and is used pervasively to pass comet creation\r\n   info around (before, we were using separate parameters in many places). This is\r\n   still mostly an internal class, however.\r\n - Publicly, `S` has a new API for finding or creating a comet, `S.findOrCreateComet`.\r\n   It works much like the `LiftSession` API, taking either a type parameter or a string\r\n   that is a comet class\'s name. Both of the overloads also have a\r\n   `receiveUpdatesOnPage` parameter that is defaulted to `false`. When set to `true`,\r\n   it will automatically append the created `CometActor` to the page or AJAX request\r\n   so that it will receive updates.\r\n - `S` also has a method for adding a comet to the currently rendering page or page\r\n   that invoked the current AJAX callback, `S.addComet`. It takes a `LiftCometActor`,\r\n   which you can get from `S.findOrCreateComet` if you don\'t have a direct handle\r\n   to it already.\r\n - The internal client-side JavaScript API now supports aborting the current comet\r\n   request, mostly in order to support restarting the current comet cycle. This is used\r\n   when a new comet is received from the server to ensure the comet starts receiving\r\n   updates immediately.\r\n - The comet snippet has been updated and simplified to work with these changes.\r\n   It also now has a `containerForCometActor` method that is publicly available and\r\n   lets you get the HTML container for any given comet actor. This lets you do your\r\n   own work to create a comet container without directly invoking the comet snippet.'
1564,'','Apply cursor conversion improvement to MongoMetaRecord.findAll\nFixes #837 '
1563,'','Fix form element in MongoListField\nFixes #1551 '
1562,'',"Lift 3.0 merged with master + #1560\nThis merges the existing 2.6 work (mostly deprecations that were discarded in the merge) as well as the last commit of #1560 cherry-picked to `lift_30`.\r\n\r\n@eltimn this should have all the changes of 1560, but reconciled with 2.6 history so that we can continue merging if we decide to (though we're probably rapidly nearing the point where we should consider lopping `lift_30` off wholesale).\r\n\r\nAll tests pass locally, though we've sprouted some warnings in the *record projects and in a few tests; I'll attend to those after this goes in."
1561,'',"JField is no longer a JValue\nThis means more type safety since it is no longer possible\r\nto create invalid JSON where `JField`s are added directly into `JArray`s for\r\ninstance. Most noticeable consequence of this change is that `map`, `transform`, `find` and `filter` come in two versions:\r\n\r\n```scala\r\n    def map(f: JValue => JValue): JValue\r\n    def mapField(f: JField => JField): JValue\r\n    def transform(f: PartialFunction[JValue, JValue]): JValue\r\n    def transformField(f: PartialFunction[JField, JField]): JValue\r\n    def find(p: JValue => Boolean): Option[JValue]\r\n    def findField(p: JField => Boolean): Option[JField]\r\n    ...\r\n```\r\n\r\nUse `*Field` functions to traverse fields in the JSON, and use the functions\r\nwithout `Field` in the name to traverse values in the JSON.\r\n\r\n---------\r\n\r\nThis isn't mergable yet; I'll reconcile with the latest `lift_30` branch soon, just wanted to\r\nget the PR open.\r\n\r\nCloses #1300."
1560,'','Remove deprecated code and other updates relating to ConnectionIdentifier\nFixes #1555 and #1505 for 3.0.'
1559,'',"Outline Scripts: Refactor JS support to a single static file + move initialization to per-page file.\nTwo major things here:\r\n - JS support is now in a single lift.js file at `resources/toserve`. Initialization is done via the\r\n   `LiftRules.javascriptSettings` rule.\r\n - JavaScript added to the page via `S.appendJs` is now accumulated into a separately-referenced\r\n   JS file that is served once.\r\n\r\nThere's some formatting noise in this PR, unfortunately. \r\n\r\nAlso, @eltimn, right now we've got `LiftRules.autoIncludeJSSettings` and `LiftRules.javascriptSettings`;\r\nshould we make `LiftRules.javascriptSettings` produce a `Box[JsObj]` that people can set to `Empty`\r\nas needed, instead of having two settings?\r\n\r\nI suppose I also need to make a note to:\r\n - [x] Fix capitalization of `javascriptSettings` to be `javaScriptSettings`\r\n\r\n---------\r\n\r\nA slight bit of additional background on the `appendJs` change—this is to let us move towards\r\na place where Lift's locked-down `Content-Security-Policy` settings (when we add them) could\r\nbe very restrictive without blocking any of Lift's core functionality. There are some more steps\r\nto be done in that direction, including making sure anything that currently emits inline script\r\nblocks instead uses `appendJs` and coming up with a way that current `onclick` or related\r\nbindings can be extracted into a separate file."
1558,'',"[Lift 2.6] 2.11 compatibility stuff\nBranched off of the significant work @fmpwizard had already done, pulled in some\r\ndeprecation fixes from `deprecator-exterminator`, fixed all specs2 2.x-related test\r\nfailures, and added a compatibility layer that's necessary to deal with some\r\n`concurrent.Map`/`ConcurrentMap` shenanigans Scala pulled over the course of\r\nthe 2.10->2.11 cycle.\r\n\r\nWe now have two projects, `lift-framework` for building 2.11 and ostensibly 2.10.x (I\r\nhaven't checked the latter) and `lift-framework-pre-211` to build 2.9.2 and 2.10.x.\r\n\r\nAll specs are passing under 2.9.2 and 2.10.4 for `lift-framework-pre-211` and all specs\r\nare passing under 2.11 for `lift-framework`. Would appreciate it if folks could test-drive\r\na local publish of this to make sure their apps are working as expected as well.\r\n\r\nWe also need to discuss if we're going to backport this stuff to 2.5 or say that you have\r\nto use a 2.6 milestone to get 2.11 support."
1557,'',"Tweak some TimeHelpers specs for reliability.\nBecause of the way specs2 matchers work, calculating the expected time\r\nin the call-by-name matcher could result in some weirdness. We now\r\nprecompute the expected time.\r\n\r\nCan't guarantee this'll fix the issues, but I think it could help."
1556,'',"Move ConnectionIdentifier to util package.\nI also replaced the use of MongoIdentifier with ConnectionIdentifier.\r\n\r\nThen, I added RecordRules.fieldName that takes a ConnectionIdentifier as an argument. I had to add `def connectionIdentifier` to MetaRecord for this to work.\r\n\r\nReplaces #1550 \r\n\r\nOne question: DefaultConnectionIdentifier.jndiName was defined as a `var`. Does anyone know if that was intentional? I changed it to `val` here.\r\n\r\nAfter I did this I realized we don't necessarily need to deprecate db.ConnectionIdentifier. We could just leave the type alias the same way mapper is."
1555,'eltimn','Move ConnectionIdentifier to util\n https://groups.google.com/d/msg/liftweb/4stHdUKa9Tc/-7wWpVMFjeYJ\r\n\r\n- [x] 2.6\r\n- [x] 3.0'
1554,'','Removed deprecated code from lift-mongodb and lift-mongodb-record\nThis removes the deprecated code from #1498 \r\n\r\nOnce this is merged I can fix any conflicts there may be with  #1534 '
1553,'','Rename BadResponse to BadRequest\nFrom https://github.com/lift/framework/blob/master/web/webkit/src/main/scala/net/liftweb/http/LiftResponse.scala#L109\r\n\r\n````\r\n/**\r\n * 400 Bad Request\r\n *\r\n * Your Request was missing an important element. Use this as a last resort if\r\n * the request appears incorrect.\r\n */\r\ncase class BadResponse() extends LiftResponse with HeaderDefaults {\r\n  def toResponse = InMemoryResponse(Array(), headers, cookies, 400)\r\n}\r\n````\r\n\r\nThanks.\r\n'
1552,'','Issue #1498 - Mongo -> MongoClient Transition\nDeprecated MongoAddress, MongoHostBase, MongoHost, MongoSet, and the MongoDB functions that take them as an argument.\r\n\r\nDeprecated the MongoDB functions that take Mongo as an argument and added ones that take MongoClient as an argument.\r\n\r\nDeprecated MongoRecord.save (no arguments).\r\n\r\nAdded default argument of `true` to MongoRecord.save(safe: Boolean) function.\r\n\r\nAdded MongoRecord.save(inst: BaseRecord) function that uses the WriteConcern configured in Mongo/MongoClient.\r\n\r\nAdded saveBox(), updateBox(), and deleteBox_! functions to MongoRecord that all wrap the related functions in tryo and return a Box.\r\n\r\nInternally, MongoDB still uses Mongo, so no behavior will change unless MongoClient (or MongoOptions with a different WriteConcern) is used.'
1551,'eltimn',"Fix form element in MongoListField\nCurrently doesn't support selecting 0 items in multi select element.\r\n\r\nNeed to add:\r\n\r\n    SHtml.hidden( () => set(Nil)) ++"
1550,'','[WIP] Create RecordRule for field name.\nFixes #1505 \r\n\r\nI was not able to create a separate rule for use with json because lift-mongo needs the names to match to convert JValues to DBObjects.\r\n'
1549,'eltimn','Fix setFromJValue on MongoListField\nhttps://groups.google.com/d/msg/liftweb/_2wC9sCFUDw/XKEmasEQYOEJ'
1548,'',"[WIP] Bounded Binding: Remove old bind strategy\nThis guy will need #1534 to go in (I've opened it with respect to that #1547, but will\r\nreopen with respect to `lift_30` once everything goes in). It will also require that we\r\ndeprecate the appropriate stuff in 2.6 (something we hadn't undertaken yet).\r\n\r\nThe PR blows away `bind` and most things that came with it. It preserves a few functions\r\nthat were in `BindHelpers` that were related to more general HTML manipulation, which\r\nnow live in an `HtmlHelpers` trait instead. It also rearranges the `ToCssBindPromoter`\r\nimplicits so that they are implicit classes and in a single centralized place (a\r\n`CssBindImplicits` trait). These are mixed into `HtmlHelpers` and through there into\r\n`Helpers`, so importing `Helpers._` will continue to import the appropriate implicit\r\nconversions.\r\n\r\nThe second thing this does is rewrite a couple of points where we were still leaning on\r\nthe old binding strategy, particularly `PaginatorSnippet` and the `Menu` snippet. The\r\nsnippets themselves may not be optimal now; however, I made the rewriting function\r\nvery similarly to how it functioned before (using CSS classes instead of the element\r\nnames that the binding style was using), leaving decisions on whether the snippets\r\nshould be further reworked for another time.\r\n\r\n`lift-webkit` still does not compile due to `LiftScreen`. We discussed promoting\r\n`CssBoundLiftScreen`'s binding implementation to be the main `LiftScreen` one in\r\n[this mailing list discussion](https://groups.google.com/d/msg/liftweb/v7gzlnKMSoM/IspntBkMXdgJ), but I think that work is maybe best for @pbrant if he\r\nhas the time and is willing?\r\n\r\nDone/pending work:\r\n - [x] Remove `BindHelpers` and `BindHelpersSpec`\r\n - [x] Move still-used generic stuff to `HtmlHelpers`\r\n - [x] Preserve `BindHelpersSpec`s for `HtmlHelpers` stuff in `HtmlHelpersSpec`\r\n - [x] Port snippets still using `bind` to CSS selector transforms\r\n - [x] Put implicits for `ToCssBindPromoter` in a common place\r\n - [x] Ensure untested stuff in `HtmlHelpers` is tested\r\n - [x] Make `LiftScreen` compile without `bind`\r\n - [x] Make `lift-proto` compile without `bind`\r\n - [x] Make `lift-mapper` compile without `bind`\r\n - [ ] Make sure all specs are passing"
1547,'','X-nay to the ind-bay: Remove BindHelpers.xbind, plus a couple of extra warnings\nMain thing here is removing BindHelpers.xbind, which was deprecated. This removes the\r\nfunctions deprecated by #1546 for 2.6 in Lift 3, and introduces the same alternatives introduced\r\nin that PR into Lift 3. It contributes to #1534 .\r\n\r\nIt also fixes three more warnings, one missed one in lift-json and two javac warnings.\r\n\r\nThe only remaining warnings after this should be in `lift-testkit` and related to code that\r\nshould be removable.'
1546,'',"2.6: Deprecate xbind-related things in Mapper.\nThis includes a bunch of field binding and form snippet\r\nhelpers. New versions are added for doing similar things with\r\nCssSels instead.\r\n\r\nThey don't map 1-to-1 because CSS selector transforms don't\r\nsupport namespaces, amongst other things. Transforms are\r\ncombined using `andThen` in case they match the same element\r\nor match a parent element and something else needs to affect\r\nthe child. If folks think `&` would be a better way to go, I'm totally\r\nwilling to go for it—I vacillated a bit between the two."
1545,'','2.6: Add proper deprecation warnings to two methods.\nThese were deprecated in the scaladoc but not annotated as such, so did not\r\nemit warnings.'
1544,'','Good-bye deprecateds (except xbind)\nThis nukes all deprecated methods in Lift 3 except for `xbind`, which is\r\nbaked into record pretty hard and will take a separate PR.\r\n\r\nStill wrt #1534, btw.'
1543,'','2.6: Deprecate old JSONParser-related stuff\nLift still has a legacy JSON parser that we want to rip out for Lift 3. This\r\ndeprecates a slew of functionality in `S`, `SHtml`, and `CometActor` that\r\nuses that legacy JSON parser.\r\n\r\nThere may still be some stuff out there, so please wait.'
1542,'',"Testing 1-2-3: Fix test warnings in all but lift-mongodb and lift-mongodb-record\nlift-mongodb and lift-mongodb-record have some compile errors when #1540 is merged,\r\nso that's going to get dealt with after it goes in.\r\n\r\nThis takes care of all other pending work for #1534."
1541,'','JSON and the Argonauts: Fix src warnings in lift-json-ext, lift-json-scalaz, and lift-json-scalaz7\nlift-json-ext, lift-json-scalaz, and lift-json-scalaz7 should be done here for src stuff,\r\ncontributing towards #1534.'
1540,'',"VHS recorder: Fix src warnings in lift-mongodb, lift-mongodb-record, and lift-squeryl-record\nlift-mongodb, lift-mongodb-record, and lift-squeryl-record should be done here for src stuff,\r\ncontributing towards #1534.\r\n\r\n@eltimn it would be handy if you could have a look here—I addressed some mongo-related\r\ndeprecation warnings, specifically related to using `Mongo` vs `MongoClient` and `MongoOptions`\r\nvs `MongoClientOptions`. I dealt with it pretty quick-and-dirty, but I realize amongst other things\r\n`MongoOptions` defaults write concerns to a different value than `MongoOptions`. I imagine we'll\r\nwant to deprecate the `MongoOptions` constructor in 2.6 and provide an overload that takes\r\n`MongoClientOptions`?"
1539,'','Dblicious: Fix src warnings in lift-proto, lift-db, lift-mapper, and lift-record\nlift-proto and lift-db, lift-mapper, and lift-record should be done here for src stuff,\r\ncontributing towards #1534 .'
1538,'','Emergency Kits: Fix src warnings in lift-testkit and lift-webkit\nlift-testkit and lift-webkit should be done here for src stuff, contributing towards #1534 .\r\n\r\nNotably, there are still a good number of warnings within that are related to\r\ninternal Lift deprecations; I will not be handling those until after #1534 goes in.'
1537,'',"Bump to sbt 0.13.\nThis is a work in progress. For the time being, to build this, you'll need to `publish-local` the latest snapshot of [sbt-yui-compressor](https://github.com/indrajitr/sbt-yui-compressor). Things appear to boot though yui is throwing out usage information which leads me to believe something is amiss. Haven't had time to check it out yet, but I'm opening a PR in the event someone else would like to."
1536,'',"Build the 2.10 edition of Lift 2.x using Scala 2.10.4\nThis bumps the version of the compiler we're using in Lift 2.x to use the Scala 2.10.4 compiler."
1535,'','Utilitarian Actors: Fix src warnings in lift-actor and lift-util\nlift-actor and lift-util should be done here for src stuff, contributing towards #1534 .'
1534,'',"Deprecator Exterminator: Systematic de-warningification of Lift 3\nI'm going through project-by-project and blowing away warnings, including deprecation\r\nwarnings and feature warnings (though currently we don't have `-feature` enabled on\r\nour builds—I've got it turned on locally).\r\n\r\nI'm starting out with the main sources and then will go back and clean up test sources.\r\n\r\nsrc:\r\n - [x] lift-actor\r\n - [x] lift-common\r\n - [x] lift-db\r\n - [x] lift-json\r\n - [x] lift-json-ext\r\n - [x] lift-json-scalaz\r\n - [x] lift-json-scalaz7\r\n - [x] lift-mapper\r\n - [x] lift-markdown\r\n - [x] lift-mongodb\r\n - [x] lift-mongodb-record\r\n - [x] lift-proto\r\n - [x] lift-record\r\n - [x] lift-squeryl-record\r\n - [x] lift-testkit\r\n - [x] lift-util\r\n - [x] lift-webkit\r\n\r\ntest:\r\n - [x] lift-actor\r\n - [x] lift-common\r\n - [x] lift-db\r\n - [x] lift-json\r\n - [x] lift-json-ext\r\n - [x] lift-json-scalaz\r\n - [x] lift-json-scalaz7\r\n - [x] lift-mapper\r\n - [x] lift-markdown\r\n - [x] lift-mongodb\r\n - [x] lift-mongodb-record\r\n - [x] lift-proto\r\n - [x] lift-record\r\n - [x] lift-squeryl-record\r\n - [x] lift-testkit\r\n - [x] lift-util\r\n - [x] lift-webkit\r\n\r\nIt's a lot of work for one person, so if you want to jump in, please just let me know\r\nwhere you want to work. In particular, my familiarity with the db things in Lift (record,\r\nmapper, etc) and with scalaz is significantly lower than other parts of the codebase,\r\nso if someone wants to jump in there, that would be sweet.\r\n\r\n-----\r\n\r\nTwo steps left:\r\n - [x] Remove deprecated stuff inside Lift except for binding stuff.\r\n - [x] Remove deprecated binding stuff.\r\n\r\nAfter all of this, I'll probably deprecate all `BindHelpers` stuff in 2.6 and work through\r\nremoving it from Lift 3."
1533,'','Spelling Bee: General spelling fixes + deprecations for 2.x series\nThis PR and branch is intended for general misspellings in the Lift API done in the\r\n2.x series. These should:\r\n - Deprecate the old version with a note indicating what the correct version is and the\r\n   fact that the misspelled version will be gone in Lift 3.0.\r\n - Delegate calls to the old version to the new, correctly-spelled version.\r\n\r\nThis for #1529.'
1532,'','Rework ListOfBoxes and implicit to implicit class extending AnyVal.\nThis avoids an allocation and avoids the implicit conversion method. This PR is\r\nagainst `lift_30`, as it requires Lift 2.10.\r\n\r\nSee #1531 for the original issue, which I messed up due to bad `hub`-foo.'
1531,'farmdawgnation',"Make ListOfBoxes extend AnyVal for Lift 3.\nThe `ListOfBoxes` class was implemented in #1525. As noted [here](https://github.com/lift/framework/pull/1525/files#r11415211) in Scala 2.10 we can make that extend AnyVal to get some performance optimization.\r\n\r\nSince it's 2.10 only, it'll be something we do pointed at Lift 3 instead of 2.6."
1530,'',"Disable Box.get in Lift 3\nThis PR disables Box.get in Lift 3. It also removes `open_!` and `openTheBox`, which were deprecated in Lift 2.4.\r\n\r\nDisabling is done by making `get` return `Nothing`. Making it return an internal sealed trait was actually less effective than `Nothing`, as it didn't trigger a compile error on the test that is also fixed in this branch."
1528,'','Warning cleanup should be finished at some point.\nWe have some in-progress warning cleanup that was started in https://github.com/lift/framework/pull/1447 that needs to be wrapped up at some point.'
1527,'',"working on 2.11, builds except missing deps, tests don't compile\n"
1526,'','Fixed stale database connection release\nMailing list: https://groups.google.com/forum/#!topic/liftweb/Hn0bdboGzAU\r\n\r\ngetAutoCommit, rollback and commit can throw exceptions on stale connections, which was preventing a correct connection release. (c.releaseFunc() was never called in that case)\r\n\r\nRegards\r\nRobert'
1525,'farmdawgnation',"Implement a helper for Iterator[Box[T]] => Box[List[T]]\nSo, I've run into cases before where I have a for comprehension I need to execute that returns an `Iterator[Box[T]]`, but the return type of the method I'm building is `Box[T]`. When I'm in this situation, the following is true:\r\n\r\n* I want a `Full[List[T]]` in the event that all Boxes are full.\r\n* I want a `ParamFailure[List[Box[T]]]` in the event that one or more `Failure` existed in the `Iterator[Box[T]]`."
1524,'','Can not recover when database connections were closed.\nWhen connections to the database are closed by an outside event (restart db-machine, network problems) lift does not release the bad connection correctly. I expect it to recover by reconnecting to the database, but every made request to the system keeps throwing exceptions. \r\n\r\nThe problem in my eyes is: the exception prevents lift to release the connection to the pool (when calling auto-commit, which is not surrounded by try-catch). So every next attempt to get a connection fails the same way, as the stale connection is still in the pool. So far only a jetty restart seems to be a solution.\r\n\r\nI can reproduce the problem using postgres locally, doing some requests to the running lift-instance and then using psql to close connections:\r\n\r\n    SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity \r\n    WHERE  pg_stat_activity.datname = \'databasename\' AND pid <> pg_backend_pid();\r\n\r\n\r\nMy Boot.scala\r\n\r\n    if (!DB.jndiJdbcConnAvailable_?) {\r\n      val vendor =\r\n        new StandardDBVendor(Props.get("db.driver") openOr "org.h2.Driver",\r\n          Props.get("db.url") openOr\r\n            "jdbc:h2:lift_proto.db;AUTO_SERVER=TRUE",\r\n          Props.get("db.user"), Props.get("db.password"))\r\n\r\n      LiftRules.unloadHooks.append(vendor.closeAllConnections_! _)\r\n\r\n      DB.defineConnectionManager(DefaultConnectionIdentifier, vendor)\r\n    }\r\n\r\nMy props\r\n\r\n    db.user=rob\r\n    db.password=\r\n    db.driver=org.postgresql.Driver\r\n    db.url=jdbc:postgresql://localhost/blanklift_dev\r\n\r\nStacktrace:\r\n\r\n    Message: org.postgresql.util.PSQLException: This connection has been closed.\r\n\torg.postgresql.jdbc2.AbstractJdbc2Connection.checkClosed(AbstractJdbc2Connection.java:837)\r\n\torg.postgresql.jdbc2.AbstractJdbc2Connection.getAutoCommit(AbstractJdbc2Connection.java:798)\r\n\tnet.liftweb.db.DB$class.net$liftweb$db$DB$$releaseConnectionNamed(DB.scala:309)\r\n\tnet.liftweb.db.DB$$anonfun$use$1.apply(DB.scala:705)\r\n\tnet.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\r\n\tnet.liftweb.db.DB$currentConn$.run(DB.scala:679)\r\n\tnet.liftweb.db.DB$class.use(DB.scala:691)\r\n\tnet.liftweb.db.DB$$anon$1.use(DB.scala:40)\r\n\tnet.liftweb.db.DB$$anon$2$$anonfun$apply$15.net$liftweb$db$DB$class$$anon$$anonfun$$recurseMe$1(DB.scala:260)\r\n\tnet.liftweb.db.DB$$anon$2$$anonfun$apply$15.apply(DB.scala:262)\r\n\tnet.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\r\n\tnet.liftweb.db.DB$$anon$2$DepthCnt$.run(DB.scala:233)\r\n\tnet.liftweb.db.DB$$anon$2.apply(DB.scala:236)\r\n\tnet.liftweb.http.S$class.net$liftweb$http$S$$doAround(S.scala:1390)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1623)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$class.net$liftweb$http$S$$_nest2InnerInit(S.scala:1622)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43$$anonfun$apply$44.apply(S.scala:1666)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$withReq$1.apply(S.scala:1676)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$class.withReq(S.scala:1675)\r\n\tnet.liftweb.http.S$.withReq(S.scala:47)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43.apply(S.scala:1662)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$41$$anonfun$apply$42.apply(S.scala:1660)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$41.apply(S.scala:1659)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1658)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$class.net$liftweb$http$S$$_innerInit(S.scala:1657)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$47$$anonfun$apply$48$$anonfun$apply$49$$anonfun$apply$50$$anonfun$apply$51.apply(S.scala:1699)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$47$$anonfun$apply$48$$anonfun$apply$49$$anonfun$apply$50.apply(S.scala:1697)\r\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:613)\r\n\tnet.liftweb.http.RequestVarHandler$.apply(Vars.scala:515)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$47$$anonfun$apply$48$$anonfun$apply$49.apply(S.scala:1696)\r\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:613)\r\n\tnet.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:528)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$47$$anonfun$apply$48.apply(S.scala:1695)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$47.apply(S.scala:1694)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1.apply(S.scala:1693)\r\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tnet.liftweb.http.S$class.net$liftweb$http$S$$_init(S.scala:1692)\r\n\tnet.liftweb.http.S$class.statelessInit(S.scala:1292)\r\n\tnet.liftweb.http.S$.statelessInit(S.scala:47)\r\n\tnet.liftweb.http.LiftServlet.doService(LiftServlet.scala:279)\r\n\tnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:148)\r\n\tnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:147)\r\n\tnet.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:345)\r\n\tnet.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\r\n\tnet.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:364)\r\n\tnet.liftweb.util.Helpers$.logTime(Helpers.scala:34)\r\n\tnet.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:147)\r\n\tnet.liftweb.http.LiftServlet.service(LiftServlet.scala:158)'
1523,'',"Define Box.get\nFolks frequently use `.get` on `Box`, triggering the implicit `Box`->`Option` conversion\r\nand thus both making it easier to open the box (bad) and making that process slower\r\n(baddd).\r\n\r\nLet's define a `get` method on `Box` that is declared to return an internal class and\r\nthrows an Exception. This will fail compiler checks and also not work at runtime. For\r\n2.6, we can define a `get` method that works like `open_!` and immediately deprecate it."
1522,'',"Overriding default JSON GET/POST behavior\nCreating a ticket as per https://groups.google.com/d/msg/liftweb/E-XlChwJd10/-8Uix3KJDXEJ.\r\n\r\nTo summarize, the idea was to allow the customization of how JSON requests are handled; currently, the framework is hardcoded to require the Content-Type header of any JSON requests to always be `application/json`. However, this is not how many JSON based web services work, and shouldn't be a hardcoded requirement in the case of e.g. web services that are designed to only use JSON anyway (i.e. the content-type selection is redundant).\r\n\r\nHowever YMMV, and perhaps for the sake of keeping the framework simple—although at least the HTTP REST code is not overly simple and easy to follow anyway—it might be worth to keep things how they are."
1521,'','unexpected WARN while using `with-resource-id`, lift-3.0-SNAPSHOT\nMailing list topic: https://groups.google.com/forum/#!msg/liftweb/z5rKAxR0y08/S811GG3BLmsJ\r\n\r\nThe actual bug is with having a WARNing:\r\n01:50:52.564 WARN  [qtp1170205978-851126 - /img/favicon.png?F1171910628180AB1FAH=_] net.liftweb.http.LiftRules - Unmapped Lift-like parameter seen in request [/img/favicon.png]: F1171910628180AB1FAH'
1520,'','Stackoverflow with Mapper in trait or class\nHi,\r\nWhen a mapper is defined in a trait or class, it SOs when it tries to find its connection.\r\n\r\neg:\r\n\r\n```scala\r\ntrait expt {\r\n  class ClientAudits extends Mapper[ClientAudits] {\r\n    def getSingleton = ClientAudits\r\n //...\r\n  }\r\n  object ClientAudits extends ClientAudits with MetaMapper[ClientAudits]\r\n```\r\n}\r\n\r\nrepeating part of stack is\r\n\r\n```\r\nat boost.store.mapper.expt$ClientAudits.getSingleton(MapperClientAuditStore.scala:30)\r\n\tat boost.store.mapper.expt$ClientAudits.getSingleton(MapperClientAuditStore.scala:29)\r\n\tat net.liftweb.mapper.Mapper$class.net$liftweb$mapper$Mapper$$calcDbId(Mapper.scala:67)\r\n\tat net.liftweb.mapper.Mapper$$anonfun$connectionIdentifier$1.apply(Mapper.scala:62)\r\n\tat net.liftweb.mapper.Mapper$$anonfun$connectionIdentifier$1.apply(Mapper.scala:62)\r\n\tat net.liftweb.common.EmptyBox.openOr(Box.scala:644)\r\n\tat net.liftweb.mapper.Mapper$class.connectionIdentifier(Mapper.scala:62)\r\n\tat boost.store.mapper.expt$ClientAudits.connectionIdentifier(MapperClientAuditStore.scala:29)\r\n\tat net.liftweb.mapper.MappedField$class.dbColumnName(MappedField.scala:579)\r\n\tat net.liftweb.mapper.MappedDate.dbColumnName(MappedDate.scala:42)\r\n\tat net.liftweb.mapper.BaseMappedField$class._dbColumnNameLC(MappedField.scala:140)\r\n\tat net.liftweb.mapper.MappedDate._dbColumnNameLC(MappedDate.scala:42)\r\n\tat net.liftweb.mapper.MappedField$class.dbColumnNames(MappedField.scala:576)\r\n\tat net.liftweb.mapper.MappedDate.dbColumnNames(MappedDate.scala:42)\r\n\tat net.liftweb.mapper.MetaMapper$$anonfun$3$$anonfun$apply$mcV$sp$8.apply(MetaMapper.scala:1132)\r\n\tat net.liftweb.mapper.MetaMapper$$anonfun$3$$anonfun$apply$mcV$sp$8.apply(MetaMapper.scala:1127)\r\n\tat scala.collection.immutable.List.foreach(List.scala:318)\r\n\tat net.liftweb.mapper.MetaMapper$$anonfun$3.apply$mcV$sp(MetaMapper.scala:1127)\r\n\tat net.liftweb.mapper.MetaMapper$$anonfun$3.apply(MetaMapper.scala:1118)\r\n\tat net.liftweb.mapper.MetaMapper$$anonfun$3.apply(MetaMapper.scala:1118)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.util.Safe$.runSafe(Safe.scala:36)\r\n\tat net.liftweb.mapper.Mapper$class.runSafe(Mapper.scala:54)\r\n\tat boost.store.mapper.expt$ClientAudits.runSafe(MapperClientAuditStore.scala:29)\r\n\tat net.liftweb.mapper.MetaMapper$class.$init$(MetaMapper.scala:1118)\r\n\tat boost.store.mapper.expt$ClientAudits$.<init>(MapperClientAuditStore.scala:44)\r\n\tat boost.store.mapper.MapperClientAuditStore.ClientAudits$lzycompute(MapperClientAuditStore.scala:9)\r\n\tat boost.store.mapper.MapperClientAuditStore.ClientAudits(MapperClientAuditStore.scala:9)\r\n\tat boost.store.mapper.expt$ClientAudits.getSingleton(MapperClientAuditStore.scala:30)\r\n```'
1519,'farmdawgnation',"Do some variable name cleanup in lift-json.\nWe have a memo named `declaredFields` and another named `declaredFieldsMap`, that was added recently to prevent us from having to reflect on each retrieval of the declared fields. These names are a bit confusing, so let's change them up.\r\n\r\nI'm thinking `hasDeclaredFieldsMemo` and `declaredFieldsMemo`."
1517,'','Memoize declared fields to avoid reflection during case class decomposition\nThis change uses the memoize pattern in Meta to cache class fields avoiding reflection on subsequent calls.  \r\n\r\nThe change discussion on the mailing list:\r\nhttps://groups.google.com/forum/#!topic/liftweb/O9DDgSZqkkc\r\n\r\nContributor file signature:\r\nhttps://github.com/lift/framework/blob/master/contributors.md#name-23 '
1516,'','Update to MockHttpServletRequest and its test\nFix for problem where a parameter in the URL has a blank value (either "a=" or just "a").'
1515,'','MockHttpServletRequest fails to handle parameters with empty values\nIt is legal, and common, for get requests in the real world to specify parameters with empty values, either using "parameter=" or leaving out the = and just including the name. Unfortunately, MockHttpServletRequest throws an exception when encountering either of these forms, throwing an "invalid query string" exception.\r\n\r\nInvalid query string: "_=1389304329528&sEcho=7&sSearch=&iDisplayLength=10"\r\njava.lang.IllegalArgumentException: Invalid query string: "_=1389304329528&sEcho=7&sSearch=&iDisplayLength=10"\r\n    at net.liftweb.mocks.MockHttpServletRequest$$anonfun$queryString_$eq$1.apply(MockHttpServletRequest.scala:219)\r\n\r\nML conversation: https://groups.google.com/d/msg/liftweb/TNIJoeSxFUM/ctsx_VOqXOIJ .'
1514,'','#1513 Allow to return boolean values using the roundtrip function\nhttps://groups.google.com/forum/#!topic/liftweb/Fx_buc0ULc4'
1513,'','Allow to return boolean values using the roundtrip function\nDescription: \r\n\r\nI want to return boolean values using the RoundTrip function. The problem is that when the function returns the value "false", the response is not interpreted like success (and it was).\r\n\r\nDiscussion https://groups.google.com/forum/#!topic/liftweb/Fx_buc0ULc4\r\n\r\n'
1512,'',"master -> Lift 30 merge\nLet's see if I screwed anything up!\r\n\r\n(Answer: guaranteed yes.)"
1511,'','Update README.md to clarify pull request guidelines\n'
1510,'','Change autoIncludeAjaxCalc to a volatile var to support a JQueryMobile use case\nBy default, JQueryMobile (JQM) uses AJAX to load pages. This is primarily necessary in Phonegap so that the initial page load occurs at file:/// (with access to phonegap.js and thus some phone APIs through JavaScript) and all links can be enhanced to access a remote server through AJAX. The AJAX call requests the full page, searches for the data-role="page" DIV and injects that into the DOM (and removes the previous page). It is useful in some cases to control either the content or the location of liftAjax.js and thus include it manually in page content (or on an AJAX call). This is currently impossible because LiftRules.autoIncludeAjaxCalc is a val (and this is how LiftMerge decides whether to include liftAjax.js). This commit simply changes it to a var.'
1509,'','Fix compile in Scala 2.10.1+\nScala 2.10.1 includes a type checking bug fix that causes compilation to\r\nfail.  Add casts to work around this (effectively restoring the previous\r\nbehavior).'
1508,'','We don\'t build in 2.10.3\nI noticed today that Lift WebKit\'s LiftScreen doesn\'t build in 2.10.3, as discussed [here](https://groups.google.com/d/msg/liftweb/5ka_RzZrQSo/PBBr0QqPV08J). It appears to be a type issue associated with how the latest 2.10\'s handle parameterized types. Specifically, in this code, 2.10.0 used to allow for the following:\r\n\r\n```scala\r\nstuff.collect {\r\n  case AFilter(f) => f\r\n}.toList\r\n```\r\n\r\nWhere `f` is of type `T=>T`. This would result in a `List[T=>T]` so you could feed it into areas requiring a `List[T=>T]`. Except, the newer 2.10\'s seem to think that this code can generate a "list of something to something where some of those somethings are descendants of T" (best English rendering of the error message).\r\n\r\nThe fix appears to be to replace these with\r\n\r\n```scala\r\nstuff.collect {\r\n  case filter: AFilter[T] => filter.f\r\n}\r\n```\r\n\r\nFix is in progress.'
1507,'','Serialization and parsing throws following error: JsonParser$ParseException: unknown token \\\nHi There.\r\n\r\nwhen using serialization in order to parse (marshal/unmarshal) we are experiencing sometimes issues related to json parser parse exception.\r\n\r\nHere I attached snippets of the code.\r\n\r\n\r\npackage com.loyal3.util\r\n\r\nimport logging.Logging\r\nimport net.liftweb.json.Serialization._\r\nimport net.liftweb.json.JsonParser._\r\nimport net.liftweb.json.{CustomSerializer, MappingException, DefaultFormats}\r\nimport org.joda.time.DateTime\r\nimport net.liftweb.json.JsonAST.{JNull, JString}\r\nimport org.joda.time.format.{DateTimeFormatter, DateTimeFormat}\r\n\r\n/**\r\n * @author matt\r\n */\r\n\r\ntrait Jsonable {\r\n  implicit val formats = Jsonable.formats\r\n\r\n  def toJson = write(this)\r\n}\r\n\r\nobject Jsonable extends Logging {\r\n  implicit val formats = DefaultFormats + DateTimeSerializer() + new MoneySerializer + new SharesSerializer + new PriceSerializer\r\n\r\n  def marshall(target: AnyRef): String = {\r\n    write(target)\r\n  }\r\n\r\n  def unmarshall[A](text: String)(implicit m: Manifest[A]): Option[A] = {\r\n    try {\r\n      trace("unmarshalling %s" format (text))\r\n      val instance = parse(text).extract[A]\r\n      Some(instance)\r\n    } catch {\r\n      case throwable: MappingException => {\r\n        debug("unable to unmarshall value => %s" format String.valueOf(text))\r\n        debug("stack trace", throwable)\r\n        None\r\n      }\r\n    }\r\n  }\r\n\r\n  case class DateTimeSerializer(dateFormatter: DateTimeFormatter = DateTimeFormat.forPattern("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'Z"))\r\n    extends CustomSerializer[DateTime](format => ( {\r\n      case JString(s) => dateFormatter.withOffsetParsed().parseDateTime(s)\r\n      case JNull => null\r\n    }, {\r\n      case d: DateTime => JString(d.toString(dateFormatter))\r\n    }))\r\n\r\n}\r\n\r\n\r\n\r\npackage com.loyal3.web.notice\r\n\r\nimport com.loyal3.web.InMemoryCookieAware\r\nimport com.loyal3.testing.JUnitSuite\r\nimport com.loyal3.util.{PriceSerializer, SharesSerializer, MoneySerializer, Jsonable}\r\nimport net.liftweb.json.{DefaultFormats, Serialization, JsonAST}\r\nimport net.liftweb.json.JsonAST.{JString, JValue}\r\nimport org.scalatest.mock.MockitoSugar\r\n\r\n/**\r\n * @author matt\r\n */\r\n\r\nclass NoticesTest extends JUnitSuite with InMemoryCookieAware {\r\n  /*\r\n  test("can save and restore cookies") {\r\n    val notice = Notice("hello world")\r\n    val notices = new Notices with InMemoryCookieAware\r\n\r\n    notices.setNotices(notice)\r\n    val restored: List[Notice] = notices.getNotices\r\n    restored.size should be(1)\r\n    restored.head.text should be(notice.text)\r\n  }\r\n\r\n  test("notice order should be preserved") {\r\n    val notice1 = Notice("hello world")\r\n    val notice2 = Notice("argle bargle")\r\n    val notice3 = Notice("yahoo!")\r\n    val notices = new Notices with InMemoryCookieAware\r\n\r\n    notices.setNotices(notice1, notice2, notice3)\r\n    val restored: List[Notice] = notices.getNotices\r\n    restored.size should be(3)\r\n    restored(0).text should be(notice1.text)\r\n    restored(1).text should be(notice2.text)\r\n    restored(2).text should be(notice3.text)\r\n  }\r\n\r\n  test("only first call to notices returns a value; second call should return an empty list") {\r\n    val notice = Notice("hello world")\r\n    val notices = new Notices with InMemoryCookieAware\r\n\r\n    notices.setNotices(notice)\r\n\r\n    // TEST - first call should contain our contents\r\n    notices.getNotices.isEmpty should be(false)\r\n\r\n    // TEST - second call should be empty\r\n    notices.getNotices.isEmpty should be(true)\r\n\r\n    // TEST - as should the third call\r\n    notices.getNotices.isEmpty should be(true)\r\n  }*/\r\n\r\n  test("testing different results with json using marshall / unmarshall") {\r\n\r\n    implicit val formats = DefaultFormats + new MoneySerializer + new SharesSerializer + new PriceSerializer\r\n\r\n    val notWellFormed:String = " [ { \\\\ \\\\ \\" text\\":\\"Invalid email/password combination.\\" }]"\r\n    val withSerialization:String = "[{\\"text\\":\\" [ { \\\\\\\\ \\\\\\\\ \\\\\\" text\\\\\\":\\\\\\"Invalid email/password combination.\\\\\\" }]\\",\\"htmlClass\\":\\"flash\\"}]"\r\n\r\n    val notice = Notice(notWellFormed)\r\n    var jsonMarshalObject = Jsonable.marshall(List(notice))\r\n\r\n    val notices = List(notice)\r\n\r\n    println ("json with problem " + jsonMarshalObject)\r\n\r\n    //assert(jsonMarshalObject == withSerialization)\r\n\r\n    //val comparison = " [ { \\\\ \\\\ \\" text\\":\\"Invalid email/password combination.\\" }]"\r\n\r\n    var jsonWithText = Jsonable.marshall(notWellFormed)\r\n    println ("json without problem " + jsonWithText)\r\n\r\n    //assert(jsonWithText == comparison)\r\n\r\n    Jsonable.unmarshall[List[Notice]](jsonMarshalObject).getOrElse(List())\r\n\r\n    try {\r\n      Jsonable.unmarshall[List[Notice]](jsonWithText).getOrElse(List())\r\n    } catch {\r\n      case throwable => warn("not working %s" format jsonWithText, throwable); List()\r\n    }\r\n\r\n    var jsonList = Jsonable.marshall(notices.toList)\r\n    println ("nigga " + jsonList)\r\n\r\n    //val bamba = Serialization.write(List(notice))\r\n    //println (bamba)\r\n\r\n  }\r\n}\r\n\r\n\r\nThis is the important class:\r\n\r\npackage com.loyal3.web.notice\r\n\r\nimport com.loyal3.util.Jsonable\r\nimport com.loyal3.web.CookieAware\r\nimport com.loyal3.util.logging.Logging\r\n\r\n/**\r\n * @author matt\r\n */\r\n\r\nclass Notices extends CookieAware with Logging {\r\n  /**\r\n   * the name of the cookie that holds our notices\r\n   */\r\n  val notice = "notice"\r\n\r\n  def setNotices(notices: Notice*) {\r\n    if (!notices.isEmpty) {\r\n      //here sometimes the json returned contains [{\\"text\\":\\"Invalid email/password combination.\\"\r\n      //backslashes\r\n      var json = Jsonable.marshall(notices.toList)\r\n      //var json = " [ { \\" text\\":\\"Invalid email/password combination.\\" }]"\r\n      //Jsonable.marshall(json)\r\n      //val str:String = " [ { \\\\ \\"text\\": \\"Invalid email/password combination.\\" } ] ".replaceAll("\\\\\\\\", "")\r\n      //val str:String = " [ { \\\\ \\"text\\": \\"Invalid email/password combination.\\" } ] "\r\n      //json = str\r\n      addCookie(notice, json)\r\n    }\r\n  }\r\n\r\n  def getNotices: List[Notice] = {\r\n    val json: Option[String] = cookieValue(notice)\r\n    if (json.isDefined) {\r\n      try {\r\n        clearCookie(notice)\r\n        //then trying to unmarshal because of the slashes, this breaks\r\n        Jsonable.unmarshall[List[Notice]](json.get).getOrElse(List())\r\n      } catch {\r\n        case throwable => warn("error while attempting to parse flash notice: %s" format json.get, throwable); List()\r\n      }\r\n\r\n    } else {\r\n      List()\r\n    }\r\n  }\r\n}\r\n\r\nobject Notices extends Notices {\r\n}\r\n\r\n\r\n\r\n/**\r\n * @author matt\r\n * @param text the notice to be displayed\r\n * @param htmlClass the html class to use\r\n */\r\n\r\ncase class Notice(text: String, htmlClass: Option[String] = Option("flash")) {\r\n}\r\n\r\n\r\n\r\nVersions that are being used:\r\nlift-json.2.9.1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n11/26/2013 05:34:42,692 [WARN ] [Notices                            ] [166.216.226.29] [jid:1g9fwm8xfzwwtjtzkhcle2gr0] [sid:Nil] [uid:Nil] error while attempting to parse flash notice: [{\\"text\\":\\"Invalid email/password combination.\\"\r\nnet.liftweb.json.JsonParser$ParseException: unknown token \\\r\nNear: [{\\"\r\n\tat net.liftweb.json.JsonParser$Parser.fail(JsonParser.scala:228)\r\n\tat net.liftweb.json.JsonParser$Parser.nextToken(JsonParser.scala:313)\r\n\tat net.liftweb.json.JsonParser$$anonfun$2.apply(JsonParser.scala:184)\r\n\tat net.liftweb.json.JsonParser$$anonfun$2.apply(JsonParser.scala:141)\r\n\tat net.liftweb.json.JsonParser$.parse(JsonParser.scala:80)\r\n\tat net.liftweb.json.JsonParser$.parse(JsonParser.scala:45)\r\n\tat com.loyal3.util.Jsonable$.unmarshall(Jsonable.scala:29)\r\n\tat com.loyal3.web.notice.Notices.getNotices(Notices.scala:29)\r\n\tat com.loyal3.lift.snippet.Flash$.noticesList(Flash.scala:44)\r\n\tat com.loyal3.lift.snippet.Flash$$anonfun$dispatch$1$$anonfun$apply$2.apply(Flash.scala:15)\r\n\tat com.loyal3.lift.snippet.Flash$$anonfun$dispatch$1$$anonfun$apply$2.apply(Flash.scala:15)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84$$anonfun$apply$86.apply(LiftSession.scala:1585)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84$$anonfun$apply$86.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.common.EmptyBox.openOr(Box.scala:574)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.common.EmptyBox.openOr(Box.scala:574)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81.apply(LiftSession.scala:1556)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81.apply(LiftSession.scala:1556)\r\n\tat net.liftweb.http.S$class.doSnippet(S.scala:2228)\r\n\tat net.liftweb.http.S$.doSnippet(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1554)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1553)\r\n\tat net.liftweb.common.Full.map(Box.scala:491)\r\n\tat net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processSnippet(LiftSession.scala:1553)\r\n\tat net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1779)\r\n\tat net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1767)\r\n\tat net.liftweb.util.NamedPF.apply(NamedPartialFunction.scala:36)\r\n\tat net.liftweb.util.NamedPF$.apply(NamedPartialFunction.scala:82)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94$$anonfun$apply$95.apply(LiftSession.scala:1870)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94$$anonfun$apply$95.apply(LiftSession.scala:1869)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.withAttrs(S.scala:2018)\r\n\tat net.liftweb.http.S$.withAttrs(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94.apply(LiftSession.scala:1868)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94.apply(LiftSession.scala:1868)\r\n\tat net.liftweb.http.S$class.doSnippet(S.scala:2228)\r\n\tat net.liftweb.http.S$.doSnippet(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93.apply(LiftSession.scala:1867)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93.apply(LiftSession.scala:1867)\r\n\tat net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1854)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1866)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1861)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:772)\r\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\r\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:239)\r\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\r\n\tat net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1861)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1881)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1861)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:772)\r\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\r\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:239)\r\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\r\n\tat net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1861)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1881)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1861)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:772)\r\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\r\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:239)\r\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\r\n\tat net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1861)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1881)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1861)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:772)\r\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\r\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:239)\r\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\r\n\tat net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1861)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2$$anonfun$apply$3.apply(Surround.scala:40)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2$$anonfun$apply$3.apply(Surround.scala:39)\r\n\tat net.liftweb.util.AnyVarTrait$class.doWith(AnyVar.scala:233)\r\n\tat net.liftweb.util.AnyVar.doWith(AnyVar.scala:89)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2.apply(Surround.scala:39)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2.apply(Surround.scala:37)\r\n\tat net.liftweb.common.Full.map(Box.scala:491)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1.apply(Surround.scala:37)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$render$1.apply(Surround.scala:36)\r\n\tat net.liftweb.common.Full.flatMap(Box.scala:493)\r\n\tat net.liftweb.builtin.snippet.Surround$.render(Surround.scala:36)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$dispatch$1$$anonfun$apply$1.apply(Surround.scala:31)\r\n\tat net.liftweb.builtin.snippet.Surround$$anonfun$dispatch$1$$anonfun$apply$1.apply(Surround.scala:31)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84$$anonfun$apply$86.apply(LiftSession.scala:1585)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84$$anonfun$apply$86.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.common.EmptyBox.openOr(Box.scala:574)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81$$anonfun$apply$84.apply(LiftSession.scala:1557)\r\n\tat net.liftweb.common.EmptyBox.openOr(Box.scala:574)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81.apply(LiftSession.scala:1556)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$81.apply(LiftSession.scala:1556)\r\n\tat net.liftweb.http.S$class.doSnippet(S.scala:2228)\r\n\tat net.liftweb.http.S$.doSnippet(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1554)\r\n\tat net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1553)\r\n\tat net.liftweb.common.Full.map(Box.scala:491)\r\n\tat net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processSnippet(LiftSession.scala:1553)\r\n\tat net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1779)\r\n\tat net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1767)\r\n\tat net.liftweb.util.NamedPF.apply(NamedPartialFunction.scala:36)\r\n\tat net.liftweb.util.NamedPF$.apply(NamedPartialFunction.scala:82)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94$$anonfun$apply$95.apply(LiftSession.scala:1870)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94$$anonfun$apply$95.apply(LiftSession.scala:1869)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.withAttrs(S.scala:2018)\r\n\tat net.liftweb.http.S$.withAttrs(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94.apply(LiftSession.scala:1868)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93$$anonfun$apply$94.apply(LiftSession.scala:1868)\r\n\tat net.liftweb.http.S$class.doSnippet(S.scala:2228)\r\n\tat net.liftweb.http.S$.doSnippet(S.scala:48)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93.apply(LiftSession.scala:1867)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$93.apply(LiftSession.scala:1867)\r\n\tat net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1854)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1866)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1861)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:239)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:772)\r\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\r\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:239)\r\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\r\n\tat net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1861)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$44$$anonfun$apply$45.apply(LiftSession.scala:986)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$44$$anonfun$apply$45.apply(LiftSession.scala:983)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$44.apply(LiftSession.scala:983)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$44.apply(LiftSession.scala:982)\r\n\tat net.liftweb.common.Full.map(Box.scala:491)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:981)\r\n\tat net.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:981)\r\n\tat net.liftweb.util.AnyVarTrait$class.doWith(AnyVar.scala:233)\r\n\tat net.liftweb.util.AnyVar.doWith(AnyVar.scala:89)\r\n\tat net.liftweb.http.LiftSession.processTemplate(LiftSession.scala:980)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46$$anonfun$apply$47$$anonfun$apply$50.apply(LiftSession.scala:1087)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46$$anonfun$apply$47$$anonfun$apply$50.apply(LiftSession.scala:1087)\r\n\tat net.liftweb.common.EmptyBox.or(Box.scala:576)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46$$anonfun$apply$47.apply(LiftSession.scala:1086)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46$$anonfun$apply$47.apply(LiftSession.scala:1086)\r\n\tat net.liftweb.util.StackableMaker$class.doWith(Maker.scala:141)\r\n\tat net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\r\n\tat net.liftweb.util.StackableMaker$class.doWith(Maker.scala:135)\r\n\tat net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46.apply(LiftSession.scala:1085)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$46.apply(LiftSession.scala:1081)\r\n\tat net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$checkStatelessInSiteMap(LiftSession.scala:1025)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1081)\r\n\tat net.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1079)\r\n\tat net.liftweb.common.EmptyBox.or(Box.scala:576)\r\n\tat net.liftweb.http.LiftSession.processRequest(LiftSession.scala:1079)\r\n\tat net.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:414)\r\n\tat net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:279)\r\n\tat net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:279)\r\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$wrapQuery(S.scala:1376)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$34.apply(S.scala:1524)\r\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$doAround(S.scala:1305)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1522)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_nest2InnerInit(S.scala:1521)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41.apply(S.scala:1561)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$withReq$1.apply(S.scala:1571)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.withReq(S.scala:1570)\r\n\tat net.liftweb.http.S$.withReq(S.scala:48)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40.apply(S.scala:1560)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39.apply(S.scala:1559)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38.apply(S.scala:1558)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1557)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_innerInit(S.scala:1556)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47$$anonfun$apply$48.apply(S.scala:1594)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47.apply(S.scala:1592)\r\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:613)\r\n\tat net.liftweb.http.RequestVarHandler$.apply(Vars.scala:515)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(S.scala:1591)\r\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:613)\r\n\tat net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:528)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45.apply(S.scala:1590)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44.apply(S.scala:1589)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1.apply(S.scala:1588)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_init(S.scala:1587)\r\n\tat net.liftweb.http.S$class.init(S.scala:1190)\r\n\tat net.liftweb.http.LiftServlet.doSession$1(LiftServlet.scala:278)\r\n\tat net.liftweb.http.LiftServlet.doService(LiftServlet.scala:288)\r\n\tat net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:137)\r\n\tat net.liftweb.http.LiftServlet.service(LiftServlet.scala:142)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply$mcV$sp(HTTPProvider.scala:72)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(HTTPProvider.scala:71)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(HTTPProvider.scala:71)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.URLRewriter$.doWith(Req.scala:1253)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply$mcV$sp(HTTPProvider.scala:70)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:70)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:70)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply$mcV$sp(HTTPProvider.scala:66)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:60)\r\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:60)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:60)\r\n\tat net.liftweb.http.LiftFilter.service(LiftServlet.scala:757)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ServletFilterProvider.scala:67)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17$$anonfun$apply$18$$anonfun$apply$19.apply(Vars.scala:619)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17$$anonfun$apply$18.apply(Vars.scala:618)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17.apply(Vars.scala:617)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16.apply(Vars.scala:616)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:615)\r\n\tat net.liftweb.http.RequestVarHandler$.apply(Vars.scala:515)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17$$anonfun$apply$18$$anonfun$apply$19.apply(Vars.scala:619)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17$$anonfun$apply$18.apply(Vars.scala:618)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16$$anonfun$apply$17.apply(Vars.scala:617)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$16.apply(Vars.scala:616)\r\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:615)\r\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\r\n\tat net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:757)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)\r\n\tat com.loyal3.web.filter.L3FilterChainProxy$$anonfun$doFilter$1.apply$mcV$sp(L3FilterChainProxy.scala:32)\r\n\tat com.loyal3.web.filter.L3FilterChainProxy$$anonfun$doFilter$1.apply(L3FilterChainProxy.scala:32)\r\n\r\n\tat com.loyal3.web.filter.L3FilterChainProxy$$anonfun$doFilter$1.apply(L3FilterChainProxy.scala:32)\r\n\tat com.loyal3.web.filter.ServletFilters.processFilters(ServletFilters.scala:95)\r\n\tat com.loyal3.web.filter.L3FilterChainProxy.doFilter(L3FilterChainProxy.scala:31)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)\r\n\tat com.loyal3.web.filter.RequestLoggingFilter$$anonfun$doFilter$1.apply$mcV$sp(RequestLoggingFilter.scala:84)\r\n\tat com.loyal3.web.filter.RequestLoggingFilter$$anonfun$doFilter$1.apply(RequestLoggingFilter.scala:83)\r\n\tat com.loyal3.web.filter.RequestLoggingFilter$$anonfun$doFilter$1.apply(RequestLoggingFilter.scala:83)\r\n\tat com.loyal3.logging.Logging$.withLogContext(Logging.scala:119)\r\n\tat com.loyal3.web.filter.RequestLoggingFilter.doFilter(RequestLoggingFilter.scala:83)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:477)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:499)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:965)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:349)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:884)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:938)\r\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\r\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\r\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:76)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:609)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:45)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n\r\n11/26/2013 05:34:42,729 [INFO ] [RequestLoggingFilter               ] [W3 END (41 ms)] [GET] [/login] [166.216.226.29] [jid:1g9fwm8xfzwwtjtzkhcle2gr0] [sid:Nil] [uid:Nil]\r\n\r\n11/26/2013 05:34:49,440 [INFO ] [RequestLoggingFilter               ] [W3 START] [POST] [/ajax_request/F1199323533691W5Z3GX/] [50.139.125.112] [jid:1xfhqwwnu3u2e7oqll00o9g9e] [sid:Nil] [uid:Nil]\r\n\uf729'
1506,'','Added LiftRules.funcNameGenerator which controls the logic of S.formFuncName\nJust as before, TestMode gets different logic until names are generated when `S._disableTestFuncNames` is true.\r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/5G0UyCn0HBc'
1505,'eltimn','Create RecordRule for field name.\nhttps://groups.google.com/d/msg/liftweb/YPeWqHZOoAY/pU0wF0i4EEIJ\r\n\r\n- [x] 2.6\r\n- [x] 3.0'
1504,'','Make asJValue more flexible accepting Formats as parameter\nHere is the discussion: https://groups.google.com/forum/#!topic/liftweb/u4NGgG9cTDA for reference. PR is not final yet I want to add @implicitNotFound for nicer user messages.'
1503,'farmdawgnation','IE11 Detection is Busted\nAs documented in [this mailing list thread](https://groups.google.com/d/msg/liftweb/rnlgB-4xcu4/TPeAaB8q_l4J) our IE 11 detection is broken. We should fix that by special casing the matching for that one.'
1502,'','Add Box.forall.\nAs well a couple of cleanup tasks.'
1501,'','Fixed some git  history on lift 3.0\nDuring some refactoring applied to Lift_30, we lost some history of files like WiringUI and LiftServlet.\r\nThis pull request reverts those changes where the files were deleted on one commit and added on a diff package on a separate commit,\r\nwhich results in those files having a shorter history (as if they were new to lift 3.0)\r\n\r\nAlong the way I ended up undoing some extra changes, like there are some deprecated methods that came back. I will send a separate \r\npull request to remove those.\r\n'
1500,'','Improve performance of decomposing case classes to Json\nThe Extraction.decompose method used Class.getDeclaredField which performs a linear scan of the fields for each element in the case class constructor. This pull request does a single pass over the fields storing them in a map hence reducing the algorithm complexity to O(n). \r\n\r\nA benchmark (https://gist.github.com/chriswebster/7291295) before and after the change showed:\r\n\r\nBefore change:\r\n[info] Running ExtractionBenchmark 3 100000\r\nExtractionBenchmark$\t2675\t 2390 2418 \r\n\r\nAfter change:\r\ninfo] Running ExtractionBenchmark 3 100000\r\nExtractionBenchmark$\t1131\t 843\t 817'
1499,'','override JObject#hashCode\n'
1498,'eltimn','Replace usage of deprecated Mongo with MongoClient.\n- [x] 2.6\r\n- [x] 3.0'
1497,'farmdawgnation',"Investigate bumping to sbt 0.13\nsbt 0.13 is now stable, and there are some changes that will require tweaks. I'm going to investigate getting us building under that version of sbt."
1496,'farmdawgnation','Investigate building 2.6 / 3.0 for 2.11\nWe want to investigate building for 2.11 to see what the impact will be on our build process.'
1495,'fmpwizard','contextPath is always empty string for CometActors\nSee this thread\r\nhttps://groups.google.com/d/topic/liftweb/d0p6dG8Cd5c/discussion\r\n'
1494,'farmdawgnation',"Update README to reflect committer policy.\nThe committer policy has changed a bit such that non-committers can submit patches, but the README still doesn't reflect this. May be worthwhile to update it to include a link to CONTRIBUTING.md."
1493,'','Unable to deserialize JSON for a case class that uses a trait\nIf I have the following case class:\r\n\r\n```\r\ncase class Foo[T](a: T, b: String)\r\n\r\ntrait FooFormatter {\r\n   override def toString() = "foo"\r\n}\r\n\r\ntype FooWithFormatter = Foo[Int] with FooFormatter\r\n\r\nval a = JsonParser.parse("""[{"a": 2, "b": "text"}]""").extract[List[FooWithFormatter]]\r\n```\r\n\r\nI get the following exception:\r\n\r\n```\r\nCaused by: net.liftweb.json.MappingException: No constructor for type class java.lang.Object, JInt(2)\r\n\tat net.liftweb.json.Meta$.fail(Meta.scala:191) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$$anonfun$findBestConstructor$1$1.apply(Extraction.scala:216) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$$anonfun$findBestConstructor$1$1.apply(Extraction.scala:216) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat scala.Option.getOrElse(Option.scala:120) [scala-library.jar:na]\r\n\tat net.liftweb.json.Extraction$.findBestConstructor$1(Extraction.scala:216) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:251) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:286) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$.net$liftweb$json$Extraction$$build$1(Extraction.scala:315) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\tat net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:351) ~[lift-json_2.10-2.5.1.jar:2.5.1]\r\n\t... 51 common frames omitted\r\n```\r\n\r\nIf I define the type FooWithFormatter without the trait as:\r\n\r\n```\r\ntype FooWithFormatter = Foo[Int]\r\n```\r\n\r\nThings work fine. Any reason why this is happening? Is there a particular way to get it to work?'
1492,'','(2.6 and 3.0) fix json parser e+ bug\nAccording to http://www.json.org/ the double in JSON can be represented in scientific notation, and e symbol can be one of the following:\r\ne\r\ne+\r\ne-\r\nE\r\nE+\r\nE-\r\nnet.liftweb.json.parse was working ok with e, e-, E, E- but was throwing exception "can\'t parse" for e+ and E+.\r\nAdded unit test (was failing). Added c == \'+\' analogous to c == \'-\' to JsonParser.scala. This fixed unit test.\r\nP.S. The same issue exists in master, but we use 2.4 so I fixed it in 2.4 branch. The change is atomic and can be merged to any lift version, including master.'
1491,'farmdawgnation','Remove S.ieMode\nS.ieMode became deprecated in Lift 2.6. In Lift 3.0 it should disappear.'
1490,'','Props driver implementation\n- extracted PropsDriver interface with basic operations for Props\r\n- added default implementation for PropsDriver from existing sources\r\n- allow to override PropsDriver via system property -Dlift.props.driver=package.class.name to proide custom props bindings'
1489,'',"Small fix in ListenerManager trait's comments\nSmall fix in example code"
1488,'','Update comments in ListHelpers to refer to Box, not can.\nJust a quick fix, was running through the docs to look at something and spotted this.'
1487,'farmdawgnation',"Need a way to customize fail behavior in menus/param menus\nCurrently, if a param menu fails because it can't find the parameter referenced, you get a 404. There's no easy way to customize that behavior for situations where you want something else to happen.\r\n\r\nWe should implement a LocParam or something that you can tack on to a menu definition that allows you to specify custom fail behavior."
1486,'','Fixed #1485 - Replace console.log for lift_defaultLogError - Lift 3.0\ncloses #1485 \r\n\r\nWe have some a few calls to console.log which should be replace for a custom function that checks if the console function is available client side or not.\r\n\r\nSee this related thread: https://groups.google.com/d/topic/liftweb/T3BxrGp2xss/discussion\r\n\r\nThis pull request is for 3.0'
1485,'fmpwizard','Replace console.log for lift_defaultLogError - Lift 3.0\nWe have some a few calls to console.log which should be replace for a custom function that checks if the console function is available client side or not.\r\n\r\nSee this related thread: https://groups.google.com/d/topic/liftweb/T3BxrGp2xss/discussion\r\n\r\nThis pull request is for 3.0'
1484,'fmpwizard',"Replace console.log for lift_defaultLogError - Lift 3.0\nWe have some a few calls to console.log which should be replace for a custom function that checks if the console function is available client side or not.\r\n\r\nSee this related thread: https://groups.google.com/d/topic/liftweb/T3BxrGp2xss/discussion\r\n\r\nThis pull request is for 3.0, because it has a few more calls than 2.6. I'll send a separate one for 2.6"
1483,'','-i1473\n'
1482,'','FlexMenuBuilder path != current\nRelated thread\r\n\r\nhttps://groups.google.com/d/topic/liftweb/wUJ2aoSUwKY/discussion\r\n\r\n'
1481,'fmpwizard','[Breaking change] - Remove ActorWatcher from Lift 2.6\nBased on this thread\r\nhttps://groups.google.com/d/topic/liftweb/NIWsVfXbvZ4/discussion\r\n\r\nWe are removing the `ActorWatcher` object on Lift 2.6\r\n\r\nIt is not used anywhere in the code base, and even the scala standard library deprecated it'
1480,'fmpwizard','Mitigation of BREACH\nBased on the discussion from this thead\r\nhttps://groups.google.com/d/topic/liftweb/_WFVrPPu-4E/discussion\r\n\r\nChange the size of the response headers on each request.'
1479,'','Closes #1126. Swallows an inner <a> for Menu.item\nWe never got a pull request for this one, so here it is :)\r\n\r\nhttps://github.com/lift/framework/issues/1126'
1478,'','Add support for X-Frame-Options\nBased on this thread\r\nhttps://groups.google.com/d/topic/liftweb/NNErAnz3zcs/discussion\r\n\r\nRelated link\r\nhttps://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options?redirectlocale=en-US&redirectslug=The_X-FRAME-OPTIONS_response_header\r\n'
1477,'farmdawgnation',"Deprecate S.ieMode and rename it to something more indicative of what it actually is.\nThe `S.ieMode` boolean is misleading. As I mentioned [here](https://groups.google.com/d/msg/liftweb/SftLoq4CMmo/d9QlToX2NO8J) on the mailing list, this flag appears to be primarily intended to make sure we render XML that the legacy IE's can understand. It shouldn't, as its name implies, be regarded as a general IE detection mechanic.\r\n\r\nAs such, the following should probably happen (as discussed in the thread linked above):\r\n\r\n- [x] Expose the *true* browser detection flags from the current Req instance directly in S.\r\n- [x] S.ieMode should be renamed to be something it actually is. Probably S.ieLegacyRendering or something of the sort.\r\n- [x] We should map S.ieMode to the new name with a deprecation warning in 2.6, slated for removal in 3.0.\r\n- [x] Add a ticket for removing S.ieMode in 3.0.\r\n- [x] Add user agent detection helper for IE 10, 11.\r\n- [x] Figure out why IE < 6 isn't counted as IE.\r\n- [x] Update calcIEMode comments and affected."
1476,'farmdawgnation',"Localization using CSS Selectors\nAs discussed in [this mailing list thread](https://groups.google.com/d/msg/liftweb/ER3M49LHypY/46Lq-O6IATgJ) it would be cool to be able to localize pages using some variation of the css selector engine such that you didn't have to drop localization keys throughout your markup or Scala."
1475,'dpp','Css selector to select only the first matching element\nYou can now use  `"^ [href]"` as a css selector, and it will only apply a transformation to the first match on your `NodeSeq`\r\n\r\nThis was introduced on Lift 3.0 and backported to 2.6:\r\nhttps://github.com/lift/framework/commit/0da6e42\r\nhttps://github.com/lift/framework/commit/c5be8c2'
1474,'','Revised the calcIEMode in LiftRules to include IE9+ too.\nSee forum post:\r\nhttp://groups.google.com/forum/?place=msg%2Fliftweb%2FSftLoq4CMmo%2F3d2HFltNTzEJ'
1473,'fmpwizard',"SqlServerBaseDriver should set brokenLimit_? to true\nI am developing a new application with Lift 2.5.1 and MS SQL 2012 using the Microsoft JDBC driver. I run into the same problem that I found in this Google Group discussion here:\r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/lIxSPe-zuhE\r\n\r\nHowever, I haven't seen an issue being opened for this, so this is why I am opening this issue. (I hope I am not violating your guidelines for contributing with that - although I think I am not).\r\n\r\nThe SqlServerBaseDriver class should set the  brokenLimit_? to true. At the moment I am using the workaround as described in the discussion. Defining my own DriverType object:\r\n\r\n```scala\r\nobject FixSqlServerDriver extends SqlServerBaseDriver {\r\n  override def brokenLimit_? : Boolean = true\r\n}\r\n```\r\n\r\nand simply overriding the DriverType.calcDriver in the Boot class with \r\n```scala\r\nDriverType.calcDriver = _ => FixSqlServerDriver\r\n```\r\n\r\nIt would be nice to see the brokenLimit_? set to true in the SqlServerBaseDriver already, so that one does not have to do the ugly workarounds.\r\n\r\nIf this has been fixed already or I am just super ugly wrong with my issue here, my deepest apologies."
1472,'','withFilter on JValue to rid warnings on for-comprehensions\nhttps://groups.google.com/forum/#!topic/liftweb/bi6uehcDolU'
1471,'','Improve LAFutures\nLift 3.0 improved LAFutures a lot and that work was backported to 2.6\r\n\r\n* Added map/flatMap/filter/withFilter  (You can use futures in for comprehensions)\r\n* Added onSuccess/onFail\r\n* Added onComplete which runs regardless of whether the Future failed or successed\r\n\r\nThe commit is 72c881b6ed8c7c809a5fc1bd2c14cf58c1c77ab9'
1470,'','Update maven archetypes for lift-2.5.1 and scala-2.10\nPull request is forthcoming. See mailing list discussion:\r\nhttps://groups.google.com/forum/#!topic/liftweb/OseFAr27oCE'
1469,'','Mailer inner classes\nAllows any class extending `trait Mailer` to accept the same instances of `From()`, `To()`, `Subject()`, etc.\r\nThis in turn allows for easier testing & mocking of `Mailer`.\r\n\r\n(Supersedes #1468 which was against the obsolete `lift_26_dev` branch instead of `master`.)\r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/HtBCb1XmmU4'
1468,'',"Move Mailer's inner classes from trait to object.\nAllows any class extending `trait Mailer` to accept the same instances of `From()`, `To()`, `Subject()`, etc.\r\nThis in turn allows for easier testing & mocking of `Mailer`.\r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/HtBCb1XmmU4"
1467,'farmdawgnation','Implementation of a MockSpecializedLiftActor and MockLiftActor\nOperating off of the premise of achieving better separation in unit tests, I wanted to implement a MockSpecializedLiftActor and MockLiftActor so that we are able to separate out the testing of if an actor has received a message and the testing of how an actor processes a message. You can read the [mailing list discussion](https://groups.google.com/d/msg/liftweb/V7ixZLhc2TI/nexoHXuCV8kJ) if you want the long form explanation and discussion, but below I\'m going to demonstrate the goal in code form.\r\n\r\nGiven a snippet such that:\r\n\r\n```scala\r\nobject MyAwesomeSnippet extends MyAwesomeSnippet {\r\n  // My awesome actor is a singleton LiftActor.\r\n  val myAwesomeActor: LiftActor = MyAwesomeActor\r\n}\r\ntrait MyAwesomeSnippet {\r\n  def myAwesomeActor: LiftActor\r\n\r\n  def sendTheActorAMessage {\r\n    myAwesomeActor ! SomeMessage\r\n  }\r\n}\r\n```\r\n\r\n... I want to test that the actor behind `myAwesomeActor` gets `SomeMessage`. Using a real actor, we can\'t. The mailbox for the actor isn\'t exposed to us in any way shape or form. So, presently, the only way to check in tests to see if the actor received this message is to check the side-effects of that message being processed (database changes, etc), which isn\'t very good unit separation.\r\n\r\nIdeally, I\'d like the ability to write the following test:\r\n\r\n```scala\r\n"My Awesome Snippet" should {\r\n  "Dispatch the SomeMessage message to the MyAwesomeActor" in {\r\n    val myAwesomeSnippetMock = new MyAwesomeSnippet {\r\n      val myAwesomeActor = new MockLiftActor()\r\n    }\r\n\r\n    myAwesomeSnippetMock.sendTheActorMessage\r\n\r\n    myAwesomeSnippetMock.myAwesomeActor.messageCount must_== 1\r\n    myAwesomeSnippetMock.myAwesomeActor.hasReceivedMessage_?(SomeMessage) must_== true\r\n  }\r\n}\r\n```\r\n\r\nBy injecting the `MockLiftActor` into the snippet, I\'m able to test that the snippet is sending the message to the actor, without worrying over the details of what the *real* actor will do with it. (We can let integration tests worry with that, instead.)'
1466,'','Run-mode auto-detection enhancement\n* Allow customisation.\r\n* Added extra to list of known test runners.\r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/e3VDUwL7_80'
1465,'fmpwizard','Lift could annotate type of primaryKeyField as a workaround to Scala regression SI-7612\nThe Scala team has just been notified of a [regression](https://issues.scala-lang.org/browse/SI-7612) in Scala 2.10.1 that can trigger a StackOverflowError during typechecking. The reporter was using Lift mapper.\r\n\r\nWe\'ll fix the regression in Scala (probably in 2.10.3, but certainly in 2.11.0). But in the meantime you might consider annotating the type of `primaryKeyField` in `IdPK` to `MappedLongIndex[MapperType]`, rather the relying on the inferred type of `id.type`.\r\n\r\nHere\'s where I found that code.\r\n\r\n```scala\r\ntrait IdPK /* extends BaseLongKeyedMapper */ {\r\n  self: BaseLongKeyedMapper =>\r\n  def primaryKeyField = id\r\n  def primaryKeyField = id\r\n  object id extends MappedLongIndex[MapperType](this.asInstanceOf[MapperType])\r\n}\r\n```\r\n\r\nA few more:\r\n\r\n```\r\nSearching 865 files for "primaryKeyField = id" (regex)\r\n\r\n/Users/jason/code/lift-framework/persistence/mapper/src/main/scala/net/liftweb/mapper/Mapper.scala:\r\n  316  trait IdPK /* extends BaseLongKeyedMapper */ {\r\n  317    self: BaseLongKeyedMapper =>\r\n  318:   def primaryKeyField = id\r\n  319    object id extends MappedLongIndex[MapperType](this.asInstanceOf[MapperType])\r\n  320  }\r\n\r\n/Users/jason/code/lift-framework/persistence/mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala:\r\n   30    self: T =>\r\n   31  \r\n   32:   override def primaryKeyField = id\r\n   33  \r\n   34    // the primary key for the database\r\n\r\n/Users/jason/code/lift-framework/persistence/mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala:\r\n   73    object id extends MappedLongIndex(this)\r\n   74  \r\n   75:   def primaryKeyField = id\r\n   76  \r\n   77    object name extends MappedPoliteString(this, 256) {\r\n\r\n/Users/jason/code/lift-framework/persistence/mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala:\r\n   39    self: T =>\r\n   40  \r\n   41:   override def primaryKeyField = id\r\n   42  \r\n   43    /**\r\n\r\n/Users/jason/code/lift-framework/persistence/mapper/src/test/scala/net/liftweb/mapper/MapperSpecsModel.scala:\r\n  130  \r\n  131    // what\'s the "meta" server\r\n  132:   def primaryKeyField = id\r\n  133  \r\n  134    object id extends MappedLongIndex(this)\r\n  ...\r\n  201  \r\n  202    // what\'s the "meta" server\r\n  203:   def primaryKeyField = id\r\n  204  \r\n  205    object id extends MappedLongIndex(this)\r\n```\r\n\r\nApologies for the regression!'
1464,'','Issues 1349, 1411, and 1348\nI started with the same branch as the other pr, so that commit is in here as well (issue 1400).'
1463,'','Issue #1400 - Add Joda Time support to MongoRecord\n'
1462,'dpp','Add Markdown parser\nThis was done on this commit:\r\n\r\nhttps://github.com/lift/framework/commit/18c6fc74bdc5d25dfe29a151217876af0110e5ce\r\n\r\nSee the discussion [Welcome Christoph Henkelmann to the Lift Committers](https://groups.google.com/d/topic/liftweb/0wSMgRuDDYY/discussion)'
1459,'',"A few CSS parser robustness improvements\n- Allow # character in URLs\r\n- Scan for url\\s*( instead of just url to avoid matching identifiers\r\n  that contain the text url\r\n- Return Failure instead of Empty when parse fails\r\n\r\n(There was an issue for the second item there, but I can't seem to find it now...)"
1458,'','Fix typo when constructing secured multi options\ns/label/nonce/\r\n\r\n\r\n'
1457,'fmpwizard',"Make LiftRules use the html5 parser by default\nRight now we have this in LIftRules:\r\n\r\n```scala\r\nval htmlProperties: FactoryMaker[Req => HtmlProperties] =\r\nnew FactoryMaker(() => (r: Req) => (new OldHtmlProperties(r.userAgent): HtmlProperties)) {}\r\n```\r\nlet's change it to use\r\n```scala\r\n(r: Req) => new Html5Properties(r.userAgent)\r\n```"
1456,'fmpwizard','Deprecate .is on mapper and fix the one on Record\nSee discussion here\r\nhttps://groups.google.com/forum/#!topic/liftweb/oz5NkyvFOkM\r\n\r\nBasically, `.is` and `.get` do the same in mapper, so we will deprecate `is` and use `get` instead.\r\n\r\nRecord already deprecated `is` but there is at least one more place where it needs to be deprecated.'
1455,'','Occasional deadlock Lift + Jetty\nLift 2.5-M4\r\nJetty 7.6.9.v20130131\r\nDiscussion https://groups.google.com/d/msg/liftweb/RyDjZ_2It2o/XDgDA3EuT6sJ \r\n\r\nI rarely get a lock (in several thread pairs, CPU starts eating, jetty restart required, happened 2 or 3 times after upgrade to 2.5-M4, not clear how to reproduce) like:\r\n\r\n---------------------------\r\n```\r\n"qtp1988368988-4348" - Thread t@4348\r\n   java.lang.Thread.State: BLOCKED\r\n    at net.liftweb.http.LiftSession.fixSessionTime(LiftSession.scala:796)\r\n    - waiting to lock <62789d78> (a net.liftweb.http.LiftSession) owned by "qtp1988368988-3601" t@3601\r\n    at net.liftweb.http.LiftRules.net$liftweb$http$LiftRules$$_getLiftSession(LiftRules.scala:281)\r\n    at net.liftweb.http.LiftRules$$anonfun$11.apply(LiftRules.scala:250)\r\n    at net.liftweb.http.LiftRules$$anonfun$11.apply(LiftRules.scala:250)\r\n    at net.liftweb.http.LiftServlet.getLiftSession(LiftServlet.scala:92)\r\n    at net.liftweb.http.LiftServlet.doService(LiftServlet.scala:293)\r\n    at net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:145)\r\n    at net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:144)\r\n    at net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:345)\r\n    at net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\r\n    at net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:364)\r\n    at net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\r\n    at net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:144)\r\n    at net.liftweb.http.LiftServlet.service(LiftServlet.scala:155)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply$mcV$sp(HTTPProvider.scala:72)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(HTTPProvider.scala:71)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(HTTPProvider.scala:71)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.URLRewriter$.doWith(Req.scala:1278)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply$mcV$sp(HTTPProvider.scala:70)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:70)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:70)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply$mcV$sp(HTTPProvider.scala:66)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:60)\r\n    at net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:60)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:60)\r\n    at net.liftweb.http.LiftFilter.service(LiftServlet.scala:922)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply$mcV$sp(ServletFilterProvider.scala:82)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(ServletFilterProvider.scala:82)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.apply(ServletFilterProvider.scala:82)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$class.handleLoan$1(ServletFilterProvider.scala:59)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$class.net$liftweb$http$provider$servlet$ServletFilterProvider$$handleLoanWrappers(ServletFilterProvider.scala:63)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ServletFilterProvider.scala:82)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:77)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:77)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15$$anonfun$apply$16$$anonfun$apply$17.apply(Vars.scala:619)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15$$anonfun$apply$16.apply(Vars.scala:618)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:617)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14.apply(Vars.scala:616)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:615)\r\n    at net.liftweb.http.RequestVarHandler$.apply(Vars.scala:515)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply$mcV$sp(ServletFilterProvider.scala:75)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:75)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:75)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15$$anonfun$apply$16$$anonfun$apply$17.apply(Vars.scala:619)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15$$anonfun$apply$16.apply(Vars.scala:618)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:617)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$14.apply(Vars.scala:616)\r\n    at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\r\n    at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:615)\r\n    at net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:528)\r\n    at net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:74)\r\n    at net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:922)\r\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)\r\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)\r\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\r\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:532)\r\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)\r\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)\r\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)\r\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:234)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\r\n    at org.eclipse.jetty.server.Server.handle(Server.java:367)\r\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)\r\n    at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)\r\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)\r\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)\r\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\r\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\r\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)\r\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\r\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n    at java.lang.Thread.run(Thread.java:722)\r\n\r\n   Locked ownable synchronizers:\r\n    - None\r\n```\r\n-------------------------------\r\n```\r\n"pool-10-thread-15" - Thread t@121\r\n   java.lang.Thread.State: BLOCKED\r\n    at net.liftweb.http.LiftSession.exitComet(LiftSession.scala:683)\r\n    - waiting to lock <7ff773cc> (a net.liftweb.http.LiftSession) owned by "pool-9-thread-16" t@110\r\n    at net.liftweb.http.LiftServlet$ContinuationActor$$anonfun$messageHandler$1.applyOrElse(LiftServlet.scala:683)\r\n\r\n    at scala.runtime.AbstractPartialFunction$mcVL$sp.apply$mcVL$sp(AbstractPartialFunction.scala:33)\r\n    at scala.runtime.AbstractPartialFunction$mcVL$sp.apply(AbstractPartialFunction.scala:33)\r\n    at scala.runtime.AbstractPartialFunction$mcVL$sp.apply(AbstractPartialFunction.scala:25)\r\n    at net.liftweb.actor.LiftActor$class.execTranslate(LiftActor.scala:440)\r\n    at net.liftweb.http.LiftServlet$ContinuationActor.execTranslate(LiftServlet.scala:662)\r\n    at net.liftweb.actor.SpecializedLiftActor$class.liftedTree2$1(LiftActor.scala:288)\r\n    at net.liftweb.actor.SpecializedLiftActor$class.net$liftweb$actor$SpecializedLiftActor$$proc2(LiftActor.scala:287)\r\n    at net.liftweb.actor.SpecializedLiftActor$$anonfun$net$liftweb$actor$SpecializedLiftActor$$processMailbox$1.apply$mcV$sp(LiftActor.scala:210)\r\n    at net.liftweb.actor.SpecializedLiftActor$$anonfun$net$liftweb$actor$SpecializedLiftActor$$processMailbox$1.apply(LiftActor.scala:210)\r\n    at net.liftweb.actor.SpecializedLiftActor$$anonfun$net$liftweb$actor$SpecializedLiftActor$$processMailbox$1.apply(LiftActor.scala:210)\r\n    at net.liftweb.actor.SpecializedLiftActor$class.around(LiftActor.scala:224)\r\n    at net.liftweb.http.LiftServlet$ContinuationActor.around(LiftServlet.scala:662)\r\n    at net.liftweb.actor.SpecializedLiftActor$class.net$liftweb$actor$SpecializedLiftActor$$processMailbox(LiftActor.scala:209)\r\n    at net.liftweb.actor.SpecializedLiftActor$$anonfun$2$$anonfun$apply$mcV$sp$1.apply$mcV$sp(LiftActor.scala:173)\r\n    at net.liftweb.actor.LAScheduler$$anonfun$9$$anon$2$$anon$3.run(LiftActor.scala:64)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n    at java.lang.Thread.run(Thread.java:722)\r\n\r\n   Locked ownable synchronizers:\r\n    - locked <5ccd8418> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n```'
1453,'tuhlmann',"LAFuture.collect crashes when futures are resolved out of order\nI'm using LAFuture.collect from Lift 3 Snapshot to collect 3 futures into one. It sometimes throws an IndexOutOfBoundsException at me.\r\nThe reason is this line:\r\n\r\nval vals = new collection.mutable.ArrayBuffer[Box[T]](len)\r\n\r\nwhich defines the result array. Later, when future 2 is satisfied before future 1 it tries to insert it at a index that does not yet exist, thus throwing the exception.\r\nThe fix I found was to pad the array with Empty's and then later in the foreach write a Full into it.\r\n\r\nHere's the repl that produces the exception:\r\n\r\nscala> new collection.mutable.ArrayBuffer[Int](3)\r\nres0: scala.collection.mutable.ArrayBuffer[Int] = ArrayBuffer()\r\n\r\nscala> res0.insert(2, 4)\r\njava.lang.IndexOutOfBoundsException: 2"
1452,'dpp','HttpServletRequest.getHeader returns null for empty header in jetty 9\nIf pass in header\r\n`User-Agent:`\r\nHttpServletRequest.getHeader("User-Agent") will return null in jetty 9.\r\n\r\nThere is a groups discussion about it:\r\nhttps://groups.google.com/forum/#!topic/liftweb/9712-b4lOB8\r\n\r\nAnd reply about this issue jetty developers:\r\nhttp://dev.eclipse.org/mhonarc/lists/jetty-users/msg03339.html\r\n\r\nSo it is defined behaviour and will not be changed by developers.'
1451,'','OnDiskFileParamHolder localFile should be private as well as OnDiskFileParamHolder constructor\nlocalFile is deleted in finalizer of OnDiskFileParamHolder  at random points in time and therefore should not be accessible outside of it, otherwise you get dangling pointers to the file which was already deleted'
1450,'farmdawgnation','Implementation of conditional onEvent helper.\nImplementation of a conditional onEvent helper that guards the execution of the event with an alert dialog.'
1448,'','Fix for Issue #1442. NPE in compactRender for List with null values\ncheck elem.values in an Option to prevent NPE'
1447,'','Fix some warnings\n'
1446,'','Deprecate XmlMenu\n'
1445,'',"Fix spelling mistake in supplimentalKidMenuItems\nSplit out from #1410, this is somewhat of a breaking change. Most Loc subclasses outside of the Lift codebase will simply need a recompile. A subclass that overrides supplimentalKidMenuItems will not compile (it's now final, besides deprecated), requiring the overriding method to be renamed as well.\r\nIdeally this would be included in 2.6, and 3.0 would only have the correctly spelled method."
1444,'',"Ajax callbacks being lost in test-mode\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/HEUUXxPPkRs\r\n\r\nAs pointed out on the mailing list, in test-mode Lift will use stable IDs for callbacks assigned ajax buttons. I have a scenario where that functionality is breaking and the same ID is being used for two different callbacks. (Or at least that's what seems to be happening to me).\r\n\r\nI've created a test project that demonstrates this behaviour:\r\nhttps://github.com/japgolly/lift-problem-ids_in_test_mode"
1443,'','None should result in JNothing rather than JNull to optimize the rendered JSON.\nNone should result in JNothing rather than JNull to optimize the rendered JSON. Also bumped the reserved code cache size to prevent errors when building locally.'
1442,'','compactRender NullPointerException\nRef. thread: https://groups.google.com/d/topic/liftweb/-Ob6-cdWmFs/discussion\r\n\r\ncompactRender() throws a NullPointerException if it encounters null values inside a JArray().\r\n\r\ncompact(render(JArray(List(null)))) works fine, but\r\ncompactRender(JArray(List(null))) throws NullPointerException.\r\n'
1441,'','html5 meta question\nHI,\r\n\r\n![qq20130501000910](https://f.cloud.github.com/assets/42312/444968/5415e484-b1b0-11e2-8ea4-83742c0960b5.png)\r\n\r\nSeo impact！\r\n\r\nHow to do？\r\n\r\nThanks!!'
1440,'','Upgraded to scalaz7 final\n'
1439,'','Bump Scalaz 7 version to 7.0.0-RC2\nRelated to https://github.com/lift/framework/pull/1424.'
1438,'','use compactRender in Serialization.write\nshould improve performance without any breaking api changes. thanks for the suggestion  @viktortnk'
1436,'',"Add withFilter to types used in for comprehensions\nWith 2.10 I see this a lot with lift-json:\r\n\r\n`withFilter' method does not yet exist on net.liftweb.json.JObject, using `filter' method instead\r\n\r\nWe should go through all cases with a filter method and implement withFilter also.\r\n\r\nThere's a related #1253 \r\n\r\n"
1435,'',"Optimized JValue Serialization and Specs improvements\nOur servers do lots of serialization of JValues. During profiling we noticed that the compact(prepare(json)) method was a big CPU bottleneck. This pull request adds a `compactRender` method that serializes a JValue directly to a String using a StringBuilder. In internal testing, this method is anywhere from 50-100% faster.\r\n\r\nI added a new benchmark for comparison.\r\n\r\nThis PR also updates many of the Specs in the lift-json project. The Specs were incorrect in that many of the must clauses were being ignored as only the expectation returned by a Spec is evaluated by the SpecRunner (as opposed to `assert` type tests in JUnit). I have gone through the Specs and `and`'ed clauses together where appropriate.\r\n\r\nI recommend an audit of the rest of the specs in the other lift packages.\r\n\r\nWill Palmeri\r\nCo-Founder\r\nStackMob"
1434,'','Optimization for LiftSession.findSnippetClass\nsnippet name to class map will be cached on the LiftSession object to\r\navoid duplicate searches. This is to a avoid a performance problem where\r\nthe searches become expensive as many snippet packages are added and the\r\nnumber of classes loaded is very large.'
1433,'','Allow scheme-relative URLs\nURLs starting with "//" will choose the scheme of the current page.  This allows more flexibility when loading content from CDNs.\r\n\r\nSee discussion at https://groups.google.com/forum/?fromgroups=#!topic/liftweb/4N0-Rkhb_1c .'
1432,'','Don\'t rewrite scheme-relative URLs when processing web pages.\nWhen a url starts with "//", it is considered scheme-relative and will choose the scheme of the current page.  It allows more flexibility when embedding content from CDNs, for example.'
1431,'','setting doctype via htmlproperties does not work\nworks:\r\n\r\nLiftRules.docType.default.set( (r:Req) => Full(DocType.xhtml11))\r\n\r\ndoes not work:\r\nLiftRules.htmlProperties.default.set( (r: Req) => new OldHtmlProperties(r.userAgent).setDocType(() => Full(DocType.xhtml11)):HtmlProperties)'
1430,'','Spelling bee: Fix the spelling of implicits in net.liftweb.util.Vendor.\n![spelling bee](http://www.lakelocal.org/ms/PublishingImages/bee.jpg)\r\n\r\nThis resolves issue #1429 by implementing correctly spelled alternatives as implicits and throwing deprecation warnings on the misspelled alternatives.'
1429,'farmdawgnation','net.liftweb.util.Vendor has misspelled implicit functions.\nIt would seem that net.liftweb.util.Vendor has misspelled implicit function.\r\n\r\nfuncToVender and valToVender should be funcToVendor and valToVendor, respectively.'
1428,'','typo in function names\nin _liftweb.util.Maker.scala_ object _Vendor_\r\n\r\ntypos in function names:\r\n1.  implicit def valToVend **e** r\r\n2.  implicit def funcToVend **e** r\r\n\r\nshould be **o** instead of **e**\r\n'
1427,'','Log error on AJAX call for non-found function GUID\nDiscussion: https://groups.google.com/d/msg/liftweb/BMYi_zvKDXk/lusxhTM3ZU4J'
1426,'','Optionally relevant: Support for custom attributes on each option of a select.\nThis pull request implements the feature I described [in this mailing list thread](https://groups.google.com/d/msg/liftweb/u0Rw0sFKYuI/RLGmL7ojNvIJ) by allowing you to do things like disable particular options in a Lift-ed out select tag.\r\n\r\nTo use it, you\'ll do something like this...\r\n\r\n```scala\r\nval optionsForSelect =\r\n  // regular option\r\n  SelectableOption(someValue, "Label") ::\r\n  // disabled option\r\n  SelectableOption(someValue2, "Label2", "disabled" -> "disabled") ::\r\n  Nil\r\n\r\n...\r\n\r\nselectObj(optionsForSelect, ...)\r\n```\r\n\r\nAdditionally, there is an implicit conversion between `(T, String)` and `SelectableOption[T]`, such that legacy code using the tuple format will continue to work, and those that don\'t need the additional attribute functionality can continue to use it.\r\n\r\n**Go over this with a fine-toothed comb.** I\'m almost certain I mixed up an nonce and a real value parameter somewhere, which we can all agree would be problematic (mostly because it would break things). I\'ll be going over it again soon, but my eyes need a break. Hah!\r\n\r\nAlso, this guy includes a few readability improvements elsewhere in the SHtml trait.'
1424,'','Adds lift-json-scalaz7 (Scalaz 7 support).\nAdds lift-json-scalaz7 (Scalaz 7 support).\r\n* Adds a new submodule for lift-json-scalaz7.\r\n* Maintains lift-json-scalaz for Scalaz 6 support.\r\n* Updated json-scalaz directory structure from lifweb to liftweb.\r\n* Updated README to correspond to Scalaz 7.\r\n\r\nDiscussion on Lift mailing [list](https://groups.google.com/forum/?fromgroups=#!topic/liftweb/dTIF044jAww).'
1422,'',"Allow ResponseWithReason to be used for 200 status\nThis is a reversion to previous behaviour, which I suspect was changed accidentally in c82e783, which was largely a tidy-up. \r\n\r\nI couldn't work out where the best place to add a test to verify this behaviour was, but am happy to add one if someone can point me in the right direction."
1421,'','Fix #1418 (problem with JSON unflatten when using common prefixes)\nThis is a fix for issue #1418 that doesn\'t break the tests. I\'ve also added a new unit test for my case (i.e. property names with common prefixes, such as "photo" and "photographer").'
1420,'','Json-Parser: Invalid optional values get completely ignored\nHi,\r\n\r\njson support in lift is really great.\r\nThere is one point, where it could be even better: the handling of optional values.\r\n\r\nExample:\r\n\r\n    case class Test(\r\n     simple:Int,\r\n     option:Option[String],\r\n     complex:Option[Test]\r\n    )\r\n\r\nThe logic is: A test-object can be read from json, if all non optional values are available.\r\nSo that line of code runs perfectly well: \r\n\r\n    parse("""{"simple":42}""").extract[Test]\r\nIf I omit the simple member, I get a MappingException: No usable value for simple which is really great too. This mechanism works very well also for optional simple values. The problem arises with complex optional values. This json string is in my understanding not correct:\r\n\r\n    {"simple":23, "complex":{"option":"test"}}\r\nThere is a definition of complex, but the given definition of complex is wrong.\r\nI would expect a mapping exception, exactly like the example above, since the simple attribute is missing. In lift-json the exception is ignored and the whole sub-object will be rendered to the None value. \r\n\r\nSince there is no mapping exception, the user does not know about its failure. Furthermore a request is performed with unintended, possibly wrong, values.\r\n\r\nSo following logic would be better in my opinion:\r\nAn optional member is optional as long as there is no value for this attribute.\r\nIf there is an attribute, the optional value has to be correct.\r\nIf the optional value is not correct, throw a MappingException.\r\n\r\nHope this can be fixed in a future release.\r\n\r\nThanks in advance,\r\nMatthias\r\n'
1419,'','Fix #1418 (problem with JSON unflatten when using common prefixes)\nThis is a tentative fix for issue #1418 (Problem with JSON unflatten when using common prefixes):\r\n\r\nSome sample code to reproduce the problem is included in the issue.'
1418,'','Problem with JSON unflatten when using common prefixes\nCode to reproduce (Scala 2.10.1 + Lift 2.5-RC2):\r\n\r\n```scala\r\nimport net.liftweb.json.{Extraction, JsonAST, JsonParser, Printer}\r\n\r\nobject Test {\r\n  def main(args: Array[String]) {\r\n    val inputString = """{ "photo": "photo value", "photographer": "photographer value" }"""\r\n    val inputMap = Extraction.flatten(JsonParser.parse(inputString))\r\n\r\n    for (kv <- inputMap) {\r\n      println(s"${kv._1} -> ${kv._2}")\r\n    }\r\n\r\n    val jsonValue = Extraction.unflatten(inputMap)\r\n    val outputString = Printer.pretty(JsonAST.render(jsonValue))\r\n\r\n    println(outputString)\r\n  }\r\n}\r\n```\r\n\r\nRun-time error:\r\n\r\n>scala.MatchError: grapher (of class java.lang.String)\r\n>\tat net.liftweb.json.Extraction$$anonfun$unflatten$1.apply(Extraction.scala:178)\r\n>\tat net.liftweb.json.Extraction$$anonfun$unflatten$1.apply(Extraction.scala:177)\r\n>\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)\r\n>\tat scala.collection.immutable.List.foldLeft(List.scala:84)\r\n>\tat net.liftweb.json.Extraction$.unflatten(Extraction.scala:177)\r\n>\tat net.liftweb.json.Extraction$$anonfun$unflatten$1.apply(Extraction.scala:181)\r\n>\tat net.liftweb.json.Extraction$$anonfun$unflatten$1.apply(Extraction.scala:177)\r\n>\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)\r\n>\tat scala.collection.immutable.List.foldLeft(List.scala:84)\r\n>\tat net.liftweb.json.Extraction$.unflatten(Extraction.scala:177)\r\n>\tat liftJsonBug.Test$.main(Test.scala:14)\r\n>\tat liftJsonBug.Test.main(Test.scala)\r\n>\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n>\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n>\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n>\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\r\nIssue opened following this thread on the Lift Google Group:\r\n\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/Jd3yuZtoqE4\r\n\r\nA fix would be to change this line in net.liftweb.json.Extraction.unflatten (submap sub-method):\r\n\r\n```scala\r\nt._1.startsWith(prefix)\r\n```\r\n\r\ninto:\r\n\r\n```scala\r\nt._1 == prefix || t._1.startsWith(prefix + ".")\r\n```'
1417,'jonifreeman','JSON de-serialization: constructor memoization ignores type parameters\nWhen de-serializing JSON, the memoization logic which maps classes to constructors in net.liftweb.json.Meta ignores type parameters. If a parameterized type is used multiple times during extraction, subsequent lookups for the same (erased) type will return the original constructor, even if different parameters were provided. The following code highlights the issue - the second call to \'read\' tries to construct an instance of TypeA instead of TypeB, and throws an exception when it can\'t find the field \'foo\':\r\n\r\n```scala\r\nimport net.liftweb.json.Serialization.read\r\nimport net.liftweb.json.DefaultFormats\r\n\r\nobject JsonParseTest extends App {\r\n  implicit val formats = DefaultFormats\r\n\r\n  val jsonA = """ { "data": { "foo": "string" }, "success": true } """\r\n  println(read[Container[TypeA]](jsonA))\r\n  val jsonB = """ { "data": { "bar": "string" }, "success": true } """\r\n  println(read[Container[TypeB]](jsonB))\r\n}\r\n\r\ncase class TypeA(foo: String)\r\ncase class TypeB(bar: String)\r\ncase class Container[D](data: D)\r\n```\r\n\r\nAnd the output:\r\n\r\n```\r\nContainer(TypeA(string))\r\nException in thread "main" net.liftweb.json.MappingException: No usable value for data\r\nNo usable value for foo\r\nDid not find value which can be converted into java.lang.String\r\n    at net.liftweb.json.Meta$.fail(Meta.scala:191)\r\n    at net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:357)\r\n    at net.liftweb.json.Extraction$.build$1(Extraction.scala:317)\r\n    at net.liftweb.json.Extraction$$anonfun$12.apply(Extraction.scala:253)\r\n    at net.liftweb.json.Extraction$$anonfun$12.apply(Extraction.scala:253)\r\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)\r\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)\r\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\r\n    at scala.collection.immutable.List.foreach(List.scala:76)\r\n    at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)\r\n    at scala.collection.immutable.List.map(List.scala:76)\r\n    at net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:253)\r\n    at net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:286)\r\n    at net.liftweb.json.Extraction$.build$1(Extraction.scala:315)\r\n    at net.liftweb.json.Extraction$.net$liftweb$json$Extraction$$extract0(Extraction.scala:366)\r\n    at net.liftweb.json.Extraction$.net$liftweb$json$Extraction$$extract0(Extraction.scala:199)\r\n    at net.liftweb.json.Extraction$.extract(Extraction.scala:43)\r\n    at net.liftweb.json.JsonAST$JValue.extract(JsonAST.scala:300)\r\n    at net.liftweb.json.Serialization$.read(Serialization.scala:58)\r\n    at jmullin.api.Test$.parse(API.scala:11)\r\n    at jmullin.api.Test$delayedInit$body.apply(API.scala:16)\r\n    at scala.Function0$class.apply$mcV$sp(Function0.scala:34)\r\n    at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)\r\n    at scala.App$$anonfun$main$1.apply(App.scala:60)\r\n    at scala.App$$anonfun$main$1.apply(App.scala:60)\r\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\r\n    at scala.collection.immutable.List.foreach(List.scala:76)\r\n    at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:30)\r\n    at scala.App$class.main(App.scala:60)\r\n    at jmullin.api.Test$.main(API.scala:7)\r\n    at jmullin.api.Test.main(API.scala)\r\nCaused by: net.liftweb.json.MappingException: No usable value for foo\r\nDid not find value which can be converted into java.lang.String\r\n    at net.liftweb.json.Meta$.fail(Meta.scala:191)\r\n    at net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:357)\r\n    at net.liftweb.json.Extraction$.build$1(Extraction.scala:317)\r\n    at net.liftweb.json.Extraction$$anonfun$12.apply(Extraction.scala:253)\r\n    at net.liftweb.json.Extraction$$anonfun$12.apply(Extraction.scala:253)\r\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)\r\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)\r\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\r\n    at scala.collection.immutable.List.foreach(List.scala:76)\r\n    at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)\r\n    at scala.collection.immutable.List.map(List.scala:76)\r\n    at net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:253)\r\n    at net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:286)\r\n    at net.liftweb.json.Extraction$.build$1(Extraction.scala:315)\r\n    at net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:351)\r\n    ... 29 more\r\nCaused by: net.liftweb.json.MappingException: Did not find value which can be converted into java.lang.String\r\n    at net.liftweb.json.Meta$.fail(Meta.scala:191)\r\n    at net.liftweb.json.Extraction$.convert(Extraction.scala:403)\r\n    at net.liftweb.json.Extraction$.build$1(Extraction.scala:314)\r\n    at net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:351)\r\n    ... 42 more\r\n```\r\n\r\nList discussion: https://groups.google.com/d/msg/liftweb/Sdp1tcfoVAA/oOnWqUlEgvgJ'
1416,'','Mapper should use bcrypt\nThis issue is to track the commit\r\n\r\nhttps://github.com/lift/framework/commit/c7615ec123a2b4166e5c57b0bcec7cef7dd71529\r\n\r\nWhich made mapper use bcrypt to hash the stored password. This is a lot safer than using a normal hashing algorithm like sha*, etc'
1415,'','A couple of LiftScreen fixes\nFixes for a couple of fairly esoteric (CssBound)LiftScreen bug fixes.  Heavily tested and in production.'
1414,'',"Add ajaxOnSubmit to SHtml\n`ajaxOnSubmit` should be used similarly to `onSubmit`/`onSubmitUnit`, to\r\nadd proper attributes for AJAX submission to a submit `input` or `button` element\r\nwithout changing the element itself. It should take a `()=>JsCmd` like `ajaxSubmit`\r\nand transform the element it's applied to by adding the right `name` and `onclick`\r\nattributes (the same ones that `ajaxSubmit` puts on the element it generates)."
1413,'','de-gender comitters\n'
1412,'',"Get header deprecation\nFunky things happened in the pull request at #1408 so…\xa0Here's a new pull request. This removes our internal uses of `S.getHeaders`, which has now been deprecated. It also fixes the order of the parameters to `@deprecated` to be…\xa0Er… Correct heh."
1411,'eltimn','dirty_? flag in Record and Meta as in Mapper\nDiscusion at https://groups.google.com/forum/?fromgroups=#!topic/liftweb/sVRo7x1XHkA\r\n\r\nRelated to https://groups.google.com/forum/?fromgroups=#!searchin/liftweb/dirty_?/liftweb/g1wBrm1YfLs/lblZ-kaCXXEJ\r\n\r\nAdd a method like :\r\n def dirty_?(inst: BaseRecord): Boolean = {\r\n    val dirtyFields = fields(inst).filter(_.dirty_?)\r\n    dirtyFields.length > 0\r\n  }\r\n\r\nin MetaRecord and a dirty_? in Record\r\n\r\nThis method signature exists in Mapper.\r\n'
1410,'','New LocParam: ValueSnippets\nAllows to specify snippets that are functions of the Loc value as a LocParam\r\nPlus some code cleanup\r\n'
1409,'',"Parameterized tide: Tweak ~> behavior for ParamFailure and add ~>!\nSo, we may decide we want this to go into 3.0, or we may decide we don't want it at all. But there were a few people on the list who felt like this change made sense, and it makes my life nicer for some Anchor Tab stuff I'm doing, so here we go.\r\n\r\nThis pull request does two things.\r\n\r\n* Changes the behavior of `ParamFailure.~>` to return an instance of the param failure it was called on.\r\n* Provides `~>!` that behaves exactly as `~>` did before. The idea of chaining ParamFailures together was suggested, but I'm not entirely sure it makes sense. We can discuss further if there's disagreement on that point.\r\n\r\nThere was a mailing list discussion here: https://groups.google.com/d/topic/liftweb/JC9dKmUPxSg/discussion\r\n\r\nIn summary, we felt this change made sense because currently `?~` does nothing when it's called on a `Failure`, and there was no equivalent for `~>` and ParamFailures. Given that we have `?~!` for Failures, it made sense to keep with the convention that exclamation points change things. So, `~>` was altered and `~>!` was added.\r\n\r\nLet me know if there's anything else you need. :)"
1408,'Shadowfiend',"Mark S.getHeader as deprecated\nIt's unclear whether it is a synonym for `S.getResponseHeader` or `S.getRequestHeader` (it's the latter).\r\n\r\nSee https://groups.google.com/forum/#!topic/liftweb/CfxyHi2Ti8I ."
1407,'','Rename ComputeTransformRules->CanBind, #{computeTransform->apply}\nRename ComputeTransformRules to CanBind\r\nRename CTR#computeTransform(x, ns) to CTR#apply(x)(ns)\r\n'
1406,'','allow for maps to contain Int and Long keys\nThe current way of handling maps only allows for keys to be strings. This results in a match error at runtime. Sometimes json apis use an object with numeric ids as the fields, for easy access of an element in the js. '
1405,'fmpwizard','build Lift with java 6 byte code compatibility\nM4 was build using java 7, this causes  java.lang.UnsupportedClassVersionError errors if you are using java6 (and I think if you are using openjdk)\r\n\r\nwe need to add target= ... to the build to correct this'
1404,'','Fix the field() method in LiftScreen that uses an underlying field so it...\n... incorporates passes in validations as well as the validations on the underlying field. Previously, validations passed were ignored:\r\n\r\nval username = field(User.username, valMinLen(2, "Your username is too short. Please go die (or make it longer)."))\r\n\r\nNow they aren\'t ignored.\r\n\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/QceKSZ2_WIA'
1403,'',"Fix email composing for attaches\nHi!\r\n\r\nCurrent implementation of e-mail composing put all of the mail parts into one multipart/related part. As result Ms Outlook (and possible some other mail clients) doesn't show attachment.\r\n\r\nThe idea of this fix is put all inline attachments into multipart/related part and, the other ones are placed in multipart/mixed part (togeher with multipart/related part). I've tested both images and attachments (I used pdf) with Outlook 2010 - all works for me."
1402,'','The fix for e-mails with attachments.\nMicrosoft Outlook does not show attachments if the mail body has type "multipart/related". The solution is set it to "multipart/mixed". Tested with pdf attachments and Outlook 2010.'
1401,'',"Cleanup SecurityHelpers\nIt looks like we had some duplicated code in SecurityHelpers, so I cleaned it up a bit.\n\nDiscussed here: https://groups.google.com/d/topic/liftweb/79fshdCWGjQ/discussion\n\nOne outstanding question is why we're doing base64 encodes instead of hex encodes. I'm probably missing something silly, but it did seem odd. The output seems right regardless.\n\nLet me know if there are any issues. :)"
1400,'eltimn','Add Joda Time support to MongoRecord\nhttps://groups.google.com/d/topic/liftweb/dhA9Q6MtdMo/discussion'
1399,'','Fixed comment for devMode\n* Standardized productionMode comment with others'
1398,'','Fix DoubleField failing with JInt\nRight now, any JSON value without a decimal value will fail when you try to put it into a DoubleField.  For example:\r\n\r\n{ "value": 1234 } becomes JField( "value", JInt(1234) ), which in turn makes DoubleField very upset because it doesn\'t know what to do with JInt. \r\n\r\nI added a case for JInt in DoubleField\'s setFromJValue and added an associated test case.\r\n\r\nIn a separate commit I did the opposite for LongField/IntField so they can take JDoubles.'
1397,'fmpwizard','Specs2 are in compile scope after 2.10 migration\nThey should be in test scope by all means.\r\nCommit that broke it ↦ https://github.com/lift/framework/commit/ca08df6259e5db21921216b08ebad436058e2c0c#project/Dependencies.scala'
1396,'eltimn','Remove custom equals methods in mongo-record test fixtures\nSome tests were failing when compiling with scala 2.10.0.'
1395,'','Update contributors.md\nrelated to scalate processing update and scala 2.10 branch'
1394,'',"lift-json Mapping Error for optional response\nwhen using Extraction.extract[A],could we parse the missing optional field to nul, instead of throwing a MappingError?\r\nanyway,it's useful for some parsings.\r\n\r\njust matching JNothing to null will be Ok\r\n\r\n1.in method Extraction.convert(),match JNull|JNothing=>null \r\n2.at the end of  method newInstance() in object Extraction,match JNull|JNothing=>null\r\n"
1393,'','Make Lift build for scala 2.10!\n'
1392,'','Work done while building for 2.10, which is not specific to 2.10\n'
1391,'','Fix for Issue #1384\nIn this fix for #1384 , I tried to stay close to Mapper implementation. \r\n\r\nNot sure if a little test I made makes much sense.'
1390,'','MongoListField works with Array[Byte]\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/8Qz34q9utzk'
1389,'','Fix issue #1388 - Allow Paginator to send correct page links on ajax\na trivial fix for the issue, as discussed on the mailing list'
1388,'','Allow Paginator to send correct page links on ajax\nCurrently Paginator uses the current page uri from S.uri to build the page links. This does not work correctly when the page url is built and sent upon an ajax request. \r\n\r\nList discussion about the issue: https://groups.google.com/forum/?fromgroups=#!topic/liftweb/adgd95u2zcU'
1387,'fmpwizard','solve  net.liftweb.util.ComputeTransformRules[Double]\nAs discussed on the list, add an an implicit to solve:\r\n\r\n    net.liftweb.util.ComputeTransformRules[Double]\r\n    net.liftweb.util.ComputeTransformRules[List[Double]]\r\n\r\n\r\nThese two:\r\n\r\n    net.liftweb.util.ComputeTransformRules[net.liftweb.common.Empty.type]\r\n    net.liftweb.util.ComputeTransformRules[net.liftweb.common.None.type]\r\n\r\nare solved by doing something like:\r\n\r\n```\r\nval e: Box[String] = Empty\r\nbog #> e\r\n```\r\n\r\n'
1386,'davewhittaker','Upgrade to Squeryl 0.9.5-6\n'
1385,'',"Update maven archetype's plugins, dependencies and sonatype scala-tools repo\nhttps://groups.google.com/d/topic/liftweb/OseFAr27oCE/discussion\r\n\r\n"
1384,'','Provide a way to override input\'s type in Record Field.\nRight now the only way to customize input\'s type attribute in Lift Record is by overwriting toForm method of the Field. \r\nIt would be nice to have something like in MappedField:\r\nprotected def formInputType = "text"'
1383,'','Remove lift-couchdb from framework. It is now a lift module.\nRelated mailing list [discussion](https://groups.google.com/d/msg/liftweb/HCp7kO4aRlo/ruQYYTXqjjIJ) '
1382,'fmpwizard','Document FlexMenuBuilder\nAdd a wiki page with instructions on how to use FlexMenuBuilder.\r\n\r\nSee https://groups.google.com/d/topic/liftweb/uJZwACA6-PM/discussion\r\nfor how to use the group attr'
1380,'','Ignore errors in exception handlers\nIgnore (but log) any errors that occur when running exception handlers and return an empty response instead.\r\n\r\nAlso, the default exceptionHandler no longer throws in prod mode if a file is uploaded which exceeds the limit.'
1379,'','Memoize the value of a resource lookup for the duration of the request.\nCloses #1372'
1377,'','Feature which optionally times the performance of snippet evaluation\nThis feature optionally times the evaluation of snippets as discussed in this thread.\n\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/yy8gxcjH_bs\n\nI think this is worth writing up a quick wiki as its discoverability is zero and it is quite a useful feature (I used it to track down a performance problem in my app).  Where should I be submitting documentation to?\n\nCheers,\n\nNoel\n'
1376,'','/src/main/webapp resources not visible with running tests in SBT in starter templates\nneed to add:\n\nunmanagedResourceDirectories in Test <+= (baseDirectory) { _ / "src/main/webapp" }\n\nto build.sbt in lift_basic, lift_blank, lift_mvc'
1375,'','Make LiftResponse header defs vals instead\nBecause most LiftResponses are serialized to InMemoryResponses\nafter the end of the S scope, the LiftResponses that have def headers\ninstead of vals and rely on S.getHeaders are completely broken (they omit\nall headers).\n\nTo fix this, we need to make all of those defs vals instead so that they\nproperly look up the S headers while S is initialized.\n\nSee mailing list thread at https://groups.google.com/d/topic/liftweb/ELwgRJf-yAY/discussion for more.'
1374,'','Adding ajaxEditableSelect to SHtml. Allows users to dynamically add new ...\najaxSelect which allows users to dynamically add new select options. \n\nA discussion can be followed here: \nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/c0V45MoXqJg\n\nA working project can be checkout out here:\nhttps://github.com/kaiserpelagic/lift-ajaxEditableSelect.git'
1373,'eltimn','Upgrade mongo-java-driver to v2.10.0\n'
1372,'fmpwizard','Locale dependent resource lookup fails in production mode\nThe cached values need to include the locale as well'
1371,'',"JObjectField doesn't serialize to BSON\nThis fixes #1346."
1369,'',"Fix for Issue #1346: JObjectField doesn't serialize to BSON\nI previously asked for a fix for Issue #1346, but I already had code written for a fix.  Let me know if I need to do anything else"
1366,'jeppenejsum','Reprocess failed ajax request.\nWhen an ajax request fails the client will resend the request.\n\nWith this patch, if the failure is caused by the server (http code >500) the retry-request will actually be processed again instead of being satisfied by the previously computed response (which was a failure)'
1365,'','Incorrect ReentrantReadWriteLock usage in SoftReferenceCache\nthe apply method could possibly call remove method, so the write lock will be acquired from under read lock, which will cause the thread to hang.'
1364,'','Show alert if ajax call succeeds but the returned javascript fails\nOnly when running in DevMode.\n\nHave not really tested with anything but JQuery artifacts, but have included some basic sanity checks on the parameters.\n\n\n'
1363,'','Allow lift-json to parse primitives at the top level\nHi, \n\nIve always found it annoying that you can parse strings, ints, bools etc as standalone entities. \n\nEg:\n\nparse("12345") \n\nDoesnt work.\n\nI realise that this request may not be 100% to spec, but I noticed lift json will \'write\' a JString on its own and was hoping you might apply this change.\n\nThanks, \n\nFranis'
1362,'','Logo recompression\nThe Lift logo images have been losslessly recompressed, with an average of 10-15% reduction in size:\r\n\r\n     4.933 ->  4.472 liftlogo.png\r\n    15.857 -> 14.086 liftweb-logo-plain-big.png\r\n    61.309 -> 53.416 liftweb-logo-single-big.png\r\n     2.031 ->  1.741 liftweb-logo-single-small.png\r\n    59.158 -> 20.780 json.png\r\n'
1361,'',"Whitespace cleanup\nThis pull request is a general whitespace cleanup, which will benefit users who have automatic removal of whitespaces in their editors - preventing them from creating unwanted changes on save.\r\n\r\nEach of lift contributors is a wonderful individual, but their editing programs tend to disagree on the number of spaces a tab represents. This results in a mixture of different indentation standards, sometimes within the same file. The rest of the pull request deals with replacing randomly appearing tabs throughout the framework.\r\n\r\nTo perform a quick check confirming that there haven't been any code changes you can simply append a ?w=0 at the end of the GitHub diff URL."
1360,'','Add prompt expression to JsCommands\nPrompt expression should be available since it is similar to its colleagues alert and confirm.\r\nThe input box will be filled with an empty string by default, identical to invoking the prompt javascript function without the second argument.'
1359,'','PostgreSQL limit reserved word\nlimit is a reserved word for PostgreSQL.\r\nSo it should be included in the default list of reserved words\r\n\r\n1. Here is the sample app to demonstrate the problem ->\r\nhttps://github.com/colt44/limitcolumn\r\n\r\n2. Here is a known workaround:\r\nAdding DB.userReservedWords = Full(Set("limit")) into Boot.scala\r\ndoes solve the problem.'
1358,'','Add DateTimeSerializer for MongoDB\nThis serializer is essentially identical to the DateSerializer, but for\r\nJoda Time DateTime instances.'
1357,'Shadowfiend',"Add RestoringWeakReference\n`RestoringWeakReference` contains a `scala.ref.WeakReference` that,\r\nafter it has been nulled out, uses a restorer function to restore\r\nthe value.  This can be used for data that can afford to be evicted\r\nby the garbage collector, but will be needed later. One good example\r\nis Lift form callbacks, which may need the value of an object, but\r\nwhere you don't necessarily want to be retaining the object\r\nindefinitely while someone is on a page in the face of GC contention.\r\n\r\nExamples are in the doc header."
1356,'pbrant','Various minor improvements to CSS bound LiftScreens\n'
1353,'tuhlmann',"NullPointerException in LiftScreen\nThere's a NullPointerException being thrown for MappedDate (and MappedDateTime) fields that are not set yet (the defaultValue is NULL).\r\n\r\nThe Field trait definition in LiftScreen:228 defines:\r\n\r\noverride def toString = is.toString\r\n\r\nFor a not set field that boils down to null.toString.\r\n"
1352,'fmpwizard','Add FlexMenuBuilder trait to Lift\nThis is a trait @dpp posted on the mailing list, which allows you to build very flexible sitemaps, in scala code, instead of having to pass attributes on the html template. \r\n\r\nSee\r\nhttps://groups.google.com/d/topic/liftweb/GK6TGf_NR_g/discussion\r\n'
1351,'',"Issue 1343 - Ensure equals method works properly with all Fields\nSince Field.setBox now compares values before setting the dirty flag I wanted to make sure all of the fields' values have proper equals methods. \r\n\r\nThere were 2 that had problems; PatternField and BsonRecordField. I didn't figure out a solution for Pattern, but for BsonRecord I **added an equals method to Record** that compares each field.\r\n\r\nThere is also a problem with BsonRecord relating to it's mutablity. See this thread [1] for more info.\r\n\r\nTo help alleviate the problem I did 2 things:\r\n\r\n* Added a copy method to Record that creates a new Record instance with all fields set to the values in the original instance\r\n* Added forceDirty_? to Field. Setting this to true will force the dirty flag to always be set when calling setBox, the same as the previous behavior.\r\n\r\nNote that this commit includes @davewhittaker 's fix for issue 1335 \r\n\r\n1 - https://groups.google.com/d/topic/liftweb/g8SwfKsLW_0/discussion"
1350,'karma4u101','Update Menu.i to use S.loc(nameAndLink, Text(nameAndLink) \nUpdate Menu.i (Menu.apply) to use S.loc(nameAndLink, Text(nameAndLink)  instead of S ? nameAndLink. \r\n\r\nThis will make Menu.i (and Menu.builder) yield the same result as Loc.i for individual localized resource items like "some html and text" by rendering both the html part and the text.  '
1349,'eltimn',"Add createdAt function to ObjectIdField\nUse ObjectId's builtin date "
1348,'eltimn','Add lifecycle callbacks to MongoMetaRecord.update\n'
1346,'eltimn','JObjectField doesn\'t serialize to BSON\nJObjectField isn\'t fully working [following issue 1314 being fixed](https://github.com/lift/framework/pull/1338).  In the current builds, JObjectField will serialize to something like "JObject(List(JField(minutes,Jint(59))))", rather than the intended BSON data structure.\r\n\r\nThe issue is that -fieldDbValue in BsonRecord falls through to the o.toString option when it asDBObject tried to create the DBObject. \r\n\r\n I was able to shim in something that uses the mongo driver\'s JSON parser to deserialize a serialized JObject into a DBObject in the case that fieldDbValue gets a JObject, but it feels kinda hacky.\r\n\r\nThe current "get set from JValue" test only covers the fact that the JObject can in-fact be set on a given record, but it doesn\'t cover a round trip to BSON and back.'
1345,'fmpwizard','github.com/lift/framework/blob/master/README.md still refers to 2.4\nhttps://groups.google.com/forum/?hl=en#!topic/liftweb/7VlwlcMEEZk'
1344,'Shadowfiend','RenderVersion does not get set/restored on AJAX requests without version info\nAn ajax request of the form /ajax_request/F<render version>-<ajax version info>\r\ncorrectly restores the render version and handles deduplication of the ajax version.\r\nHowever, a request of the form /ajax_request/F<render version> does not correctly\r\nrestore the render version, while still running through the regular ajax request process.\r\nThis means the ajax request will run, but without proper state.'
1343,'eltimn','Ensure equals method works properly with all Fields\nSince setBox now checks for equality to set the dirty flag, all fields must have a proper equals method.'
1342,'','Make LiftRules.htmlProperties work\nPreviously only the first request in a session was taken into account.\r\n'
1340,'',"SoftReferenceCache produces MappingException on successful lookup\nCorresponding Lift Group discussion: https://groups.google.com/forum/?fromgroups=#!topic/liftweb/5iHV2G0I3oI\r\n\r\nThe code for SoftReferenceCache, on successful lookup, produces a (Boolean, V) tuple rather than a (Boolean, Box[V]) which does not match the expected value type, producing a MappingException at runtime.\r\n\r\n```scala\r\n    val (doRemove:Boolean, retval:Box[V]) =\r\n      lock(readLock) {\r\n        Box.!!(cache.get(key)) match {\r\n          case Full(value) =>\r\n            Box.!!(value.get).map((false, _)) openOr { // This is the faulty line.\r\n              (true, Empty)\r\n            }\r\n          case _ => (false, Empty)\r\n        }\r\n      }\r\n```\r\n\r\nThis could be changed to:\r\n\r\n```scala\r\n    val (doRemove:Boolean, retval:Box[V]) =\r\n      lock(readLock) {\r\n        Box.!!(cache.get(key)) match {\r\n          case Full(value) =>\r\n            Box.!!(value.get).map { value:V => \r\n              (false, Full(value))\r\n            } openOr {\r\n              (true, Empty)\r\n            }\r\n          case _ => (false, Empty)\r\n        }\r\n      }\r\n```\r\n\r\nI haven't been able to reproduce this locally (running sbt), but it happens consistently on our production server, which runs the jar directly."
1339,'','Issue 1336 - Move validations in OptionalEmailField and OptionalPostalCo...\n...deField from TypedField'
1338,'','Issue 1314 - Implement setFromJValue in JObjectField\n'
1337,'','Add formats to DateTimeField\n'
1336,'eltimn','Move validations in OptionalEmailField and OptionalPostalCodeField from TypedField\nCurrently OptionalEmailField and OptionalPostalCodeField define their validations in the TypedField.\r\nThat way when the optional field is left empty the validation fails.\r\n\r\nMove the validation to the EmailField and PostalCodeField instead'
1335,'davewhittaker','Do not call valueBox at lift record Field.setBox\nat Field.scala\r\nat method setBox\r\n\r\nval same = (oldValue, valueBox) match {\r\n      case (Full(ov), Full(nv)) => ov == nv\r\n      case (a, b) => a == b\r\n    }\r\n\r\nshould be changed to\r\n\r\nval same = (oldValue, data) match {\r\n      case (Full(ov), Full(nv)) => ov == nv\r\n      case (a, b) => a == b\r\n    }\r\n\r\ndiscussed at Lift mailing list:\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/cE86gzcDR_w'
1334,'davewhittaker',"Squeryl-record CRUDify lacks transaction in delete\nin net.liftweb.squerylrecord.CRUDify.scala\r\n```scala\r\n protected class SquerylBridge(in: TheCrudType) extends CrudBridge {\r\n\r\n    def delete_! = table.delete(in.id)\r\n```\r\n\r\nshould be changed to:\r\n\r\n```scala\r\n    def delete_! = inTransaction { table.delete(in.id) }\r\n```\r\nto be consistient with other operations, which already are in transaction. Delete is the only operation that is not in transaction, and therefore it does not work if you don't wrap delete request in transaction by other means\r\n\r\n"
1333,'fmpwizard',"Removed all the open_! calls\nWe deprecated open_!, so I'm replacing it for `openOrThrowException` or map/flatMap/etc where appropriate."
1332,'',"Use ThreadLocalRandom when available for StringHelpers\nStringHelpers.randomString uses a SecureRandom instance. Because of SecureRandom's thread safety assurances, this results in locking every time a random number is computed. Java 7 has a version of SecureRandom that automatically provides a thread-local instance, called ThreadLocalRandom. We should use it when it's available (i.e., on Java 7) and fall back on SecureRandom otherwise.\r\n\r\nIdeally, we would also make the randomness swappable here so that the user can provide their own implementation if needed (e.g., if they want to stay on Java 6 and still use something thread-local).\r\n\r\nOriginal discussion at https://groups.google.com/forum/?fromgroups=#!topic/liftweb/Bbhk-L5wXIc ."
1331,'','Off-by-1 in JSON string escaping\nHi,\r\n\r\nThis was a bug which affected a deployed application (with v2.4). Hope you can consider this fix.\r\n\r\n(Also, just curious, why not c.toInt instead of c:Int; and what is the purpose of the other two range checks? Are they needed?)\r\n\r\n--Toby\r\n\r\nPS. Was not able to do a test build at this time, I only have JDK 1.5 (sbt 0.7.7) on this machine.'
1330,'fmpwizard','HTTP basic authentication not working in 2.5\nHello everyone,\r\n\r\nWhen switching to Lift 2.5 my basic http authentication doesn\'t happen anymore and I have no idea why. I just switched back to 2.4 to confirm that it doesn\'t come from anything else and this is the case.\r\nHere is my code:\r\n\r\n```scala\r\nLiftRules.httpAuthProtectedResource.prepend {\r\n       case Req("api"::"post"::_, _, PostRequest) => Full(AuthRole("user"))\r\n}\r\n\r\nLiftRules.authentication = HttpBasicAuthentication("api") {\r\n            case (username, password, req) => {\r\n                authService.login(username,password) match {\r\n                    case Full(user) => {\r\n                        userRoles(AuthRole("user"))\r\n                        true\r\n                    }\r\n                    case _ => {\r\n                        false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nAccording to Diego, the server accepts authentication requests, it just doesn\'t send the 401 error to the browser when trying to access protected resources.\r\n\r\nThank you in advance\r\n\r\nProject example here:\r\nhttps://github.com/knshiro/lift-2.5-httpauthentication-broken\r\n\r\nDiscussion here\r\nhttps://groups.google.com/d/topic/liftweb/ycybRSpibSk/discussion'
1328,'',"AJAX Request deduplication, take 2\nOpening a separate issue for this to keep the discussion separate, as the approach is completely different.\n\nThe new approach does away with continuations altogether. Things are fairly simple:\n - We once again carry a sequence number on the AJAX URI.\n - A request for a sequence number we haven't seen yet is processed the normal way. When it completes and returns its response, that response is used to satisfy a future that has been associated with that sequence number.\n - Future requests for that sequence number wait on the future to return a result, but they time out after the ajaxPostTimeout. Note that the original request *does not time out* (on the server). It runs to completion.\n - To deal with the above, AJAX requests associated with comet actors no longer time out after the cometProcessingTimeout; instead, they block until the comet processes the request and returns a result. Otherwise, we would not be able to properly deduplicate comet-related AJAX requests.\n - Because of the way AJAX requests are queued up (I had misunderstood this the first time), info for a given sequence number is kept around until we know it can be discarded. To deal with this, the AJAX URI also carries a number indicating how many AJAX requests are still queued on the client. Only when this number reaches 0 do we clear out the information related to existing sequence numbers, as that is the only moment at which we are certain that every sequence number in our list has either received its response on the client or has been given up on by the client.\n - The other situation in which information associated with a given sequence number is evicted is if it remains untouched for the length of the functionLifespan.\n\nNote: this request also includes the commit that fixes issue #1327, as that fix was developed in tandem to this branch."
1327,'Shadowfiend','lift_uriSuffix can get lost during long-running AJAX requests\nBecause lift_uriSuffix is read during doAjaxCycle, a long-running AJAX request that blocks processing of two sequentially queued AJAX calls can result in mangled uriSuffix reads.\n\nThe situation is as such:\n - I do an AJAX request with suffix A. It takes 5s.\n - I do an AJAX request with suffix B. lift_uriSuffix is now B.\n - I do an AJAX request with suffix C. lift_uriSuffix is now C.\n - The first request completes, the second is processed. This request now sees suffix C. It is fired off with the wrong suffix.\n - The second request completes, the third is processed. This request now sees no suffix at all. It is fired off with no suffix.\n\nThe solution to this is to read the suffix during lift_ajaxHandler where we queue the request up, rather than waiting for other requests to complete.'
1326,'','Shemifier ensureIndexes problem with large oracle tables\nThere is a problem with large oracle tables (millions of records) while using Schemifier.\nThe reason for this is a usage of the value ```false``` for ```approximate``` parameter while calling  [getIndexInfo](http://docs.oracle.com/javase/6/docs/api/java/sql/DatabaseMetaData.html#getIndexInfo(java.lang.String,%20java.lang.String,%20java.lang.String,%20boolean,%20boolean)\n```getIndexInfo(String catalog, String schema, String table, boolean unique, boolean approximate)```\nin ```ensureIndexes``` method (```Schemifier.scala:292```). \nThis causes oracle to execute ```analyze table TABLE compute statistics``` statement at the boot time. As a result, the application needs much time to start (one hour in my configuration). At this time web container is locked waiting for oracle.\n\nIt would be nice to have some possibility to change the value of the ``àpproximate```parameter.\n\nThank you.'
1324,'','Allow, once again, to bind anything that is convertable to NodeSeq=>NodeSeq\n'
1323,'','Remove ToCssBindPromoter implicits in package object\nAs discussed in https://groups.google.com/d/topic/liftweb/yQum5ddtZ9M/discussion and https://groups.google.com/d/msg/liftweb/OLnqodvmsFI/TA_Tae0JiiIJ'
1322,'','Only catch Exception\nScala 2.10 warns on catch { case x => ... }, since it will catch all Throwables, including OutOfMemory, etc. Usually you want case x: Exception. This adds it, in only a few places.'
1321,'',"Css parse failures should return a ParamFailure containing the parser' failure message\n"
1319,'','net.liftweb.util.SoftReferenceCache deadlocks when accessing an evicted reference\nSoftReferenceCache checks whether a reference is stale before returning it in its apply function. If the reference is stale, it attempts to acquire a write lock while holding a read lock, resulting in a deadlock.\n\nReproducible case at https://github.com/Shadowfiend/soft-reference-cache-deadlock (sbt run it).'
1318,'dpp','Implement CSS Transformations using typeclass \nThis is already in 2.5-SNAPSHOT, David migrated the CSS transform to use type classes. \nI created the task so we have a list of all the new features that are part of 2.5-M1'
1317,'','Add SHtml.jsonCall that maps JValue => JValue\nI.e like this\n\n def jsonCall(jsCalcValue: JsExp, jsonContext: JsonContext, func:\nJsonAST.JValue => JsonAST.JValue): GUIDJsExp =\n    jsonCall_*(jsCalcValue, jsonContext, S.SFuncHolder(s =>\nparseOpt(s).map(func) getOrElse JsonAST.JNothing))\n'
1314,'eltimn','Implement setFromJValue in JObjectField\n'
1312,'dpp','CSS Selector [class!] not working as expected\nI would expect the "removeme"-class to be removed, but it isn\'t:\n```\nscala> (".removeme" #> ("td [class!]" #> "removeme")).apply(<tr><td class="removeme fish">Hi</td></tr>)\nres13: scala.xml.NodeSeq = NodeSeq(<tr><td class="fish removeme">Hi</td></tr>)\n```\nThe "removeme" class is still there, unexpected.'
1311,'',"* Added build script\nNow that we don't build the modules any more, I decided to simplify the build process to publish to sonatype by just adding this script to framework"
1310,'fmpwizard',"Deprecate JSONParser\nAs discussed here\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/1eEQjR02Lf0\nWe'll deprecate JSONParser in favor of using lift-json"
1309,'',"AJAX request deduplication.\nRegular AJAX requests now carry a single-character version identifier.\nServer-side, if we've already seen a request for that identifier (meaning\nthis is a retry), we make the request wait for the original processing code\nto finish before returning the response from there. If the original request\nhas already completed, we return the existing response for that request.\n\nContinuations are used to wait for the completion of the initial request when\nneeded and available."
1308,'','Added java.sql.Timestamp to net.liftweb.json Extraction\nI ran into a problem where a Mapper MappedDateTime was not being serialized by net.liftweb.json.Extraction. It turns out this is because MappedDateTime.is returns a java.sql.Timestamp, which although is a subclass of java.util.Date, lift json did not support.'
1307,'',"Parse NaN value as Double.NaN\nSince NaN values are supported in serialization to JSON, we decided to add support for deserialization as well, even though it's not part of the official JSON spec."
1306,'',"Add a way to avoid restarting of Executors after 'shutdownFully' is call...\nI needed a way of completely shutting down all threads after Lift's servlet context is destroyed. Before, the Lift Scheduler and ActorPinger threads would continue running because they would be continually rescheduled and the relevant Executors restarted. I added a method into Schedule and LAPinger to 'shutdownFully' which meant to not allow the executor to be rescheduled. This I call from unloadHooks."
1301,'','specs2 wip\nUse specs2 rather than the ancient specs.\nAmong other things allows us to port to 2.10, since specs is obviously not published for 2.10.\n*Not finished yet* --- currently pushed common, actor, json*, util. Locally have webkit, db, mapper too.\nAnyone that wants to work on another subproject comment on this ticket first to prevent duplicate work.\n'
1300,'','lift-json should not produce invalid json from JValue instance\nJField  currently extends JValue\n\nThis leads to expressions like the following being compilable:\n\n~~~ \nJObject(List(JField("field1", JField("field2", JString("value")))))\n~~~\n\nThis in turn renders to \n\n~~~\n{\n  "field1":"field2":"value"\n}\n~~~\n\nwhich is not valid json.\n\nCurrently the `~`-operator produces such structures, so there is a bit of work when fixing this...\n\nLooking at the [Json][http://www.json.org/] grammar we can see that:\n\n~~~\nvalue:  string |  number | object | array | true | false | null\n~~~\n\nbut not `pair` as they call the JField.'
1299,'fmpwizard','CRUDIFY shows List %s invoice instead of List invoice\nRichard Dallaway found out that after I made some localization changes, the crudify files are not working as expected.\nhttps://github.com/d6y/crud_percent_s shows the problem'
1298,'','Correctly propagate the fact that DB.rollback was called\n to any functions registered with appendPostTransaction. Closes #1295'
1296,'','MongoDb: fields stored in the db can\'t start with \'$\'\nHi, \n\nI can use lift-mongo perfectly inside my source code, still, trying to use it inside a scalatest test I get:\n\nfields stored in the db can\'t start with \'$\' (Bad Key: \'$outer\')\njava.lang.IllegalArgumentException: fields stored in the db can\'t start with \'$\' (Bad Key: \'$outer\')\n\n\tat com.mongodb.DBCollection.validateKey(DBCollection.java:1250)\n\tat com.mongodb.DBCollection._checkKeys(DBCollection.java:1216)\n\tat com.mongodb.DBCollection._checkObject(DBCollection.java:1206)\n\tat com.mongodb.DBCollection.save(DBCollection.java:753)\n\tat com.mongodb.DBCollection.save(DBCollection.java:738)\n\tat net.liftweb.mongodb.MongoDocumentMeta$class.save(MongoDocument.scala:186)\n\tat tests.TestDB$$anonfun$1$Person$2$.save(TestDB.scala:25)\n\nThe code I\'m using to reproduce the problem is: \n\n    test("mongo connection"){\n\n\n        MongoDB.defineDb(DefaultMongoIdentifier, new Mongo, "test")\n\n        case class Address(street: String, city: String)\n        case class Child(name: String, age: Int, birthdate: Option[Date])\n\n        object Person extends MongoDocumentMeta[Person] {\n          override def collectionName = "mypersons"\n          override def formats = super.formats + new ObjectIdSerializer\n        }\n\n        case class Person(_id: ObjectId, name: String, age: Int, address: Address, children: List[Child], dob: Date)\n          extends MongoDocument[Person] {\n\n          def meta = Person\n        }\n\n        val p = Person(\n          ObjectId.get(),\n          "jofrewerge",\n          27,\n          Address("cenas", "coisas"),\n          List(Child("joao", 20, None)),\n          new Date()\n        )\n\n        p.save\n\n    }\n\n\nAgain, note that this same code works perfectly inside my non test code'
1295,'jeppenejsum','DB.rollback does not propagate to functions in appendPostTranscation\nIf the tx is rolled back due to an exception the "committed" parameter to the function is set correctly, not if DB.rollback is called explicitly.\n'
1294,'eltimn','Add formats to DateTimeField\nFor use with asJValue and setFromJValue.'
1292,'fmpwizard',"change all deprecated messages to be 2.9.x compatible\nNow that we don't build Lift for 2.8.x, we can add the second parameter to all the deprecated messages we have.\nThus would eliminate the compiler warnings we get at build time."
1291,'fmpwizard',"SHtml.ajaxSelect doesn't serialize ampersands (&) correctly.\nIn working with a dynamic set of select boxes similar to the one at <http://demo.liftweb.net/ajax-form>, I had difficulty if the values in the first select contained ampersands.  We discussed this on the forum at <https://groups.google.com/d/topic/liftweb/v2H5tvkiTPk/discussion>. \n\nI went ahead and verified that an SHtml.ajaxText does not have this trouble.  "
1290,'davewhittaker',"ajaxSubmit actions are not re-invoked when retries occur\nSee the discussion here: https://groups.google.com/d/msg/liftweb/q21dIosJ_oY/p3WgQDeEMmAJ\n\nBecause buttons aren't serialized with the rest of a form's fields, Lift sets a global liftAjax.lift_uriSuffix variable to the function id of the button that was clicked.  Currently, that value is only sent during the first request and isn't stored with the rest of the form data for use during a retry.  I've got a fix coming today to take care of that."
1288,'dpp','stackoverflow using CmdPair with long lists\nAs described on this thread\nhttps://groups.google.com/d/topic/liftweb/YfIAptQsy2I/discussion\n\n\nI was doing some work using comet and I run into some stackoverflow\nerrors. I was able to narrow it down to this short example: that runs\non the repl\n\n\n    val l= JsRaw("alert(\'0\')").cmd\n    val r= JsRaw("alert(\'0\')").cmd\n    val c= CmdPair(l,r)\n    val z = 1 to 11110 map { x => JsRaw("""alert(\'""" + x + """\') """).cmd}\n    val result= z.foldLeft(c)((a, b) => CmdPair(a, b))\n    result.left.toJsCmd  //if I comment this line out, no stackoverflow occurs, but if I leave the line there, I get:\n\n    java.lang.StackOverflowError: null\n        at net.liftweb.http.js.JsCmds$CmdPair.append(JsCommands.scala:800)\n    ~[lift-webkit_2.9.1-2.5-SNAPSHOT.jar:2.5-SNAPSHOT]\n        at net.liftweb.http.js.JsCmds$CmdPair.append(JsCommands.scala:801)\n    ~[lift-webkit_2.9.1-2.5-SNAPSHOT.jar:2.5-SNAPSHOT]'
1287,'fmpwizard','Deprecate bundled jQuery\nBased on this thread\nhttps://groups.google.com/d/topic/liftweb/l3M8yNaAVX8/discussion\nwe will deprecate the "very old" bundled jQuery and offer out users a couple of alternatives.\n\n1- Let them include jQuery in their own projects (like in webapp/js/ )\n2- Let them use one of the CDN hosted urls (like Google, etc)\n3- Use the lightweight module Peter Petersson wrote.'
1286,'','Lift does not handle spaces in resource URLs\nGiven a request URL like\nhttp://localhost:8080/img/my%20spaced%20dir/icon.png\n\nLift responds with 404, even though the file exists.\n\nI have debugged this issue a bit and the relevant code seems to be in HTTPProvider:139\n\n```scala\n  protected def isLiftRequest_?(session: Req): Boolean = {\n    NamedPF.applyBox(session, LiftRules.liftRequest.toList) match {\n      case Full(b) => b\n      case _ => session.path.endSlash ||\n              (session.path.wholePath.takeRight(1) match\n              {\n                case Nil => true case x :: xs => liftHandled(x)\n              }) ||\n              context.resource(session.uri) == null\n    }\n  }\n```\nThe statement  context.resource(session.uri) == null tries to check whether the a corresponding resource exists for the URI. However ServletContext#getResource (to which .resource delegates) expects a path, not an encoded part of a URI.\n\nYou would have to wrap the call in something like URLDecoder#decode(String, String).'
1285,'','Make session loss handling more flexible for ajax and comet\nAs per https://groups.google.com/forum/#!topic/liftweb/SVit97-RdCE , we add the ability to deal with ajax and comet session loss distinctly, while renaming the `redirectAjaxOnSessionLoss` variable to `redirectAsyncOnSessionLoss` so that it is more evident that it acts on both ajax and comet.\n\nIn particular, we add `LiftRules.noCometSessionCmd` and `LiftRules.noAjaxSessionCmd`, which are the JsCmds that are sent down when `redirectAsyncOnSessionLoss` is set to true and the session is lost. By default, these two invoke `liftComet.lift_sessionLost` and `liftAjax.lift_sessionLost`, respectively. By default, `liftComet.lift_sessionLost` is a redirect to the value of `LiftRules.noCometSessionPage` (which is now deprecated), while the default for `liftAjax.lift_sessionLost` is reloading the page (which is what I would like the default for the liftComet variant to be as well, were it not for the backwards compatibility concern of continuing to support `LiftRules.noCometSessionPage`).'
1283,'','Add exception handling for comet updates\nAs per https://groups.google.com/forum/#!topic/liftweb/FFoyKp5H7hE .\n\nThe idea is to add LiftRules.cometUpdateExceptionHandler, a FactoryMaker[Box[JsCmd]]. If Full, the JsCmd defines the contents of a try/catch block wrapping a set of comet updates. If Empty, the try catch block is omitted entirely.\n\nBy default, it should be set to `Full(JE.Call("liftComet.lift_cometError", JE.JsVar("e")).cmd)` in development mode and `Empty` otherwise.'
1282,'fmpwizard','Use S.? instead of S.?? all around Lift\nAfter I rebase #1233 Unify resource lookup using S.?? and S:.? into master, we are going to get a lot of warnings where we use S.??\n\nThis issue is to change all those areas to use S.?  instead.'
1281,'Shadowfiend',"Implement !== Operator\nPresently, we have the === operator that works on Boxes, like so:\n\n```scala\nval awesomeBox : Box[Boolean] = ...\n\nif (awesomeBox === true) {\n  //do something\n}\n```\n\nI'm proposing the implementation of a !== operator that negates the current === operator. Such that you could write....\n\n```scala\nif (awesomeBox !== true) {\n```\n\n... and have the following code run so long as `awesomeBox` isn't a Full box containing true."
1280,'tuhlmann','TimeHelpers noTime always returns current Date\nI\'m playing with the TimeHelpers and I ran across the following:\n\nUsing "3.days.ago.noTime" would always give me the current day, but \nusing "3.days.ago" would give me today - 3 days (with the time filled.\n\nI have looked at the definition of noTime and I think it\'s wrong:\n\n/** This class adds a noTime method the Date class, in order to get at Date object starting at 00:00 */\nclass DateExtension(date: Date) {\n  /** @return a Date object starting at 00:00 from date */\n  def noTime = {\n    val calendar = Calendar.getInstance\n    calendar.set(Calendar.HOUR_OF_DAY, 0)\n      calendar.set(Calendar.MINUTE, 0)\n      calendar.set(Calendar.SECOND, 0)\n      calendar.set(Calendar.MILLISECOND, 0)\n      calendar.getTime\n    }\n  }\n\nThe important thing is that the date parameter is not used when creating the Calendar. Calendar.getInstance creates a Calendar object of now and then the time is stripped away.\n\nThe solution would be to create the Calendar object from the given date parameter using calendar.setTime.\n'
1279,'','HBase Record \nIs there any development going on HBase Record implementation? What is the current roadmap?'
1278,'','Add YUI processor plugin to minify js resources\nA fix for #1231'
1277,'eltimn',"Add configurable ObjectId tester in JObjectParser\nhttps://groups.google.com/d/topic/liftweb/fXDixRS1H4M/discussion\n\nCurrently, all Strings are tested to see if they are valid ObjectIds. This can cause problems if that's not what's needed. Allow configuration via a FactoryMaker.\n\n    object MongoDB extends Factory {\n\n      val jobjectParserObjectIdTester = new FactoryMaker[String => Boolean](s => ObjectId.isValid(s)) {}\n\n    }"
1276,'rusho','PasswordField fails to change the current password and it throws validation errors when no password was changed\nTorstens message:\n\nwhen I want to change the current password, I see that the apply() method is called and I see the "Password changed" message, but the password is still the old one.\n\nThen, when I try to change the user data (that do not contain the password), I get the error message with that key: "password.must.be.set"\nThat\'s not a problem of apply() I think. Rather I would guess that the password field does not validate if it had not been filled with a new password.\nAnd since changing the user data validates the user object and thus also the password field, that problem appears…\n\n---\n\nsetFromAny() is completely wrong, I forgot to rewrite it when doing the change.\n\ngroup discussion: https://groups.google.com/forum/?fromgroups#!topic/liftweb/OErzpfpyBjk\n\nsome of these issues probably cause this problem as well, though set_! shoud stay as is, as far as I\'m aware of, so proposed solution should not work: https://github.com/lift/framework/issues/1256'
1275,'eltimn','Allow overriding of formats in MongoCaseClassField\n(Originally discussed on [the list](https://groups.google.com/forum/?fromgroups#!forum/liftweb) with topic ["[lift-mongodb-record] Bug: cannot (de)serialize Enums in embedded Case Classes"](https://groups.google.com/forum/?fromgroups#!searchin/liftweb/Bug:$20cannot$20\\(de\\)serialize$20Enums$20in$20embedded$20Case$20Classes/liftweb/DvBrwlHr09U/P2Mf6RdGDWsJ))\n\n---\n\nHi Lift folks,\n\nWe\'re trying to use `MongoCaseClassField` and `MongoCaseClassListField` to save/load embedded case classes inside our mongodb records. For simple fields this seems to work great.\n\nThe problem we have is that when we have Enumeration fields inside our case classes, there is no way for us to communicate to the lift-mongodb-record layer that these should be serialized.\n\nTake a look at lines 35 and 80 in this file: https://github.com/lift/framework/blob/master/persistence/mongodb-record/src/main/scala/net/liftweb/mongodb/record/field/MongoCaseClassField.scala\n\nThe line reads:\n\n```scala\nimplicit val formats = net.liftweb.json.DefaultFormats\n```\n\nHowever, to support (de)serialization of enum classes, we\'d like to be able to add additional formats, as in\n\n```scala\nimplicit val formats = net.liftweb.json.DefaultFormats + new EnumNameSerializer(MyEnum)\n```\n\nAlong the same lines, if I wanted to use the lift-json serialization for JodaTime classes, it would be great to submit those as well, for example:\n\n```scala\nimplicit val formats = net.liftweb.json.DefaultFormats ++ JodaTimeSerializers.all + new EnumNameSerializer(MyEnum)\n```\n\nIs there some way to get this behavior from embedded case classes in lift-mongodb already? If so, please let us know.\n\nThanks,\n-Marc'
1274,'','fix README.md\n'
1273,'jeppenejsum','Open up ApplicableElem to enable user-defined SHtml-like methods\nDetails\n\nhttps://groups.google.com/d/topic/liftweb/D3ylkFGGxpc/discussion\n'
1272,'','Add CSS bound LiftScreen\n'
1271,'','What is the current version of lift-json?\nhttps://github.com/lift/framework/tree/master/core/json\n\nThe README says\n\n    Note, replace XXX with correct Lift version.\n\nbut, nothing about which is the current version.\n\nFinally I found 2.4 is, but it should be noted in somewhere very accessible.'
1270,'','DateTimeField has odd behavior when used with org.joda.time\nThis code\n\n```scala\n\nimport org.joda.time.{DateTime,DateTimeZone}\nimport com.foursquare.rogue.Rogue._\nimport com.foursquare.rogue.Rogue.Iter._\nimport net.liftweb.mongodb._\nimport net.liftweb.mongodb.record._\nimport net.liftweb.mongodb.record.field._\nimport net.liftweb.record.field.{DateTimeField=>LiftDateTimeField, StringField, IntField}\nimport net.liftweb.record._\nimport org.bson.types.ObjectId\n\nclass FooBar extends BsonRecord[FooBar] {\n\tdef meta = FooBar\n\tobject foo extends StringField(this, 100)\n\tobject bar extends LiftDateTimeField(this)\n}\n\nobject FooBar extends FooBar with BsonMetaRecord[FooBar] {\n\tdef baz: FooBar = {\n\t\tval d = new org.joda.time.DateTime().toDate\n\t\tval r: FooBar = FooBar.createRecord.bar(d).foo("abc")\n\t\treturn r\n\t}\n}\n```\n\ndoesn\'t work:\n\n```\n[error] FooBar.scala:20: value foo is not a member of Any\n[error] \t\tval r: FooBar = FooBar.createRecord.bar(d).foo("abc")\n[error] \t\t                                           ^\n```\n\nbut changing the code to\n\n```scala\n\n\t\tval d = new org.joda.time.DateTime().toGregorianCalendar\n\t\tval r: FooBar = FooBar.createRecord.bar(d).foo("abc")\n```\n\nmakes it work. Somehow passing a Java.util.Date into the DateTimeField doesn\'t work…?!?'
1269,'','Fixed issue 1268\nI fixed https://github.com/lift/framework/issues/1268 in this commit by making it match the way Mapper creates XML in toXml.  Also updated the ScalaTest RecordSpec to include a test for asXml.\n\n-Josh '
1268,'','net.liftweb.record.Record trait should have asXml method\nCurrently the Record trait has an asJSON method; it would be fantastic if we could also get an asXml method.\n\n-Josh'
1267,'','snippet resolve failed\nI am using lift 2.4, It seems that there is a snippet name resolving error.\r\n\r\nI have a snippet named ISnippet which first two letters are as uppercase, when I reference it as following, it works:\r\n\r\n\t<div class="lift:ISnippet">\r\n\t   ....\r\n\t</div>\r\n\r\nbut if I reference it as following:\r\n\r\n\r\n\t<lift:ISnippet>\r\n\t   ....\r\n\t</lift:ISnippet>\r\n\r\n\r\nlift would give me a error of "class not found":\r\n\r\n\tError processing snippet: isnippet \r\n\tReason: Class Not Found \r\n\tXML causing this error: \r\n\t          <lift:isnippet>\r\n\t\t    ...\r\n\t\t</lift:isnippet>\r\n\r\nIt seems that there are some problems in case transforming.'
1266,'davewhittaker','Deprecate DB.use with Squeryl\nAs discussed a while back: https://groups.google.com/d/topic/liftweb/vLols7i3Gxo/discussion, the use of Lift transactions with Squeryl is badly broken.  After discouraging their use on the wiki and group the next step will be to deprecate SquerylRecord.init for Lift 2.5, and remove it for 2.6.'
1265,'davewhittaker','Record fields should do a == check in setBox before setting dirty_? flag\nSee the discussions here:\r\nhttps://groups.google.com/d/topic/liftweb/1UzsUN2EBuo/discussion\r\n\r\nand here:\r\nhttps://groups.google.com/d/topic/liftweb/g1wBrm1YfLs/discussion'
1264,'','Add ajaxUntrustedSelect\n'
1263,'fmpwizard','Clean up deprecated calls\nThere are parts of Lift/framework that use deprecated methods (lift deprecated methods). So I figure I could spend some time and clean them up.'
1262,'jeppenejsum','Dissapearing attributes when None values are used on other attributes\nAttributes with None value on XML literals cause that other attributes disappear from the final output when using HTML 5 Serialization. Test code:\r\n\r\nval html = <input type="text" class="span3" id="myId" data-source={None} />\r\nHtml5.write(Group(html), w, false, !LiftRules.convertToEntity.vend)\r\nw.toString\r\n\r\nThe output string does not have the id attribute when data-source is set to None\r\n\r\nthe bug is in Html5Writer.writeAttributes(MetaData,Writer), changing from:\r\n\r\ncase md if (null eq md.value) => // issue 807. Don\'t do empty\r\n\r\nto\r\n\r\ncase md if (null eq md.value) => writeAttributes(md.next, writer)\r\n\r\nsolves this problem, I have this fix running for a few weeks without causing any other bug in my daily coding\r\n\r\nGroup discussion:\r\n\r\nhttps://groups.google.com/forum/#!msg/liftweb/Y0DEKgemWAQ/CUB0oSmwFNwJ'
1261,'','Paypal Module\'s BuyNowSnippet.buynow fails HTML5 validation\nWhen checking the output of BuyNowSnippet.buynow for valid HTML5 in http://validator.w3.org/, it  gives:\r\n\r\nBad value for attribute alt on element input: String was empty.\r\n… alt="" name="submit" type="image" src="/classpath/paypal/en_buynow_68x23.gif">\r\nSyntax of non-empty string:\r\nAny string that is not the empty string.\r\n\r\nhttps://groups.google.com/d/topic/liftweb/hcGu7awC76I/discussion\r\n'
1259,'davewhittaker','Squeryl-Record integration should be Record "dirty_?" field aware\nMany persistence frameworks (including Lift\'s Mapper, Lift\'s Mongodb-Record, ActiveRecord) track which fields have changed their values over record\'s lifetime since it was populated with data. This allows to reduce overhead when updating rows in database.\r\nThis also means that first value assignment should not set the "dirty_?" flag to true (so setFromAny shouldn\'t be called when the record is being populated for the first time ? or just use Empty value as blank one ?)\r\nThis also leaves a question what should be the policy of populating Optional*Fields from Record framework, since there\'s no information if a field was assigned before (not the case with non optional fields where Empty could mean that first assignment takes place)\r\n\r\nAs a note: Lift\'s Mapper fields also keep orgData (original data to track the changes, "protected def i_was_! = orgData")'
1257,'davewhittaker','Upgrade lift-squeryl-record to Squeryl 0.9.5\nNew jar for 0.9.5-final should be on maven central shortly.  Lift-squeryl-record for the new version is ready to go, just needs some testing and an update of the lift sbt plugin.'
1256,'','Record PasswordField fails with "empty password" error during sign_up when using MegaProtoUser\ncommit 8f1698a844217563b232c01d7b87db2180f7e075 appears to have introduced this problem. On hooking into a debugger I found that the error is due to the fact that  "validatedValue" is still set to empty string when PasswordTypedField->validate is called.\r\n\r\nSo, \r\noverride def set_!(in: Box[String]): Box[String] = {\r\n// can\'t be hashed here, because this get\'s called when setting value from database\r\n    in\r\n}\r\n\r\nshould be:\r\n\r\noverride def set_!(in: Box[String]): Box[String] = {\r\n// can\'t be hashed here, because this get\'s called when setting value from database\r\n    setPlain(in)\r\n    in\r\n}'
1255,'',"Allow overriding formats in MongoCaseClassField/ListField\nUse owner's formats, and change owner type to extend BsonRecord (OwnerType <: BsonRecord[OwnerType])"
1254,'','* More API documentation.\n** Mostly net.liftweb.http.js.*'
1253,'','"withFilter" method on the BaseResponse class\n[Copied from the mailing list](https://groups.google.com/forum/?fromgroups#!topic/liftweb/bcQon7uigL8):\r\n\r\nI\'m cleaning up deprecation warnings on the Apache ESME project. We have some old tests that use for-comprehensions with filters and these tests are resulting in deprecation warnings like the following:\r\n\r\n    [warn] /Users/esjewett/svn_repos/esme/trunk/server/src/test/scala/org/apache/esme/api/ApiTest.scala:95: `withFilter\' method does not yet exist on net.liftweb.http.testing.HttpResponse, using `filter\' method instead\r\n    [warn]         login <- post("/api/login", "token" -> "00000000") !@ "Login should have failed: bad token" if shouldnt(testSuccess(login))\r\n\r\nWould a "withFilter" method need to be added to the BaseResponse class in Lift, or is there maybe something that needs to be fixed on the ESMEs side that I\'m missing?\r\n\r\nInformation to recreate is below. \r\n\r\nOffending test file: http://svn.apache.org/viewvc/esme/trunk/server/src/test/scala/org/apache/esme/api/ApiTest.scala?view=markup\r\nSVN checkout URL: http://svn.apache.org/repos/asf/esme/trunk/server\r\nSBT command to recreate warnings: sbt clean test (tested with sbt 0.11.2)'
1252,'Shadowfiend','Add Req.ajax_? function to identify ajax requests.\nAjax requests are identified by looking for the X-Requested-With header to be set to “XMLHttpRequest”. This can be used for the purposes of, for example, deciding whether to render a layout based on the nature of the incoming request.'
1251,'fmpwizard',"Integrate LiftNamedComet into Lift\nAs discussed here\r\nhttps://groups.google.com/d/topic/liftweb/-gwez1cOo7A/discussion\r\nI'll be working on adding a simple way to have the same comet class on several browser tabs, but all using names so that only certain cometactors get the messages they need.\r\n"
1250,'fmpwizard',"HTTP OPTIONS verb support\nI'm using LIFT to serve a RESTful API, and I want this API to allow requests using CORS (Cross-Origin Resource Sharing) for POST. I do have CORS working with GET requests.\r\n\r\nI'm having trouble because cross-origin POSTs first call OPTIONS on the given URL, and LIFT does not support the OPTIONS verb yet. \r\n\r\nFull discussion and code at: https://groups.google.com/forum/?fromgroups#!topic/liftweb/-_oaYEHyxtU\r\n\r\nThanks!"
1249,'',"Add back code deleted in 380ccf0\nHi David,\r\n\r\nI think the fix to LiftServlet in 380ccf0 may have gone too far.  A ResponseShortcutException thrown from a stateful REST service gets thrown out the top of LiftServlet now.  This fixes it for me.  If this looks questionable, just yell, and I'll raise the issue on the list.\r\n\r\nPete\r\n\r\n"
1247,'jeppenejsum','Deprecate implicit conversion from MappedField[T] to T\n'
1246,'','Make ajaxEditable display a configurable ...loading... message instead o...\n...f soon-to-be-replaced content and forms.\r\n\r\najaxEditable is currently estranging users with wacky connections: They see a form, can start editing, only to see their work vanish and the form apparently resetting when the setAndSwap command comes through the slow connection.\r\n\r\nI found references #259 to touch this and wondered if I was talking about the same issue?\r\n\r\nCheers Lift!'
1244,'','* Added docs to most of the objects in n.l.builtin.snippet\nThis was my first run at adding docs to Lift. I hope you all like them :)'
1242,'lkuczera','Mailer subject encoding problem\nReference discussion:\r\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/HM5XQvHYsKc\r\n\r\nEmail subject encoding depends on platform encoding. Should default to UTF8. '
1241,'fmpwizard','Deprecate net.liftweb.builtin.snippet.A\nAs discussed here https://groups.google.com/d/topic/liftweb/cM8gXrHK3f0/discussion\r\n* Deprecate builtin.snippet.A\r\n** (As Jeppe suggested: "remove the definition from\r\nLiftRules.snippetDispatch and deprecate the class)\r\n* Replace any internal use of it for S.fmapFunc\r\n'
1239,'davewhittaker',"Record's BooleanField has broken tabindex\nReference discussion:\r\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/zaf3RUtAIWs\r\n\r\nnet.liftweb.record.field.BooleanField renders tabindex as tabIndex (camel case) - should be lowercase according to XHTML specification. "
1238,'','object HttpHelpers does not extend trait HttpHelpers\nWhen `import HttpHelpers._` I would expect to import `HttpHelper` methods.\r\n\r\n[Link to the source](https://github.com/lift/framework/blob/master/core/util/src/main/scala/net/liftweb/util/HttpHelpers.scala#L28)'
1235,'dpp','Transaction S.addAround is broken in some cases\nStateful REST support for transactions via S.addAround was broken (the exception was swallowed).\r\n\r\nPulling on the thread leads to failures in LiftRules.allAround as well.\r\n\r\nSee https://github.com/dpp/Lift-Mapper-Transaction-Test\r\n'
1234,'fmpwizard','Update documentation of Box\'s equals method\nHi,\r\n\r\nI\'m opening this ticket as requested by David Pollak in https://groups.google.com/forum/?fromgroups#!topic/liftweb/jJOEDEmzKIU\r\n\r\nThe request is to update the ScalaDoc for Box\'s equals method, to make it clearer that it\'s not symmetric. A suggestion: "Determines equality based upon the contents of this Box instead of the box itself; as a result, it is not symmetric. Take care when mixing Boxes and their values in collections."'
1233,'fmpwizard','Unify resource lookup using S.?? and S:.?\nDeprecate the use of S.?? and have all resources go through S.?\r\n\r\nCore resources should be searched last to give users opportunity to override\r\n\r\n'
1232,'fmpwizard','Cache resource lookup in production mode\nDoing many S.? lookups can become quite slow with many resource bundles'
282,'dpp',"MappedLongForeignKey::asJsonValue should generate JNull \nJNull instead of JInt(0) if the foreign key isn't pointing to anything.\r\n\r\nAs mentioned verbally this makes me think that MappedLongForeignKey should perhaps extend MappedNullableLong instead of MappedLong"
565,'jonifreeman','Custom JSON serialization fails with Date (and other primitives)\nhttp://groups.google.fi/group/liftweb/browse_thread/thread/83e5cc51c23f135f'
848,'jonifreeman',"Let the user configure name of the type hint field in JSON serialization\nWe currently use hard-coded name 'jsonClass'"
1131,'davewhittaker','Lift-Squeryl-Record throws an Exception when .associate is called\nSee: https://groups.google.com/d/topic/liftweb/SHqBVljq0kY/discussion'
140,'dpp','Make S.snippetForClass public\nAllow the registration by name of stateful snippets.\r\n\r\nAlso make the snippetName publicly readable in StatefulSnippet\r\n'
423,'dpp','It should not be possible to add several Locs that map to the same location\nExplanation here: http://groups.google.com/group/liftweb/browse_frm/thread/4a4ccace784a105b'
706,'dpp','Expand Snippet/Loc resolution mechanism\nSo, Typed Locs can:\n\nPass their parameters to the constructor of snippets:\n\nobject MyLoc extends Loc[User] ...\n\nclass MySnippet(user: User) {\n  def render ...\n}\n\nand:\n\nobject MyLoc extends Loc[User] {\n  object LocalSnippets extends LocSnippet {\n    def foo = "#foo" #> currentValue.name  // invocable as lift:foo\n  }\n}\n'
989,'dpp','Forms should execute onSubmit callback last\nSHtml.onSubmitImpl (called by onSubmit*) and submitButton should create a new S.formGroup for the callback, in analogous way to SHtml.submit() and SHtml.button().\n\nRelavent thread: http://groups.google.com/group/liftweb/browse_thread/thread/13dcfb3d5868810c .'
281,'pr1001',"Feature-request - Dynamic sorting of Javascript (tags and files) dependencies\nThis feature is extracted from a thread in the google group created by me: http://groups.google.com/group/liftweb/browse_thread/thread/34dc88d46001b2c\n\nI would like a way to tell Lift if a javascript file (or just script tag) is dependent of another one - this would allow lift to order the script-tags correctly \n\nExample: \nThe AutcoComplete widget adds the '/classpath/autocomplete/jquery.autocomplete.js' javascript file to the header - If I want to include a static JS file where I bind some JS functions to the autocomplete text-field I can't select it using it's class as the css selector unless my static file is loaded after the script-tag - This is because the class is added dynamically when the script-tag that calls the autocomplete method executes \n\nN.B: This is not really a big problem in my case because i can just select the text-field using another css selector, but i could imagine that in larger projects this would be a handy thing to have :) "
564,'jonifreeman','Custom JSON serialization fails if paranamer fails\nhttp://groups.google.fi/group/liftweb/browse_thread/thread/83e5cc51c23f135f\n'
847,'dpp','Add support for HtmlProperties with XHTML parser and HTML5 writer\nSupport built-in HtmlProperties which parses XHTML templates and writer HTML5 output.\n\nReference: http://groups.google.com/group/liftweb/browse_thread/thread/2152358ac7e88f96?hl=en#'
1130,'dcbriccetti','Add pan and zoom support to Flot widget\nAdd pan and zoom support to the Flot widget, and update the flot javascript files to version 0.7.'
139,'','Type safety enhancements for Loc\nAs discussed on the mailing list, it would be advantageous to:\r\n\r\n* Add a type parameter to the base LocParam trait to allow for safety in the association between typeful LocParam instances such as Title and the type parameter of the Loc.\r\n* Remove the overloading of "Param" that currently refers both to LocParam and the value associated with a Loc (potentially provided by a default or rewrite rule)\r\n* Add data-aware instances of If, Unless, and Template LocParams\r\n* Make LocParam a sealed trait with a well-defined extension point to help the compiler catch possible incomplete match statements.'
422,'jeppenejsum',"Add logging functions to Schemifier\nWith Log being deprecated, there's no easy to supply a logging function to Schemifier. Convenience methods should be added"
705,'dpp','Wiring -- create module\nCreate a module that allows you to wire together different cells and when input cells are changed, recalculate all dependent cells, automagically spilling any output to the browser on the next request (be that comet or be that ajax or be that page load).'
988,'eltimn',"net.liftweb.record.JDBCFieldFlavor.jdbcFriendly should return AnyRef\nReturning MyType in the jdbcFriendly method is not useful if MyType is a type JDBC doesn't understand.\nSee also <pre>\n  def jdbcFriendly : AnyRef\n</pre> in net.liftweb.mapper.BaseMappedField.\n\nhttp://groups.google.com/group/liftweb/msg/d7d8b9758dfc4f25"
280,'mariusdanciu'," Ajax forms and (multiple) submit buttons \nThe problem and proposed solution is described here:\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/75750c42ec3a2d7d\r\n\r\nBr's,\r\nMarius"
563,'','CalendarMonthView do not respect baseCSSClassName of CalendarItem.\nWhen using CalendarMonthView like the following code, the calendar widget will not respect the baseCSSClassName attribute, the CalendarItem is always use "calendarItem" as their CSS class.\n\n<pre><code>\nclass MySnippet {\n    def test (xhtml: NodeSeq) = {\n        val c    = Calendar.getInstance\n        val meta = MonthViewMeta (Calendar.SUNDAY, Locale.getDefault)\n\n        c.set (2010, 0, 0)\n\n        val tt = CalendarMonthView (c, meta, cals, Empty, Empty, Empty)\n        println (tt)\n\n        bind ("cal", xhtml, "widget" -> tt)\n    }\n\n    def cals = {\n        val c1 = Calendar.getInstance\n        val c2 = Calendar.getInstance\n\n        c1.set (2010, 0, 5, 10, 0)\n        c2.set (2010, 0, 6, 10, 0)\n\n        val calitem1 = CalendarItem ("4", c1, CalendarType.MEETING).\n                       optional (\n                           _.subject     ("Red Item"),\n                           _.description ("Background should be read")\n                       )\n\n        val calitem2 = CalendarItem ("5", c2, CalendarType.MEETING).\n                       optional (\n                           _.subject     ("Green Item"),\n                           _.description ("Background should be green"),\n                           _.baseCSSClassName ("greenItem")\n                       )\n\n\n        List (calitem1, calitem2)\n    }\n}\n\n</code></pre>\n\nIt\'s caused by calendarviews.js hard coded the css class to be "calendarItem" when adding CalendarItem to CalendarView.\n\nI\'ve created a patch to fix this problem.'
846,'','Flot widget does not support horizontal bars option\nThe Flot widget should support horizontal bars.  The Flot JavaScript library provides a "series.bars.horizontal" option for this purpose.  Here is an example from the Flot API.txt:\n\n\n<pre><code>series: {\n  bars: {\n    barWidth: number\n    align: "left" or "center"\n    horizontal: boolean\n  }\n}</code></pre>\n\nThe net.liftweb.widgets.flot.FlotBarsOptions trait does not provide any options other than barWidth.'
1129,'jeppenejsum','Add danish translation to core properties\n'
138,'','Lift should warn about unread RequestVars in dev mode\nThis should be relatively simple to add and may catch some logic errors'
421,'indrajitr','Move common dependencies from lift-base, lift-persistence, etc. into lift-parent\nObviously there are common dependencies like scala-library and junit that every module needs. Currently these are *repeatedly* defined in the aggregators lift-base, lift-persistence, etc.\nAdditionally many of these dependency declarations define the scope, what is *not necessary*, because the default scope is defined in the dependencyManagement section of lift-parent.\nI suggest to move the common dependencies to lift-parent.\n'
704,'dpp','Add some nifty methods to SHtml to allow for nicer binding of functions to inputs from CSS Selector Transforms\nIt\'d be super-nice to have a function that\'d take <input type="submit"/ class="my_cat"> and associate a function with it without messing with any of the attributes.'
987,'dpp','Exception in View should return 500 instead of 404\nExceptions in a View are currently silent and respond with a 404 HTTP status code.  If an Exception occurs in a View, a 500 HTTP status code should be returned and a stacktrace should be generated.\n\nQuote from David Pollak in Lift Mailing List thread ("404 instead of 500") regarding this issue:\n"If there\'s an exception processing the View, Lift moves on and tries to find another way to generate the template.  I think you\'re right that Lift should pass the Exception up the exception handling chain.  Can you open a ticket (http://ticket.liftweb.net you must be a watcher of the LiftWeb space on Assembla to open tickets) and assign it to me?"'
279,'jonifreeman','net.liftweb.json.JsonParser.extract failst with List[List[Int]]\nHi there,\r\n\r\nI wrote the following case class\r\n\r\n case class Creative(url:String,mimeType:String,countries:List[String],hours:List[List[Int]])\r\n\r\nwhich fails parsing this\r\n\r\n JsonParser.parse("""{"url":"pouet","mimeType":"kapouet","countries":["CA","US"],"hours":[[0,13],[17,24]]}"").extract[Creative]\r\n\r\nhowever, it succeeds with this\r\n\r\n case class Creative(url:String,mimeType:String,countries:List[String],hours:List[List[Int]])\r\nHi there,\r\n\r\nI wrote the following case class\r\n\r\n case class Creative(url:String,mimeType:String,countries:List[String],hours:List[List[Int]])\r\n JsonParser.parse("""{"url":"pouet","mimeType":"kapouet","countries":["CA","US"],"hours":[0,13,17,24]}"").extract[Creative]\r\n\r\nso it seems like extract doesn\'t like the List[List[Int]]\r\n'
562,'mariusdanciu','Boot failures should be safer\nPeople are sometimes seeing seeing NPE and it turns out that it is due to exceptions throws in boot.\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b1fea17eebf9f4ae\nhttp://groups.google.com/group/liftweb/browse_thread/thread/6886f975ed981c52/470bdf8401c1be6b?lnk=gst&q=NullPointerException#470bdf8401c1be6b\n\n\n'
845,'','Flot widget does not support tick formatting\nThe Flot widget does not support formatting ticks.  The Flot JavaScript library provides a "tickFormatter" option for customizing the axes.  \n\nAlternatively the "tick" option supports passing in a two-element array to map numeric ticks to a string to display as the label.  Here is an example from the the Flot API.txt:\n\n<pre><code>ticks: [[0, "zero"], [1.2, "one mark"], [2.4, "two marks"]]</code></pre>\n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/c89dcdef4389cd4d?hl=en# for reference.'
1128,'lkuczera','Enable sending emails using different custom properties during runtime\nCurrent implementation of Mailer loads custom properties on first access only.'
137,'dpp','Upgrade Specs & ScalaCheck to latest version\nTitle sez it all'
420,'dpp','Stateless JSON\nPer discussion on list, an example utilizing new Req.json features which simplify serializing forms to JSON for use in Ajax calls back to the server. '
703,'dpp','Add some simple MVC style helpers for Lift\nAdd some RestHelper style stuff to webkit to allow for code like:\n\nobject MVCTest extends MVCHelper {\n  serve {\n    case "index" :: Nil => \n\n    case "show_user" :: id :: _ =>\n      for {\n        user <- User.find(id)\n      } yield \n        "#name" #> user.email.toForm &\n        "#submit" #> SHtml.submit("Save", saveRedir(user, "/"))\n  }\n}\n'
986,'davewhittaker','Fragile field introspection in MetaRecord\nThere seems to be some unfortunate interaction between the magic the compiler performs statically to get some types working on the JVM and the magic MetaRecord performs at runtime via reflection that results in MetaRecord reporting some fields twice if you do anything moderatly fancy with the types of your fields, as discussed in\nhttp://groups.google.com/group/liftweb/browse_thread/thread/a221d485202db0fb'
278,'','Strip all the leading and trailing blank characters\nI saw the html source generated by the lift both in dev and production mode, there are many leading and trailing blank characters and new lines. I wish Lift can strip all these blank characters especially in production mode.\r\n\r\nOf course, there should be a switch which we can turn on or off this characteristic. Or just turn on this characteristic in production mode by default. Those leading and trailing blanks characters and new lines would be helpful for sometimes we need to check the generated html sources in dev mode.\r\n'
561,'dpp','OpenID error messages should be customizable\nSee:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/a48dffe43cf8314f'
844,'dpp','Emit warnings if CSS binding selector fails to parse\n'
1127,'jeppenejsum','Add emptyForBlank to StringHelpers\nDetails http://groups.google.com/group/liftweb/browse_frm/thread/6c09618a5cbfa205/cf0cbeb441821913'
136,'','PreCache and OrderBy not working for Derby\nThe following code using PreCache and OrderBy will cause the below exception on Derby 10.4.2.0\r\n\r\ndef upcoming(n: Int) = findAll(By_>(date, now),\r\n                                 PreCache(team1), PreCache(team2),\r\n                                 OrderBy(date, Ascending),\r\n                                 OrderBy(group, Ascending),\r\n                                 MaxRows(n))\r\n\r\nMessage: java.sql.SQLSyntaxErrorException: Syntax error: Encountered "ORDER" at line 1, column 213.\r\n\torg.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n\torg.apache.derby.client.am.SqlException.getSQLException(Unknown Source)\r\n\torg.apache.derby.client.am.Connection.prepareStatement(Unknown Source)\r\n\tnet.liftweb.mapper.DBLog$.prepareStatement(LoggingStatementWrappers.scala:75)\r\n\tnet.liftweb.mapper.DB$.prepareStatement(DB.scala:321)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1.apply(MetaMapper.scala:330)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1.apply(MetaMapper.scala:322)\r\n\tnet.liftweb.mapper.DB$.use(DB.scala:397)\r\n\tnet.liftweb.mapper.MetaMapper$class.findMapFieldDb(MetaMapper.scala:321)\r\n\tcom.weiglewilczek.kix.model.Team$.findMapFieldDb(Team.scala:29)\r\n\tnet.liftweb.mapper.MetaMapper$class.findMapDb(MetaMapper.scala:317)\r\n\tcom.weiglewilczek.kix.model.Team$.findMapDb(Team.scala:29)\r\n\tnet.liftweb.mapper.MetaMapper$class.findAll(MetaMapper.scala:283)\r\n\tcom.weiglewilczek.kix.model.Team$.findAll(Team.scala:29)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$dealWithPrecache$1.apply(MetaMapper.scala:250)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$dealWithPrecache$1.apply(MetaMapper.scala:229)\r\n\tscala.Iterator$class.foreach(Iterator.scala:414)\r\n\tscala.runtime.BoxedArray$AnyIterator.foreach(BoxedArray.scala:45)\r\n\tscala.Iterable$class.foreach(Iterable.scala:256)\r\n\tscala.runtime.BoxedArray.foreach(BoxedArray.scala:24)\r\n\tnet.liftweb.mapper.MetaMapper$class.dealWithPrecache(MetaMapper.scala:229)\r\n\tnet.liftweb.mapper.MetaMapper$class.findAll(MetaMapper.scala:283)\r\n'
419,'dpp','Potential deadlock issue\nMetaMapper def buildMapper(rs: ResultSet): (Int, Array[(ResultSet,Int,A) => Unit]) = synchronized { should not be globally synchronized, but should synchronized on columnNameToMappee during accesses to columnNameToMappee\n'
702,'dpp','Skip the <!DOCTYPE ...> tag at the beginning of an HTML file\nDescription sez it all'
985,'eltimn','Upgrade to mongo-java-driver 2.5.3\n'
277,'mariusdanciu','LiftRules.httpAuthProtectedResource change\nSee this thread: http://groups.google.com/group/liftweb/browse_thread/thread/4db2979a1893038f#\r\n\r\n'
560,'timperrett','Break out Mapper JDBC connection backend\nBreak out the JDBC connection stuff from Mapper into a reusable backend letting Record implementations use the connection handling goodness we already have in Lift. '
843,'migo','Comparing with fields of objects not retrieved in current Squeryl query results in NoSuchElementException\nval theOne = from(one)(o => where (o.idField === "one") select (o)).head \nval theMany = from(many)(m => where (m.oneId === theOne.idField) select(m))\n\nResults in the exception because the implicit conversion that happens in RecordModeType doesn\'t know what to do with fields that have not been instrumented.  Changing methods like:\n\nimplicit def long2ScalarLong(l: MandatoryTypedField[Long]) = \n    new SelectElementReference[LongType] (FieldReferenceLinker.takeLastAccessedFieldReference.get)(createOutMapperLongType) with NumericalExpression[Long]  \n\nto:\n\nimplicit def long2ScalarLong(l: MandatoryTypedField[Long]): \nNumericalExpression[LongType] = FieldReferenceLinker.takeLastAccessedFieldReference match { \n    case Some(n: SelectElement) => new SelectElementReference[LongType](n)(createOutMapperLongType) with NumericalExpression[LongType] \n    case None => new ConstantExpressionNode[LongType](l.is) with NumericalExpression[LongType] \n  } \n\nShould fix the problem.  See: http://groups.google.com/group/liftweb/browse_thread/thread/efdd957d216e5c7d/14fdd12f22a0c8e3#14fdd12f22a0c8e3'
1126,'dpp','Add flag to Menu.item that swallows the surrounding Elem \nThread:\n\nhttps://groups.google.com/forum/#!topic/liftweb/fMochIkolmU'
135,'dpp',"Flot Demo Broken\nI pulled dpp/liftweb today (last commit f29555d674943d9e7a6ae591668d0938192b6162) and tried to build the flot demo in lift-examples/flotDemo on github.com/dpp/liftweb. However, it won't compile because of the following errors:\r\nlift/lift-examples/flotDemo/src/main/scala/net/liftweb/flot_demo/web/\r\ncomet/FlotCometExample.scala:34: error: type mismatch;\r\n found   : net.liftweb.flot_demo.web.comet.FlotCometExample\r\n required: scala.actors.Actor\r\n    Sensor.acum !? AddListener(this) match {\r\n                               ^\r\nlift/lift-examples/flotDemo/src/main/scala/net/liftweb/flot_demo/web/\r\ncomet/FlotCometExample.scala:50: error: type mismatch;\r\n found   : net.liftweb.flot_demo.web.comet.FlotCometExample\r\n required: scala.actors.Actor\r\n    Sensor.acum ! RemoveListener(this)\r\n                                 ^\r\ntwo errors found\r\n\r\nI assume this is related to the switch of CometActor to LiftActor."
418,'dpp','Factory/FactoryMaker does not properly assign Request/Session var names\nhttp://groups.google.com/group/liftweb/browse_thread/thread/2341623ab8545473/\n\nSessionVar/RequestVar instances inside FactoryMaker are shared across all FactoryMakers.  This leads to "unpredictable" results.'
701,'indrajitr',"Remove Lift standalone installer\nNow that we have moved on to better ways to get started with Lift, and since the deployment landscape has evolved considerably, it's time to bid Lift standalone installer."
984,'eltimn','Empty objects don\'t deserialize properly in JObjectParser\n"If you have an empty JSON object ("foo": {}) in your MongoDB, you get \nback a JNothing instead of an empty JObject as expected."\n\nhttps://groups.google.com/d/msg/liftweb/tWv_vFEi10c/r8HtAgIjgfsJ'
276,'dpp','OAuth support\nPut code in the OAuth module'
559,'','Change FlotSerie to enable additional fields such as yaxis\nFlotSerie does not provide for putting data on second y axis.\nProposed FlotSerie:\n\n\n<pre><code>trait FlotSerie extends BaseFlotOptions\n{\n  def data: List[(Double, Double)] = Nil\n  def label: Box[String] = Empty\n  def lines: Box[FlotLinesOptions] = Empty\n  def points: Box[FlotPointsOptions] = Empty\n  def bars: Box[FlotBarsOptions] = Empty\n  def color: Box[Either[String, Int]] = Empty\n  def shadowSize: Box[Int] = Empty\n\n  def buildOptions = {\n    List(label.map(v => ("label", Str(v))),\n         lines.map(v => ("lines", v.asJsObj)),\n         points.map(v => ("points", v.asJsObj)),\n         bars.map(v => ("bars", v.asJsObj)),\n         color.map {\n           case Left(c) => ("color", Str(c))\n           case Right(c) => ("color", Num(c))\n         },\n         shadowSize.map(s => ("shadowSize", Num(s)))\n      )\n  }\n}\n\n</code></pre>\n\nThen using it in Flot:\n\n<pre><code>  def renderOneSerie(data: FlotSerie, idPlaceholder: String, idSerie: Int): JsObj = {\n    val info: List[Box[(String, JsExp)]] =\n      Full(("data", JsVar("data_"+idPlaceholder + "_" + idSerie))) ::\n      data.buildOptions\n    JsObj(info.flatten(_.toList) :_*)\n  }\n\n</code></pre>\n\nEnables user code such as:\n\n\n<pre><code>      series = new FlotSerie () {\n        override val label = Full(theDs.split("@")(0))\n        override val data = theDataMap(theDs)\n        val yaxis = Full (2)\n        override def buildOptions = {\n          yaxis.map( v => ("yaxis", Num(v))) ::\n          super.buildOptions\n        }\n      } :: series\n\n</code></pre>\n'
842,'dchenbecker',"MongoTestKit broken on machines not running MongoDB\nBuild breaks with an exception:\n\n\n<pre>\nRunning net.liftweb.mongodb.MongoDirectExamplesTest\norg.apache.maven.surefire.booter.SurefireExecutionException: null; nested exception is java.lang.ExceptionInInitializerError: null\njava.lang.ExceptionInInitializerError\n    at net.liftweb.mongodb.MongoDirectExamplesTest.<init>(MongoDirectExamples.scala:33)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at java.lang.Class.newInstance0(Class.java:355)\n    at java.lang.Class.newInstance(Class.java:308)\n    at org.specs.runner.JUnitSuiteRunner.testSuite(JUnitSuiteRunner.scala:37)\n    at org.specs.runner.JUnitSuiteRunner.run(JUnitSuiteRunner.scala:45)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)\n    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:120)\n    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:103)\n    at org.apache.maven.surefire.Surefire.run(Surefire.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)\n    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)\nCaused by: com.mongodb.MongoInternalException: DBPort.findOne failed\n    at com.mongodb.DBPort.findOne(DBPort.java:153)\n    at com.mongodb.DBPort.runCommand(DBPort.java:159)\n    at com.mongodb.DBTCPConnector.testMaster(DBTCPConnector.java:371)\n    at com.mongodb.Mongo.<init>(Mongo.java:167)\n    at com.mongodb.Mongo.<init>(Mongo.java:151)\n    at com.mongodb.Mongo.<init>(Mongo.java:141)\n    at net.liftweb.mongodb.MongoHost.<init>(Mongo.scala:62)\n    at net.liftweb.mongodb.MongoTestKit$class.$init$(MongoTestKit.scala:33)\n    at net.liftweb.mongodb.MongoDirectExamples$.<init>(MongoDirectExamples.scala:35)\n    at net.liftweb.mongodb.MongoDirectExamples$.<clinit>(MongoDirectExamples.scala)\n    ... 19 more\nCaused by: java.io.IOException: couldn't connect to [rocky.chen-becker.org/127.0.0.1:27017] bc:java.net.ConnectException: Connection refused\n    at com.mongodb.DBPort._open(DBPort.java:205)\n    at com.mongodb.DBPort.go(DBPort.java:85)\n    at com.mongodb.DBPort.findOne(DBPort.java:145)\n    ... 28 more\n</pre>\n"
1125,'eltimn','Add MongoRefListField\nThis would hold a list of ids (ObjectId, String, Int, Long, or UUID) and will have a function to retrieve all of the referenced records and cache them, the same way MongoRefField does.'
134,'dpp','Capture custom snippet context for ajax requests\nWhen rendering ajax requests, the normal SiteMap context is not available, which means dynamic snippets are not rendered. Details here:\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b43ce1948fc8d025#\r\n'
417,'dpp','More correct definition of MappedManyToMany.isJoinForChild\n'
700,'indrajitr','Enrich archetypes to take CLI parameter logBackend\nEnrich archetypes to take CLI parameter logBackend. This would enable doing mvn archetype:generate -DlogBackend=<foo>.\n\nFor now foo can be _logback_ or _log4j_, with _logback_ being default.'
983,'dpp','ajaxTexts created within a WiringUI do not work\nIf a WiringUI.apply() includes the instantiation of an SHtml.ajaxText object, the resulting ajaxText\'s call-back function is not registered in the function table.  The result is that ajax call-backs of the text element will not cause the function to execute.\n\nWhen discussed on the mailing list (see link below) dpp specifically said that this is because "the postPageJavaScript list is executed after the function table is loaded into the session, rather than before".\n\nmore information\n-----------------------\nliftweb group discussion: https://groups.google.com/group/liftweb/browse_thread/thread/a136b761470aa277\nrepro: https://github.com/davewhat/WiringUI-and-ajaxText-trouble'
275,'dpp','File handles retained during some operations\nDuring url.openConnection operations, the file handle is left open and that can cause IO Handle starvation.\r\n\r\nIn case it is helpful, I think you can reproduce the behavior by doing\r\nsomething like this:\r\n\r\n1. mvn jetty:run\r\n2. Figure out the pid for jetty\r\n3. Figure out how many file descriptors are open after startup using:\r\n     lsof | grep <pid> | wc -l\r\n4. Run a command like the one copied below to request the same file\r\nover and over.\r\n5. Run the lsof command line every few seconds to watch the FD count.\r\n\r\nSample command to fetch a file in a loop:\r\n\r\nwhile (`true`); do curl -H "If-Modified-Since: Tue, 29 Dec 2009\r\n20:02:16 UTC" -H "Cache-Control: max-age=0" http://localhost:8080/classpath/blueprint/screen.css;\r\ndone\r\n\r\nRunning this locally the FD count seems to fluctuate between the\r\nbaseline count and around 2x the baseline.  I would guess that might\r\nbe based on how frequently the garbage collector is running and\r\ncleaning up any connections that were not explicitly closed.\r\n\r\n'
558,'timperrett','Lift Machine clashes with Mapper helpers IdPk etc\nAs Machine is quite old code, it does not benefit from the helper traits that now exist in Lift. Update the composition so that when using IdPk etc it does not cause all manner of compile errors. \n\n'
841,'dchenbecker','Heap exhaustion on large file uploads with OnDiskFileParamHolder\nThis is caused by SHtml.fileUpload using the file member of FileParamHolder to determine length instead of delegating to the backing store.\n\nPer Maarten Koopmans:\n\n<pre><code>\nHi,\n\nI have tried uploading a large (1GB) file to Lift in both developer and\nproduction mode (i.e. set mode production in SBT). File was created by\n"mkfile 1024M 1GFile"\n\nMy SBT settings are:\n\njava -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=192m -Xmx1500M -jar\n`dirname $0`/sbt.jar "$@"\n\nI have set LiftRulers in Boot.boot to:\n\nLiftRules.maxMimeFileSize = 1173741824L\nLiftRules.maxMimeSize = 1273741824L\n //Make sure we don\'t put stuff in memory for uploads\nLiftRules.handleMimeFile = OnDiskFileParamHolder.apply\n\nAnd here\'s the upload snippet, that basically does nothing:\n\n   class TestUpload  {\n     var fileHolder : Box[FileParamHolder] = Empty\n      def uploader(xhtml: NodeSeq): NodeSeq = {\n bind("upload",xhtml,\n"loader" -> SHtml.fileUpload((f) => {fileHolder = new Full(f)}),\n "submit" -> SHtml.submit(S ? "Upload",() => {Console println("File\nuploaded! Path = "+cloudfiles.fullkey)})\n )\n\n}\n}\n\nAnd here\'s the output:\n\nMessage: java.lang.OutOfMemoryError: Java heap space\n        java.util.Arrays.copyOf(Arrays.java:2786)\n        java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94)\n        net.liftweb.util.IoHelpers$class.readOnce$2(IoHelpers.scala:99)\n        net.liftweb.util.IoHelpers$class.readWholeStream(IoHelpers.scala:103)\n        net.liftweb.util.Helpers$.readWholeStream(Helpers.scala:34)\n        net.liftweb.http.OnDiskFileParamHolder.file(Req.scala:159)\n        net.liftweb.http.SHtml$$anonfun$29.apply(SHtml.scala:1602)\n        net.liftweb.http.SHtml$$anonfun$29.apply(SHtml.scala:1602)\n        net.liftweb.http.S$BinFuncHolder.apply(S.scala:2350)\n        net.liftweb.http.S$ProxyFuncHolder.apply(S.scala:2332)\n        net.liftweb.http.LiftSession$$anonfun$buildFunc$1$1$$anonfun$apply$35.apply(LiftSession.scala:659)\n        net.liftweb.http.LiftSession$$anonfun$buildFunc$1$1$$anonfun$apply$35.apply(LiftSession.scala:659)\n        scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n        scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n        scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n        scala.collection.immutable.List.foreach(List.scala:45)\n        scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n        scala.collection.immutable.List.map(List.scala:45)\n        net.liftweb.http.LiftSession$$anonfun$buildFunc$1$1.apply(LiftSession.scala:659)\n        net.liftweb.http.LiftSession$$anonfun$16$$anonfun$apply$41.apply(LiftSession.scala:677)\n        net.liftweb.http.LiftSession$$anonfun$16$$anonfun$apply$41.apply(LiftSession.scala:677)\n        scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n        scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n        scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n        scala.collection.immutable.List.foreach(List.scala:45)\n        scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n        scala.collection.immutable.List.map(List.scala:45)\n        net.liftweb.http.LiftSession$$anonfun$16.apply(LiftSession.scala:677)\n        net.liftweb.http.LiftSession$$anonfun$16.apply(LiftSession.scala:666)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n\nWith just me testing (i.e. one concurrent user) this really scares me.\nYou\'d say that an OnDiskFileParamHolder simply uses smart buffering\nand that the data transfer itself would never cause more than a few MB\nfor the stream in terms of memory allocation.\n\nGoing through the source code, I see that Req.scala in\nnew.liftweb.http reads the temp file into a ByteArrayStream (see line\n159) which I think is causing the problems. Any thoughts? It looks\nlike a bug to me, or there is a very simple thing I am missing.\n\nThe functionality is kind of crucial to me, so if this is a bug,\nplease point me on how to test a modified lift repo against a sample\nproject locally, and how to contribute back (off-list is good, too).\n\n--Maarten \n</code></pre>\n'
1124,'jeppenejsum','add a method to Props to show which file was found\nas discussed in the group: [[url:https://groups.google.com/d/topic/liftweb/wXSk37hj7lQ/discussion|https://groups.google.com/d/topic/liftweb/wXSk37hj7lQ/discussion]]\n'
133,'dpp','In LoggingStatementWrappers, the wrong values are always returned\nthe proxy stuff in LoggingStatementWrappers returns the result of paramMap += rather than the result of chain.  The chain() call should always be the last in the block'
416,'dpp','ManyToMany should not prevent a child from being added twice\n'
699,'dpp','Make LiftScreen and Wizard stateful snippets\nScreen and Wizard as singletons seems to cause a lot of conceptual problems for developers.  Make them extend StatefulSnippet so they can run as instances as well as singletons'
274,'dpp',"Feature request: PCDataXmlParser flag to not convert entity references to utf-8\nFrom\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/4e33f1f2cdd02b35/352960c7974b5be3#352960c7974b5be3\r\n\r\n> > PCDataXmlParser converts entity references to actual utf-8\r\n> > characters.  This means templates with entity references won't round-\r\n> > trip correctly through view source, nor through localization\r\n> > properties files / gettext files.\r\n\r\n> Hmmm... is this worth a flag someplace to disable this behavior? \r\n\r\nThis would be extremely helpful to us, just submitting a ticket to make sure it's on the radar.\r\n\r\nI don't mind submitting an example, given some direction on the preferred approach"
557,'timperrett','Add detailed toString method to PaypalInfo\nIn order to more effectivly debug setting up of IPN handlers; add a detailed toString method for the PaypalInfo struct so that users can see by dumping the object to logger exactly what was supplied on the wire by paypal.com'
840,'migo',"Can't declare a squeryl index on a MandatoryTypedField unless it is of type Int\non(table)(t => declare(t.column is indexed)) results in:\n\ntype mismatch; \n[error]  found   : org.squeryl.internals.Indexed \n[error]  required: Int \n\nSee: http://groups.google.com/group/liftweb/browse_thread/thread/7236b335f4e017c0/f9fa68d4640c3937#f9fa68d4640c3937"
1123,'tuhlmann','Make Button of generated MegaProtoUser pages customizable\nThe button that is generated for the edit, change password, reset password oder register pages is not customizable.\nWe should put the button creation code in special, easy to override methods.'
132,'dlouwers','Add Ext Core support to Lift\nAdd Ext Core support to Lift'
415,'dpp','Rename ItemsListSpecs to InMemMapperSpecs\nThis way more test can be added that will only be run on e.g. H2MemoryProvider'
698,'dpp','Chrome 7 barf on comet tags that include lift:when = ...\nChrome 7 barfs on <div ... lift:when="0">...</div> even if the lift namespace is defined.'
981,'dpp','Replace addAround usage in hellwfbc example\n@examples/nuggets/hellofbc/src/main/scala/bootstrap/liftweb/Boot.scala@ uses @addAround@ to perform autologin based on a facebook id.  It should use @earlyInStateful@\n\nhttp://groups.google.com/group/liftweb/browse_frm/thread/86480a5616385dc2\n'
273,'aboisvert','Change getResourceAsStream() to doWithResource()\nAs discussed here:\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/a8b39ce2f003a912\r\n\r\nChange:  LiftRules.getResourceAsStream(name: String): Box[InputStream]\r\nTo: LiftRules.doWithResource[T](name: String)(f: InputStream => T): Box[T].\r\n'
556,'dpp',"Bug at OpenID's rawJUL2List\nSee: http://groups.google.com/group/liftweb/browse_thread/thread/9422167312ecfe4"
839,'dpp',"Make sure Lift's random number generators are thread-safe\nGo through all the places where Lift uses random number generators and make sure they are thread safe"
131,'dlouwers',"Add core dutch language files \nAdd core nl_NL language file. Will also add as default nl language file since nl_BE isn't available."
414,'','Converting a null String to an empty String\nWould be nice to have something like _def stringNullTest(s: String): String = if (s != null) s else ""_ in order to have null Strings converted to empty Strings. Needful for e.g. SHtml.text.'
697,'jonifreeman','\\uffff is a valid char in JSON string literal\nCurrently this fails to parse:\n\n{ "x" : "\\uffff" }\n'
272,'','CRUDify menu item\nCurrently the List All from the CRUD menu is unusable when there are too many columns in the database table.  CRUDify should allow user to select  which columns to display on the List All page.\n\n\n'
555,'dpp','HelloDarwin does not run: Location Hello1.1 defines a duplicate link\nTook  HelloDarwin on 2010-06-18:\ngit clone http://github.com/dpp/liftweb.git\nAnd compile/run:\n\\liftweb\\examples\\hellodarwin> mvn -Dmaven.test.skip=true -Djetty.port=8084 jetty:run\n\nhttp://localhost:8084/ Gives:\nException occured while processing /\nMessage: net.liftweb.sitemap.SiteMapException: Location Hello1.1 defines a duplicate link List(helloStatic)\n\tnet.liftweb.sitemap.SiteMap.addLoc(SiteMap.scala:52)'
838,'bwmcadams','Update MongoDB Java Driver to 2.4\nThe MongoDB Java Driver needs to be updated to the latest stable release of 2.4.  There are significant performance and bug fixes available in this release, especially with regards to connection pools in large deployments.\n\nNo code changes needed, just explicit version update.'
1121,'jeppenejsum','MappedBoolean sets "dirty" incorrectly\nThe issue is described here: http://groups.google.com/group/liftweb/browse_thread/thread/57bc7c44ec78cb2b\n'
413,'dpp','fixHtml is a security vulnerability\nThe JavaScript util fixHtml introduces a security vulnerability such that externally generated markup could trigger server-side code execution.\n\nTo fix this:\n\n* Change fixHtml to fixHtml_! and document the vulnerability (this will break any user code that uses the method)\n* Create alternatives to existing methods/classes that use this call (e.g., SetHtml)... one for trusted input and one for not-trusted input and deprecate existing methods/classes\n\n\n\n'
696,'jonifreeman','Performance degradation in JSON compact rendering\nThis change which fixed a StackOverflowError caused a performance hit:\n\nhttp://github.com/dpp/liftweb/commit/4eb365470d9a519b2c8e9826916d99d90eb54065#L0L441\n'
130,'dpp','Migrate XMPP stuff to Lift Actors\nTitle sez it all'
979,'dpp','Creating Different Menus with Menu.builder\nExample of Issue : [[url:https://groups.google.com/d/topic/liftweb/tsFYg30j-9U/discussion|Lift Mailing List]] \n\nBeing able to easily discriminate menus when using the Menu.builder snippet in order to create different menus which contain different groups of links.'
271,'','<lift:Msgs showAll="true"/> not working with ajax form submit\nAfter an ajax form submit, if there are validation errors reported for specific element ids, they are not shown after an ajax response.\r\n\r\nSee the related discussion:\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e25d86a24a5266a2'
554,'','ItemsListSpecs not compiling on 2.8\nThe initialization order semantics have changed in 2.8.\nSee http://groups.google.com/group/liftweb/msg/426807ad7d5ad854 (the thread URL is http://groups.google.com/group/liftweb/browse_thread/thread/49b22adde9ee6cb1/426807ad7d5ad854 )\n'
837,'eltimn','Improve lift-mongodb-record & lift-mongodb performance\nThere are several inefficiencies in the current lift-mongodb-record code mostly associated with findAll, in which multiple iterations are invoked when only one is needed.  This is causing unnecessary memory usage as well as performance degradation especially with larger datasets.\n\nIt is primarily caused by a Java object implementing two conflicting interfaces which caused an ambiguity in JavaConversions.  The path chosen to fix it was to add some extra conversions & iterations.  Instead, it proves significantly more performant to explicitly annotate the Java object with a specific type and let JavaConversions do its thing.'
412,'mariusdanciu',"lift:lazy-load  doesn't work properly with ajaxSelect\nThis thread discsusses the problem: http://groups.google.com/group/liftweb/browse_thread/thread/9c417ad34ed8d55"
695,'dpp','Review designer friendly and add bind by css selectors\nRevise the designer friendly mechanism to define snippets in the class attribute e.g. <div class="foo lift:bar?baz=dog?type=moose"><span id="meow">Meow</span></div>\n\nRevise the lift:desigener_friendly tag to look for the id specified in the attribute value.\n\nsupport: nodes <: ".foo" -> "bar"\n'
129,'dpp','DB Connections should only be acquired when needed\nDetails here: \r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c97a6dd9ab29b0ed#\r\n'
978,'dpp','Add helpers to snapshot and pass objects in request parameters\nAccordingly to discussion [[url:https://groups.google.com/d/topic/liftweb/vPkJ9m0SqlI/discussion|Passing objects with RequestVar via GET request]]\n\n*dpp:*\nPersonally, I\'d do this with RequestVars rather than with SessionVars because that gives you scope over the variables (they\'re good for the scope of a single request rather than for the entire session).\n\nSo, if you\'ve got a couple of RequestVars, you can do the following:\n\n<pre><code>    object rv1 extends RequestVar...\n    object rv2 extends RequestVar...\n\n    def snapshot(): () => Unit = {\n      val v1 = rv1.get\n      val v2 = rv2.get\n      () => {rv1.set(v1); rv2.set(v2)}\n    }\n\n    def buildCallbackURL(baseURL: String): String = S.fmapFunc(snapshot())(key => Helpers.appendFuncToURL(baseURL, key +"=_"))\n</code></pre>\nThe snapshot method creates a function that will restore the RequestVars to the state that they had when it was called.  The buildCallbackURL method takes a base URL (built using whatever mechanism you choose) and appends the restore function to it.  When that URL is hit on the server, the RequestVars will be restored and away you go.\n\n*nafg:*\nNeat code! Maybe it would be useful to have a generalization in the library?\n1. def snapshot(rvs: RequestVar*): ()=>Unit\n2. def urlWithState(baseUrl: String, state: ()=>Unit)'
270,'timperrett','Update AMQP dependencies to use RabbitMQ 1.7\nhttp://groups.google.com/group/liftweb/browse_thread/thread/6dc472109006079b'
553,'hoffrocket','change mongo-java-driver version to 2.0\nchange <version/> to 2.0 in resources/lift-parent/pom.xml\n\n- no code changes'
836,'jeppenejsum','Upgrade Blueprint CSS to 1.0\n'
1119,'jonifreeman','Parse empty string to JsonAST.JNothing \nWe can support extract[Option[A]] if parse(" ") returns JNothing.\n'
411,'','MappedLongForeignKey should call primeObj in apply(v: O) and apply(v: Box[O])\n'
694,'dchenbecker','Add \'show\' to reserved MySQL keywords in mapper\nWhen deploying to stax.\nLift version:2.1\nSeems like \'show\' should be added to reserved keywords and column named "show_c"\nAfter overriding dbColumnName works like a charm. Stacktrace:\n\nINFO - CREATE TABLE linklist (userid BIGINT UNSIGNED , position INTEGER , id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE KEY , title VARCHAR(200) , show BOOLEAN , description LONGTEXT)  ENGINE = InnoDB \nERROR - Failed to Boot! Your application may not run properly\ncom.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'show BOOLEAN , description LONGTEXT)  ENGINE = InnoDB\' at line 1\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:406)\n\tat com.mysql.jdbc.Util.getInstance(Util.java:381)\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1030)\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1936)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2060)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2536)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)\n\tat com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:734)\n\tat org.apache.tomcat.dbcp.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)\n\tat net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$maybeWrite(Schemifier.scala:165)\n\tat net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$ensureTable(Schemifier.scala:175)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$1.apply(Schemifier.scala:75)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$1.apply(Schemifier.scala:75)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:123)\n\tat scala.collection.immutable.List.foldLeft(List.scala:45)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:75)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:69)\n\tat net.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:585)\n\tat net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tat net.liftweb.mapper.DB$currentConn$.run(DB.scala:572)\n\tat net.liftweb.mapper.DB$.use(DB.scala:582)\n\tat net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:68)\n\tat net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:51)\n\tat bootstrap.liftweb.Boot.boot(Boot.scala:32)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:361)\n\tat net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:359)\n\tat net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:1496)\n\tat net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:1496)\n\tat net.liftweb.common.Full.map(Box.scala:398)\n\tat net.liftweb.http.DefaultBootstrap$.boot(LiftRules.scala:1496)\n\tat net.liftweb.http.provider.HTTPProvider$class.bootLift(HTTPProvider.scala:75)\n\tat net.liftweb.http.LiftFilter.bootLift(LiftServlet.scala:586)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$class.init(ServletFilterProvider.scala:40)\n\tat net.liftweb.http.LiftFilter.init(LiftServlet.scala:586)\n\tat org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:295)\n\tat org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:422)\n\tat org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:115)\n\tat org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3838)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4488)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:785)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)\n\tat org.apache.catalina.startup.Embedded.start(Embedded.java:825)\n\tat com.staxnet.appserver.TomcatServerBase.startContainer(TomcatServerBase.java:120)\n\tat com.staxnet.appserver.TomcatServerBase.start(TomcatServerBase.java:190)\n\tat com.staxnet.appserver.SnazAppServer.main(SnazAppServer.java:89)'
128,'indrajitr',"Streamline and enrich project build models (pom.xml)\nInitial action items to start with:\r\n\r\n1. Cleanup and document (inline) the various pom.xml starting with the top level pom.xml\r\n\r\n2. Make better use of <dependencyManagement/> and <pluginManagement/> and have much smaller pom.xml OOTB.\r\n\r\n3. Use Maven's model hierarchy and transitive dependencies. Prefer version range for dependencies\r\n\r\n4. Ensure consistent sourceEncoding (default to UTF-8)"
269,'mariusdanciu','Clean up contextPath handling\n\r\nSee thread: http://groups.google.com/group/liftweb/browse_thread/thread/14946826454c0833'
552,'dpp','save an edited db-record which has a custom primary key -> Trying to open an empty Box\nThread:\nhttp://groups.google.com/group/liftweb/browse_frm/thread/960ced8f30a0ee2\n\nCode:\nhttp://github.com/JoKie/bug.liftweb.custom.primary.key\n\nException:\njava.lang.NullPointerException: Trying to open an empty Box\n        at net.liftweb.common.EmptyBox.open_$bang(Box.scala:463)\n        at net.liftweb.common.EmptyBox.open_$bang(Box.scala:459)\n        at net.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:809)\n        at net.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:804)'
835,'jeppenejsum','Upgrade jQuery to 1.4.4\n'
1118,'eltimn','Make MongoMetaRecord.useColl as public and move up to MongoMeta\nhttps://groups.google.com/d/topic/liftweb/gMgex0ewAXE/discussion\n\n"useColl should definitely be public. It should also be moved up to MongoMeta, so MongoDocument can use it as well." -- Tim Nelson'
410,'jonifreeman','StackOverflowError in JSON Serializer with large Lists\nWhen trying to serialize a large (1600 items) List[Double] with the JSON Serializer, i get a StackOverflowError:\n\nException in thread "main" java.lang.StackOverflowError\n\tat scala.text.DocCons.<init>(Document.scala:22)\n\tat scala.text.Document.$colon$colon(Document.scala:32)\n\tat net.liftweb.json.JsonAST$.punctuate(JsonAST.scala:339)\n\tat net.liftweb.json.JsonAST$.punctuate(JsonAST.scala:339)\n\tat net.liftweb.json.JsonAST$.punctuate(JsonAST.scala:339)\n\tat net.liftweb.json.JsonAST$.punctuate(JsonAST.scala:339)\n                  ...................'
693,'dpp','Mapper does not let you use Strings as primary key\'s\nMapper (pretty sure it\'s Mapper, anyway) does not let you use strings as primary keys.\n\nmodel/Thing.scala\n\n<pre><code>package example.model\n\nimport net.liftweb.mapper.{MappedString, MappedStringIndex, KeyedMapper, KeyedMetaMapper}\nimport java.util.UUID\n\nobject Thing extends Thing with KeyedMetaMapper[String, Thing] {\n  override def dbTableName = "things"\n  override def beforeCreate = List((thing: Thing) => {\n    thing.thing_id(UUID.randomUUID().toString())\n    println("\\n\\n\\n[thing creation] " + thing.thing_id.writePermission_? + " <> " + thing.thing_id + "\\n\\n\\n")\n    ()\n  })\n}\n\nclass Thing extends KeyedMapper[String, Thing] {\n  def getSingleton = Thing\n  def primaryKeyField = thing_id\n\n  object thing_id extends MappedStringIndex(this, 36) {\n    override def writePermission_? = true\n  }\n\n  object name extends MappedString(this, 64)\n}\n</code></pre>\n\nPart of Boot.scala\n\n<pre><code>class Boot {\n  def boot {\n    LiftRules.addToPackages("example")\n    DB.defineConnectionManager(DefaultConnectionIdentifier, DBVendor)\n    Schemifier.schemify(true, Log.infoF _, DefaultConnectionIdentifier, Thing)\n    val entries = Menu(Loc("Home", List("index"), "Home")) :: Menu(Loc("Things", List("things"), "Things")) :: Nil\n    LiftRules.setSiteMap(SiteMap(entries:_*))\n  }\n}\n</code></pre>\n\nsnippet/Things.scala\n\n<pre><code>\npackage example.snippet\n\nimport example.model.Thing\nimport xml.NodeSeq\nimport net.liftweb.http.{SHtml, S}\nimport net.liftweb.util.Helpers\nimport Helpers._\n\nclass Things {\n  def create(xhtml: NodeSeq): NodeSeq = {\n    var name = ""\n\n    def processCreate() {\n      Thing.create.name(name).save\n      S.redirectTo("/")\n    }\n\n    bind("thing", xhtml, "name"   -> SHtml.text(name, name = _),\n                         "submit" -> SHtml.submit("Save", processCreate))\n  }\n}\n</code></pre>\n\ncreation message and error:\n\n<pre><code>\n[thing creation] true <> 3bb30f3f-f582-4cf3-a3ba-6e2c2adf0a51\nERROR - Exception being returned to browser when processing /things: Message: org.postgresql.util.PSQLException: ERROR: null value in column "thing_id" violates not-null constraint\n\torg.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)\n\torg.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)\n\torg.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)\n\torg.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)\n\torg.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)\n\torg.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:273)\n\tnet.liftweb.mapper.PostgreSqlDriver$$anonfun$performInsertWithGenKeys$2.apply(Driver.scala:267)\n\tnet.liftweb.mapper.PostgreSqlDriver$$anonfun$performInsertWithGenKeys$2.apply(Driver.scala:265)\n\tnet.liftweb.mapper.DB$$anonfun$runPreparedStatement$2.apply(DB.scala:557)\n\tnet.liftweb.mapper.DB$$anonfun$runPreparedStatement$2.apply(DB.scala:556)\n\tnet.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:326)\n\tnet.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tnet.liftweb.mapper.DB$.runPreparedStatement(DB.scala:555)\n\tnet.liftweb.mapper.DB$.prepareStatement(DB.scala:498)\n\tnet.liftweb.mapper.PostgreSqlDriver$.performInsertWithGenKeys(Driver.scala:264)\n\tnet.liftweb.mapper.DriverType.performInsert(Driver.scala:81)\n\tnet.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:882)\n\tnet.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:804)\n\tnet.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:579)\n\tnet.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tnet.liftweb.mapper.DB$currentConn$.run(DB.scala:566)\n\tnet.liftweb.mapper.DB$.use(DB.scala:576)\n\tnet.liftweb.mapper.MetaMapper$class.save(MetaMapper.scala:803)\n\texample.model.Thing$.save(Thing.scala:6)\n\tnet.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:90)\n\tnet.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:90)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.mapper.Safe$.runSafe(Safe.scala:45)\n\tnet.liftweb.mapper.Mapper$class.runSafe(Mapper.scala:56)\n\texample.model.Thing.runSafe(Thing.scala:15)\n\tnet.liftweb.mapper.Mapper$class.save(Mapper.scala:89)\n\texample.model.Thing.save(Thing.scala:15)\n\texample.snippet.Things.processCreate$1(Things.scala:14)\n\texample.snippet.Things$$anonfun$create$2.apply(Things.scala:19)\n\texample.snippet.Things$$anonfun$create$2.apply(Things.scala:19)\n\tnet.liftweb.http.S$NFuncHolder$$anonfun$apply$57.apply(S.scala:2204)\n\tnet.liftweb.http.S$NFuncHolder$$anonfun$apply$57.apply(S.scala:2204)\n\tscala.List.map(List.scala:812)\n\tnet.liftweb.http.S$NFuncHolder.apply(S.scala:2204)\n\tnet.liftweb.http.S$ProxyFuncHolder.apply(S.scala:2129)\n\tnet.liftweb.http.LiftSession$$anonfun$buildFunc$1$2.apply(LiftSession.scala:388)\n\tnet.liftweb.http.LiftSession$$anonfun$12$$anonfun$apply$28.apply(LiftSession.scala:404)\n\tnet.liftweb.http.LiftSession$$anonfun$12$$anonfun$apply$28.apply(LiftSession.scala:404)\n\tscala.List.map(List.scala:812)\n\tnet.liftweb.http.LiftSession$$anonfun$12.apply(LiftSession.scala:404)\n\tnet.liftweb.http.LiftSession$$anonfun$12.apply(LiftSession.scala:393)\n\tscala.List.flatMap(List.scala:1132)\n\tnet.liftweb.http.LiftSession.runParams(LiftSession.scala:392)\n\tnet.liftweb.http.LiftSession.processRequest(LiftSession.scala:586)\n\tnet.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:285)\n\tnet.liftweb.http.LiftServlet$$anonfun$3.apply(LiftServlet.scala:188)\n\tnet.liftweb.http.LiftServlet$$anonfun$3.apply(LiftServlet.scala:188)\n\tnet.liftweb.http.S$.net$liftweb$http$S$$wrapQuery(S.scala:1042)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$26.apply(S.scala:1182)\n\tnet.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:979)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1180)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$.net$liftweb$http$S$$_nest2InnerInit(S.scala:1179)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$29$$anonfun$apply$30$$anonfun$apply$31$$anonfun$apply$32.apply(S.scala:1205)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$.withReq(S.scala:1214)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$29$$anonfun$apply$30$$anonfun$apply$31.apply(S.scala:1204)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$29$$anonfun$apply$30.apply(S.scala:1203)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$29.apply(S.scala:1202)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1201)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$.net$liftweb$http$S$$_innerInit(S.scala:1200)\n\tnet.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43.apply(S.scala:1254)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41$$anonfun$apply$42.apply(S.scala:1253)\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:329)\n\tnet.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n\tnet.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41.apply(S.scala:1252)\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:329)\n\tnet.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n\tnet.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$39$$anonfun$apply$40.apply(S.scala:1251)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$39.apply(S.scala:1250)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$$anonfun$_init$1.apply(S.scala:1249)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.S$._init(S.scala:1248)\n\tnet.liftweb.http.S$.init(S.scala:887)\n\tnet.liftweb.http.LiftServlet.doService(LiftServlet.scala:187)\n\tnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tnet.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:326)\n\tnet.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tnet.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:335)\n\tnet.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n\tnet.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:85)\n\tnet.liftweb.http.LiftServlet.service(LiftServlet.scala:96)\n\tnet.liftweb.http.provider.HTTPProvider$$anonfun$service$3.apply(HTTPProvider.scala:61)\n\tnet.liftweb.http.provider.HTTPProvider$$anonfun$service$3.apply(HTTPProvider.scala:61)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.URLRewriter$.doWith(Req.scala:618)\n\tnet.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:60)\n\tnet.liftweb.http.LiftFilter.service(LiftServlet.scala:586)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$class.protected$service(ServletFilterProvider.scala:67)\n\tnet.liftweb.http.LiftFilter.protected$service(LiftServlet.scala:586)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$1.apply(ServletFilterProvider.scala:67)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$1.apply(ServletFilterProvider.scala:62)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:335)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:334)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10.apply(Vars.scala:333)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9.apply(Vars.scala:332)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tnet.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:335)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:334)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10.apply(Vars.scala:333)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9.apply(Vars.scala:332)\n\tnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tnet.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n\tnet.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\n\tnet.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:586)\n\torg.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\n\torg.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\n\torg.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\torg.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\torg.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\n\torg.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)\n\torg.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\torg.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\torg.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\torg.mortbay.jetty.Server.handle(Server.java:326)\n\torg.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\torg.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:938)\n\torg.mortbay.jetty.HttpParser.parseNext(HttpParser.java:755)\n\torg.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)\n\torg.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\torg.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)\n\torg.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n</code></pre>\n'
127,'indrajitr','Restructuring Lift Codebase\nFollowing up on the restructuring proposal initially put up [1] and the subsequent second round [2] summing up the discussion in [1] and [2], split the codebase broadly into:\r\n\r\n- lift-base (lift-common, lift-util, lift-json, lift-actor,lift-webkit)\r\n- lift-persistence (lift-mapper, lift-record, lift-jpa)\r\n- lift-modules (all other packages excluding examples and archetypes)\r\n- lift-archetypes\r\n- lift-examples\r\n- lift-varia (installer, presentations etc.)\r\n\r\n[1]: http://groups.google.com/group/liftweb/browse_thread/thread/13a073827306367e/c8025de7aba7cb6c\r\n[2]: http://groups.google.com/group/liftweb/browse_thread/thread/e26e765b9c991a2b/5bd9a5e0b5278083'
268,'dpp','Misc SiteMap enhancements\nEnhance Menu to disable the expansion of child menus and to select a "menu level"\r\n\r\nAllow top-level "/" rather than "/index"'
551,'','OSGi metadata broken for lift-util\nDue to a [[url:http://http://github.com/bnd/bnd/issues/#issue/14|bug]] in the (old) BND version used by the Maven Bundle plugin the superfluous package _org.joda.time.base_ is imported. Only _org.joda.time_ is used by Lift and _org.joda.time.base_ must not be imported, because it is not an API package (not exported by joda-time).'
834,'','Redirection after login not working properly (User.loginFirst)\nI\'m almost sure that this is a bug:\n\nWhen using the LocParam User.loginFirst, Lift sets the URI to a SessionVar called *loginRedirect*.  In the login() function, the loginRedirect SessionVar is read inside a anonymous function that is executed by the *logUserIn* method.\n\nThe problem is that the method *logUserIn* destroys the Session before executing the method, and therefore the loginRedirect var is always empty when executing the redirection.\n\n<pre><code>\ndef login = {\n    if (S.post_?) {\n      S.param("username").\n      flatMap(username => findUserByUserName(username)) match {\n        case Full(user) if user.validated_? &&\n          user.testPassword(S.param("password")) => {\n            logUserIn(user, () => {\n              S.notice(S.??("logged.in"))\n\n              val redir = loginRedirect.is match {                // ALWAYS EMPTY. SHOULD BE DEFINED IN AN OUTER SCOPE.\n                case Full(url) =>\n                  loginRedirect(Empty)\n                url\n                case _ =>\n                  homePage\n              }\n              S.redirectTo(redir)\n            })\n          }\n\n        case Full(user) if !user.validated_? =>\n          S.error(S.??("account.validation.error"))\n\n        case _ => S.error(S.??("invalid.credentials"))\n      }\n    }\n\n</code></pre>\n\n\n\n'
1117,'eltimn','Add update method in MongoRecord\nhttps://groups.google.com/d/topic/liftweb/gMgex0ewAXE/discussion\n\n<pre><code>\n  def update: Unit = runSafe {\n    val fields = this.allFields.filter(_.dirty_?)\n    meta.update(\n      this,\n      fields.foldLeft(BasicDBObjectBuilder.start) {\n        (builder, field) => builder.add(field.name, field.get)\n      }.get\n    )\n    fields.foreach {\n      _.resetDirty\n    }\n  }\n</code></pre>\n'
409,'','Updated lift-core_pl.properties for Lift 2.0\nI am attaching polish properties for lift.\nThe file is based on the latest source codes checked out today from git (lift 2.0 beta).\n\nPlease update the resource file in repo.'
126,'dpp','S.deleteCookie broken in M6\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c50bd250dce62ea'
975,'dpp','NPE from SHtml.ajaxTextElem when passed a field with null value\nIf SHtml.ajaxTextElem is passed a settable that happens to have a null value, then later on when the html is generated a NPE is raised. I\'ve pasted in below the email I originally sent about this. The easy fix is trivial, but I suspect there may be a more systematic issue with .get and nulls.\n\n-----\n\n\nHi,\n\nI got a NPE from lift. I\'m building up a form, and one of the inputs is constructed with:\n\n".personContactEmail *" #> SHtml.ajaxTextElem(p.contactEmail)\n\nNow, the contactEmail field may be null if the person has not set their contact email. If I go into the db and replace nulls with "", then the form builds without the NPE. So, it looks like SHtml.ajaxTextElem is buggy with null field values. The implementation looks like this:\n\n def ajaxTextElem(settable: Settable{type ValueType = String}, attrs: ElemAttr*): Elem =\n    ajaxText(settable.get, (b: String) => {settable.set(b); Noop}, attrs :_*)\n\nSo, it\'s the .get call that\'s injecting the null that later causes the crash. I suppose to work around this, .get needs to be wrapped in a null check so that on null it returns "" (the empty string). Clearly, from the design of mapped fields, null is among the expected return values since the DB can legitimately return null, and in the absence of a .getOption or .getBox, the null case must be handled explicitly. In addition, lift mapper is putting null values into the DB (or letting them default to null) when new fields are added to existing data, so the nulls really can\'t be easily avoided.\n\nShould I open a ticket?\n\nFor now, my kludge is to check the field before I build that bit of form, and if it is null, set it to "". However, this artificially makes objects dirty, and pushes these empty strings down towards the DB, which isn\'t a good thing.\n\nThanks,\n\nMatthew\n\n12:57:50.874 [202418621@qtp-884667566-41] ERROR net.liftweb.http.LiftRules$$anon$1 - Exception being returned to browser when processing /people/Matthew_Pocock: Message: java.lang.NullPointerException\n        scala.xml.NodeSeq.iterator(NodeSeq.scala:51)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n        scala.xml.NodeSeq.map(NodeSeq.scala:43)\n        scala.xml.NodeSeq.text(NodeSeq.scala:152)\n        net.liftweb.util.SelectorMap.slurpAttrs(BindHelpers.scala:2278)\n        net.liftweb.util.SelectorMap.net$liftweb$util$SelectorMap$$treatElem(BindHelpers.scala:2307)\n        net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2369)\n        net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2367)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.util.SelectorMap.net$liftweb$util$SelectorMap$$treatElem(BindHelpers.scala:2331)\n        net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2369)\n        net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2367)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.util.SelectorMap.apply(BindHelpers.scala:2363)\n        net.liftweb.util.CssBind$class.apply(BindHelpers.scala:2388)\n        net.liftweb.util.CssBindImpl.apply(BindHelpers.scala:2444)\n        net.liftweb.util.CssBindImpl.apply(BindHelpers.scala:2444)\n        scala.Function1$$anonfun$andThen$1.apply(Function1.scala:48)\n        uk.co.turingatemyhamster.contented.snippet.People$$anonfun$editCurrent$1.apply(People.scala:40)\n        uk.co.turingatemyhamster.contented.snippet.People$$anonfun$editCurrent$1.apply(People.scala:33)\n        net.liftweb.common.Full.map(Box.scala:478)\n        uk.co.turingatemyhamster.contented.snippet.People.withPerson(People.scala:17)\n        uk.co.turingatemyhamster.contented.snippet.People.editCurrent(People.scala:33)\n        sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        java.lang.reflect.Method.invoke(Method.java:597)\n        net.liftweb.util.ClassHelpers$$anonfun$net$liftweb$util$ClassHelpers$$_invokeMethod$2$$anonfun$apply$8.apply(ClassHelpers.scala:318)\n        net.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:46)\n        net.liftweb.util.Helpers$.tryo(Helpers.scala:34)\n        net.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:84)\n        net.liftweb.util.Helpers$.tryo(Helpers.scala:34)\n        net.liftweb.util.ClassHelpers$$anonfun$net$liftweb$util$ClassHelpers$$_invokeMethod$2.apply(ClassHelpers.scala:318)\n        net.liftweb.util.ClassHelpers$$anonfun$net$liftweb$util$ClassHelpers$$_invokeMethod$2.apply(ClassHelpers.scala:318)\n        scala.collection.Iterator$$anon$19.next(Iterator.scala:369)\n        scala.collection.Iterator$class.find(Iterator.scala:679)\n        scala.collection.Iterator$$anon$19.find(Iterator.scala:367)\n        net.liftweb.util.ClassHelpers$class.net$liftweb$util$ClassHelpers$$_invokeMethod(ClassHelpers.scala:319)\n        net.liftweb.util.ClassHelpers$class.invokeMethod(ClassHelpers.scala:238)\n        net.liftweb.util.Helpers$.invokeMethod(Helpers.scala:34)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88$$anonfun$apply$91.apply(LiftSession.scala:1571)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88$$anonfun$apply$91.apply(LiftSession.scala:1568)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1568)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1482)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1481)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processSnippet(LiftSession.scala:1481)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1678)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1666)\n        net.liftweb.util.NamedPF.apply(NamedPartialFunction.scala:36)\n        net.liftweb.util.NamedPF$.apply(NamedPartialFunction.scala:82)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1767)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1766)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.withAttrs(S.scala:1997)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1751)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1763)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.IndexedSeqLike$Elements.foreach(IndexedSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1778)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.IndexedSeqLike$Elements.foreach(IndexedSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1778)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1766)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1766)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.withAttrs(S.scala:1997)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1751)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1763)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1778)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$render$1$$anonfun$apply$2.apply(WithParam.scala:40)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$render$1$$anonfun$apply$2.apply(WithParam.scala:37)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$render$1.apply(WithParam.scala:37)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$render$1.apply(WithParam.scala:36)\n        net.liftweb.common.Full.flatMap(Box.scala:480)\n        net.liftweb.builtin.snippet.WithParam$.render(WithParam.scala:36)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$dispatch$1$$anonfun$apply$1.apply(WithParam.scala:31)\n        net.liftweb.builtin.snippet.WithParam$$anonfun$dispatch$1$$anonfun$apply$1.apply(WithParam.scala:31)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1507)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1482)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1481)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processSnippet(LiftSession.scala:1481)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1678)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1666)\n        net.liftweb.util.NamedPF.apply(NamedPartialFunction.scala:36)\n        net.liftweb.util.NamedPF$.apply(NamedPartialFunction.scala:82)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1767)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1766)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.withAttrs(S.scala:1997)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1751)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1763)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1778)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2$$anonfun$apply$3.apply(Surround.scala:40)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2$$anonfun$apply$3.apply(Surround.scala:39)\n        net.liftweb.util.AnyVarTrait$class.doWith(AnyVar.scala:233)\n        net.liftweb.util.AnyVar.doWith(AnyVar.scala:89)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2.apply(Surround.scala:39)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1$$anonfun$apply$2.apply(Surround.scala:37)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1.apply(Surround.scala:37)\n        net.liftweb.builtin.snippet.Surround$$anonfun$render$1.apply(Surround.scala:36)\n        net.liftweb.common.Full.flatMap(Box.scala:480)\n        net.liftweb.builtin.snippet.Surround$.render(Surround.scala:36)\n        net.liftweb.builtin.snippet.Surround$$anonfun$dispatch$1$$anonfun$apply$1.apply(Surround.scala:31)\n        net.liftweb.builtin.snippet.Surround$$anonfun$dispatch$1$$anonfun$apply$1.apply(Surround.scala:31)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1507)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86$$anonfun$apply$88.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83$$anonfun$apply$86.apply(LiftSession.scala:1485)\n        net.liftweb.common.EmptyBox.openOr(Box.scala:561)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.LiftSession$$anonfun$27$$anonfun$apply$83.apply(LiftSession.scala:1484)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1482)\n        net.liftweb.http.LiftSession$$anonfun$27.apply(LiftSession.scala:1481)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processSnippet(LiftSession.scala:1481)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1678)\n        net.liftweb.http.LiftSession$$anonfun$_defaultLiftTagProcessing$1.apply(LiftSession.scala:1666)\n        net.liftweb.util.NamedPF.apply(NamedPartialFunction.scala:36)\n        net.liftweb.util.NamedPF$.apply(NamedPartialFunction.scala:82)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1767)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96$$anonfun$apply$97.apply(LiftSession.scala:1766)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.withAttrs(S.scala:1997)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95$$anonfun$apply$96.apply(LiftSession.scala:1765)\n        net.liftweb.http.S$class.doSnippet(S.scala:2207)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1$$anonfun$apply$95.apply(LiftSession.scala:1764)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$processOrDefer(LiftSession.scala:1751)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1763)\n        net.liftweb.http.LiftSession$$anonfun$processSurroundAndInclude$1.apply(LiftSession.scala:1758)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n        scala.collection.Iterator$class.foreach(Iterator.scala:631)\n        scala.collection.IndexedSeqLike$Elements.foreach(IndexedSeqLike.scala:52)\n        scala.collection.IterableLike$class.foreach(IterableLike.scala:79)\n        scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n        scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n        scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n        net.liftweb.http.LiftSession.processSurroundAndInclude(LiftSession.scala:1758)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$47$$anonfun$apply$48.apply(LiftSession.scala:986)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$47$$anonfun$apply$48.apply(LiftSession.scala:983)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$47.apply(LiftSession.scala:983)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1$$anonfun$apply$47.apply(LiftSession.scala:982)\n        net.liftweb.common.Full.map(Box.scala:478)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:981)\n        net.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:981)\n        net.liftweb.util.AnyVarTrait$class.doWith(AnyVar.scala:233)\n        net.liftweb.util.AnyVar.doWith(AnyVar.scala:89)\n        net.liftweb.http.LiftSession.processTemplate(LiftSession.scala:980)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49$$anonfun$apply$50$$anonfun$apply$53.apply(LiftSession.scala:1078)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49$$anonfun$apply$50$$anonfun$apply$53.apply(LiftSession.scala:1078)\n        net.liftweb.common.EmptyBox.or(Box.scala:563)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49$$anonfun$apply$50.apply(LiftSession.scala:1077)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49$$anonfun$apply$50.apply(LiftSession.scala:1077)\n        net.liftweb.util.StackableMaker$class.doWith(Maker.scala:141)\n        net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\n        net.liftweb.util.StackableMaker$class.doWith(Maker.scala:135)\n        net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49.apply(LiftSession.scala:1076)\n        net.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$49.apply(LiftSession.scala:1072)\n        net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$checkStatelessInSiteMap(LiftSession.scala:1016)\n        net.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1072)\n        net.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1070)\n        net.liftweb.common.EmptyBox.or(Box.scala:563)\n        net.liftweb.http.LiftSession.processRequest(LiftSession.scala:1070)\n        net.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:396)\n        net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:263)\n        net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:263)\n        net.liftweb.http.S$class.net$liftweb$http$S$$wrapQuery(S.scala:1357)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$34.apply(S.scala:1505)\n        net.liftweb.http.S$class.net$liftweb$http$S$$doAround(S.scala:1286)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1503)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.net$liftweb$http$S$$_nest2InnerInit(S.scala:1502)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41.apply(S.scala:1541)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$withReq$1.apply(S.scala:1551)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.withReq(S.scala:1550)\n        net.liftweb.http.S$.withReq(S.scala:48)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40.apply(S.scala:1540)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39.apply(S.scala:1539)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38.apply(S.scala:1538)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1537)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.net$liftweb$http$S$$_innerInit(S.scala:1536)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47$$anonfun$apply$48.apply(S.scala:1574)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47.apply(S.scala:1572)\n        net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:538)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(S.scala:1571)\n        net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:538)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45.apply(S.scala:1570)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44.apply(S.scala:1569)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1.apply(S.scala:1568)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.S$class.net$liftweb$http$S$$_init(S.scala:1567)\n        net.liftweb.http.S$class.init(S.scala:1171)\n        net.liftweb.http.LiftServlet.doSession$1(LiftServlet.scala:262)\n        net.liftweb.http.LiftServlet.doService(LiftServlet.scala:272)\n        net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:122)\n        net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:121)\n        net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:344)\n        net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n        net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:363)\n        net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n        net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:121)\n        net.liftweb.http.LiftServlet.service(LiftServlet.scala:132)\n        net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:68)\n        net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:68)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.URLRewriter$.doWith(Req.scala:1228)\n        net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:67)\n        net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:67)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:63)\n        net.liftweb.http.LiftFilter.service(LiftServlet.scala:722)\n        net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n        net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:544)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:543)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:542)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:541)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:540)\n        net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n        net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:544)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:543)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:542)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:541)\n        net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n        net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:540)\n        net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\n        net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:722)\n        org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\n        org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\n        org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\n        org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)\n        org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        org.mortbay.jetty.Server.handle(Server.java:326)\n        org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)\n        org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n        org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n        org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\n        org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n'
267,'dpp','Lift needs to explicitly close streams\nhttp://groups.google.com/group/liftweb/browse_thread/thread/4e33f1f2cdd02b35/9c2a0c247aca9dd3?hl=en&lnk=gst&q=+Setting+ulimit+%22fixes%22+#9c2a0c247aca9dd3'
550,'','Templates without suffix are not found in 2.0-RC1 (Regression)\nTemplates without suffix are not found after commit 58ba68a3cc (Fix for #264 and some other minor things) removed the empty string from the list of suffixes in src/main/scala/net/liftweb/http/LiftSession.scala (component framework/lift-base/lift-webkit). \n \nTo reproduce create a new project and rename src/main/webapp/index.html to src/main/webapp/index (without ".html").\n \nThis is a bug as "Lift tries several sufﬁxes (html, xhtml, htm, and no sufﬁx)" (from "Exploring Lift", 3.6 "Templates") which is fixed by simple re-adding the empty string to the list of suffixes.'
833,'','Paginator for Crudify\nAt the moment Crudify is using a custom pagination where in other parts of Lift\'s code Paginator is being used. There are couple of benefits of using Paginator for Crudify\n-standardized pagination across different features (users have to have the same look and feel)\n-localized strings already provided for Paginator\n-code reuse (i.e. at the moment the Crudify pagination to mark the current offset uses "first" parameter where Paginator uses "offset". The naming should be consistent)\n\nI\'ve added screenshots of the existing implementation view and the suggested one. There is also a patch for adding Paginator (still I kept the "first" param to be backwards comp., If you think it can be changed please change it)'
1116,'jeppenejsum','Non-default MappedDecimal fields are always marked dirty\n'
408,'dpp','Add equals and hashCode to IdPK trait\nMy model classes mix-in *IdPK* and have the following boiler-plate for _equals_ and _hashCode_:\n<pre><code>\nclass Team extends LongKeyedMapper[Team] with IdPK {\n  ...\n  override def equals (other : Any) = other match {\n    case t : Team if t.id.is == this.id.is => true\n    case _ => false\n  }\n  override def hashCode = this.id.is.hashCode\n}\n</code></pre>\n\nI recommend that this implementation should be a part of the IdPK trait.\n\nSee the [[url:http://groups.google.com/group/liftweb/browse_thread/thread/49d942723999182a|discussion]].\n'
691,'dpp','n.l.r.f.EmailField.emailPatter n is broken\ndpp says: We should move both regexs into ProtoRules or someplace where they can be shared between Mapper and Record as well as mutated by the users. \n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/9fe361f6cc03a50b'
125,'dpp',"DB.runQuery isn't ConnectionIdentifier-aware \nTitle says it all"
974,'eltimn','record.Field.setBox calls the wrong function to check write permission\nThe checkCanWrite_? should be canWrite_?:\n<pre><code>\n   def setBox(in: Box[MyType]): Box[MyType] = synchronized {                                                                                                                                          \n     needsDefault = false                                                                                                                                                                             \n     data = in match {                                                                                                                                                                                \n       case _ if !checkCanWrite_? => Failure(noValueErrorMessage) \n...\n</code></pre>\n\nOh, and the name checkCanWrite_? is different from the name of the analogous function in Mapper.\nIt might be worthwhile to change it, since renaming now cannot break working code.'
266,'dpp','H2 & Jetty do not play well when Jetty reloads code\nhttp://groups.google.com/group/liftweb/browse_thread/thread/dd2f48174c9916ef/94a886c12e2f16d3?hl=en#94a886c12e2f16d3'
549,'dpp','Calls to HTTP methods in HttpResponse fail\nIn Lift it is currently not possible to call get, post, delete, etc. on an instance of TestFramework\'s HttpResponse. To demonstrate, this is what I get on the console:\n\n<pre><code>\n<console>:8: error: no implicit argument matching parameter type (String, org.apache.commons.httpclient.HttpClient, org.apache.commons.httpclient.HttpMethodBase) => login.ResponseType was found.\n       object MyTest extends TestKit { val baseUrl = ""; for (login <- post("/whatever"); next <- login.get("/bla")) {} }\n                                                                                                        ^\n</code></pre>\n\nIt seems that the implicit responseCapture doesn\'t play well with the self type. This is what I get when I provide the capture explicitly:\n\n<pre><code>\n<console>:8: error: type mismatch;\n found   : net.liftweb.http.testing.Response\n required: login.ResponseType\n       object MyTest extends TestKit { val baseUrl = ""; for (login <- post("/whatever"); next <- login.get("/bla")(responseCapture)) {} }\n                                                                                                                    ^\n</code></pre>\n\nThis makes it impossible to use the same session as the previous request, at least in the way it was done before.\n\nIs there a way to do it at all, as a workaround?'
1115,'jeppenejsum','DB Object getting JNDI connection doesnt work\nHello. I try to use Lift 2.4-M4 Scala 2.9.1. \n\nIn Boot.scala i add such code: \n\nDefaultConnectionIdentifier.jndiName = "jdbc/db" \n    logger.warn("JNDI connection available (manyally) ? " + (((new \nInitialContext).lookup("java:/comp/env/jdbc/ \ndb").asInstanceOf[DataSource]) != null)) \n    logger.warn("JNDI connection available (lift) ? " + \nDB.jndiJdbcConnAvailable_?) \n\nAnd in logs i see: \n\n10:56:55.531 [main] WARN  bootstrap.liftweb.Boot - JNDI connection \navailable (manyally) ? true \n10:56:55.546 [main] WARN  bootstrap.liftweb.Boot - JNDI connection \navailable (lift) ? false \n10:56:55.718 [ForkJoinPool-1-worker-2] INFO \no.a.sshd.common.util.SecurityUtils - BouncyCastle not registered, \nusing the default JCE provider \n2011-09-12 10:56:55.953:INFO:oejs.AbstractConnector:Started \nSelectChannelConnector@0.0.0.0:8080 STARTING \n\nTherefore i cannot use jndi with DB object. Can anyone suggest \nworkaround or said where i can be wrong? \n\nFor me problems in two methods: \n\n def jndiJdbcConnAvailable_? : Boolean = { \n    try { \n      ((new InitialContext).lookup("java:/comp/ \nenv").asInstanceOf[Context].lookup(DefaultConnectionIdentifier.jndiName).asInstanceOf[DataSource].getConnection) ! \n= null \n    } catch { \n      case e => false \n    } \n  } \n\nAnd \n\nprivate def newConnection(name: ConnectionIdentifier): SuperConnection \n= { \n    ... \n        val conn = (new InitialContext).lookup("java:/comp/ \nenv").asInstanceOf[Context].lookup(name.jndiName).asInstanceOf[DataSource].getConnection \n     .... \n    ret.setAutoCommit(false) \n    ret \n  } \n\nForgot to add that i use xsbt 0.10.1 and Jetty 8 from Eclipse. I test \nJNDI with java web application and it works. \n\nI test application on Oracle Application Server 11g and get such logs:\n\nJNDI connection available (lift) ? true\nJNDI connection available (manyally) ? true\n\nWith glassfish 3.1 i get such results:\n\nJNDI connection available (manyally) ? - instead of this i got exception\n\nJNDI connection available (lift) ? false \n\nFor glassfish need to lookup in such way:\n\nContext ctx = new InitialContext();\nDataSource ds = (DataSource)ctx.lookup("jdbc/sample");'
407,'mariusdanciu','JsCmds/JqJsCmds API normalization\nDetails are here: http://groups.google.com/group/liftweb/browse_thread/thread/ac570b8e0b15ebf2?hl=en_US'
690,'dpp','implement FuncBoxBindParam\nSo this works:\n\ndef foo(xhtml: NodeSeq): Box[NodeSeq] = { ..... } \nbind("xxx", xhtml,  "foo", foo _)\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/5d8df9da1a4b6827'
124,'dpp','Default archetype ConnectionManager implementation is broken\nThe DBVenvdor generated by the archetypes seems broken.\r\n\r\nDetails here: http://groups.google.com/group/liftweb/msg/de430a256aad5a15\r\n'
973,'eltimn',"Add self type to LifecycleCallbacks trait\nSeveral people, including me, have tried to use the trait on a Record when it is meant for Fields.\n\nThere's also some code in MetaRecord that checks for the trait on an instance of a Record. This should be removed.\n\nhttps://groups.google.com/d/topic/liftweb/G4U14pQbZZ4/discussion"
265,'mariusdanciu','UriNotFound - enable rendering of templates in the normal pipeline\nMy use case: I\'d like to design a regular lift template (using surround, sitemap, head merge etc) and have Lift show it to the user when it can\'t find any match/handler for a given URL.  Other requirements: the status code returned should be 404, and the url should not change.  This is to avoid the soft-404 issue as described by google: http://googlewebmastercentral.blogspot.com/2008/08/farewell-to-soft-404s.html\n\nAs of Lift 1.1-M8, there doesn\'t appear to be a simple mechanism to render a template and show it to the user while still returning a 404 status code and not using a redirect.\n\nSee Marius\'s proposal in this thread:  http://groups.google.com/group/liftweb/browse_thread/thread/4a9806a63419644f\n\n1. In LiftRules instead of:\n\ntype URINotFoundPF = PartialFunction[(Req, Box[Failure]),\nLiftResponse]\n\nuse\n\ntype URINotFoundPF = PartialFunction[(Req, Box[Failure]), Either[List\n[String], LiftResponse]]\n\nso that function can return a template path instead of response.\n\n2. In LiftSession#processRequest instead of applying the normal\nrequest pipeline only if the addressed template is found, we can use\nthe path obtained from LiftRules.uriNotFound if Lift fails to find the\nnormal tempalte. Hence apply the normal rendering pipeline to the\ntemplate referenced by uriNotFound.\n\nThis approach allows your 404 case to be handled by the normal\nrendering pipeline without other hacks.\n\nUnless someone thinks this is a bad solution, Alex you could open an\nissue and I\'ll work on it. "'
548,'hoffrocket',"Remove package private access modifier on TransientRequestVar\nTransientRequestVar is currently private, but would be nice if it wasn't"
831,'dpp','Integrate Stambecco code into Lift\nEnhance the Lift Actor package based on the Stambecco code base including remote actors.'
406,'dpp',"Create/Init a LiftSession from outside a Lift-handled request\nThis feature is extracted from a thread in the google group created by me: http://groups.google.com/group/liftweb/browse_thread/thread/9145dc69db8a4bf1\n\nI would like to be able to create/init a LiftSession from outside a Lift-handled request and make sure that the same LiftSession is available when accessing the Lift parts of my app\n\nExample (attached):\nThe attached application is a modification of the Hello World archetype with an additional /hello servlet.\n\n# When visiting the http://localhost:8080/hello servlet FIRST, the servlet displays the session Id, creates a LiftSession, and logs a user in.  Subsequent refreshes of the page do NOT maintain the user's logged in state.\n# Then, when visiting the Lift app at http://localhost:8080 SECOND, the index page shows the same session ID, but the user is not logged in.\n# After accessing the Lift app, the servlet is able to access the existing LiftSession and successfully log the user in (or determine that the user was logged in from the Lift app)\n\nsample login -- user: username=user; email=user@user.com; password=password;"
689,'dchenbecker','Refactor S.attrs and S.currentAttrs to share a single datastore\nCurrently S.attrs and S.currentAttrs represent similar functionality (attributes on snippet tags), but have independent backing stores. This leads to confusion about which setter to use, etc. \n\nSee this thread for more discussion:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/149aedb9faeb9447#'
123,'',"Enhance Msgs snippet to optionally show all messages\nThe _Msgs_ built-in snippet will only display messages NOT related to a particular field. This makes using some of the _ProtoUser_'s templates a tough job, e.g. for editing the user or changing the password, because these will bring up errors with and without relation to fields.\n\nThis change will add an optional attribute _showAll_ to the _Msgs_ element which lets _Msgs_ display all messages if set to _true_.\n"
972,'jeppenejsum','Add calcDefaultHref to Loc\nTo complete createDefaultLink'
264,'mariusdanciu',"Ajax function coming from Comet is not invoked\n\r\nDiscussions thread:http://groups.google.com/group/liftweb/browse_thread/thread/a9be0de0fa72d377?hl=en#\r\n\r\n\r\nBr's,\r\nMarius"
547,'dpp','maxConcurrentRequests not honored\nThe mechanism for maxConcurrentRequests is not being honored:\n\n* Make maxConcurrentRequests browser dependent\n* Re-enable the consultation of maxConcurrentRequests for comet request termination\n\n'
830,'dpp','LiftRules setting for SessionVar/RequestVar out of scope behavior\nA LiftRules setting for behavior on out of scope access (read/write) of SessionVars, RequestVars, etc.\n\nSee https://groups.google.com/d/topic/liftweb/N_oKENixWf8/discussion'
1113,'dpp','XML interpolation in NodeSeq does not have access to the S context\nDetails here http://groups.google.com/group/liftweb/browse_frm/thread/6aa58331e3137243/9075d185e0dd045f'
405,'mariusdanciu','SetValueAndFocus should not be in JqJsCmds\nSetValueAndFocus does not depend on JQuery thus it should be in JsCmds as it does not depend on JQuery'
688,'dchenbecker',"Add Sybase SQL Anywhere DriverType\nI tried connecting to an existing Sybase SQL Anywhere and got the exception below.  I had a look at the DriverType source, and it should be easy to add SQL Anywhere support.  I've looked at the SQL Anywhere docs, and a SQL Anywhere driver type can be implemented exactly the same as SqlServerPre2005Driver.  If you can add this, I can test it out.  \n\nThanks, Brett\n\njava.lang.Exception: Lift mapper does not support JDBC driver (SQL Anywhere,10,0)"
122,'dpp','StatefulSnippets generate invalid markup\n&lt;form action="/login" method="post">&lt;input name="F288627493176EX5" type="hidden" value="true" />\n\nThat &lt;input/> should go inside a &lt;div>'
971,'dpp','csssel composition with & behaves unexpectedly\nCSS selector transforms sometimes silently fail to do what I expected when joined with the & operator, but start behaving again if linked by andThen. Could the reasons for this be documented so that I know when to use one form and when to use the other? Perhaps there are common use patterns where this behaviour is both confusing and avoidable.'
263,'dpp','Mistake in tag order in the tutorial\nIn listing 12 in the tutorial, the <lift:TD.list> should be inside the <div id="all_todos"> so that upon ajax re-draw the div doesn\'t get duplicated. \r\n\r\nSee also the discussion:\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/2fb6bad85f6906d8/517d357355146566?lnk=raot#517d357355146566\r\n'
546,'indrajitr','Escape velocity filtering for inline maven variables in archetypes\nEscape velocity filtering for maven variables in pom.xml. They should resolve as lazily as possible.\n\nSee: http://groups.google.com/group/liftweb/browse_thread/thread/54e9023c150e666b'
1112,'pbrant',"Form.ajax doesn't copy onsubmit attribute from template to generated html\nIn Form.ajax there is a problem with copying onsubmit, postsubmit and class attribute to generated form element.\n\nhttps://groups.google.com/d/topic/liftweb/1n9qDpVGopE/discussion"
404,'Dridus','lift-couchdb: JSONField that encodes an enumeration by its name rather than ID\nThe current one encodes as a JInt, but Craig needs one that encodes as a JString containing the value.\n'
121,'dpp',"MetaMegaProtoUser.loginFirst should handle query params in the requested URI\nPer Naftoli, it currently just uses S.uri, which won't include query params."
970,'jonifreeman',"Lift-JSON: Problem with custom serializer for parametrized type\nI tried to create serializer for Seq type. My test case:\n\nval seq = Seq(1,2,3)\nval serseq = Extraction.decompose(seq)\nval seq2 = Extraction.extract[Seq[Int]](serseq)\n\nand my serializer:\n\n\nclass SeqFormat extends Serializer[Seq[_]]{\n  val SeqClass = classOf[Seq[_]]\n\n  def serialize(implicit format: Formats) = {\n    case seq: Seq[_] => JArray(seq.toList.map(Extraction.decompose))\n  }\n\n  def deserialize(implicit format: Formats) = {\n    case (TypeInfo(SeqClass, parameterizedType), JArray(x)) => {\n      //?\n    }\n  }\n}\n\nThe problem is that parameterizedType is always None (instead of Some(Int) or something like that) and I don't know what is the required type of Seq elements."
262,'dpp','Make it easier to use lift-json JsValue with JsonResponse\n'
545,'dpp','JsonResponse(JValue, Int) ignores specified Int; always returns 200 OK\nJsonResponse.apply(JValue, Int) will always result in a Response that has a 200 HTTP status code, regardless of the Int specified at call time.\n\n\ne.g. JsonResponse(JNull, 404) will result in a HTTP response of: HTTP/1.1 200 OK\n\nThis is not consistent with other LiftResponse types.\n\nFor example, XmlResponse(Text("hello world"), 404) will result in: HTTP/1.1 404 Not Found; the expected result.'
828,'dpp','Adding query parameters to Sitemap menus\nIt would be great if we could add query parameters to the items on each menu generated by Sitemap\nThis is my use case:\n\nWhen I am on this page:\nhttp://127.0.0.1:8080/agent-details?v=2.3.4.00   (which correspond to the "Agent Details" menu item).\n\nI\'d like the "Main" menu item to link to:\n\nhttp://127.0.0.1:8080/main?v=2.3.4.00\n\nthat is, add the "?v=2.3.4.00" to the link generated by the Sitemap.\n\nThe idea is that you can click on the other menu items, and the menu knows which "product/ version number/ etc" it is supposed to show you.\n\nFor more details see\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/ee14b05b152fd2f9\n\n'
1111,'pbrant','Posible CSS Selector regression \nDifference in CSS transform behaviour on attribute between 2.9.0-1/2.4-M4 and 2.4-M3\nClass attribute is being added instead of replaced in some but not all elements. ( Using Html5Properties -- maybe irrelevant )\n\nRef: http://groups.google.com/group/liftweb/browse_thread/thread/c47929b035a3020d/120f7a2230b2dbc6?hl=en&lnk=gst&q=css+selector+transforms+unexpected+behavior#120f7a2230b2dbc6\n\nTest snippet snippet\n  def test = {\n    //class replace on tr and td elem. acts like a [class+] on tr elem in M4\n    val m: Map[Integer,String] = Map((1,"a"),(2,"b")) //just to have something to trigger the behaviour, data is not used\n    "tbody *" #> ( "tr" #> m.map(n => ".even [class]" #> Text("odd") ) )\n  } \n\n2.4-M4 css transform result\n<table>\n<tbody>\n<tr class="odd even">                                              <<=====M4 is adding \'odd\' attr instead of replacing \'even\' with \'odd\' (as in M3)\n<td class="odd">v1</td><td class="odd">v2</td>  <<=====On the td class attr it works fine\n</tr><tr class="odd even">\n<td class="odd">v1</td><td class="odd">v2</td>\n</tr>\n</tbody>\n</table>\n\n2.4-M3 result \n<table>\n<tbody>\n<tr class="odd">\n<td class="odd">v1</td><td class="odd">v2</td>\n</tr><tr class="odd">\n<td class="odd">v1</td><td class="odd">v2</td>\n</tr>\n</tbody>\n</table> \n\ntemplate html5 code \n<table class="lift:Test.test">\n<tbody>\n<tr class="even">\n<td class="even">v1</td><td class="even">v2</td>\n</tr>\n</tbody>\n</table> \n\n\n'
403,'Dridus','lift-couchdb: Field types using JSONEncodedStringMixin compile but give AbstractMethodError due to type erasure fumble\nJSONBinaryField, JSONDateTimeField, and JSONDecimalField are affected. This occurs because the Scala compiler does not properly notice that encode and decode on those classes is implementing the abstract encode and decode on the JSONEncodedStringMixin and so must be erased from Array[Byte], Calendar, BigDecimal to Object. So, the JSONEncodedStringMixin methods are compiled targetting encode(Ljava/lang/Object;)Ljava/langString; when the methods are compiled as encode(Ljava/util/Calendar;)Ljava/util/String;\n'
120,'dpp',' net.liftweb.widgets.autocomplete in version 1.1-M6 \nhttp://groups.google.com/group/liftweb/browse_thread/thread/7c65834caf270d83'
969,'','lift-mapper maven dependency\nThis has been fixed in lift-2.2, but now it shows up again. Is it caused by removing parent pom?\n\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <version>1.2.147</version>\n            <scope>runtime</scope>\n            *<optional>true</optional>*\n        </dependency>\n        <dependency>\n            <groupId>org.apache.derby</groupId>\n            <artifactId>derby</artifactId>\n            <version>10.7.1.1</version>\n            <scope>runtime</scope>\n            *<optional>true</optional>*\n        </dependency>\n\nIf there is no "optional" defined, they will be packed into war file. This is definitely not what we want.\n\nI have to exclude them explicitly:\n\n    <dependency>\n      <groupId>net.liftweb</groupId>\n      <artifactId>lift-mapper_2.8.1</artifactId>\n      <version>2.3</version>\n      <exclusions>\n        <exclusion>\n          <groupId>com.h2database</groupId>\n          <artifactId>h2</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.apache.derby</groupId>\n          <artifactId>derby</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n'
544,'dpp','TestFramework throws NullPointerException on empty body\nAfter the last refactoring of TestFramework (http://github.com/dpp/liftweb/commit/fff1da253aeff07c26c705fbc3327e021947edd5) it throws a NullPointerException when an empty body is constructed. The reason for this is that the new implicit creates an HttpResponse using "readWholeStream(getter.getResponseBodyAsStream)" and HttpMethodBase\'s contract is to return null when the body is not available. As a result IoHelpers.readWholeStream chokes on the null argument.\n\nPreviously the new HttpResponse was constructed using "getter.getResponseBody", which worked fine.\n\nIs there a reason the HttpResponse is constructed using a different constructor and if yes, how would one test a response with an empty body?'
261,'Dridus','Need ability to shut off "Service request (GET) took ..." log messages\nWe have an access logging valve in our tomcat container that takes care of this for us, so the log message is just spam. Unfortunately most of lift\'s logging comes out of the same logger, so it\'s not possible to crank the logger down to WARN or higher without shutting off everything.'
827,'dpp','Improvements to S.loc and S.?\nCorresponding thread:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/be9e948e1829b979\n\nTwo improvements:\n- There should be an S.loc(String, NodeSeq => NodeSeq). The function is to transform the returned xml (for example to replace placeholders). It would be great to have an example for this in the wiki...\n- S.?("some_key") currently returns some_key when (1) using xml language files and (2) the translation corresponding to some_key contains xml tags.'
1110,'pbrant','Adding id attribute with CSSBind for list\nPlease see the related discussion on the Google Group:\n [[url:http://www.example.com| http://groups.google.com/group/liftweb/browse_thread/thread/376ae47e5075c71d/86b4690bcb01d15a#86b4690bcb01d15a]]\n\n\nIve just upgraded my project from 2.9.0-1/2.4-M3 ----> 2.9.1/2.4-M4 and Ive noticed one regression.\n\nSnippet:<pre><code>def test = {\n val myIdList = List("xx1", "xx2", "xx3", "x4")\n ".thinglist *" #>\n      (".thing" #> myIdList.map(t => {\n          ".thing [id]" #> t.key\n        })\n      )\n}\n</code></pre>\nTemplate:<pre><code><ul class="thinglist lift:MySnip.test">\n      <li class="thing" />\n</ul>\n</code></pre>\n\n...should result in:<pre><code>\n  <ul class="thinglist">\n      <li class="thing" id="xx1"/>\n      <li class="thing" id="xx2"/>\n      <li class="thing" id="xx3"/>\n      <li class="thing" id="xx4"/>\n   </ul>\n</code></pre>\n...but with 2.4-M4, it results in:<pre><code>\n  <ul class="thinglist">\n      <li class="thing" id="xx1"/>\n      <li class="thing "/>\n      <li class="thing" />\n      <li class="thing" />\n   </ul>\n</code></pre>\n\nIt looks like only the first *li* gets the "id" attribute. \nEven stranger, if I change the attribute that is being added from "id" --> "idblah", it works properly.\n\n\n\n\n'
402,'mads379','blob is a reserved sql-word\nblob is a reserved sql word, it should be added to the ist of reserved words'
685,'dpp','Extend SiteMap to better support modules\nFrom our email discussion:\n"Basically, our idea is to have a convention that the module has a singleton object with the same name as the module and then there would be an init method that the module user would call from within Boot.scala to do whatever initialization is necessary. Unfortunately, as things currently stand there\'s a need for a separate method to provide a List[Menu], just as the MetaMegaProtoUser trait currently does with the menus method, so that the module user can wire in any provided Menus into their app.\n\n"As I understand it, you have a solution in mind that would make things simpler to hook modules into the app\'s SiteMap, perhaps something to do with passing in the existing SiteMap and returned a new one? I\'m afraid I didn\'t really get what you had specifically in mind but please let me know what you need from me."\n'
119,'dpp','Misspelling in field name in ProtoExtendedSession\nexperation is wrong\r\nshould be expiration\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/f4372b863f369a59'
968,'','Add OSGi metadata to lift-framework JARs\n'
543,'dpp','SBT archetype\nCreate an archetype for sbt'
260,'timperrett','findAnyTemplate should not parse directory files\nIn a post to the mailing list, DPP explained the lift url mapping philosophy regarding directories as:\r\n\r\n/foo maps to /foo.html\r\n/foo/ maps to /foo/index.html\r\n\r\nThat\'s fine - however, if both the directory file foo and the ordinary file foo.html exist in the filesystem, the above does not hold true.  On a request for /foo , the empty suffix is tried first; LiftRules.finder returns the directory file; TemplateFinder.findAnyTemplate attempts to parse the directory file as XML, which will of course fail.\r\n\r\nWe have a production site with a marketing "requirement" that urls cannot end in slashes; this would be solved by allowing /foo to correctly dispatch to foo.html even if a directory foo exists.  \r\n\r\nRegardless of whether that\'s a reasonable requirement, it seems like a bad idea to parse directory files as xml, when it\'s always guaranteed to fail.  I\'m not sure what the best way to handle that would be - have finder test to see if the resource is actually a file, try other suffixes on an exception . . . .'
826,'dpp','Add a more generic way to associate tags with JavaScript functions\nSee\n\nhttps://groups.google.com/d/topic/liftweb/ypR9Lc7ALLI/discussion'
1109,'indrajitr','problems with archetype sbt_2.9.1  2.4-M4\nWhen I run:\n\nmvn archetype:generate \\\n -DarchetypeGroupId=net.liftweb \\\n -DarchetypeArtifactId=lift-archetype-sbt_2.9.1 \\\n -DarchetypeVersion=2.4-M4 \\\n\nI get a pom.xml with hardcoded paths to Indrajit workspace and also wrong dependencies ( e.g. <artifactId>lift-mapper</artifactId><version>2.4-M4</version> );'
401,'mariusdanciu',"Create a generic continuation mechanism\nThe continuation system should be extended to support long polling in REST apis.  Specifically, something like:\n\ntrait Continuation {\n  def await: Box[LiftResponse] // wait for the response of invoke the platform's continuation mechanism\n}\n\nobject S {\ndef prepareContinuation(f: (Box[LiftResponse] => Nothing) => Unit): Continuation = ... build the continuation here\n}\n\nval continuation = S.prepareContinuation{\n  respondWith => ... create response\n  respondWith(response)\n}\n\ncontinuation.await\n\nThe begin method returns Box[LiftResponse].  If the app is running in a container without continuation support, continuation.begin blocks until the continuation is satisfied on the worker thread.  If the container has continuation support, the request is suspended and resumed when the function (respondWith) is invoked."
684,'dpp','Update CRUDify and ProtoUser to be persistance agnostic\nUse type constructors to bridge between CRUDify and ProtoUser logic and your back end persistence mechanism of choice'
118,'dpp',"A (Very) Minor Issue\nIn SimpleWizard.scala (within the liftweb example) the comment for page three should say 'ask the color.'"
967,'davewhittaker','Squeryl/Record support for Crudify\nAn adapter needs to be added so that users can easily add Crudify support to their Squeryl/Record entities.\n\nSee: http://groups.google.com/group/liftweb/browse_thread/thread/dff688b5a4b8380b/357a766a81990341?lnk=gst&q=squeryl+crudify#357a766a81990341'
542,'timperrett','Comet push kills existing notices\nAs I posted here: http://groups.google.com/group/liftweb/browse_thread/thread/c017ce9f98efa62b\n\nAnd just confirmed it with marius, when there is a new message pushed down from the comet actor (even one that does no S messages) will overwrite the messages with its ones; that is, it doesnt care for what is already displayed. Apparently this is a problem with handling empty lists or something. Either way, its critical for my MEAP that this is fixed before 2.0.'
259,'','SHtml.ajaxEditable renders from unnecessarily\nIn the following code:\r\n\r\n{quote}\r\n    <div>\r\n      <div id={dispName}>\r\n        {displayMarkup}\r\n      </div>\r\n      <div id={editName} style="display: none;">\r\n        {editMarkup}\r\n      </div>\r\n    </div>\r\n{quote}\r\n\r\neditMarkup is called unnecessarily and renders the form too eagerly bloating the output, it will be replaced anyways by subsequent ajax call.\r\n\r\nAlso, AjaxMapper shouldn\'t extend MappedField (it\'s self type should be made MappedField) so it doesn\'t bloat the code when scala rewraps trait methods when existing field classes mix it in. Extending MixableMappedField is enough (it has the asHtml to override, whereas it only calls toForm).'
825,'dpp','wacky form within form with <form> and stateful snippets\nDouble <form> tags with stateful snippets and <form> element'
400,'dpp','Add helpful extractors to Helpers\nLike AsInt, AsLong, AsBoolean, AsDate, etc.'
683,'','Json should be printed as compact in production\nJsonResponse.apply(JsonAST.JValue, List[(String, String)], List[HttpCookie], Int) should use Printer.compact instead of Printer.pretty, depending what mode lift is running in. Production should definitely use compact (staging probably should too).'
117,'dpp','SHtml.text should be able to fire an ajaxRequest on enter but not onBlur\nhttp://groups.google.com/group/liftweb/browse_thread/thread/39d38f2124b4b2c7'
966,'dpp','"closing all connections" infinite loop\nConsider:\n\nclass Boot {\n  ...\n  def boot() {\n    ...\n    if (!DB.jndiJdbcConnAvailable_?) {\n      DB.defineConnectionManager(DefaultConnectionIdentifier, DBVendor)\n      \n      LiftRules.unloadHooks.append(() =>\n        DBVendor.closeAllConnections_!())\n    }\n...\n\nWhen this code has run, there is an unload hook registered. If later the initialization of the database connection fails, then during shutdown we get an infinite printing of:\n\n20:31:37.775 [Shutdown] INFO  net.liftweb.mapper.ProtoDBVendor - Closing all connections\n\nThis prevents the container from exiting.'
541,'dpp','Mapper items not tracked when there are no post-commit functions for MetaMapper\nSee this discussion thread: http://groups.google.com/group/liftweb/browse_thread/thread/35245dcd781c4d1b\n\nSymptom:\nI found that when creating mapped objects and saving them within a loop, the object references are retained indefinitely and are thus not garbage collected, leading eventually to out of memory errors.\nThis only happens if S.addAround(DB.buildLoanWrapper()) is used.\n\nThis was raised in the Google discussion group, and in David Pollak\'s words:\n"If there are no post-commit functions defined for the MetaMapper, \nwe won\'t track Mapper items for the non-existent post-commit functions. "\n\n\n\n'
258,'','MappedTime, MappedDate, and MappedDateTime should use different parsers and formatters\nMappedTime, -Date, and -DateTime should not use the same parsers and formatters but separate ones, and it should be overridable per field. See #257'
824,'dpp','Whence\nCreate a trait that will capture whence (S.referer openOr "/")'
399,'dpp','Add unapply to metamapper\nAdd an unapply method to metamapper for nice extraction \n\n  private object unapplyMemo extends RequestMemoize[Any, Box[User]]\n\n  def unapply(in: Any): Option[User] = unapplyMemo(in, find(in)) match {\n    case Full(x) => Some(x)\n    case _ => Empty\n  }\n'
682,'hoffrocket',"ImageResizer.getOrientation should handle Exceptions\nImageResizer.getOrientation will currently throw an Exception if there's a bad Exif header on the image file.\nThe image may still be good, but they orientation will be unknown.   \ngetOrientation should return a Failure in those cases"
116,'','Snippit with incorrect signature gets invoked, but erroneously produces "Method Not Found"\nto reproduce, change the "howdy" function in the Lift archetype to:\r\n\r\n    def howdy = {\r\n        System.out.println("FOO")\r\n        0\r\n      }; // <span>Welcome to hyperview at {new _root_.java.util.Date()}</span>\r\n\r\ninvoke http://localhost:8080/, and you\'ll see the following in the logfile:\r\n\r\n>FOO\r\n>WARN - Snippet Failure: SnippetFailure(/ -> ParsePath(List(index),,true,false),Full(helloWorld.howdy),Method Not Found)\r\n\r\neither the method should not be invoked because the signature is wrong (therefore not emitting "FOO"), or the error message to be changed to say that the method was found, but the signature is incorrect.\r\n'
965,'dchenbecker','IBM DB2 not supported\nIm trying to get lift to work with DB2 for two days now, but I still havent figured it out. I use com.ibm.db2.jcc.DB2Driver and can connect to a database now (user table is created), but whenever I try to register a new user (causing the app to write into the database) I get an exception:\n\ncom.ibm.db2.jcc.c.SqlException: [ibm][db2][jcc][10271][10296] unrecognized JDBC-Type: 16.\n\nI use the following DriverType:\n\nobject DB2DriverType extends DriverType("DB2/NT")\n{\n def binaryColumnType = "LONG VARCHAR FOR BIT DATA"\n def booleanColumnType = "SMALLINT"\n def clobColumnType = "LONG VARCHAR"\n def dateTimeColumnType = "TIMESTAMP"\n def dateColumnType = "DATE"\n def timeColumnType = "TIME"\n def integerColumnType = "INT"\n def integerIndexColumnType = "INTEGER NOT NULL GENERATED BY DEFAULT AS IDENITY"\n def enumColumnType = "INT"\n def longForeignKeyColumnType = "INT"\n def longIndexColumnType = "INT NOT NULL GENERATED BY DEFAULT AS IDENTITY"\n def enumListColumnType = "INT"\n def longColumnType = "INT"\n def doubleColumnType = "DOUBLE"\n\n override def brokenLimit_? : Boolean = true\n override def pkDefinedByIndexColumn_? = true\n override def defaultSchemaName : Box[String] = Full("DB2ADMIN")\n}\n\nDerek Chen-Becker wrote on the mailing list:\n\nThis is the DB2 JDBC driver not honoring a Boolean value when using setObject. You can see here that 16 is the value of java.sql.Types.BOOLEAN:\n\nhttp://download.oracle.com/javase/6/docs/api/constant-values.html#java.sql.Types.BOOLEAN\n\nAnd this IBM document states that DB2 doesn\'t have direct support for Boolean or Byte types:\n\nhttp://publib.boulder.ibm.com/infocenter/db2luw/v9/index.jsp?topic=/com.ibm.db2.udb.apdv.java.doc/doc/rjvjdata.htm\n\nThis will require a small change to Mapper code to get it working. Please open a ticket.\n\nDerek'
540,'dpp','Add support for locale in Comet\nCurrently knowing the browser locale inside the CometActor requires application specific crafting. Since the S inside the CometActor does not reflect request state it would be useful to add a def locale method inside CometActor. This will reflect the locale information received in the last Comet request. Initially it will reflect the locale available during page rendering.\n\n\nIf there are objections to this approach please specify them here.'
257,'','Date/time parsing and formatting should be divided into Date, Time, and Date-time\nLiftRules should have not just parseDate and formatDate but also xxTime and xxDateTime.'
823,'dpp','auto-render in stateful snippet\nAdd a trait that can be mixed into stateful snippets to do dispatch to render'
1106,'dpp',"Overriding lift's core localization (probably refactor of localization methods)\nAccording to google group's discussion on https://groups.google.com/d/topic/liftweb/MvVYpNbjcDw/discussion\n\nDenis: I am wondered, why lift has both ? and ?? methods. IMHO, more useful and flexible will be to have one method that uses core text resources on bottom. So anybody can override it with own resources and can easily use core strings in his app.\nDavid: I agree with this.  Please open a ticket and I'll work through the code and get rid of S.??\n"
398,'dpp','Misc deprecation cleanup in 2.8... backported to 2.7 branch\nGo through and backport fixes to Box hierarchy, etc.'
681,'jeppenejsum','Make MappedDateTime behave consistently with Box[Date]\nAt present, most MappedFields allow setting via a Box value, but MappedDate, MappedTime, and MappedDateTime do not.\n\n*Desired behaviour* \n\nobject theTime extends MappedDateTime\n...\ntheTime(Empty) // should unset the underlying date value\ntheTime(Full(new Date())) // should update the underlying date value\n\n*Changes required* \n\nprobably an update to "setFromAny" in line with (e.g.) MappedString\n      case Full(d: Date) => this.set(d)\n      case None | Empty | Failure(_, _, _) => this.set(null)\n'
115,'dpp',' ALTER TABLE statement cannot add an IDENTITY column to a table.\nHi, i newbie for lift and scala.. im using eclipse. i create project by maven and i try to run. thats all bu i get :\r\n\r\n\r\nINFO - CREATE TABLE users (id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY , firstname VARCHAR(32) , lastname VARCHAR(32) , email VARCHAR(48) , locale VARCHAR(16) , timezone VARCHAR(32) , password_pw VARCHAR(48) , password_slt VARCHAR(20) , textarea VARCHAR(2048) , superuser SMALLINT , validated SMALLINT , uniqueıd VARCHAR(32)) \r\nINFO - ALTER TABLE users ADD CONSTRAINT users_PK PRIMARY KEY(id)\r\nINFO - ALTER TABLE users ADD COLUMN id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY\r\nERROR - Failed to Boot\r\njava.sql.SQLSyntaxErrorException: ALTER TABLE statement cannot add an IDENTITY column to a table.\r\nat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)'
964,'','Nested HTML in template gives exponentially loadtime\n[[url:http://groups.google.com/group/liftweb/browse_thread/thread/fab02347beb34db1|Mailing discussion]]\n\nTested using: Scala 2.8.1.final, Lift 2.3\n\n*Short description:*\nPlacing the content binding of a template within nested HTML elements, increases the loadtime exponentially with each nested level.\n\n*Example description*\nUsing this master template:\n<pre><code><html><body>\n<div><div><div><div><div><div><div><div><div><div><div>\n<div id="content"></div>\n</div></div></div></div></div></div></div></div></div></div></div>\n</body></html></code></pre>\nWhere the body of the id="content element is replaced. When replacing it with a list of 1000 integers (as strings) the page load time will be 15000 milliseconds.\n\nWhereas the page load will be only 50 milliseconds for this almost similar master template:\n<pre><code><html><body>\n<div><div><div><div><div><div><div><div><div><div><div>\n</div></div></div></div></div></div></div></div></div></div></div>\n<div id="content"></div>\n</body></html></code></pre>\n\nh1. Larger example:\n*webapps/templates-hidden/slow.html*\n<pre><code>\n<html xmlns="http://www.w3.org/1999/xhtml" xmlns:lift="http://liftweb.net/">\n<head>\n</head>\n<body>\n\t<h1>slow</h1>\n\t<!-- these nested divs around id=content will make Lift exponentially slower -->\n\t<div><div><div><div><div><div><div><div><div><div><div>\n\t\t<div id="content"></div>\n\t</div></div></div></div></div></div></div></div></div></div></div>\n</body>\n</html>\n</code></pre>\n\n*webapps/slow.html*\n<pre><code>\n<div class="lift:surround?with=slow;at=content">\n    <div class="lift:TestSnippet.test">\n        <ul>\n            <li></li>\n        </ul>\n    </div>\n</div>\n</code></pre>\n\n*snippet/TestSnippet.scala*\n<pre><code>\npackage lifttest.snippet\n\nimport net.liftweb.util._\nimport Helpers._\nimport scala.xml._\n\nclass TestSnippet {\n\tdef test = {\n\t\tval data = 1.to(1000).map(_.toString)\n\t\t"li *" #> data\n\t}\n}\n</code></pre>\n\n\nh1. Full code example:\nA full code example can be found here: [[url:https://github.com/PragProgger/lifttest2]]\ngit@github.com:PragProgger/lifttest2.git'
539,'mariusdanciu','Lift-up attribute snippets \nCurrently for attribute snippets we have: \n\n<div lift.snippet="MySnippet.doWork" /> \n\nthe caveat is that we cannot really provide default values for attribute and this form does not really conform to the way people invoke snippets from template making this support less known and counter intuitive.\n\nThe new form proposed for attribute snippets is:\n\n<div MySnippet.doWork="default values" />\n\nMySnippet = class name\ndoWork = method name - conforming to MetaData => MetaData type\n\n\n\n '
256,'dpp','Add AWS support to a new Lift module\nCreate a Lift module that supports Amazon Web Services\r\n'
822,'rusho','Update MappedPassword and PasswordField to use JBCrypt\nUpgrade MappedPassword and PasswordField to use JBCrypt for password storage to make it harder to do dictionary attacks even if the password DB is compromised.\n\nThe upgrade should be "in place" such that existing databases will work just fine, but when passwords are changed, the new hashing mechanism is used.\n'
1105,'davewhittaker',"Bypass the need for a column annotation for DecimalField in Squeryl-record\nCurrently one need to add @Column annotation in Squeryl-record entity, if a DecimalField length and scale values are to be set properly. It'd be nice, if such information can be read from DecimalField's MathContext and scale attributes.\n\nLift group thread: https://groups.google.com/forum/#!topic/liftweb/fQ0HupSGkXY"
397,'dpp','Add asValid method to Mapper\n  def asValid: Box[MyType] = validate match {\n    case Nil => Full(this)\n    case xs => Failure(xs.map(_.msg.text).mkString(", "), Empty, Empty)\n  }\n\nAdd method to update a Mapper object from JSON'
680,'dpp','Support for browser-side Actor refs\nSupport for browser-side Actor refs such that an actor ref in the browser can be sent a message and the message will appear in the server Actor and the browser can have actors which can be sent messages from the server and they will materialize (via a CometActor) in the client.'
114,'','Misspelled Key "pasword.changed" in ProtoUser.scala\nA correct key password.changed is already used in ProtoUser.scala and lift-core.properties.'
963,'dpp','Surrounding a body with a class duplicates content\nI have tested this with a bare install from the lift 2.2 basic maven archetype. The only change I have made is to use Html5Properties.\n\nI have 2 templates: index.html and templates-hidden/default.html\n\ndefault.html looks like this: \n<pre><code><html> \n  <head><title>foo</title></head> \n  <lift:bind name="aa"></lift:bind> \n</html>\n</code></pre>\n \nindex.html looks like this: \n<pre><code><lift:surround with="default" at="aa"> \n<body class="foo"> \n<p>echo</p> \n</body> \n</lift:surround>\n</code></pre>\n \nLift turns this into: \n<pre><code><!DOCTYPE html> \n<html> \n<head> \n<title>foo</title> \n</head> \n<body> \n<p>echo</p> \n<html> \n<body> \n<p>echo</p> \n</body> \n</html> \n</body> \n</html>\n</code></pre>\n \nIf I remove the body class attribute, then it renders as you would expect it to.'
538,'dpp','Put Expires or Cache-Control=no-cache headers into Comet, REST and Ajax response\nCurrently certain GET requests may get cached by proxies... make sure REST, Comet and Ajax requests have explicit cache control headers.'
255,'dpp','Props should allow a "secret" file to be appended\nIn addition to the selected file name, Props should merge in the properties from a file with the name name, but the .secret suffix... this allows the placement of props files in source repositories, but keep the secret keys, etc. in a separate file'
821,'','ListHelpers enumToList\nListHelpers.enumToList is not tail recursive.  I get a stackoverflow on a page with many elements.\n\nMessage: java.lang.StackOverflowError\n\tjava.util.Collections$1.hasMoreElements(Collections.java:3385)\n\tnet.liftweb.util.ListHelpers$class.enumToList(ListHelpers.scala:91)\n\tnet.liftweb.util.Helpers$.enumToList(Helpers.scala:34)\n\tnet.liftweb.util.ListHelpers$class.enumToList(ListHelpers.scala:93)\n\tnet.liftweb.util.Helpers$.enumToList(Helpers.scala:34)\n\tnet.liftweb.util.ListHelpers$class.enumToList(ListHelpers.scala:93)\n'
1104,'','record.field.EmailField fails to validate email addresses with uppercase-letters\nThe validation of email addresses by EmailField fails on uppercase email addresses, like John.Doe@gmail.com. The regex in ProtoRules.emailRegexPattern says explizitly that the email address has to be in lowercase, which EmailField does not do.\n\nnet.liftweb.record.field.EmailField:39 should pass email.toLowerCase() to the matcher.'
396,'Dridus','Lookup snippets in subpackages\nFor large websites it is common to organize the pages (templates) in a nested directory structure. It would be beneficial to be able to mimic such a structure for the snippets, i.e. have snippets in subdirectories of the base snippet directory.'
679,'dpp','Add a class LocParam to SiteMap\nAdd a class LocParam to SiteMap such that each menu can be styled uniquely'
113,'','Signup mail body not i18ned\n'
962,'dpp','Make it possible to have two subclasses of ProtoUser with separate login-state.\nsee: http://groups.google.com/group/liftweb/browse_thread/thread/590a7939b2fe74bc/46ae46f81216c2d6#46ae46f81216c2d6'
537,'dpp','Add Italian translation for lift-core.properties\nMerge Italian translation for lift-core.properties from AliPanick.\nhttp://groups.google.com/group/liftweb/browse_thread/thread/f4cc109606c5e474'
254,'dpp','Add field-by-field error notifications to CRUDified fields\n'
820,'dpp','Bad field id generation in LiftScreen\n    override lazy val uniqueFieldId: Box[String] = Full("I"+Helpers.hash(this.getClass.getName)\n\nIs broken.  Needs to be fixed.'
395,'dpp','Add a .json method to Req to parse the request as JSON\nAdd a .json method to Req to parse the incoming request as JSON... it should mirror the .xml method.'
678,'dchenbecker','XMLApiHelpers has ambiguous implicit conversions from NodeSeq and Seq[Node]\nWhen implementing a class that inherits from the XMLApiHelper trait, returning a scala.xml.Elem for implicit conversion results in an ambiguous signature error:\n\n[INFO]  found   : scala.xml.Elem\n[INFO]  required: net.liftweb.http.LiftResponse\n[INFO] Note that implicit conversions are not applicable because they are ambiguous:\n[INFO]  both method listElemToResponse in trait XMLApiHelper of type (Seq[scala.xml.Node])net.liftweb.http.LiftResponse\n[INFO]  and method nodeSeqToResponse in trait XMLApiHelper of type (scala.xml.NodeSeq)net.liftweb.http.LiftResponse\n[INFO]  are possible conversion functions from scala.xml.Elem to net.liftweb.http.LiftResponse\n\nPer http://groups.google.com/group/liftweb/t/5841a5d85d62a68f, we should be able to remove nodeSeqToResponse since NodeSeq inherits from Seq[Node].'
112,'','lift-core.properties contains misspelled key for reset.password.confirmation\nIt is spelled reset.pasword.confirmarion'
961,'indrajitr','Saving to CouchDB doesn\'t fetch the document "id" property\nSaving a record as a CouchDB document does a HTTP POST request to the database and should read back the resulting JSON message that contains the ID for the newly-generated document. This used to be the case for Lift 2.2, but broke for the 2.3 release. The cause seems to be the _DatabaseHelpers.handleUpdateResult_ method -- it expects a JObject containing JFields of JBool/JString values. Now the _\\_ operator that is used returns the JBool/JString values directly which greatly simplifies the pattern matching code.\n\nHere\'s the current (broken code):\n\n<pre><code>\ndef handleUpdateResult(original: JObject)(json: JValue): Box[JObject] = \n  for { \n    obj <- Full(json).asA[JObject] ?~ ("update result is not a JObject: " + \njson) \n    ok  <- Full(json \\ "ok" \n).asA[JField].map(_.value).asA[JBool].filter(_.value) ?~ ("ok not present in \nreply or not true: "+json) \n    id  <- Full(json \\ "id" ).asA[JField].map(_.value).asA[JString].map(_.s) \n   ?~ ("id not present or not a string: " + json) \n    rev <- Full(json \\ "rev").asA[JField].map(_.value).asA[JString].map(_.s) \n   ?~ ("rev not present or not a string: " + json) \n  } yield updateIdAndRev(original, id, rev) \n</code></pre>\n\nAnd here\'s the working version:\n\n<pre><code>\ndef handleUpdateResult(original: JObject)(json: JValue): Box[JObject] = {\n  for {\n    obj <- Full(json).asA[JObject] ?~ ("update result is not a JObject: " + json)\n    ok  <- Full(json \\ "ok" ).asA[JBool].filter(_.value) ?~ ("ok not present in reply or not true: "+json)\n    id  <- Full(json \\ "id" ).asA[JString].map(_.s)    ?~ ("id not present or not a string: " + json)\n    rev <- Full(json \\ "rev").asA[JString].map(_.s)    ?~ ("rev not present or not a string: " + json)\n  } yield updateIdAndRev(original, id, rev)\n}\n</code></pre>\n\nDetails, and the whole story on how I stumbled upon this are available in [[url:http://groups.google.com/group/liftweb/browse_thread/thread/15d17b9348d4d88e#|this mailing list thread]]. [[url:https://github.com/hdeshev/lift-couchdb-id|Here]] is a sample project demonstrating the problem and [[url:https://github.com/hdeshev/lift-couchdb-id/tree/override-workaround|here]] is a branch that works around it by overriding the JSON parsing mechanism in the same way as described above. I hope this helps.'
536,'dpp','add missing SHtml.ajaxTextarea...() methods\nThere is:\n\n<pre><code>SHtml.text... \nSHtml.ajaxText... \nSHtml.textarea.. \n</code></pre>\nbut no \n\n<pre><code>SHtml.ajaxTextarea...\n</code></pre>\n \nBackground discussion:  http://groups.google.com/group/liftweb/browse_thread/thread/d538728a21e78aa9/d841a33d7ddb8420#d841a33d7ddb8420\n\nI was able to work around this problem from simply copying the SHtml.ajaxText code and changing it to use textarea tags and commenting out the submit on CR line:\n\n<pre><code>\nobject SHtmlExtension {\n\timport net.liftweb.http.js.{ JsCmd, JsExp }\n\timport net.liftweb.http.js.JsCmds._\n\timport net.liftweb.http.js.JE.{ AnonFunc, Call, JsRaw }\n\timport net.liftweb.http.S.{ contextFuncBuilder, fmapFunc, formFuncName, AFuncHolder, SFuncHolder }\n\n  def ajaxTextarea(value: String, func: String => JsCmd, attrs: (String, String)*): Elem = \n  ajaxTextarea_*(value, false, Empty, SFuncHolder(func), attrs: _*)\n\n  def ajaxTextarea(value: String, jsFunc: Call, func: String => JsCmd, attrs: (String, String)*): Elem = \n  ajaxTextarea_*(value, false, Full(jsFunc), SFuncHolder(func), attrs: _*)\n\n  def ajaxTextarea(value: String, ignoreBlur: Boolean, func: String => JsCmd, attrs: (String, String)*): Elem =\n  ajaxTextarea_*(value, ignoreBlur, Empty, SFuncHolder(func), attrs: _*)\n\n  def ajaxTextarea(value: String, ignoreBlur: Boolean, jsFunc: Call, func: String => JsCmd, attrs: (String, String)*): Elem =\n  ajaxTextarea_*(value, ignoreBlur, Full(jsFunc), SFuncHolder(func), attrs: _*)\n\n  private def ajaxTextarea_*(value: String, ignoreBlur: Boolean, jsFunc: Box[Call], func: AFuncHolder, attrs: (String, String)*): Elem = {\n    val raw = (funcName: String, value: String) => JsRaw("\'" + funcName + "=\' + encodeURIComponent(" + value + ".value)")\n    val key = formFuncName\n\n    fmapFunc(contextFuncBuilder(func)) {\n      funcName =>\n      (attrs.foldLeft(<textarea>{value}</textarea>)(_ % _)) %\n      //("onkeypress" -> """liftUtils.lift_blurIfReturn(event)""") %\n      (if (ignoreBlur) scala.xml.Null else\n       ("onblur" -> (jsFunc match {\n              case Full(f) => JsCrVar(key, JsRaw("this")) & deferCall(raw(funcName, key), f)\n              case _       => makeAjaxCall(raw(funcName, "this"))\n            })\n        ))\n    }\n  }\n\n\t// copied from SHtml because it is private there\n  private def deferCall(data: JsExp, jsFunc: Call): Call =\n    Call(jsFunc.function, (jsFunc.params ++ List(AnonFunc(makeAjaxCall(data)))): _*)\n\n}\n</code></pre>\n\nthank you'
253,'indrajitr','Adjust vscaladoc packageLinkdef baseurl for offline friendly navigation\nCurrently, vsaladoc generated contents have baseurl for Lift packages point to scala-tools.org.\r\n\r\nThe packageLinkDefs should be tweaked so that docs generated locally via "scala:doc" point to local contents instead of pointing to remote url.'
819,'','Lift adds cache settings always in net.liftweb.http.InMemoryResponse\nhttp://groups.google.com/group/liftweb/browse_thread/thread/39251e0215c948d9/8b8d8c768a25ca23?hl=en#8b8d8c768a25ca23\nDPP adviced to create a ticket, here it is.\n\nimport net.liftweb.http.{InMemoryResponse}\nInMemoryResponse(imag.imag.is, List("Content-Type" ->\nitem1.imagMime.is,\n                                  "Cache-control" -> "public",\n                                  "Pragma" -> "public",\n                                  "Expires" -> sdf.format(exp.getTime()),\n                                  "ROBOTS" -> "NONE",\n                                          "GOOGLEBOT" -> "NOARCHIVE"), Nil, 200) \n\nhttp Response headers from Chrome:\nCache-Control:public, no-cache; private; no-store\nContent-Length:32566\nContent-Type:image/jpeg\nDate:Sat, 1 Jan 2011 12:44:32 UTC\nExpires:Sun, 01 Jan 2012 02:44:32 EET\nGOOGLEBOT:NOARCHIVE\nPragma:public \n\nBug is that even when  "Cache-control" -> "public", is set, also  no-cache; private; no-store appear in the http response headers. It should probably work such that if a value is set, Lift does not add any additional values to a http response header.\nMy pom.xml says:\n<scala.version>2.8.0</scala.version>\n    <lift.version>2.2-M1</lift.version>\n\nPlease set assigned to and milestone as you see fit.\n'
1102,'jeppenejsum','performPostCommit is called even when transaction is rolledback\nDetails here: http://groups.google.com/group/liftweb/browse_frm/thread/9ada7ee2bfe25fbc/6618f8bc2e84a6a6?'
394,'dpp','Request for convenience conversion on MappedLongForeignKey fields\nWhen implementing one-to-many relationships in lift using MappedLongForeignKey fields, the "many" side of the relationship needs to explicitly request the object using the .obj field. \n\nThe request is to provide a convenience conversion so that a request for the "one" side from the "many" side returns a Box.\n\nExample (using the models in the one-to-many article on the wiki):\n  val x: Long = aBook.author // returns the id for the author\n  val author : Box[Author] = aBook.author.obj  \n\nThe enhancement would allow:\n  val author: Box[Author] = aBook.author\n\nThe complete discussion is captured at: http://groups.google.com/group/liftweb/browse_thread/thread/dc2b9a03bf403695'
677,'','JsonParser should allow for configurable parsing of numeric values\nIn certain use cases it would be preferable to convert numeric values into BigDecimal or other representations. JsonParser should allow for user-specified parsing of numeric values to accommodate this need.'
111,'','Lost password submit button is not rendered correctly\nInstead of a standard button some strange "text input like thing" is rendered (at least on Safari) on the "Lost Password" form. This is due to the fact, that in ProtoUser.scala the type of the input is "Submit" instead of "submit" (worng case).'
960,'dchenbecker','Overhaul LDAPProtoUser to make it more configurable and robust\nA lot of the attributes are hard-coded, particularly group (e.g. role) attributes. These should all be configurable. Also some strangeness in how it logs users in, etc.'
535,'dpp',"JodaTime support in DateTimeHelpers\nEnhance Lift's DateTime stuff to support JodaTime."
252,'indrajitr',"Simplify maven-scala-plugin configuration for pure scala project\nCurrent maven-scala-plugin configuration supports mixed Scala/Java project. The intention is to allow having higher flexibility.\n\nHowever, Mixed Scala/Java project configuration is useful only when there are classes generated from java source has compile time dependency on classes generated from scala source. Lift doesn't have use case for such scenario currently.\n\nThere are some disadvantages of such configuration as well:\n\n- it requires 2 compilation step => longer to compile\n- it is not compatible with IDE (e.g., Eclipse likes to have the source directory define via the build.sourceDirectory)\n- the build life cycle end up being a hacked one\n- it has side effects on other plugins (e.g., maven-source-plugin expects sources via build.sourceDirectory by default)"
818,'jonifreeman','Simplify importing when using lift-json\nOften following imports are needed when working with lift-json:\n\n<pre><code>\nimport net.liftweb.json._\nimport net.liftweb.json.JsonAST._\nimport net.liftweb.json.JsonParser._\nimport net.liftweb.json.Printer._\n</code></pre>\n\nWith Scala 2.8 package objects it is possible to put most used types and functions into a package object, letting the user to import those into scope simply by\n\n<pre><code>\nimport net.liftweb.json._\n</code></pre>\n'
393,'dpp',"queries with large number of parameters cause very large stacks\nWhich can blow the stack.  Here is the offending code (from LoggingStatementWrappers.scala):\n\n// utility method to fill in params  \nprivate def paramified : String = {  \n  def substitute (in : String, index : Int) : String = in.indexOf('?') match {  \n    case -1 => in  \n    case j => in.substring(0,j) + paramMap(index) + substitute(in.substring(j + 1), index + 1)  \n  }  \n  substitute(stmt, 1)\n}"
110,'dchenbecker','Mail should not be multipart when unnecessary\nA simple plain text mail should not be multipart. (Thread "URL in PlainMailBodyType to BlackBerry")'
251,'','Make it possible to add LocParams to MetaMegaProtoUser\'s menus\nThe various user related menus are created by methods xxxMenuLoc (e.g. loginMenuLoc) which give us no flexibility to add LocParams. Why would there be a need for that? E.g. for adding a LocGroup in order to customize menu display.\r\n\r\nThe idea is that there are additional methods that are called from xxxMenuLoc in order to populate the LocParams. The default implementation will add a LocGroup("user").'
817,'dchenbecker','Clean up of source files : imports, packages and copyrights\nSeveral work items for cleaning up the code base now that we\'re on Scala 2.8+:\n\n* Remove the now unnecessary "_root_" import\n* Fix imports to be relative:\n<pre><code>\nimport net.liftweb._\nimport http._\nimport common._\n</code></pre>\n* Revise package statements to use implicit nesting:\n<pre><code>\npackage net.liftweb\npackage http\n</code></pre>\n* Update copyrights to 2011\n'
1100,'fmpwizard','lift-archetype-sbt_2.8.1 uses scala 2.7.7\nI created a project using:\n\n\n<pre><code>mvn archetype:generate \\\n -DarchetypeGroupId=net.liftweb \\\n -DarchetypeArtifactId=lift-archetype-sbt_2.8.1 \\\n -DarchetypeVersion=2.3 \\\n -DarchetypeRepository=http://scala-tools.org/repo-releases \\\n -DremoteRepositories=http://scala-tools.org/repo-releases \\\n<snip>\n</code></pre>\n\nbut the created project actually uses scala 2.7.7\n\n<pre><code> > cat project/build.properties\n#Project properties\nproject.organization=Lift\nproject.name=Lift SBT Tempalte\nsbt.version=0.7.4\nproject.version=0.1\ndef.scala.version=2.7.7\nbuild.scala.versions=2.7.7\nproject.initialize=false\n</code></pre>\n\n'
675,'','SHtml checkbox labels\nSHtml.checkbox[T](possible, actual, func, attrs) adds T.toString next to each generated checkbox, but the text is not marked up as a label.'
109,'dpp',"update lift-openid 's dependency of openid4java to a newer version\nCurrently lift-openid is using openid4java 0.9.3, which is a little\r\nold and is difficult to find a maven repository to download.\r\n\r\nI think changing lift-openid's pom with a newer one, like\r\nopenid4java-0.9.5 will be better. (works fine on my machine) "
392,'dpp','Enhanced Comet support\nSupport for Comet component factories rather than by-convention comet actor creation.\n\nSupport for looking up comet components by type *and* name'
958,'dpp',"Box filterNot doesn't produce a Box\nThe Box filter method returns a box. The filterNot method returns a generic Iterable. Could the Box type be integrated more tightly into the scala collections framework, so that the collections operations produce the expected type?"
533,'eltimn','Add MongoPasswordField\nAdd a password field for use with MongoDB'
250,'dpp','Extract Screen stuff from Wizard\nExtract the Screen stuff from Wizard so individual input screens can be constructed without the whole multiscreen thing.'
816,'dpp','Access to raw POST data for POST/PUT\nAccess to raw postdata in the HTTP request chain, both stateful and stateless. Useful for e.g. a REST service that accepts large uploads  of binary data and wants to implement its own buffering/decryption/....\n\nAnother option could be to have the POST data redirected to a file for some calls (depending on a LiftRule) and  indicate that in the S Object.'
1099,'lkuczera','Add NotLike to Mapper\nhttp://groups.google.com/group/liftweb/browse_thread/thread/5554e15673753b44/91247237ff8c5a70#91247237ff8c5a70'
674,'dchenbecker','Propagate Menu.builder attributes to child menus when using expandAll\nMenu.builder attributes are not being propagated when using expandAll.\n\n<lift:Menu.builder\n li_item:class="current"\n/>\n\nWorks as expected; class="current" is added to the li tag of the\ncurrent page.\n\nHowever, if you use:\n\n<lift:Menu.builder\n li_item:class="current"\n expandAll="true"\n/>\n\nThen the class is not added to the li tag of the current page.'
108,'jonifreeman','Support for type parameters in collections for JSON deserialization\nhttp://groups.google.com/group/liftweb/browse_frm/thread/d3430bf7e3c54e80?hl=en#\r\n\r\ncase class Foo[T](x: String)\r\n\r\ncase class MustDeserialize(lst: List[Foo[_]])\r\n\r\nval test = MustDeserialize(Nil)\r\n\r\nread(swrite(test)) must_== test\r\n\r\nIt would also be good to serialize the class name of a class so that it can be deserialized without any description of the type.'
391,'dpp','In development mode, ResourceBundles should be reloaded when changed\nTo facilitate rapid development of localized UIs. Discussion here: http://groups.google.com/group/liftweb/browse_frm/thread/31e4f336fe6e7ba1#\n\nExample project here: http://github.com/jeppenejsum/lift-l10n\n\nTry changing the property in lift.properties and reload the page. Nothing happens until server is restarted.'
957,'','Outdated Source Links on Liftweb.net and Wiki\nThe "Source" link on the top of the liftweb.net pages points to a github\nrepository that says "Legacy - Do not use" if you scroll far enough \ndown to actually see the warning. (And I\'m quite sure it pointed to the  \ncorrect repo earlier this week.) Oh, and the "Lift source code" link\non http://www.assembla.com/wiki/show/liftweb is wrong, too.\n'
532,'dpp','Bug in MappedForeignKey equality\nWhen run in a command-line console for the attached project, the last line of the following code should return false:\n\n<pre><code>import net.liftweb.hello.model._\n\n(new bootstrap.liftweb.Boot).boot\n\nval myBook = Book.create.title("Unchecked Warnings: The Missing Manual")\nmyBook.save\n\nval myPerson = Person.create.book(myBook)\nmyPerson.save\n\nmyPerson.book == myPerson</code></pre>\nAs of 2.0-M5 it returns true.'
249,'dpp','Lift connection pool is not fair\nThe current connection pool does not serve connections fairly... in the order the threads queued up asking for the connection.  This must be changed and the recursive nature of the connection pool request needs to be flattened.\n'
815,'jeppenejsum','Add response status code to the "Service Request (... logging"\nPlease add the response status code to the "Service Request \n(.." logging\n\nthanks,'
673,'','Shouldn\'t Schemifier update the column size?\nDocumentation is correct when it says that Schemifier only creates tables or adds columns. \nWouldn\'t it be a good idea when Schemifier adjusts column width e.g. from varchar(x) to varchar(y) when the model changes?\nI had to delete the table/column manually to have it recreated by Schemifier. Which was possible after some struggling with Squirrel SQL accessing the H2 database.\n\nIf table does not exist then create it\nIf MappedString field does not exist then createit\n   else SQL: alter table <table> modify <field> varchar(<new_length>)\n\n\nThis is my first ticket and I am new to Scala and new to Lift. I have browsed through GIT, Assembla, API Docu, Google Groups to get some fundamentals. I have managed to develop and run a "Mini-Application" which uses Lift 2.1 on Scala 2.8.0 by merging bits and pieces from different sources. I hope I found the correct place to post this.\nKind regards,\nRoland'
107,'',"Unexpected behavior: Snippet Inheritance not respected\nI have an abstract snippet class A, and a subclass B. A defines some methods that are referenced from the view, so the view will say, essentially <lift:B.methodInA/>\n\nThis doesn't work, unless I define the following in B:\n\noverride def methodInA(html: NodeSeq) = super.methodInA(html)\n\nObviously a hole in the reflection logic, unless it is meant to be this way? If I am supposed to use traits (which I haven't tried yet), it would be nice if the error message pointed that out.\n\nAll I can say is, I expected this to work."
390,'dpp','Request for trait that supports createdAt and updatedAt\nFeature request for a trait that introduces createdAt and updatedAt fields to a Model. The fields should auto-update as the model gets created, changed etc.'
956,'Shadowfiend',"Add a GUID to AJAX Requests to Allow De-Duping on Server\nCurrently, it is possible for an AJAX request to be send multiple times by the browser and handled as many times by the server.  Consider the following scenario:\n\n- Browser initiates an AJAX request\n- Server receives request, processes and returns response\n- Browser still hasn't received response (due to network latency), and assumes request has timed out\n- The request goes *back* into the local AJAX queue and is sent again\n- Server receives request a second time, processes and returns response\n\nYou see where this is going.\n\nIn Novell Vibe, we solved this problem by adding an ID to our AJAX requests that were susceptible to this issue.  Then, when the server receives the request, it checks to see if it's already processed that id.  Unfortunately, we've only been able to do this on a case-by-case basis, and it's not trivial code when done at the application layer.  This could be handled much more elegantly by Lift itself as part of the generalized AJAX dispatch mechanism."
531,'dpp','Boolean2 param to ? should be lazy\n \nfalse ? println("launch missiles") | println("peace")\n\nthis prints both in trunk\n\n def ? [A](first: A): BooleanOption[A] = {\n      if (b) BooleanSome(first)\n      else BooleanNone\n    }'
248,'dpp','NPE in MappedDateTime when encoding to json\nWhen the field is NULL (which happens to be the defaultValue for MappedDateTime)\r\n\r\nMessage: java.lang.NullPointerException\r\n\tnet.liftweb.mapper.MappedDateTime.asJsonValue(MappedDateTime.scala:49)\r\n\tcom.foursquare.model.Venue$mayor_updated$.asJsonValue(Venue.scala:50001)\r\n\tnet.liftweb.mapper.BaseMappedField$class.asJsonField(MappedField.scala:92)\r\n\tnet.liftweb.mapper.MappedDateTime.asJsonField(MappedDateTime.scala:34)\r\n\tcom.foursquare.model.Venue$mayor_updated$.asJsonField(Venue.scala:50001)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$encodeAsJSON_$bang$1$$anonfun$apply$14.apply(MetaMapper.scala:571)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$encodeAsJSON_$bang$1$$anonfun$apply$14.apply(MetaMapper.scala:571)\r\n\tscala.List.map(List.scala:812)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$encodeAsJSON_$bang$1.apply(MetaMapper.scala:571)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$encodeAsJSON_$bang$1.apply(MetaMapper.scala:568)\r\n'
814,'dpp','remove a crappy implicit\nThis code compiles, but doesn\'t work:\n\nimport net.liftweb.util.Mailer\nimport net.liftweb.util.Mailer._\n\nval toEmail: String = "harryh@gmail.com"\nMailer.sendMail(From(...), to, Subject(...), PlainMailBodyType(...))\n\nBecause of this implicit:\n\nimplicit def stringToMailBodyType(text: String): MailBodyType =\nPlainMailBodyType(text)\n\nShould that implicit really exists?\nOr maybe sendMail() should explicitly require a To() (like is does for\nFrom and Subject)?'
672,'timperrett',"charset issue with paypal integration\nAs discussed in the thread at http://groups.google.com/group/liftweb/browse_thread/thread/17ddbc225eb621fd there's an encoding issue caused by the HttpClient lib using iso8859-1 as the default encoding (http://hc.apache.org/httpclient-3.x/charencodings.html#Request_Response_Body)."
106,'dpp',"Default FieldIdentifier should be the fieldname, not Empty\nCurrently, you have to override uniqueFieldId in to get meaningful id's on FieldErrors since it defaults to empty.\r\n\r\nI think uniqueFieldId should default to the field name"
389,'jeppenejsum','Add MapperRules.displayNameCalculator to allow easy localization of displayName\nDiscussion here: http://groups.google.com/group/liftweb/browse_frm/thread/7510f8ac5da82974#\n'
955,'dpp','S.redirectTo should return Nothing\nS.redirectTo should have the return type Nothing to indicate that it never returns.'
530,'dpp',"ActorPing can keep CometActors around forever\nActorPing in connection with CometActors can lead to memory retention issues.  Basically, the ActorPing doesn't know to stop pinging the CometActor and even though the session is gone, the Actor lives on.\n\nI've made two changes:\n- CometActors will stop responding to messages 20 seconds after they're shut down. \n- Added a running flag to the class to allow the app to stop the ActorPing thing by its own logic\n"
247,'dpp','lift-flot tries to push code into <head>\nFlot.render() tries to put code into the head of the XHTML document, which is problematic when using Flot within a CometActor.\r\n\r\nSee http://github.com/pr1001/lift-comet-initialization-example.'
813,'dpp','Add a similar feature as onSumbit for adding Ajax attributes to form elements\nAllow an Ajax function to be associated with a form element by onblur, onsubmit, etc.'
1096,'','Translate lift-core.properties to norwegian\n'
671,'jonifreeman',"JsonParser.Buffer incorrectly handles input Reader\nThe private Buffer class defined in net.liftweb.json.JsonParser incorrectly handles its Reader.\n\n1.  It assumes that a read() that does not fill up a segment array indicates EOF.  This is incorrect.  read() will return -1 when the Reader is at EOF.  If it does not return -1, you cannot assume EOF has been reached; it may simply indicate that the Reader has decided to return what is available rather than block waiting for enough data to fill the given array.\n\n2.  It closes the reader even though it may be a reader that was passed into the parse method.  This behavior should either be documented or the owner of the Reader should be allowed the honor of closing it.   \n\nI've attached a preliminary patch that includes a test case demonstrating the first problem and a fix for both problems (opting for allowing the Reader's owner to close it). "
105,'dpp','excludePathFromContextPathRewriting does not apply to Location: header from RedirectResponse\nRelated to http://github.com/dpp/liftweb/issues/closed/#issue/83\n\nWith this code:\n\n     LiftRules.excludePathFromContextPathRewriting.default.set(() => path => {\n          path.startsWith("/wombat")\n     })\n     ...\n     RedirectResponse("/wombat/frizzleboz")\n\nAnd a context path of "/myapp"\nThe HTTP response generated has Location: /myapp/wombat/frizzleboz\nBut should have /wombat/frizzleboz\n\nMarius says, in http://groups.google.com/group/liftweb/browse_thread/thread/75dc28fce1e4a0fc :\n\nI think this is caused by LiftServlet#sendResponse#fixHeaders code.\nCan you please open a ticket or re-open the existent one? I\'ll fix it\nif Dave doesn\'t do it faster.\n\nBr\'s,\nMarius\n'
388,'jeppenejsum','Foreign Key rules moved to MapperRules\nAllow for setting of foreign key support in schemifier via MapperRules.'
954,'dpp','PreParamsMenu\'s / (slash) method requires a String instead of a LocPath\nThis prevents the usage of the * LocPath at top level. For example:\n<pre><code>Menu.params[(String,String)]("foo", "bar", parse _, encode _) / * / "foo" / *\n</code></pre>\ndoes not compile, while \n<pre><code>Menu.params[(String,String)]("foo", "bar", parse _, encode _) / "x" / * / "foo" / *\n</code></pre>\nworks\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/r_eu3cu87F'
529,'dpp',"Count wrong in sessions\nThe session purging stuff has the wrong count for accesses (it's 2 rather than 1) for single accesses"
246,'',"Archetype - jetty must be restarted on redeploy due to database dependency being part of main project instead of jetty. \nI ran into an issue where Jetty failed to restart because of Derby connection remaining active. I started a discussion on the mailing list (http://groups.google.com/group/liftweb/browse_thread/thread/78454f767280b4b5) to confirm it was an issue and wanted to create an issue along with potential fix.\n\nSorry I'm a bit new to Git Hub (and Git.. and Lift for that matter). I'm not sure how to submit a patch exactly but the fix is to move the Derby dependency inside of Jetty so that Jetty manages the Derby instance. This not only allows Derby to restart by also maintains database independence from the application. It is also a good idea to remove the Derby dependency or from the project dependencies or at least change to <scope>provided</scope>. \n\nThe resulting jetty configuration should look like this:\n\n<plugin>\n\t\t\t\t<groupId>org.mortbay.jetty</groupId>\n\t\t\t\t<artifactId>maven-jetty-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<contextPath>/</contextPath>\n\t\t\t\t\t<scanIntervalSeconds>5</scanIntervalSeconds>\n\t\t\t\t</configuration>\n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.apache.derby</groupId>\n\t\t\t\t\t\t<artifactId>derby</artifactId>\n\t\t\t\t\t\t<version>10.4.2.0</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</plugin>"
812,'jonifreeman','JSON path expressions \\ and \\\\ should return JSON value instead of JField\nCurrently JField is returned which does not make any sense, it just complicates the usage of path expressions. For instance instead of this\n\n<pre><code>\n  val JField("bar", JInt(x)) = json \\ "foo" \\ "bar"\n</code></pre>\n\nthe expression should work as\n\n<pre><code>\n  val JInt(x) = json \\ "foo" \\ "bar"\n</code></pre>\n\nAfter the change path expressions work more nicely with other features like extraction:\n\n<pre><code>\nval json = parse(""" { "operations" : [ ........]} """)\n(json \\ "operations").extract[List[Operation]]\n</code></pre>\n'
1095,'dpp','MappedNullableLong doesn\'t display/edit correctly\nA MappedNullableLong field is not displayed correctly. Instead of showing just the number (if Full) or a blank (if Empty), it shows the toString of the Box (i.e., "Empty" or "Full(x)" where x is the contained value). Also, creating a trait with a toForm method and adding it to a MappedNullableLong field doesn\'t work. See https://groups.google.com/d/topic/liftweb/K0v_JkZjYMI/discussion.\n\nExample code:\n\n\n<pre><code>trait NiceNullableLong[T <: Mapper[T]] {\n  self: MappedNullableLong[T] =>\n  \n  override def toString = is.openOr("").toString\n  override def toForm = Full(SHtml.text(toString, \n                                        x => if (x.length == 0) set(Empty) else set(Full(Integer.parseInt(x)))))\n}\n\nobject maxMinutes extends MappedNullableLong(this) with NiceNullableLong[User]\n\n\n</code></pre>\n'
670,'dpp','lift/lift_sbt_prototype/README contains link to dpp/lift_sbt_prototype.git\nThe README file of lift_sbt_prototype (http://github.com/lift/lift_sbt_prototype/blob/master/README) contains a link to the former github.com/dpp/lift_sbt_prototype.git repository. Should be: http://github.com/lift/lift_sbt_prototype.git\n\nThis is also true for SBT prototype for Lift 2.1-SNAPSHOT (http://github.com/lift/lift_21_sbt/blob/master/README)'
104,'mads379',"CalendarMonthView should allow populating records from JavaScript\n\r\nRelated discussion here: http://groups.google.com/group/liftweb/browse_thread/thread/7de2d785a38bf27f\r\n\r\nBr's,\r\nMarius"
387,'dpp',"Support for optional PostgreSQL support for FK constraints\nJon reported that he did not want enforced PG constraints.  I'll make the constraint thing optional (and off by default)."
953,'dpp','Lift Mailer: Email Threading: Adding Unique Email Headers\nhttp://groups.google.com/group/liftweb/browse_thread/thread/cb129299e1510273\n\nWhen using Mailer, desire the ability to set custom (Message-Id, References and/or In-Reply-To) headers for an outgoing email for threading purposes.\n'
528,'dpp','Make the default Actor exception logger not empty\nIn order to deal with library dependencies, Actors have an empty exception logger.  Change this to be based on common.logger'
245,'','Snapshot release lift-webkit: Source jars have only resources and no scala sources\nThe source jars uploaded to the maven snapshot repository for lift-webkit-1.1-SNAPSHOT have no scala sources, they only have resources.'
811,'dpp','make the Menu.param code more flexible\nI have something like this:\n\nval api2DocEntries = List(Menu("dev") / "dev" / **).map(_.toMenu)\n\nand I want to be able to convert it to a List of Menus with a Loc[PageData] instead of Loc[Unit].  There appears to be no good way of doing this.\n'
1094,'dpp',"Stateless requests conditionally\nSee: http://groups.google.com/group/liftweb/browse_thread/thread/fdb9d0df47de6f70#\n\nFor background, see: http://www.assembla.com/wiki/show/liftweb/Stateless_Requests\n\nMany hits to our site are stateless (no session), but sessions are created and kept (for up to 30 mins) for all visitors (human or robot).  We could benefit from the ability to:\n1. Avoid creating sessions until necessary (e.g. imagine a user surfs for a while, then clicks add-to-cart, upon clicking add-to-cart a session could be established)\n2. Avoid creating sessions for some visitors based on criteria such as user agent (e.g. never give googlebot crawlers a session)\n\nI'll use some code here as an illustration of the concept only:\n<pre><code>object LiftRules {\n  type StatelessTestPF = PartialFunction[Req, StatelessMode]\n  val statelessTest = RulesSeq[StatelessTestPF] \n}\n\nobject StatelessMode {\n  /** Establish sessions for visitors */\n  val stateful = 1\n  /** Never establish a session, throw an exception if state is stored */\n  val stateless = 2\n  /** Establish a session if anything is written to the session, e.g. as soon as something is added to the cart */\n  val statefulOnWrite = 3\n  /** Never establish a session, but allow writes to the session, data will be discarded at the end of the request */\n  val statelessAllowWrite = 4 \n}\n\nLiftRules.statelessTest.append {\n  case GoogleBotReq(req) => StatelessMode.statelessAllowWrite\n  case _ => StatelessMode.statefulOnWrite\n}\n\n</code></pre>\n\n"
103,'dpp','SHtml.link assume to url has no parameters\nSHtml.link("/someUrl?x=y",....) will result in an invalid URL in the link:\n\n&lt;a href="/someUrl?x=y?GUID=_"&gt;'
386,'dpp','Problem setting cookie with ajax link\nHello, \nThis ticket has been created on the grounds of this thread: \n[[url:http://groups.google.com/group/liftweb/browse_thread/thread/8c5910bd3af24408|Thread]]\n\n\nLift fails to store a cookie when when running the following:\n\n<pre><code>a(() => {\n\tS.addCookie(HTTPCookie("display","false"))\n\tJsHideId("banner")\n},Text("Text"),("id", "close_header_link"))\n</code></pre>\n\n\nThe problem is re-produced in this example: [[url:http://bit.ly/cy34A3|github]]\n\n'
952,'dpp',"Review of Simply Lift with patch attached\nHi David,\n\nI reviewed part of the simply lift book and attached a patch I created to this ticket. It's the first GIT patch I created so I hope it's correct. \nI created a branch spell_fix in which I did my editing and then created a patch with:\n\ngit format-patch master --stdout > spell_fix.patch"
527,'dpp',"Change EmptyBox to Box[Nothing]\nRight now EmptyBox[_] takes a type parameter... that's wrong... it's gotta be a subclass of Box[Nothing]"
244,'dpp',"lift-textile misprocesses a list without a preceding empty line\nLists work in lift-textile only if there is an empty line preceding it, but this is a deviation from the reference implementation http://textism.com/tools/textile/index.php . \n\nHere's an example:\n\n    These are list items:\n    * Item 1\n    * Item 2\n\nincorrectly yields:\n\n    <p>These are list items:<br></br>* Item 1<br></br>* Item 2</p>"
810,'jonifreeman','List[A] and Map[String, V] can be serialized in JSON\nThese should work for example:\n\n<pre><code>\nscala> parse(""" [1,2,3] """).extract[List[Int]]       \nres0: List[Int] = List(1, 2, 3)\n</code></pre>\n\n<pre><code>\nscala> parse(""" {"firstname":"joe", "lastname":"doe"} """).extract[Map[String, String]]\nres0: Map[String,String] = Map((firstname,joe), (lastname,doe))\n</code></pre>\n'
1093,'lkuczera','Localize strings in S.? by specific locale rather than LocaleCalulator\nOverload S.? function to have another parameter: locale if you want to localize using specific locale rather than using LocaleCalculator for that.\nhttp://groups.google.com/group/liftweb/browse_thread/thread/fc15a58401f6a585/b2006440a6c06183#b2006440a6c06183'
668,'dpp','LiftRules.uriNotFound does not support NotFoundAsTemplate when handling 404s for urls served by ResourceServer\nIn most situations, you can implement your own partial function for LiftRules.uriNotFound, and use NotFoundAsTemplate as a response, thereby specifying a template to be rendered and shown to the user:\n\n    LiftRules.uriNotFound.prepend { case_ => NotFoundAsTemplate(ParsePath("404" :: Nil, "html", false, false)) }\n\nIt looks like if the URL for the current request is handled by the ResourceServer, e.g. something like http://domain.com/classpath/foo, then the code in Req is not expecting a NotFoundAsTemplate response and causes a match error, snippet:\n\nscala.MatchError: \nNotFoundAsTemplate(ParsePath(List(404),html,false,false)) \nat net.liftweb.http.Req.createNotFound(Req.scala:431) \n        at net.liftweb.http.LiftRules$.notFoundOrIgnore(LiftRules.scala:342) \n        at net.liftweb.http.LiftServlet.doService(LiftServlet.scala:181) \n\nI looked at the source, Req.scala:431 \ndef createNotFound: LiftResponse = \n    NamedPF((this, Empty), LiftRules.uriNotFound.toList) match { \n      case DefaultNotFound => Req.defaultCreateNotFound(this) \n      case NotFoundAsResponse(resp) => resp \n      case NotFoundAsNode(node) => LiftRules.convertResponse((node, \n404), \n        S.getHeaders(LiftRules.defaultHeaders((node, this))), \n        S.responseCookies, \n        this) \n    } \n\nAs of right now, this problem exists on this lift powered site I found at: http://www.kungle.de/classpath/foo\n\nHTTP ERROR 500\n\nProblem accessing /classpath/foo. Reason:\n\n    NotFoundAsTemplate(ParsePath(List(404),html,false,false))\nCaused by:\n\nscala.MatchError: NotFoundAsTemplate(ParsePath(List(404),html,false,false))\n\tat net.liftweb.http.Req.createNotFound(Req.scala:431)\n\tat net.liftweb.http.LiftRules$.notFoundOrIgnore(LiftRules.scala:340)\n\tat net.liftweb.http.LiftServlet.doService(LiftServlet.scala:181)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply$mcZ$sp(LiftServlet.scala:86)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tat net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:326)\n\tat net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tat net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:335)\n\tat net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n\tat net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:85)\n\tat net.liftweb.http.LiftServlet.service(LiftServlet.scala:93)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply$mcV$sp(HTTPProvider.scala:61)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:61)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:61)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.URLRewriter$.doWith(Req.scala:618)\n\tat net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:60)\n\tat net.liftweb.http.LiftFilter.service(LiftServlet.scala:586)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ServletFilterProvider.scala:67)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:335)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:334)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:333)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10.apply(Vars.scala:332)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tat net.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply$mcV$sp(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:335)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:334)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:333)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10.apply(Vars.scala:332)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tat net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\n\tat net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:586)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:456)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:245)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:351)\n\tat org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)\n\tat org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)\n\tat org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)\n\tat java.lang.Thread.run(Thread.java:619)\nPowered by Jetty://\n'
102,'dpp','elements aren\'t properly bound inside a <select>\nIn this <stats:options/> is not bound:\n\n&lt;select name="days"&gt;\n  <stats:options/>\n&lt;/select&gt;\n\nbut if I change it to this, the bind works fine (but I no longer have a proper <select>)\n\n&lt;div&gt;\n  <stats:options/>\n&lt;/div&gt;\n\nin my controller I have:\n\ndef options(xhtml: NodeSeq): NodeSeq = {\n  &lt;option value="7"&gt;week&lt;/option&gt;&lt;option value="30"&gt;month&lt;/option&gt;\n}\n\nbind("stats", xhtml, "options" -> options _)'
385,'dpp','Make SiteMap dynamic when running in development mode\nDiscussion here: http://groups.google.com/group/liftweb/browse_frm/thread/31e4f336fe6e7ba1'
951,'davewhittaker','BooleanField always returns false in squeryl-record\nBooleanField in Squeryl-Record is getting always false, even is the DB is true.\n\nThis problem was reported in this google groups, where is large discussion:\nSqueryl Group: https://groups.google.com/d/topic/squeryl/TfVlSW98R2Q/discussion\nLift Group: https://groups.google.com/d/topic/liftweb/Wp_zW9ZH4Eo/discussion'
243,'dpp','Fix stateful rewrite\nStateful rewrite will never be called during stateless rewrite\r\n\r\nStateful rewrite will not be called with Req.nil instance\r\n'
809,'dchenbecker','Lift Notices FadeOut and AJAX Calls Not Working\nSee http://groups.google.com/group/liftweb/browse_thread/thread/bdc94e127af526e3?hl=en for details'
667,'','Lift accidentally exposes full stack trace in production when an Exception occurs processing LiftRules.uriNotFound\nIf Lift code (or app code) throws an exception while processing the LiftRules.uriNotFound, then a full stack trace gets shown to the user even in production mode. I expect the same thing can happen in rewrite rules, and others.\n\nExample output seen here: http://www.kungle.de/classpath/foo\n\nHTTP ERROR 500\n\nProblem accessing /classpath/foo. Reason:\n\n    NotFoundAsTemplate(ParsePath(List(404),html,false,false))\nCaused by:\n\nscala.MatchError: NotFoundAsTemplate(ParsePath(List(404),html,false,false))\n\tat net.liftweb.http.Req.createNotFound(Req.scala:431)\n\tat net.liftweb.http.LiftRules$.notFoundOrIgnore(LiftRules.scala:340)\n\tat net.liftweb.http.LiftServlet.doService(LiftServlet.scala:181)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply$mcZ$sp(LiftServlet.scala:86)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\n\tat net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:326)\n\tat net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tat net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:335)\n\tat net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n\tat net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:85)\n\tat net.liftweb.http.LiftServlet.service(LiftServlet.scala:93)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply$mcV$sp(HTTPProvider.scala:61)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:61)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:61)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.URLRewriter$.doWith(Req.scala:618)\n\tat net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:60)\n\tat net.liftweb.http.LiftFilter.service(LiftServlet.scala:586)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ServletFilterProvider.scala:67)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:335)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:334)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:333)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10.apply(Vars.scala:332)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tat net.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply$mcV$sp(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:335)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:334)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:333)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$10.apply(Vars.scala:332)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:331)\n\tat net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\n\tat net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:586)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:456)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:245)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:351)\n\tat org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)\n\tat org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)\n\tat org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)\n\tat java.lang.Thread.run(Thread.java:619)\nPowered by Jetty://\n'
101,'dpp','ajaxForm executes onSubmit parameter after form transmission\najaxForm(...) with onSubmit parameters execute the JsCmd after serialization of the form.\r\n\r\nFor an example see:\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/1fd366c218b8a8e5'
384,'','Foreign Keys in schemify are being added every time jetty is run\nEvery time I run "mvn clean jetty:run", the foreign key constraints on the models are added to the database table. I am getting duplicate foreign keys for these tables.'
950,'davewhittaker','Connections unexpectedly closed when using DB.use with a JNDI datasource with squerylrecord \n[[url:http://groups.google.com/group/liftweb/browse_thread/thread/4da128e7182fc541|Per this discussion,]] the database connection is often (if not mostly) unexpectedly closed when attempting to use squerylrecord with DB.use and a JNDI DataSource.\n\nTo reproduce:\n\na) Configure a JNDI DataSource in your servlet container.\n\nb) Then in Boot.scala:\n\n1) tell the DefaultConnectionIdentifier the appropriate jndi name. \n2) call SquerylRecord.init() with the appropriate adapter. \n3) use DefaultConnectionIdentifier with the DB.buildLoanWrapper and \nadd it to S.around\n\nc) Use squerylrecord in such a way that it requires a Connection to the DataSource\n\nTests should immediately reveal that the connections squeryl tries to use are unexpectedly closed.'
525,'jonifreeman',"JSON transform function\nCurrently JSON transformations are done with 'map' function. E.g.:\n\njson. map {\n  case JString(s) => JInt(s.toInt)\n  case x => x\n}\n\nAdd a helper function which takes partial function instead:\n\njson. transform {\n  case JString(s) => JInt(s.toInt)\n}\n"
242,'dpp','Add post-commit hook\nAdd a way of executing a function after the commit phase in mapper'
808,'dpp',"Add helpful implicit conversions to FieldError\nIt's hard to create FieldErrors... make it easier"
1091,'dpp','Exception: cannot construct Atom(null)\nWe\'ve run across a situation using 2.4-M2 where the following exception occurs with no stack trace and the UI hangs: \n[pool-2-thread-5] ERROR net.liftweb.util.Schedule - java.lang.IllegalArgumentException: cannot construct Atom(null)\n\nWinnowing it down... \n  def all(in: NodeSeq): NodeSeq = page.flatMap(item => \n    bind("item", in, \n      "starRating" -> (if (item.hotel.diamondRating == null) "" else item.hotel.diamondRating) \n    ) \n  ) \nThe startRating line used to be just \n      "starRating" -> item.hotel.diamondRating \nbut when some data showed up unexpectedly dirty, diamondRating can be null when it should instead be blank. \n\nSee discussion at http://groups.google.com/group/liftweb/browse_thread/thread/eb91f34edd5451c3/bba1623e717460ec#bba1623e717460ec'
666,'','Broken links\nThere are broken links on this page: http://main.scala-tools.org/mvnsites/liftweb-2.0/framework/scaladocs/net/liftweb/actor/LiftActor.html\n\nFor example: \nGenericActor\nhttp://scala-tools.org/mvnsites/liftweb/lift-base/lift-common/scaladocs/net/liftweb/common/GenericActor.html\n\nForwardableActor\nhttp://scala-tools.org/mvnsites/liftweb/lift-base/lift-common/scaladocs/net/liftweb/common/ForwardableActor.html\n\nBoth seem to be broken somehow at the moment (404 response code, apparently)'
100,'mariusdanciu','Comet broken when turning off cookies from container\nThis is about: http://groups.google.com/group/liftweb/browse_thread/thread/330bc420bfc32ea1?hl=en\r\n\r\nFound the problem working on it.\r\n\r\nMarius'
383,'jeppenejsum',"Really deprecate old logging\nDeprecating an object doesn't work, have to deprecate all members: https://lampsvn.epfl.ch/trac/scala/ticket/3115"
949,'dpp','LiftScreen: Validation errors not shown when using Record\nAs seen in http://groups.google.com/group/liftweb/browse_thread/thread/3ad3a424242bcc80/c981ef966284cf40\n\nValidation errors are not shown next to the fields if you are using Record.'
524,'dpp',"Consider allowing OrderBy to take an optional NullsFirst/NullsLast parameter\nIt's not precisely standard syntax, but is supported by a variety of SQL Servers:\n\nhttp://troels.arvin.dk/db/rdbms/#select-order_by\n\nObviously this can be done now with SqlOrderBy, but a cleaner implementation could be desirable."
241,'dpp','Add file upload support to Wizards\nAll a component in Wizard to upload files'
807,'dpp','Html5 output incorrectly lists attributes with null and empty nodes\nTitle sez it all'
1090,'davewhittaker','Early access to S.location breaks snippet resolution\nS.location is stored in a RequestVar and will resolve to Empty if it is accessed before the lift request is initialized.  The best solution seems to be to repeatedly attempt resolution when the RequestVar is Empty\n\nhttps://groups.google.com/d/topic/liftweb/1mEpk4UtDZM/discussion'
665,'dpp','Features that require session state should warn when container sessions are disabled\nYou can stop Lift from requiring session state by adding the following lines to Boot:\n\n<pre><code>\nLiftRules.enableContainerSessions = false\nLiftRules.getLiftSession = req => new LiftSession(req.contextPath, "dummySession", Empty)\n</code></pre>\n\nHowever, if you then use a feature that requires session state (e.g. SHtml.text("some name", s => println("name = " + s)), this does not work (as expected) but with no hint as to why.\n\nAs noted by dpp in http://groups.google.com/group/liftweb/browse_thread/thread/1ab2b2ff91d864d0/3002e42efd9870e4#3002e42efd9870e4,\nthis should at least generate a WARN level log message:\n\n"Yeah.  Please open a ticket on this specific issue (http://ticket.liftweb.net) and I\'ll add some WARN level log messages if you\'ve disable container sessions and are trying to add something to the function table (something stateful)"'
99,'dchenbecker','Mapper is double logging\nSee http://groups.google.com/group/liftweb/browse_thread/thread/7d53c7febb937f45?hl=en'
382,'dpp','SHtml.link doesn\'t handle links with anchor components properly\nSHtml.link doesn\'t handle links that contain anchor components properly.\n\n It always appends the query string part at the end of the supplied path, which is incorrect if the path contains an anchor component. For example, the expression:\n<pre><code>SHtml.link("/foo#bar", () => true, "Test")\n</code></pre>\n yields a link that looks something like:\n<pre><code> /foo#bar?F1234567blahblah=_\n</code></pre>\nwhen it should generate \n<pre><code>/foo?F1234567blahblah=_#bar\n</code></pre>\n.\n\nOne possible remedy would be to modify SHtml.link as follows:\n\n  \n<pre><code>def link(to: String, func: () => Any, body: NodeSeq,\n           attrs: (String, String)*): Elem = {\n    val uri = new java.net.URI(to)\n    fmapFunc((a: List[String]) => {func(); true})(key =>\n            attrs.foldLeft(<a href={uri.getPath + "?" + key + "=_" +\n                                    (if (uri.getQuery != null) "&" + uri.getQuery else "") +\n                                    (if (uri.getFragment != null) "#" + uri.getFragment else "")}>{body}</a>)(_ % _))\n  }\n</code></pre>\n\n'
948,'',"Schemifier fails on new tables when performWrite == false\nI'm using lift-mapper_2.8.1-2.2.jar, and working against a MySql database.\n\nWhen I call Schemifier.schemify with performWrite == false and a metaMapper class for a table that doesn't yet exist, a java.util.NoSuchElementException is thrown in Schemifer.ensureColumns:\n<pre><code>\njava.util.NoSuchElementException: key not found: model_class\n\tat scala.collection.MapLike$class.default(MapLike.scala:223)\n\tat scala.collection.mutable.HashMap.default(HashMap.scala:39)\n\tat scala.collection.MapLike$class.apply(MapLike.scala:134)\n\tat scala.collection.mutable.HashMap.apply(HashMap.scala:39)\n\tat net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$8.apply(Schemifier.scala:212)\n\tat net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$8.apply(Schemifier.scala:212)\n\tat net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$using(Schemifier.scala:58)\n\tat net.liftweb.mapper.Schemifier$$anonfun$6.apply(Schemifier.scala:212)\n\tat net.liftweb.mapper.Schemifier$$anonfun$6.apply(Schemifier.scala:206)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:227)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:227)\n\tat scala.collection.immutable.List.flatMap(List.scala:45)\n\tat net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$ensureColumns(Schemifier.scala:205)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$2.apply(Schemifier.scala:81)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$2.apply(Schemifier.scala:81)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:123)\n\tat scala.collection.immutable.List.foldLeft(List.scala:45)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:81)\n\tat net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:68)\n\tat net.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:606)\n\tat net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tat net.liftweb.mapper.DB$currentConn$.run(DB.scala:593)\n\tat net.liftweb.mapper.DB$.use(DB.scala:603)\n\tat net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:68)\n\tat net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:51)\n\tat bootstrap.liftweb.Boot.boot(Boot.scala:35)\n        ... \n</code></pre>\n\nIf I set performWrite to true, Schemifier.schemify succeeds, and then I can set it to false again and run without a problem, so there is a workaround.  \n\n"
240,'dpp','Add TestCond to access TestCond snippet\n'
523,'jonifreeman','Better JSON support for custom types\nCurrent extension mechanism requires the use of type hints. Support for custom types should be enabled by implementing Serializer trait.'
806,'dpp','Mapper (and probably Record) fields include id={fieldIdentifier}\nWhich causes pain if fieldIdentifer is None when merging into templates'
1089,'dpp','Remove protected access modifier from MailerImpl\nPlease remove the protected access modifier from net.liftweb.util.MailerImpl trait.\n\nAs per discussion at [[url:https://groups.google.com/forum/#!topic/liftweb/DYnHRM8O52k|https://groups.google.com/forum/#!topic/liftweb/DYnHRM8O52k]]\n'
664,'dpp','Support for multiple validation\nSee http://groups.google.com/group/liftweb/browse_thread/thread/90c085d46ba7029d'
98,'','JsObj requires String for property name, ECMA-262 allows for either String or Number\nECMA-262 (http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf) section\r\n11.1.5 describes the object initializer syntax as being either empty braces or braces containing PropertyNameAndValueList. PropertyNameAndValueList is comma-separated sequence of PropertyName : AssignmentExpression. PropertyName is one of Identifier, StringLiteral, or NumericLiteral.\r\n\r\nHowever, JE.JsObj.apply and JsObj both require the key to be a String, so what I would think the natural translation from the JavaScript:\r\n\r\n    {\r\n        headers: {\r\n            1: { sortable: false }\r\n        }\r\n    }\r\n\r\nTo Lift:\r\n\r\n    JsObj("headers" -> JsObj(1 -> JsObj("sortable" -> false)))\r\n\r\nDoes not work:\r\n\r\n    <console>:7: error: type mismatch;\r\n     found   : (Int, net.liftweb.http.js.JsObj)\r\n     required: (String, net.liftweb.http.js.JsExp)\r\n           JsObj("headers" -> JsObj(1 -> JsObj("sortable" -> false)))\r\n                                      ^\r\n\r\nas 1 is not a String. This is trivially worked around by either making ones own JsExp or by converting the Int to a String:\r\n\r\n    JsObj("headers" -> JsObj("1" -> JsObj("sortable" -> false)))\r\n\r\nApparently because JavaScript is entirely willing to treat strings as numbers and vice versa in property names, however it seems like it would be more natural.\r\n\r\nThis is low priority to me.\r\n'
381,'jeppenejsum','snakify should handle abbreviations\nStringHelpers.snakify("HTML")\nres5: java.lang.String = h_t_m_l\n\nStringHelpers.snakify("HTMLEditor")\nres6: java.lang.String = h_t_m_l_editor\n\nI would expect those to be html and html_editor respectively... '
947,'dpp','XmlPost RestHelper Accept header handling\nRef discussion on mailing list:\n\n> NOTE: My case is a POST and not a GET. So I\'d expect it to match the \n> XmlPost using Content-Type. Or is Accept or extension required for \n> POSTs, too? \n\nSeems reasonable.  Please open a ticket and assign it to me for 2.3-release \n(you need to be a watcher of the Assembla Liftweb space to open tickets) \n\n***\n\n2.3-RC3 seems to require that I append ".xml" to the url or use Accept: text/xml for matching XmlPost. (As indicated by http://www.assembla.com/wiki/show/liftweb/REST_Web_Services for navigating web services.) \n\n2.2 also works without ".xml" appended and with Accept: */*, though (as long as the Content-Type is ok). \n\nIs this change a fix or a regression? \n\nMay be related to ticket 942. If I add Accept: text/xml, 2.3-RC3 also works without the extension. \n\nNOTE: My case is a POST and not a GET. So I\'d expect it to match the XmlPost using Content-Type. Or is Accept or extension required for POSTs, too? \n\nhttps://github.com/terjesb/lift-rest-xmlpost \n\nobject IDocService extends RestHelper { \n  serve { \n    case "idoc" :: _ XmlPost xml -> _ => \n      <response/> \n  } \n} \n\n2.2: \n\ncurl -v -X POST -H \'Content-Type: text/xml\' --data-binary @i.xml \nhttp://server:8080/lift-rest-xmlpost/idoc \n> Content-Type: text/xml\n> Accept: */*\n\n< HTTP/1.1 100 Continue \n< HTTP/1.1 200 OK \n< Date: Mon, 21 Mar 2011 21:51:33 GMT \n< Expires: Mon, 21 Mar 2011 21:51:33 UTC \n< Content-Length: 65 \n< Cache-Control: no-cache; private; no-store \n< Content-Type: text/xml; charset=utf-8 \n< Pragma: no-cache \n< Date: Mon, 21 Mar 2011 21:51:33 UTC \n< X-Lift-Version: 2.2 \n< Server: Jetty(6.1.24) \n< \n<?xml version="1.0" encoding="UTF-8"?> \n<response></response> \n\n2.3-RC3: \n\ncurl -v -X POST -H \'Content-Type: text/xml\' --data-binary @i.xml \nhttp://server:8080/lift-rest-xmlpost/idoc \n> Content-Type: text/xml\n> Accept: */*\n\n< HTTP/1.1 100 Continue \n< HTTP/1.1 404 Not Found \n< Date: Mon, 21 Mar 2011 21:47:37 GMT \n< Expires: Mon, 21 Mar 2011 21:47:37 UTC \n< Set-Cookie: JSESSIONID=s4cmybkfhqv41i68yrkwldpe0;Path=/lift-rest- \nxmlpost \n< Content-Length: 119 \n< Cache-Control: no-cache, private, no-store \n< Content-Type: text/html; charset=utf-8 \n< Pragma: no-cache \n< Date: Mon, 21 Mar 2011 21:47:37 UTC \n< X-Lift-Version: 2.3-RC3 \n< Server: Jetty(6.1.24) \n< \n<!DOCTYPE html> \n<html> <body>The Requested URL /lift-rest-xmlpost/idoc was not found \non this server</body> </html> \n\n2.3-RC3 with .xml appended: \n\ncurl -v -X POST -H \'Content-Type: text/xml\' --data-binary @i.xml \nhttp://server:8080/lift-rest-xmlpost/idoc.xml \n> Content-Type: text/xml\n> Accept: */*\n\n< HTTP/1.1 100 Continue \n< HTTP/1.1 200 OK \n< Date: Mon, 21 Mar 2011 22:01:03 GMT \n< Expires: Mon, 21 Mar 2011 22:01:03 UTC \n< Content-Length: 65 \n< Cache-Control: no-cache, private, no-store \n< Content-Type: text/xml; charset=utf-8 \n< Pragma: no-cache \n< Date: Mon, 21 Mar 2011 22:01:03 UTC \n< X-Lift-Version: 2.3-RC3 \n< Server: Jetty(6.1.24) \n< \n<?xml version="1.0" encoding="UTF-8"?> \n<response></response> \n\n2.3-RC3 without extension but Accept header: \n\ncurl -v -X POST -H \'Content-Type: text/xml\' --data-binary @i.xml -H \n\'Accept: text/xml\' http://neviroom-test.nevi.priv:8080/lift-rest-xmlpost/idoc \n> Content-Type: text/xml\n> Accept: text/xml\n\n< HTTP/1.1 100 Continue \n< HTTP/1.1 200 OK \n< Date: Mon, 21 Mar 2011 22:09:18 GMT \n< Expires: Mon, 21 Mar 2011 22:09:18 UTC \n< Content-Length: 65 \n< Cache-Control: no-cache, private, no-store \n< Content-Type: text/xml; charset=utf-8 \n< Pragma: no-cache \n< Date: Mon, 21 Mar 2011 22:09:18 UTC \n< X-Lift-Version: 2.3-RC3 \n< Server: Jetty(6.1.24) \n< \n<?xml version="1.0" encoding="UTF-8"?> \n<response></response> \n'
239,'dpp',"304 responses shouldn't include a content-type header\nPer the HTTP spec"
522,'jonifreeman','Improve case class constructor search when extracting values from JSON\nShould support for instance these cases:\n\ncase class Bike(make: String, price: Int) {\n  def this(price: Int) = this("Trek", price)\n}\n\nparse("""{"price": 350}""" ).extract[Bike]\n\n'
805,'fmpwizard','snippet Msgs.ShowAll should not be a session var\nMore of the global nastiness around Msgs.  I think I need to totally re-write the messages mechanism... perhaps to use wiring.'
1088,'','MappedField#equals should return false in comparison to a different field\n(Trying out\nhttp://www.assembla.com/wiki/show/breakoutdocs/Email2TicketsGateway by\nforwarding the thread.)\n\n---------- Forwarded message ----------\nFrom: David Pollak <feeder.of.the.bears@gmail.com>\nDate: Sun, Aug 7, 2011 at 9:00 AM\nSubject: Re: [Lift] Re: SortedMapperPaginatorSnippet initialSort\nTo: liftweb@googlegroups.com\n\n\n\n\nOn Sun, Aug 7, 2011 at 5:07 AM, Naftoli Gugenheim <naftoligug@gmail.com>wrote:\n\n> I could really just change it to eq instead of ==. You\'re point is true as\n> well, that I could do == on each\'s getClass.\n>\n\nWhoops... I forgot about eq... years of Scala has apparently blinded me to\nstuff that\'s normal in Java... sigh. :-(\n\n\n>\n> But, don\'t you agree that it would be correct for\n> MyMetaMapper.fieldA==MyMetaMapper.fieldB to return false?\n>\n\nYeah... you\'re right (and thank you for being patient and walking me through\nthe implications.)  Could you open a ticket?  You\'re welcome to own the\nticket or assign it to me.\n\n\n> In scala a lot of things depend on a good equals implementation. For\n> instance, what if I want a Map[MappedField[_,_], X], or a\n> Set[MappedField[_,_]? Also, I think people in the FP world consider it bad\n> practice to use eq.\n>\n>\n> On Sat, Aug 6, 2011 at 4:21 AM, David Pollak <\n> feeder.of.the.bears@gmail.com> wrote:\n>\n>> AH... I understand now...\n>>\n>> I do not know how to compare two JVM references to see if they point to\n>> the same underlying object.  It\'s possible in .Net, but not in Java.\n>>\n>> In this particular instance, you might try comparing the class for each\n>> field because each field has a discrete class (at least I think they should)\n>> and the classes should be different between two different fields... does\n>> this help?\n>>\n>>\n>> On Sat, Aug 6, 2011 at 12:12 AM, Naftoli Gugenheim <naftoligug@gmail.com>wrote:\n>>\n>>> The real question is, given two MappedFields, what\'s the correct way to\n>>> test if they are they are the same *field*?\n>>> The context is that when you click a sort header of a paginator, it has\n>>> to check whether it\'s the currently selected header and if so toggle between\n>>> ascending and descending, or else default to ascending.\n>>>\n>>> But being that the signature of equals is that it takes an AnyRef, I\n>>> think the principle of least surprise suggests that two different fields are\n>>> not equal, even if they have the same value (or, being on a MetaMapper\n>>> instance, having a meaningless value).\n>>>\n>>>\n>>> On Fri, Aug 5, 2011 at 5:31 AM, David Pollak <\n>>> feeder.of.the.bears@gmail.com> wrote:\n>>>\n>>>>\n>>>>\n>>>> On Fri, Aug 5, 2011 at 12:30 AM, Naftoli Gugenheim <\n>>>> naftoligug@gmail.com> wrote:\n>>>>\n>>>>> DPP, is that desired behavior, that MyMetaMapper.fieldA ==\n>>>>> MyMetaMapper.fieldB?\n>>>>>\n>>>>\n>>>> I don\'t think it\'s valid to compare fields on the MetaMapper... they\n>>>> should contain no valid values.  Is that the question or did I miss\n>>>> something?\n>>>>\n>>>>\n>>>>>\n>>>>>\n>>>>> On Thu, Aug 4, 2011 at 5:49 PM, Larry Morroni <larry@morroni.com>wrote:\n>>>>>\n>>>>>> They both evaluate to true on first page load and all successive page\n>>>>>> loads.\n>>>>>>\n>>>>>> On Jul 22, 6:19 pm, Naftoli Gugenheim <naftoli...@gmail.com> wrote:\n>>>>>> > Perhaps it\'s a bug. Can you tell me what the following evaluate to?\n>>>>>> > ClaimView.lastName == ClaimView.firstName\n>>>>>> > ClaimView.lastName == ClaimView.lastName\n>>>>>> >\n>>>>>> > If the answers are not false and true respectively, then line 78 of\n>>>>>> > net/liftweb/mapper/view/Paginator.scala should be changed to use eq\n>>>>>> (or the\n>>>>>> > equality implementation should change).\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> > On Fri, Jul 22, 2011 at 2:34 PM, Larry Morroni <la...@morroni.com>\n>>>>>> wrote:\n>>>>>> > > seems that if I add\n>>>>>> > > sort = (0,false)\n>>>>>> > > then I get the list sorted by the first mapped item.  It seems\n>>>>>> like I\n>>>>>> > > shouldn\'t need this since I already tell it what my initialSort is\n>>>>>> >\n>>>>>> > > On Jul 22, 12:09 pm, Larry Morroni <la...@morroni.com> wrote:\n>>>>>> > > > I am running Lift 2.4-M1 and I can\'t get the initialSort on\n>>>>>> > > > SortedMapperPaginatorSnippet to work.  No matter what I set, it\n>>>>>> sorts\n>>>>>> > > > by the column firstName.  I can reproduce this on multiple\n>>>>>> mappers of\n>>>>>> > > > mine.  Does anyone see anything wrong with the syntax or could\n>>>>>> this\n>>>>>> > > > possibly be a bug?\n>>>>>> >\n>>>>>> > > >   val paginator = new SortedMapperPaginatorSnippet(ClaimView,\n>>>>>> > > > ClaimView.lastName,\n>>>>>> > > >     "updatedAt" -> ClaimView.updatedAt,\n>>>>>> > > >     "firstName" -> ClaimView.firstName,\n>>>>>> > > >     "lastName" -> ClaimView.lastName,\n>>>>>> > > >     "claimNumber" -> ClaimView.claimNumber,\n>>>>>> > > >   "streetAddress" -> ClaimView.streetAddress,\n>>>>>> > > >   "dateOfLoss" -> ClaimView.dateOfLoss,\n>>>>>> > > >   "status" -> ClaimView.status\n>>>>>> > > >   )\n>>>>>> > > >   {\n>>>>>> > > > ...}\n>>>>>> >\n>>>>>> > > > Thanks,\n>>>>>> > > > Larry\n>>>>>> >\n>>>>>> > > --\n>>>>>> > > You received this message because you are subscribed to the Google\n>>>>>> Groups\n>>>>>> > > "Lift" group.\n>>>>>> > > To post to this group, send email to liftweb@googlegroups.com.\n>>>>>> > > To unsubscribe from this group, send email to\n>>>>>> > > liftweb+unsubscribe@googlegroups.com.\n>>>>>> > > For more options, visit this group at\n>>>>>> > >http://groups.google.com/group/liftweb?hl=en.\n>>>>>>\n>>>>>> --\n>>>>>> You received this message because you are subscribed to the Google\n>>>>>> Groups "Lift" group.\n>>>>>> To post to this group, send email to liftweb@googlegroups.com.\n>>>>>> To unsubscribe from this group, send email to\n>>>>>> liftweb+unsubscribe@googlegroups.com.\n>>>>>> For more options, visit this group at\n>>>>>> http://groups.google.com/group/liftweb?hl=en.\n>>>>>>\n>>>>>>\n>>>>>  --\n>>>>> You received this message because you are subscribed to the Google\n>>>>> Groups "Lift" group.\n>>>>> To post to this group, send email to liftweb@googlegroups.com.\n>>>>> To unsubscribe from this group, send email to\n>>>>> liftweb+unsubscribe@googlegroups.com.\n>>>>> For more options, visit this group at\n>>>>> http://groups.google.com/group/liftweb?hl=en.\n>>>>>\n>>>>\n>>>>\n>>>>\n>>>> --\n>>>> Lift, the simply functional web framework http://liftweb.net\n>>>> Simply Lift http://simply.liftweb.net\n>>>> Follow me: http://twitter.com/dpp\n>>>> Blog: http://goodstuff.im\n>>>>\n>>>>  --\n>>>> You received this message because you are subscribed to the Google\n>>>> Groups "Lift" group.\n>>>> To post to this group, send email to liftweb@googlegroups.com.\n>>>> To unsubscribe from this group, send email to\n>>>> liftweb+unsubscribe@googlegroups.com.\n>>>> For more options, visit this group at\n>>>> http://groups.google.com/group/liftweb?hl=en.\n>>>>\n>>>\n>>>  --\n>>> You received this message because you are subscribed to the Google Groups\n>>> "Lift" group.\n>>> To post to this group, send email to liftweb@googlegroups.com.\n>>> To unsubscribe from this group, send email to\n>>> liftweb+unsubscribe@googlegroups.com.\n>>> For more options, visit this group at\n>>> http://groups.google.com/group/liftweb?hl=en.\n>>>\n>>\n>>\n>>\n>> --\n>> Lift, the simply functional web framework http://liftweb.net\n>> Simply Lift http://simply.liftweb.net\n>> Follow me: http://twitter.com/dpp\n>> Blog: http://goodstuff.im\n>>\n>>  --\n>> You received this message because you are subscribed to the Google Groups\n>> "Lift" group.\n>> To post to this group, send email to liftweb@googlegroups.com.\n>> To unsubscribe from this group, send email to\n>> liftweb+unsubscribe@googlegroups.com.\n>> For more options, visit this group at\n>> http://groups.google.com/group/liftweb?hl=en.\n>>\n>\n>  --\n> You received this message because you are subscribed to the Google Groups\n> "Lift" group.\n> To post to this group, send email to liftweb@googlegroups.com.\n> To unsubscribe from this group, send email to\n> liftweb+unsubscribe@googlegroups.com.\n> For more options, visit this group at\n> http://groups.google.com/group/liftweb?hl=en.\n>\n\n\n\n-- \nLift, the simply functional web framework http://liftweb.net\nSimply Lift http://simply.liftweb.net\nFollow me: http://twitter.com/dpp\nBlog: http://goodstuff.im\n\n --\nYou received this message because you are subscribed to the Google Groups\n"Lift" group.\nTo post to this group, send email to liftweb@googlegroups.com.\nTo unsubscribe from this group, send email to\nliftweb+unsubscribe@googlegroups.com.\nFor more options, visit this group at\nhttp://groups.google.com/group/liftweb?hl=en.'
663,'dpp','Consider ways of making <lift:Menu.item/> work with custom locs\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b0797533ac84a861'
97,'','JsObj requires String keys\nBut JavaScript (and I don\'t think JSON) does not.\r\n\r\nFrom JsCommands.scala\r\n\r\ntrait JsObj extends JsExp {  \r\n  def props: List[(String,JsExp)]  \r\n  def toJsCmd = props.map{case (n, v) => n.encJs+": "+v.toJsCmd}.mkString("{", ", ", "}")  \r\n  def +*(other: JsObj) = {  \r\n    val np = props ::: other.props  \r\n    new JsObj {  \r\n      def props = np  \r\n    }  \r\n  }  \r\n}\r\n\r\n...\r\n\r\n  object JsObj {  \r\n    def apply(members: (String, JsExp)*): JsObj =  \r\n    new JsObj {  \r\n      def props = members.toList  \r\n    }  \r\n  }  \r\n'
380,'',"Flot 0.6 Plugin Support\nAdd support in lift-flot for the plugin system introduced in Flot 0.6. Dependent upon Lift's general Javascript dependency support (Issue 281)."
946,'jonifreeman',"json.extract[AnyRef] fails\nExtracting AnyRef can be useful if you are using 'type hints'. Then the target type is read from JSON (field 'jsonClass'). \n"
238,'indrajitr','Have minimal support for archetype:create telling user to use archetype:generate instead\nQuoting from committers call notes:\r\n\r\nDavid suggested\r\nthat archetype:create remain supported but generate a project that\r\nessentially tells the user to use archetype:generate instead. Perhaps\r\ninstead of generating a full Maven app. Thought that occurred to me\r\n(Kris) after the call: instead we could just generate a directory with\r\na single README that instructs the user to use maven\r\narchetype:generate instead?\r\n\r\nNeed to explore the possibility.\r\n'
521,'hoffrocket','Upgrade MongoDB driver to 2.0\nthe external api of the  mongo java driver has been changed and will require some minor lift-mongo changes.\n\nthe internals of the api have been changed fairly drastically to address performance and resource starvation issues.\n\nwill leave this ticket open and out of master until 2.0 java driver is production ready (in RC0 as of 2011-05-13)\n'
804,'dpp','Found invalid embed tag content "<meta id="more"></meta>" while embedding\nUgly message should go away.'
1087,'','Loc[T] should be Loc[T <: AnyRef]\n'
662,'hoffrocket','ImageResizer support for gif, bmp detection and jpeg quality\nImageOutFormat detection for gif and bmp instead of defaulting to png\n\nAbility to adjust quality level in writing out a jpeg'
96,'dpp','Allow more flexibility with Mapper fields\nAllow mapper fields to be defined as val, lazy val, object or even private[this] var/def\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/8ace02d953f45f09/19a65cf21cb6b663?hl=en&lnk=gst&q=mapper+object#19a65cf21cb6b663'
379,'indrajitr','Version update for various Maven plugins\n- maven-release-plugin 2.0\n- maven-resource-plugin 2.4.2\n- maven-eclipse-plugin 2.8\n'
945,'dpp','Add collect to Box\nThe collect method from the Scala collections is just plain sweet.\n\nAlso, add a flatCollect'
237,'',"Lift 1.1 swaps <?xml ...> and <!DOCTYPE ...> when the user agent is MSIE\nIn this case, <!DOCTYPE ... > is on the first line and <?xml ..> on the second. This violates XML specification, <?xml ...> must be at the first line of a document.\n\nApparently, this doesn't cause problems with IE itself. But when using other browsers (Opera, FF) set up to mask as IE, the page fails to load and the browsers displays an error.\n\nHow to reproduce: \n\n - load the hello-world project using\n        mvn archetype:generate -U   -DarchetypeGroupId=net.liftweb   -DarchetypeArtifactId=lift-archetype-blank   -DarchetypeVersion=1.0   -DremoteRepositories=http://scala-tools.org/repo-releases   -DgroupId=demo.helloworld   -DartifactId=helloworld   -Dversion=1.0-SNAPSHOT\n - set lift version to 1.1-M7 in pom.xml\n - run the application by\n        mvn jetty:run\n - view the generated HTML page by calling (on Linux):\n        wget -q -O- --user-agent='Mozilla/4.0 (compatible; MSIE 6.0; X11; Linux i686; en) Opera 10.10' 'http://localhost:8080/?' | head\n - The page will have swapped <?xml ...> and <!DOCTYPE ...>."
520,'timperrett','Refactor NodeResponse toResponse so it does the right thing\nCurrently toResponse in NodeResponse uses the IE specific version of AltXML renderer... it should use the more generic 3 param overload so that element tags are properly closed:\n\n<test />\n\nnot\n\n<test></test>\n\n'
803,'dchenbecker','Clean up CometListenee/CometListener/LocalSetupAndShutdown traits\nOn Fri, Dec 24, 2010 at 8:36 AM, Derek Chen-Becker <dchenbecker@gmail.com> wrote:\n\n    As part of my current work project I\'m doing an overhaul of the Comet API docs and having just started I\'ve already found some things that I think we might be able to clean up:\n\n        * LocalSetupAndShutdown - This looks like it was intended to be a marker trait, or possibly to work around some issue with stackable traits in scala < 2.8. If I remove it completely everything appears to continue working fine\n\n\nYeah... you couldn\'t call super on a self-type, so I needed the marker.\n \n\n        * CometListener - This appears to just be an alias to CometListenee. Since comet actors work with ListenerManagers, I think it would make more sense to make the real trait CometListener and make CometListenee a deprecated alias\n\n\nSounds good.\n \n\n    On a related note, now that we\'re strictly on 2.8+ for future releases, I was thinking it would be nice to standardize on a deprecation warning format. Something like "Post-<version> : <message>". That would allow us to report on deprecations for various versions, and would simplify identifying deprecated code for removal later.\n\n\nSounds great.  Please write up a wiki page on this format.'
1086,'dpp',"StateInStateless should lead to nice red warning box, not full fledged exception\nIf there's a state in stateless exception thrown during snippet execution, the nice little red box is not displayed in development mode, but instead a nasty exception is thrown.  The exception should be caught by the red box mechanism.  A demo app can be found at https://github.com/dpp/statefulless"
661,'dpp','change Loc.snippet to use currentValue\nInstead of this:\n\ndef snippet(name: String): Box[NodeSeq => NodeSeq] = {  \n  val test = (name, requestValue.is)  \n\nit should be:\n\ndef snippet(name: String): Box[NodeSeq => NodeSeq] = {  \n  val test = (name, currentValue) \n\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/faf8356c2a4d6168'
95,'mariusdanciu','Add script merge similar to head/tail merge\nProblem:\nOn heavily JavaScript based forms (sections appearing/enabling depending on user input) it is good practice to outsource form creation code to widget/component classes (homegrown). It improves readability of Snippet code and reusability of widgets. For event registration and other client side code, each component class would generate a head/lift:tail and a script tag. While head/tail tags are merged by the Lift framework, the resulting HTML code still remains cluttered with script tags (example below).\n\nSuggested solution:\nIntroduce a script merge that similarly to head/tail merge merges all script tags in head into one and all script tags in tail into a second one.'
378,'dpp','Eearly functions not working in 280_port_refresh\nI compiled Lift myself using the branch "280_port_refresh". I registered a function which should be called early in the request cycle to set the web server\'s character encoding: \n\n<pre>override def boot { \n  def makeUtf8(r: HTTPRequest) { \n    //will never be called! \n    r.setCharacterEncoding("UTF-8") \n  } \n\n  LiftRules.early.append(makeUtf8) \n  ... \n\n} </pre>\n\nThe <code>makeUtf8</code> function is never called although it is correctly appended to the early list (I checked that using breakpoints in Eclipse. I double checked it by temporarily throwing dummy RuntimeExceptions). \n\nSee also http://groups.google.com/group/liftweb/browse_thread/thread/bbf7e66895537d98'
944,'indrajitr','Derby JAR missing from combo/example\nThe generated Example WAR file does not run.  It throws a DB exception because Derby is not part of the packaged WAR'
236,'dpp','Connection pool expansion logic\nAdd more logic and upper bounds on connection pool stuff and maybe even some sort of exception thing'
519,'jeppenejsum','Fix slf4j version\nUpdated logback causes buiild to fail'
802,'dpp','name=.... gets tiring typing in CSS Selector Transforms\nMake a shortcut'
1085,'pbrant','CSS style binding "... *" > None removes element instead of children\nThread http://groups.google.com/group/liftweb/browse_thread/thread/ee2ec1146a79a550/'
660,'','Broken Links: http://liftweb.net/lift.tgz and http://liftweb.net/lift.zip\nOn the download page ( http://liftweb.net/download ), there are two broken links: \nhttp://liftweb.net/lift.tgz and http://liftweb.net/lift.zip'
94,'dpp','Textile parser outputs non-valid output\nThe documentation for MetaData indicates that when the attribute list is empty, it should be scala.xml.Null (not null). Block quotes and footnotes return an element with a null attribute list:\n\n(TextileParser.toHtml("bq. Block quote") \\ "p").map(_.attributes).first\n\nHere\'s a short patch:\n\n<pre>\n--- lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala Fri Oct  9 23:22:53 2009\n+++ lift-textile_patch/src/main/scala/net/liftweb/textile/TextileParser.scala   Fri Oct  9 23:22:37 2009\n@@ -995,7 +995,7 @@\n\n   case class BlockQuote(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {\n     override def toHtml : NodeSeq = {\n-      val par : NodeSeq = XmlElem(null, "p", null, TopScope, flattenAndDropLastEOL(elems) : _*) ++ Text("\\n")\n+      val par : NodeSeq = XmlElem(null, "p", Null, TopScope, flattenAndDropLastEOL(elems) : _*) ++ Text("\\n")\n       XmlElem(null, "blockquote", fromStyle(attrs), TopScope, par : _*)  ++ Text("\\n")\n     }\n   }\n@@ -1023,7 +1023,7 @@\n   case class Footnote(elems : List[Textile], attrs : List[Attribute], num : String) extends ATextile(elems, attrs) {\n     override def toHtml : NodeSeq = {\n       XmlElem(null, "p", fromStyle(AnyAttribute("id", "fn"+num) :: attrs), TopScope,\n-              (XmlElem(null, "sup", null, TopScope, Text(num) : _*) :: flattenAndDropLastEOL(elems)) : _*) ++ Text("\\n")\n+              (XmlElem(null, "sup", Null, TopScope, Text(num) : _*) :: flattenAndDropLastEOL(elems)) : _*) ++ Text("\\n")\n     }\n   }\n</pre>'
377,'jeppenejsum','Enhancements to MetaOpenIDProtoUser\nSome changes to make MetaOpenIDProtoUser more useful:\n\n- Get WellknownAttributes from login request (user, email etc) when creating new user\n- Support loginRedirect\n- Use openIDVendor.PostParamName\n'
943,'dpp',"RestHelper: prefix breaks extension processing\nBased on the simply lift RestHelper example https://github.com/dpp/simply_lift/blob/master/samples/http_rest/src/main/scala/code/lib/BasicWithHelper.scala, with the latest lift 2.3-SNAPSHOT:\n\nCalling the simple5 endpoint with an extension generates an exception:\n\n<pre>\n[http_rest] (master)$ curl http://localhost:8080/simple5/item.json\n<!DOCTYPE html>\n<html> <body>Exception occured while processing\n/simple5/item.json<pre>Message: java.util.NoSuchElementException\n       scala.collection.LinearSeqOptimized$class.last(LinearSeqOptimized.scala:147)\n       scala.collection.immutable.List.last(List.scala:45)\n       net.liftweb.http.ParsePath.wholePath(Req.scala:1178)\n       net.liftweb.http.Req.path(Req.scala:855)\n       net.liftweb.http.Req.&lt;init&gt;(Req.scala:848)\n       net.liftweb.http.Req$$anon$1.&lt;init&gt;(Req.scala:747)\n       net.liftweb.http.Req.withNewPath(Req.scala:747)\n       net.liftweb.http.rest.ListServeMagic$$anon$14.isDefinedAt(RestHelper.scala:682)\n       net.liftweb.http.rest.ListServeMagic$$anon$14.isDefinedAt(RestHelper.scala:679)\n       net.liftweb.http.rest.RestHelper$$anonfun$isDefinedAt$1.apply(RestHelper.scala:467)\n       net.liftweb.http.rest.RestHelper$$anonfun$isDefinedAt$1.apply(RestHelper.scala:467)\n       scala.collection.LinearSeqOptimized$class.find(LinearSeqOptimized.scala:102)\n       scala.collection.immutable.List.find(List.scala:45)\n       net.liftweb.http.rest.RestHelper$class.isDefinedAt(RestHelper.scala:467)\n       code.lib.BasicWithHelper$.isDefinedAt(BasicWithHelper.scala:17)\n       code.lib.BasicWithHelper$.isDefinedAt(BasicWithHelper.scala:17)\n       net.liftweb.util.NamedPF$$anonfun$find$1.apply(NamedPartialFunction.scala:57)\n       net.liftweb.util.NamedPF$$anonfun$find$1.apply(NamedPartialFunction.scala:57)\n       scala.collection.LinearSeqOptimized$class.find(LinearSeqOptimized.scala:102)\n       scala.collection.immutable.List.find(List.scala:45)\n       ...\n</pre>\n\n(http://localhost:8080/simple5/item works fine.)\n\nMy limited testing has shown that I get this kind of error whenever I specify an extension to an endpoint declared using the prefix helper, and is fine if you don't use it.\n\n"
235,'dpp',"Configure fadeOut*** at one place\nI separate business  transaction from UI logic. \r\nWhen create or update business model will occur notice or error, \r\nand then do something for UI by the business transaction\r\n\r\nfor example:\r\nbusiness:\r\ndef MyBusinessTransaction(v: String) : Option[MyModel] = {\r\n      val myModel = MyModel.create.title(v)\r\n      myModel.validate match {\r\n          case Nil => {myModel.save();Some(myModel)}\r\n          case xs => {S.error(xs);None}\r\n      }\r\n}\r\n\r\n\r\nSnippet\r\ndef doSomething(): JsCmd = MyBusinessTransaction(v) match {\r\n    case Some(v) => //do something for UI, such as replace the old value\r\n    case None => //notice what's wrong. I could code  fadeOutErrors(5 seconds, 1 second) if want, but should I code every where?\r\n}\r\n\r\nI think it's better could configure this at one place but not code every where.\r\n\r\nThanks"
518,'dpp','CRUDify view, edit and delete views are broken\nSteps to reproduce:\n1. Setup following model:\n<pre><code>\nimport _root_.net.liftweb.mapper._ \nclass Miner extends LongKeyedMapper[Miner] with IdPK { \n  def getSingleton = Miner \n  object name extends MappedString(this, 50) \n  object url_template extends MappedString(this, 255) \n  object override_function extends MappedText(this) \n  object user extends MappedLongForeignKey(this, User) \n} \n\nobject Miner extends Miner with LongKeyedMetaMapper[Miner] with \nLongCRUDify[Miner] { \n  override def dbTableName = "miners" \n}\n</code></pre>\n2. With following sitemap entry:\n<pre><code>\nMenu(Loc("Miners", "Miners" :: Nil, "Miners", PlaceHolder, \nUser.loginFirst), \n  Miner.menus :_*) ::\n</code></pre>\n\nResult:\ncreate and list views are working, but view,edit and delete ones are producing following error log when invoked:\n<pre><code>\nINFO - Service request (GET) /miners/view/2 took 666 Milliseconds \nINFO - Snippet Failure: SnippetFailure(/miners/view/2 -> \nParsePath(List(miners, view),,true,false),Full(crud.view),Class Not \nFound)\n</code></pre>\nExpected result:\nBroken views output appropriate contents and functionality.\n\nI attached screenshot of UI.\n\n*Also I found out that was broken in 2.0-M4.*'
801,'dpp','create SHtml.genLink to generate an HREF\nCreate a method that takes a function and optionally a URL and generate an URL for HREF:\n\nAlso, open appendFuncToURL\n\n  /**\n   * create an anchor tag around a body\n   *\n   * @to - the target\n   * @param func - the function to invoke when the link is clicked\n   * @param body - the NodeSeq to wrap in the anchor tag\n   * @attrs - the (optional) attributes for the HTML element\n   */\n  def link(to: String, func: () => Any, body: NodeSeq,\n           attrs: ElemAttr*): Elem = {\n    fmapFunc((a: List[String]) => {func(); true})(key =>\n            attrs.foldLeft(<a href={appendFuncToURL(to, key + "=_")}>{body}</a>)(_ % _))\n  }'
1084,'',"Use doctype declaration to detect HTML5 vs XHTML instead of hard-coded declaration in Boot class\nI think it should be possible to peek in the file and look at the first few lines to see whether it is XHTML or HTML5.\n\nCurrently this option is set in your Boot class and applies to all template files regardless of their doctype declaration.\n\nThis creates problems if you want to copy some example files from another project that are XHTML but you are using HTML5 - if you don't convert the XHTML to HTML5 or the other way around you can get some weird behavior.\n\nSince Lift converts the HTML5 to XHTML internally anyway, it shouldn't be much of a problem to mix these two sometimes.\n"
659,'','syntax error on creating reserved word named table\nHi, \nI am getting the following error on build process:\n\norg.postgresql.util.PSQLException: ERROR: syntax error at or near "user"\n\nthink this is because table names from reserved words like user should be quoted in postgres.'
93,'dpp','Binding a snippet in a comet actor\nhttp://groups.google.com/group/liftweb/browse_thread/thread/ad3aa0bdb32f4ebd/6490de2715e65912?hl=en&lnk=gst&q=Binding+a+snippet+in+a+comet+actor#6490de2715e65912\r\n\r\nThe lazy rendering of the Comet Updates causes problems'
376,'mariusdanciu','NoFoundAsTemplate be menu friendly\nSo far we could specify a template that will be rendered when the request URI was not found. It works well except that the SiteMap menu was not rendered and "No navigation defined" message was rendered instead. The reason obviously was that the request URI was nowhere in the sitemap and rendering a different page (the 404 one) caused this behavior. \n\n(the proposed solution will be post on the review board soon)'
942,'dpp','RestHelper: extension should override accept header for json / xml detection\nI\'m experimenting with the simply lift example rest app:\nhttps://github.com/dpp/simply_lift/blob/master/samples/http_rest/src/main/scala/code/lib/BasicWithHelper.scala,\nwith the latest lift 2.3-SNAPSHOT.\n\nThe Accept header detection overrides the url extension\n\nSo:\ncurl http://localhost:8080/simple3/item/1234\ncurl http://localhost:8080/simple3/item/1234.json\n\nreturns json as expected, but:\n\ncurl http://localhost:8080/simple3/item/1234.xml\n\nalso returns json. This appears to be because curl sends by default an <pre>Accept: */*</pre> header, so to get xml you have to:\n\ncurl -H "Accept:" http://localhost:8080/simple3/item/1234.xml\n\nto stop curl sending an Accept header.\n\nExperience with our api (http://content.guardianapis.com) is that developers always get the extension right, but are not so good at getting Accept headers right... And I always test an api with curl\nbefore writing any code, I guess other people do too, so the curl use case is particularly confusing.\n\n[The background: content.guardianapis.com is implemented in scala with Guice and plain servlets. I\'m considering moving the code to use RestHelper.]\n\nIs it possible to make the extension, if provided and valid, always override the accept headers?\n'
25,'dchenbecker','JPA archetype may be broken on enumerations\nTriage this:\r\n\r\n[ERROR] /private/var/www/xxx-master/spa/src/main/scala\r\n[ERROR] /private/var/www/xxx-master/spa/src/main/scala/../scala\r\n[INFO] Compiling 9 source files to\r\n/private/var/www/xxx-master/spa/target/classes\r\n[WARNING]\r\n/private/var/www/xxx-master/spa/src/main/scala/com/xxx/model/EnumvType.scala:48:\r\nerror: value valueOf is not a member of Enumeration with com.xxx.model.Enumv\r\n[WARNING]       return et.valueOf(value).getOrElse(null)\r\n[WARNING]                 ^\r\n[WARNING] one error found'
234,'dpp','NPE in DB.runQuery if a DECIMAL column is NULL\nExample: id is an INTEGER, tco is a DECIMAL, the table is empty:\n\n    scala> DB.runQuery("SELECT SUM(id) FROM contracts")\n    res9: (List[String], List[List[String]]) = (List(sum),List(List(0)))\n\n    scala> DB.runQuery("SELECT SUM(tco) FROM contracts")\n    java.lang.NullPointerException\n\tat net.liftweb.mapper.DB$.net$liftweb$mapper$DB$$asString(DB.scala:265)\n\tat net.liftweb.mapper.DB$$anonfun$resultSetTo$1.apply(DB.scala:287)\n\tat net.liftweb.mapper.DB$$anonfun$resultSetTo$1.apply(DB.scala:287)\n\tat scala.List.map(List.scala:812)\n\tat net.liftweb.mapper.DB$.resultSetTo(DB.scala:287)\n\tat net.liftweb.mapper.DB$$anonfun$runQuery$2$$anonfun$ap...\n'
517,'jeppenejsum','MappedField.asString should use name instead of displayName\n'
800,'dpp','Remove duplicate implicit AFuncHolder conversions\n[error] /home/dpp/proj/health_expense/Frontend/src/main/scala/com/ihealthus/ihDev/snippet/Bills.scala:84: type mismatch;\n[error]  found   : () => Int\n[error]  required: net.liftweb.http.S.AFuncHolder\n[error] Note that implicit conversions are not applicable because they are ambiguous:\n[error]  both method unitToAF in object AFuncHolder of type (f: () => Any)net.liftweb.http.S.AFuncHolder\n[error]  and method toNFunc in object S of type (in: () => Any)net.liftweb.http.S.AFuncHolder\n[error]  are possible conversion functions from () => Int to net.liftweb.http.S.AFuncHolder\n[error]     S.fmapFunc(() => curPage.set(cp - 1))\n'
1083,'indrajitr','Windows IllegalCharsetNameException using liftsh\nWhen trying to invoke liftsh (liftsh.cmd technically) using the 2.4-M3 I get this error:\n\ncmd> .\\liftsh\nError occurred during initialization of VM\njava.nio.charset.IllegalCharsetNameException: UTF-8 -Xss8M -Xmx1G -noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMa\nrkSweepGC -XX:MaxPermSize=512M\n        at java.nio.charset.Charset.checkName(Unknown Source)\n        at java.nio.charset.Charset.lookup2(Unknown Source)\n        at java.nio.charset.Charset.lookup(Unknown Source)\n        at java.nio.charset.Charset.defaultCharset(Unknown Source)\n        at sun.nio.cs.StreamEncoder.forOutputStreamWriter(Unknown Source)\n        at java.io.OutputStreamWriter.<init>(Unknown Source)\n        at java.io.PrintStream.<init>(Unknown Source)\n        at java.lang.System.initializeSystemClass(Unknown Source)\n\nThis appears to not be a new issue, see http://groups.google.com/group/liftweb/browse_thread/thread/cbfc41f7175d4836\n\nI\'m no java guy, but after messing around, it appears to be an issue with how your options are set prior to making the call to java. If I remove the @echo off I see that the call to java is set as: java "-Dfile.encoding=UTF-8 -Xss8M -Xmx1G -noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512M" DEFAULT_OPTS -jar "C:\\Users\\Kevin\\Desktop\\lift-framework-2.4-M3-release-0-ga048847\\lift-framework-a048847\\\\project\\sbt-launch-0.7.7.jar"\n\nObviously java seems to parse this just fine because we end up with the exception, but when passed like this it must screw up how it checks the value of -Dfile.encoding because it sees the encoding being set as: UTF-8 -Xss8M -Xmx1G -noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512M\n\nAttached is a patch that should resolve these issues (remove the quotes from the assignments). There was another side issue that the assignment below is also broken, so that is included. After this fix I was able to run the cmd, build, and ended up in the liftsh console.\n'
658,'dpp','Supressing URL rewriting for jesessionid from Lift\nThe  [[url:http://jcp.org/aboutJava/communityprocess/final/jsr315/index.html|Java Servlet Specification 3.0]], section 7.1.3, defines a fallback mechanism for maintaining a session with clients with disabled/unsupported cookies by rewriting urls.\nThis mechanism however has a number of drawbacks listed here: \nhttp://randomcoder.com/articles/jsessionid-considered-harmful\n\nThe above Link also contains an example of how to disable url rewriting using a servlet filter.\nSwitching url rewriting off in lift would be a nice feature for many Lift Users.\nThis could for example be achieved by adding the functionality described in the above link to the LiftFilter and \nmaking it configurable in LiftRules, e.g. like this:\nLiftRules.jsessionUrlRewriting = false\n'
92,'','Support for i18n formatting/parsing of numbers\nIt would be nice if LIftRules has support for formatting/parsing of numbers in the same way as for dates. Both integers and decimals should be supported\r\n\r\nWhen this is complete, Mapper should use this machinery in MappedInt (for thousand separators) and MappedDouble/Decimal'
375,'dpp','Enhance and Document Screen and Wizard\nCreate nice documentation and significant example code for the Screen and Wizard modules.'
941,'etorreborre','Migrate the specifications to specs2\nspecs2 provides some improvements over specs:\n \n* concurrent execution of examples\n* possibility to write acceptance tests\n* better reliability\n* more matchers like Parser matchers\n\nThe purpose of this task is to migrate all the specifications to specs2.\n'
24,'',"DOM optimizations\nThe DOM processing should be done in 3 distinguished phases:\r\n\r\n1. surround & include processing\r\n2. merge (head, tail, Lift's comet&Ajax scripts, etc)\r\n3. binary transformation (including fixHtml)\r\n\r\nMarius"
233,'dpp',"Feature-Request MetaMapper setObject overload without SQL.Type\nThe problem is that the current MetaMapper code *always* uses the overload of setObject\r\nthat takes the type parameter, and there is no type for, let's say PostgreSQL's CIDR, MAC, UUID, etc.. Types.\r\n\r\nWe could maybe add a flag or special Type that tells MetaMapper to use the setObject without the type, so it would be possible to use db-specific column types.\r\n\r\nBest regards\r\n\r\n"
516,'indrajitr','Update slf4j & logback revisions\nSLF4J 1.6 is released.'
799,'dpp',"Change Loc.Snippet's signature\nTo take => NodeSeq => NodeSeq rather than NodeSeq => NodeSeq"
1082,'dpp','RedirectResponse duplicates contextPath\nThe contextPath is duplicated when performing a RedirectResponse for any application deployed to a non-root contextPath.\n\nPlease refer to the [[url:https://groups.google.com/d/msg/liftweb/Hnph8Ft6Ugs/I-fOm4Hn9EsJ|Google group discussion]] for details'
657,'dpp','SHtml.ajaxRadio()\nBased on...\n[[url:http://www.example.com|http://groups.google.com/group/liftweb/browse_thread/thread/278fc2d8864f9d6/7fe72fb78b4ec2e5ExampleName]]\n...it would be nice to have a SHtml.ajaxRadio()\n\nI did it like this so far (ajaxified SHtml.radio):\n\ndef ajaxRadio(opts: Seq[String], deflt: Box[String], ajaxFunc: (String) => JsCmd,\n                attrs: (String, String)*): ChoiceHolder[String] = {\n\n        val name = Helpers.randomString(10) //thats the ugly part\n        val itemList = opts.map(v => ChoiceItem(v,\n          attrs.foldLeft(<input type="radio" name={name} value={v}/>)(_ % _) %\n                  checked(deflt.filter((s: String) => s == v).isDefined) %\n                  new UnprefixedAttribute("onclick", Text(SHtml.ajaxCall(JsRaw("this.value"), ajaxFunc)._2.toJsCmd), Null))\n          )\n        ChoiceHolder(itemList)\n  }'
91,'dpp','PreCache broken under H2 (possibly others) when used with OrderBy\nsomething like this: Bar.findAll(PreCache(Bar.foo), OrderBy(Bar.created_at))\r\n\r\norg.h2.jdbc.JdbcSQLException: Order by expression CREATED_AT must be \r\nin the result list in this case; SQL statement: \r\nSELECT  DISTINCT foos.id, foos.name FROM foos   WHERE id IN (SELECT \r\nfoo_id FROM bars  WHERE  (created_by = ?) ORDER BY created_at  DESC \r\nLIMIT 100 )  [90068-117] \r\n        at org.h2.message.Message.getSQLException(Message.java:105) \r\n        at org.h2.message.Message.getSQLException(Message.java:116) \r\n        at org.h2.message.Message.getSQLException(Message.java:75) \r\n        at org.h2.command.dml.Query.initOrder(Query.java:323) \r\n        at org.h2.command.dml.Select.init(Select.java:637) \r\n        at org.h2.command.Parser.parseSelect(Parser.java:1343) \r\n        at org.h2.command.Parser.parsePrepared(Parser.java:394) \r\n        at org.h2.command.Parser.parse(Parser.java:290) \r\n        at org.h2.command.Parser.parse(Parser.java:262) \r\n        at org.h2.command.Parser.prepare(Parser.java:204) \r\n        at org.h2.engine.Session.prepare(Session.java:400) \r\n        at org.h2.engine.Session.prepare(Session.java:387) \r\n        at org.h2.table.TableView.recompileQuery(TableView.java:70) \r\n        at org.h2.table.TableView.initColumnsAndTables(TableView.java:83) \r\n        at org.h2.table.TableView.<init>(TableView.java:60) \r\n        at org.h2.table.TableView.createTempView(TableView.java:340) \r\n        at org.h2.expression.ConditionInSelect.optimizeInJoin \r\n(ConditionInSelect.java:150) \r\n        at org.h2.command.dml.Select.prepare(Select.java:725) \r\n        at org.h2.command.CommandContainer.recompileIfRequired \r\n(CommandContainer.java:62) \r\n        at org.h2.command.CommandContainer.query(CommandContainer.java:78) \r\n        at org.h2.command.Command.executeQueryLocal(Command.java:142) \r\n        at org.h2.command.Command.executeQuery(Command.java:123) \r\n        at org.h2.jdbc.JdbcPreparedStatement.executeQuery \r\n(JdbcPreparedStatement.java:99) \r\n        at net.liftweb.mapper.DB$$anonfun$exec$3.apply(DB.scala:295) \r\n        at net.liftweb.mapper.DB$$anonfun$exec$3.apply(DB.scala:294) \r\n        at net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:241) \r\n        at net.liftweb.util.Helpers$.calcTime(Helpers.scala:29) \r\n        at net.liftweb.mapper.DB$.exec(DB.scala:294) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1$$anonfun \r\n$apply$9.apply(MetaMapper.scala:317) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1$$anonfun \r\n$apply$9.apply(MetaMapper.scala:315) \r\n        at net.liftweb.mapper.DB$$anonfun$runPreparedStatement$1.apply \r\n(DB.scala:375) \r\n        at net.liftweb.mapper.DB$$anonfun$runPreparedStatement$1.apply \r\n(DB.scala:372) \r\n        at net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:241) \r\n        at net.liftweb.util.Helpers$.calcTime(Helpers.scala:29) \r\n        at net.liftweb.mapper.DB$.runPreparedStatement(DB.scala:372) \r\n        at net.liftweb.mapper.DB$.prepareStatement(DB.scala:316) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1.apply \r\n(MetaMapper.scala:314) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1.apply \r\n(MetaMapper.scala:306) \r\n        at net.liftweb.mapper.DB$.use(DB.scala:389) \r\n        at net.liftweb.mapper.MetaMapper$class.findMapFieldDb \r\n(MetaMapper.scala:305) \r\n        at me.model.foo$.findMapFieldDb(foo.scala:17) \r\n        at net.liftweb.mapper.MetaMapper$class.findMapDb(MetaMapper.scala: \r\n301) \r\n        at me.model.foo$.findMapDb(foo.scala:17) \r\n        at net.liftweb.mapper.MetaMapper$class.findAll(MetaMapper.scala:267) \r\n        at me.model.foo$.findAll(foo.scala:17) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$dealWithPrecache$1.apply \r\n(MetaMapper.scala:235) \r\n        at net.liftweb.mapper.MetaMapper$$anonfun$dealWithPrecache$1.apply \r\n(MetaMapper.scala:228) \r\n        at scala.List.foreach(List.scala:841) \r\n        at net.liftweb.mapper.MetaMapper$class.dealWithPrecache \r\n(MetaMapper.scala:228) \r\n        at net.liftweb.mapper.MetaMapper$class.findAll(MetaMapper.scala:267) '
374,'jeppenejsum','Deprecate old logging code\nNew logging interface is in place. As per the Lift Conference call, old logging code should be deprecated sooner rather than later.\n\n\n'
940,'','Cannot set SessionVar in RewritePF\nThis is a regression and works in 2.3-M1 for instance.\n\n<pre><code>def rewrites: LiftRules.RewritePF = {\n  case RewriteRequest(ParsePath("user" :: "logout" :: _, _, _, _), _, _) =>\n    RewriteResponse("user" :: "byebye" :: Nil, Map("logout" -> Backend.logout().toString))\n}\n\nLiftRules.statefulRewrite.append(rewrites)\n\nobject Backend {\n  object theSession extends SessionVar[Box[String]](Empty)\n\n  def logout() =\n     theSession.is match {\n       case Full(session) =>\n         theSession(Empty)//exception is thrown here\n      case _ => false\n  }\n}\n\n</code></pre>\n\nAn exception is thrown when trying to set the SessionVar stating that no stateful session exists.'
23,'dpp','Truncated URLs\nI have a problem with URLs whose last path segment contains a \r\nfullstop, eg:   /x/3.1/y/1.11 \r\n\r\nTo illustrate the issue, I created a new lift project and added the \r\nfollowing to the Boot: \r\n\r\n    LiftRules.dispatch.prepend { \r\n        case Req(List("x", x,"y", y), _, _) => () => Full(XmlResponse( <p>x={ x } y={ y } </p> )) \r\n    } \r\n\r\nPointing a browser at  /x/3.1/y/1.11 returns: x=3.1 y=1 \r\nSo y is being truncated at the fullstop. \r\nDoing this in Java with Jetty and a servlet, I can get the full path \r\nout and parse it correctly so is Lift misbehaving? '
232,'dchenbecker','Mapper logging should catch prepared statement exceptions and log them\n'
515,'dpp','Documentation bug for Box\nLooking at the [[url:http://scala-tools.org/mvnsites/liftweb-2.0-M4/framework/lift-base/lift-common/scaladocs/net/liftweb/common/Box.html|ScalaDocs for Box]], the third bullet does NOT work:\n\n<pre><code>scala> Full(1).run("zero") { x: String, y: Int => y.toString }\n<console>:1: error: \';\' expected but \',\' found.\n       Full(1).run("zero") { x: String, y: Int => y.toString }\n                                      ^\n</code></pre>\n\n'
1081,'indrajitr',"Generate Maven Archetypes\nLet's find a way to get the build process to generate Maven Archetypes again"
656,'','Failed to pass test case on MongoDocumentSpecs.scala\nThe zip file copied from http://github.com/lift/lift_21_sbt/zipball/Lift_21 on http://liftweb.net/\n\nSBT project config.\n\n import sbt._\n \n class LiftProject(info: ProjectInfo) extends DefaultWebProject(info) {\n   val liftVersion = "2.1-SNAPSHOT"\n \n   val scalatoolsSnapshot = \n     "Scala Tools Snapshot" at "http://scala-tools.org/repo-snapshots/"\n \n   // If you\'re using JRebel for Lift development, uncomment\n   // this line\n   // override def scanDirectories = Nil\n \n   override def libraryDependencies = Set(\n     "net.liftweb" %% "lift-webkit" % liftVersion % "compile->default",\n     "net.liftweb" %% "lift-mapper" % liftVersion % "compile->default",\n     "net.liftweb" %% "lift-mongodb" % "2.1-M1" % "compile->default",\n     "net.liftweb" %% "lift-mongodb-record" % "2.1-M1" % "compile->default",\n     "net.liftweb" %% "lift-json" % "2.1-M1" % "compile->default",\n     "net.liftweb" %% "lift-json-ext" % "2.1-RC3" % "compile -> default",\n     "org.mortbay.jetty" % "jetty" % "6.1.22" % "test->default",\n     "junit" % "junit" % "4.5" % "test->default",\n     "org.scala-tools.testing" %% "specs" % "1.6.5" % "test->default"\n //    "com.h2database" % "h2" % "1.2.138"\n   ) ++ super.libraryDependencies\n }\n\n\nTest Case is copied from http://github.com/lift/lift/blob/master/framework/lift-persistence/lift-mongodb/src/test/scala/net/liftweb/mongodb/MongoDocumentSpecs.scala\n\n[info] == MongoDocumentSpecs ==\n[info] MongoDocumentSpecs\n[info] MongoDocument should\n[info]   + handle primitives\n[info]   x handle null\n[info]     *null (JObjectParser.scala:49)*\n[info]     net.liftweb.mongodb.JObjectParser$.gd1$1(JObjectParser.scala:49)\n[info]     net.liftweb.mongodb.JObjectParser$.net$liftweb$mongodb$JObjectParser$$serialize(JObjectParser.scala:48)\n[info]     net.liftweb.mongodb.JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$4.apply(JObjectParser.scala:59)\n[info]     net.liftweb.mongodb.JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$4.apply(JObjectParser.scala:58)\n[info]     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n[info]     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n[info]     scala.collection.immutable.List.map(List.scala:45)\n[info]     net.liftweb.mongodb.JObjectParser$.net$liftweb$mongodb$JObjectParser$$serialize(JObjectParser.scala:58)\n[info]     net.liftweb.mongodb.JObjectParser$.serialize(JObjectParser.scala:44)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.create(MongoDocument.scala:50)\n[info]     code.database.mongodocumentspecs.NullTestDoc$.create(MongoDocumentSpecs.scala:65)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$$anonfun$find$1.apply(MongoDocument.scala:69)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$$anonfun$find$1.apply(MongoDocument.scala:65)\n[info]     net.liftweb.mongodb.MongoDB$.useCollection(Mongo.scala:147)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.find(MongoDocument.scala:65)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.find(MongoDocument.scala:80)\n[info]     code.database.mongodocumentspecs.NullTestDoc$.find(MongoDocumentSpecs.scala:65)\n[info]     code.database.MongoDocumentSpecs$$anonfun$3$$anonfun$apply$8.apply(MongoDocumentSpecs.scala:150)\n[info]     code.database.MongoDocumentSpecs$$anonfun$3$$anonfun$apply$8.apply(MongoDocumentSpecs.scala:142)\n[info]     org.specs.specification.LifeCycle$class.withCurrent(ExampleLifeCycle.scala:60)\n[info]     org.specs.specification.Examples.withCurrent(Examples.scala:52)\n[info]     org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:111)\n[info]     org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:111)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3$$anonfun$apply$5.apply(ExampleLifeCycle.scala:211)\n[info]     scala.Option.getOrElse(Option.scala:59)\n[info]     org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExpectations(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:82)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExpectations(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:32)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:80)\n[info]     org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:32)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:80)\n[info]     org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:211)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:190)\n[info]     org.specs.specification.ExampleExecution$$anonfun$2.apply(ExampleLifeCycle.scala:173)\n[info]     org.specs.specification.ExampleExecution.execute(ExampleLifeCycle.scala:244)\n[info]     org.specs.specification.SpecificationExecutor$$anonfun$executeExample$2.apply(SpecificationExecutor.scala:56)\n[info]     org.specs.specification.SpecificationExecutor$$anonfun$executeExample$2.apply(SpecificationExecutor.scala:56)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.SpecificationExecutor$class.executeExample(SpecificationExecutor.scala:56)\n[info]     org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExample(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExample(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:117)\n[info]     org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:117)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleLifeCycle$class.executeExample(ExampleLifeCycle.scala:117)\n[info]     org.specs.specification.Examples.executeExample(Examples.scala:52)\n[info]     org.specs.specification.Examples.executeExample(Examples.scala:52)\n[info]     org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n[info]     org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.Examples.executeExamples(Examples.scala:80)\n[info]     org.specs.specification.ExampleStructure$class.ownFailures(ExampleStructure.scala:58)\n[info]     org.specs.specification.Examples.ownFailures(Examples.scala:52)\n[info]     org.specs.specification.ExampleStructure$class.failures(ExampleStructure.scala:64)\n[info]     org.specs.specification.Examples.failures(Examples.scala:52)\n[info]     org.specs.specification.Examples.failures(Examples.scala:52)\n[info]     org.specs.execute.HasResults$class.issues(HasResults.scala:63)\n[info]     org.specs.specification.Examples.issues(Examples.scala:52)\n[info]     org.specs.execute.HasResults$class.isOk(HasResults.scala:69)\n[info]     org.specs.specification.Examples.isOk(Examples.scala:52)\n[info]     org.specs.runner.NotifierRunner.reportExample(NotifierRunner.scala:104)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportSystem$5.apply(NotifierRunner.scala:97)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportSystem$5.apply(NotifierRunner.scala:96)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     org.specs.runner.NotifierRunner.reportSystem(NotifierRunner.scala:96)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportASpecification$3.apply(NotifierRunner.scala:70)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportASpecification$3.apply(NotifierRunner.scala:66)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     org.specs.runner.NotifierRunner.reportASpecification(NotifierRunner.scala:66)\n[info]     org.specs.runner.NotifierRunner.report(NotifierRunner.scala:59)\n[info]     org.specs.runner.NotifierRunner.report(NotifierRunner.scala:45)\n[info]     org.specs.runner.Reporter$class.reportSpecs(Reporter.scala:195)\n[info]     org.specs.runner.NotifierRunner.reportSpecs(NotifierRunner.scala:45)\n[info]     org.specs.runner.TestInterfaceRunner$$anonfun$run$3.apply(TestInterfaceRunner.scala:68)\n[info]     org.specs.runner.TestInterfaceRunner$$anonfun$run$3.apply(TestInterfaceRunner.scala:68)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.runner.TestInterfaceRunner.run(TestInterfaceRunner.scala:68)\n[info]     org.specs.runner.TestInterfaceRunner.run(TestInterfaceRunner.scala:63)\n[info]     sbt.TestRunner.run(TestFramework.scala:52)\n[info]     sbt.TestRunner.runTest$1(TestFramework.scala:66)\n[info]     sbt.TestRunner.run(TestFramework.scala:75)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11.runTest$2(TestFramework.scala:192)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11$$anonfun$apply$12.apply(TestFramework.scala:203)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11$$anonfun$apply$12.apply(TestFramework.scala:203)\n[info]     sbt.NamedTestTask.run(TestFramework.scala:91)\n[info]     sbt.ScalaProject$$anonfun$sbt$ScalaProject$$toTask$1.apply(ScalaProject.scala:187)\n[info]     sbt.ScalaProject$$anonfun$sbt$ScalaProject$$toTask$1.apply(ScalaProject.scala:187)\n[info]     sbt.TaskManager$Task.invoke(TaskManager.scala:62)\n[info]     sbt.impl.RunTask.doRun$1(RunTask.scala:77)\n[info]     sbt.impl.RunTask.runTask(RunTask.scala:85)\n[info]     sbt.impl.RunTask.sbt$impl$RunTask$$runIfNotRoot(RunTask.scala:60)\n[info]     sbt.impl.RunTask$$anonfun$runTasksExceptRoot$2.apply(RunTask.scala:48)\n[info]     sbt.impl.RunTask$$anonfun$runTasksExceptRoot$2.apply(RunTask.scala:48)\n[info]     sbt.Distributor$Run$Worker$$anonfun$2.apply(ParallelRunner.scala:131)\n[info]     sbt.Distributor$Run$Worker$$anonfun$2.apply(ParallelRunner.scala:131)\n[info]     sbt.Control$.trapUnit(Control.scala:19)\n[info]     sbt.Distributor$Run$Worker.run(ParallelRunner.scala:131)\n[info]   + handle Option\n[info]   x handle Box using JsonBoxSerializer\n[info]     *null (JObjectParser.scala:49)*\n[info]     net.liftweb.mongodb.JObjectParser$.gd1$1(JObjectParser.scala:49)\n[info]     net.liftweb.mongodb.JObjectParser$.net$liftweb$mongodb$JObjectParser$$serialize(JObjectParser.scala:48)\n[info]     net.liftweb.mongodb.JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$4.apply(JObjectParser.scala:59)\n[info]     net.liftweb.mongodb.JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$4.apply(JObjectParser.scala:58)\n[info]     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n[info]     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n[info]     scala.collection.immutable.List.map(List.scala:45)\n[info]     net.liftweb.mongodb.JObjectParser$.net$liftweb$mongodb$JObjectParser$$serialize(JObjectParser.scala:58)\n[info]     net.liftweb.mongodb.JObjectParser$.serialize(JObjectParser.scala:44)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.create(MongoDocument.scala:50)\n[info]     code.database.mongodocumentspecs.BoxTestDoc$.create(MongoDocumentSpecs.scala:79)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$$anonfun$find$1.apply(MongoDocument.scala:69)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$$anonfun$find$1.apply(MongoDocument.scala:65)\n[info]     net.liftweb.mongodb.MongoDB$.useCollection(Mongo.scala:147)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.find(MongoDocument.scala:65)\n[info]     net.liftweb.mongodb.MongoDocumentMeta$class.find(MongoDocument.scala:80)\n[info]     code.database.mongodocumentspecs.BoxTestDoc$.find(MongoDocumentSpecs.scala:79)\n[info]     code.database.MongoDocumentSpecs$$anonfun$3$$anonfun$apply$12.apply(MongoDocumentSpecs.scala:180)\n[info]     code.database.MongoDocumentSpecs$$anonfun$3$$anonfun$apply$12.apply(MongoDocumentSpecs.scala:172)\n[info]     org.specs.specification.LifeCycle$class.withCurrent(ExampleLifeCycle.scala:60)\n[info]     org.specs.specification.Examples.withCurrent(Examples.scala:52)\n[info]     org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:111)\n[info]     org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:111)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3$$anonfun$apply$5.apply(ExampleLifeCycle.scala:211)\n[info]     scala.Option.getOrElse(Option.scala:59)\n[info]     org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExpectations(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:82)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:82)\n[info]     org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExpectations(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:32)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:80)\n[info]     org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3$$anonfun$apply$4.apply(ExampleContext.scala:81)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3$$anonfun$apply$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:32)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:33)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:81)\n[info]     org.specs.specification.ExampleContext$$anonfun$executeExpectations$3.apply(ExampleContext.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:80)\n[info]     org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:211)\n[info]     org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:190)\n[info]     org.specs.specification.ExampleExecution$$anonfun$2.apply(ExampleLifeCycle.scala:173)\n[info]     org.specs.specification.ExampleExecution.execute(ExampleLifeCycle.scala:244)\n[info]     org.specs.specification.SpecificationExecutor$$anonfun$executeExample$2.apply(SpecificationExecutor.scala:56)\n[info]     org.specs.specification.SpecificationExecutor$$anonfun$executeExample$2.apply(SpecificationExecutor.scala:56)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.SpecificationExecutor$class.executeExample(SpecificationExecutor.scala:56)\n[info]     org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExample(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:58)\n[info]     code.database.MongoDocumentSpecs$.executeExample(MongoDocumentSpecs.scala:50001)\n[info]     org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:117)\n[info]     org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:117)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.ExampleLifeCycle$class.executeExample(ExampleLifeCycle.scala:117)\n[info]     org.specs.specification.Examples.executeExample(Examples.scala:52)\n[info]     org.specs.specification.Examples.executeExample(Examples.scala:52)\n[info]     org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n[info]     org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.specification.Examples.executeExamples(Examples.scala:80)\n[info]     org.specs.specification.ExampleStructure$class.ownFailures(ExampleStructure.scala:58)\n[info]     org.specs.specification.Examples.ownFailures(Examples.scala:52)\n[info]     org.specs.specification.ExampleStructure$class.failures(ExampleStructure.scala:64)\n[info]     org.specs.specification.Examples.failures(Examples.scala:52)\n[info]     org.specs.specification.Examples.failures(Examples.scala:52)\n[info]     org.specs.execute.HasResults$class.issues(HasResults.scala:63)\n[info]     org.specs.specification.Examples.issues(Examples.scala:52)\n[info]     org.specs.execute.HasResults$class.isOk(HasResults.scala:69)\n[info]     org.specs.specification.Examples.isOk(Examples.scala:52)\n[info]     org.specs.runner.NotifierRunner.reportExample(NotifierRunner.scala:104)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportSystem$5.apply(NotifierRunner.scala:97)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportSystem$5.apply(NotifierRunner.scala:96)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     org.specs.runner.NotifierRunner.reportSystem(NotifierRunner.scala:96)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportASpecification$3.apply(NotifierRunner.scala:70)\n[info]     org.specs.runner.NotifierRunner$$anonfun$reportASpecification$3.apply(NotifierRunner.scala:66)\n[info]     scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n[info]     scala.collection.immutable.List.foreach(List.scala:45)\n[info]     org.specs.runner.NotifierRunner.reportASpecification(NotifierRunner.scala:66)\n[info]     org.specs.runner.NotifierRunner.report(NotifierRunner.scala:59)\n[info]     org.specs.runner.NotifierRunner.report(NotifierRunner.scala:45)\n[info]     org.specs.runner.Reporter$class.reportSpecs(Reporter.scala:195)\n[info]     org.specs.runner.NotifierRunner.reportSpecs(NotifierRunner.scala:45)\n[info]     org.specs.runner.TestInterfaceRunner$$anonfun$run$3.apply(TestInterfaceRunner.scala:68)\n[info]     org.specs.runner.TestInterfaceRunner$$anonfun$run$3.apply(TestInterfaceRunner.scala:68)\n[info]     scala.Option.map(Option.scala:74)\n[info]     org.specs.runner.TestInterfaceRunner.run(TestInterfaceRunner.scala:68)\n[info]     org.specs.runner.TestInterfaceRunner.run(TestInterfaceRunner.scala:63)\n[info]     sbt.TestRunner.run(TestFramework.scala:52)\n[info]     sbt.TestRunner.runTest$1(TestFramework.scala:66)\n[info]     sbt.TestRunner.run(TestFramework.scala:75)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11.runTest$2(TestFramework.scala:192)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11$$anonfun$apply$12.apply(TestFramework.scala:203)\n[info]     sbt.TestFramework$$anonfun$9$$anonfun$apply$11$$anonfun$apply$12.apply(TestFramework.scala:203)\n[info]     sbt.NamedTestTask.run(TestFramework.scala:91)\n[info]     sbt.ScalaProject$$anonfun$sbt$ScalaProject$$toTask$1.apply(ScalaProject.scala:187)\n[info]     sbt.ScalaProject$$anonfun$sbt$ScalaProject$$toTask$1.apply(ScalaProject.scala:187)\n[info]     sbt.TaskManager$Task.invoke(TaskManager.scala:62)\n[info]     sbt.impl.RunTask.doRun$1(RunTask.scala:77)\n[info]     sbt.impl.RunTask.runTask(RunTask.scala:85)\n[info]     sbt.impl.RunTask.sbt$impl$RunTask$$runIfNotRoot(RunTask.scala:60)\n[info]     sbt.impl.RunTask$$anonfun$runTasksExceptRoot$2.apply(RunTask.scala:48)\n[info]     sbt.impl.RunTask$$anonfun$runTasksExceptRoot$2.apply(RunTask.scala:48)\n[info]     sbt.Distributor$Run$Worker$$anonfun$2.apply(ParallelRunner.scala:131)\n[info]     sbt.Distributor$Run$Worker$$anonfun$2.apply(ParallelRunner.scala:131)\n[info]     sbt.Control$.trapUnit(Control.scala:19)\n[info]     sbt.Distributor$Run$Worker.run(ParallelRunner.scala:131)\n[info] == MongoDocumentSpecs =='
90,'dpp','Saved state of a Mapper entity should be based on flag, not primary key\nThe saved state of a Mapped entity should be based on a flag rather than asking the primary key'
373,'dpp','Namespace attributes generated without lift:surround tag, causing XHTML Strict 1.0 validation failed\nOne of my project requirements is to be complaint with XHTML Strict 1.0.\n\nI have set the Lift to use XHTML Strict 1.0 and the Lift generates the page:\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns:lift="http://liftweb.net/" xmlns="http://www.w3.org/1999/xhtml">\n<head>\n<title>Cliff\'s Test</title>\n</head>\n<body>\n<p>\nHello world!\n</p>\n<form action="/survey/" method="post">\n<p xmlns:lift="http://liftweb.net/" xmlns="http://www.w3.org/1999/xhtml">\n<input name="F63599703223BC2" type="submit" value="New" />\n<label for="comments">Comments</label><br />\n<textarea rows="10" name="F63599693222EH4" cols="40" id="comments">ABC</textarea>\n<input name="F63599703223BC2" type="submit" value="New" />\n</p>\n</form>\n<script type="text/javascript" src="/survey/ajax_request/liftAjax.js"></script>\n<script type="text/javascript">\n// <![CDATA[\njQuery(document).ready(function() {liftAjax.lift_successRegisterGC();});\nvar lift_page = "F63599693221SZP";\n// ]]>\n</script></body>\n</html>\n\nIt seems to be OK, but when I put them into W3C validator, it points out 1 error:\n\n Line 13, Column 43: Attribute "xmlns" is not a valid attribute. Did you mean "onmouseup" or "onmouseover"?\n<p xmlns:lift="http://liftweb.net/" xmlns="http://www.w3.org/1999/xhtml">\n\nYou have used the attribute named above in your document, but the document type you are using does not support that attribute for this element. This error is often caused by incorrect use of the "Strict" document type with a document that uses frames (e.g. you must use the "Transitional" document type to get the "target" attribute), or by using vendor proprietary extensions such as "marginheight" (this is usually fixed by using CSS to achieve the desired effect instead).\n\nThis error may also result if the element itself is not supported in the document type you are using, as an undefined element will have no supported attributes; in this case, see the element-undefined error message for further information.\n\nHow to fix: check the spelling and case of the element and attribute, (Remember XHTML is all lower-case) and/or check that they are both allowed in the chosen document type, and/or use CSS instead of this attribute. If you received this error when using the <embed> element to incorporate flash media in a Web page, see the FAQ item on valid flash.\n\n\n\nMy original code is:\t\t\t\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml" xmlns:lift="http://liftweb.net/">\n<head>\n<title>Cliff\'s Test</title>\n</head>\n<body>\n<p>Hello world!</p>\n<lift:main.list form="POST">\n<p>\n<act:new/>\n<label for="comments">Comments</label>\n<br />\n<act:comment/>\n<act:new/>\n</p>\n</lift:main.list>\n</body>\n</html>\n\nMy preliminary analysis is as below:\nI have done some investigation and found:\n1. The problem does not appear if I use lift:surround\n2. It will appear if I do not use lift:surround, namely I do not use any template.\n\nMy guess is:\n1. using lift:surround, the html tag, which has the xmlns and xmlns:lift attribute,  is in the template file; and my main file\'s root tag is lift:surround and no namespace info. In this case, the xml node sequence passed to bind method does not have any namespace information, therefore the namespaces are not rendered. This is what I expected.\n2. when not using template, the html tag with the xmlns and xmlns:lift attribute is the root tag of my main file, and the xml node sequence passed to bind method have the namespace information, therefore, the bind method does not try to detect the rendering context and does nothing to the node sequence and the namespaces get rendered.\n\nI think that the bind method should suppress xmlns attributes.\n\nMy test project can be found at http://github.com/zhaotq/playliftweb\n'
939,'dpp','ProtoExtended session uses bad construct\nProtoExtendedSession uses LoanWrapper to check for the cookie availability.  This is a mis-use of LoanWrapper (which should only be used for allocating/deallocating resources during a request.\n\nAdd LiftRules.earlyInStateful and LiftRules.earlyInStateless which are sets of functions executed early in the stateful or stateless request cycle (after the loan wrappers have been allocated) to allow for handling certain cases early in the cycle.\n\nUpdate ProtoExtendedSession to use the new mechanism.'
231,'dchenbecker','Mapper generated key support is incorrect\nIt bases generated key fetches on the dbPrimaryKey_? property instead of dbAutogenerated_?'
514,'dpp','apply(Empty) does not do one one would expect for MappedString\nUser.findAll(By(User.device_token, token)) \n    .foreach(_.device_token(Empty).save) \n\ncompiles, but is essentially a no-op\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/9b7fbd7389f232bd'
797,'dpp','CometActors should be treated as snippets\nRather than <lift:comet type="Chat"/>, CometActors should be consulted in snippet invocation, e.g.: <lift:Chat/> will find the CometActor'
1080,'jonifreeman',"EnumSerializer fails when when multiple enums are used\nlift-json-ext's EnumSerializer and EnumNameSerializer do not work properly when multiple enums are used to serialize/deserialize data.\n\nThe root cause appears to be the use of,\n\n<pre><code>  val EnumerationClass = classOf[E#Value]\n</code></pre>\n\nwhich returns the same class for all Enumeration-deriving classes, and therefore the subsequent match:\n\n<pre><code>    PartialFunction[(TypeInfo, JValue), E#Value] = {\n      case (TypeInfo(EnumerationClass, _), json) => json match {\n</code></pre>\n\nmatches against any possible enums, leading to -- at best -- a runtime failure because the enum value cannot be found, or -- at worst -- a sneaky failure since a different enum value may be returned.\n\nI'm attaching a test that demonstrates the issue with EnumNameSerializer.\n"
655,'','Callbacks on conversion failure for Mapper and Record\nWhen a form is submitted and for example a date field contains letters, the conversion in the respective field seems to fail silently, and the original value is not changed.\n\nIt would be nice to have a standard way to perform some action when this happens (such as informing the user).'
89,'dchenbecker','Fix Date/Time parsing\nIt should be reconfigured to use Joda Time'
372,'mariusdanciu','Allow streaming a file directly using an OutputStream\nDiscussion here: http://groups.google.com/group/liftweb/browse_frm/thread/1bfc18d9410ee047\n'
938,'dpp','MappedLongForeignKey::asJsExp should generate JE.JsNull\nSimilarly to Defect # 282, a *MappedLongForeignKey* will a null value will be emitted as a 0 by *asJsExp*.  A _null_ Long should be emitted as a *JsNull*.  Defect 282 corrected *asJsonValue*, but did not correct *asJsExp*.'
230,'indrajitr',"Keep build plugin and report plugin configuration consistent\nEnsure build plugin and report plugin configuration are set up explicitly. Since report plugin configuration doesn't apply to build plugin [1] although it should.\r\n\r\nFurther, in Maven 3, plugin configuration in the <reporting> section no longer affects plugins in the <build> section of the POM [2].\r\n\r\n[1] http://groups.google.com/group/liftweb/browse_thread/thread/36b4450ec7acb7c9/e26b9f1e460b69d0\r\n[2] http://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html#Maven3.xCompatibilityNotes-SiteandReporting"
513,'dpp','Possible lift-mapper bug under Scala 2.8\nAfter porting KIX (Football World Cup tipping) from Scala 2.7.7 to Scala 2.8 the following error shows up:\n\n<pre><code>\nMessage: java.lang.NullPointerException\n\tnet.liftweb.mapper.MapperRules$$anonfun$5.apply(MetaMapper.scala:125)\n\tnet.liftweb.mapper.MapperRules$$anonfun$5.apply(MetaMapper.scala:125)\n\tnet.liftweb.mapper.MappedField$class.dbColumnName(MappedField.scala:620)\n</code></pre>\n\nYou can reproduce it by taking it from _git://github.com/weiglewilczek/kix.git_ using the _2-hseeberger_ branch.'
796,'dpp','add a snippet attribute\nIn addition to <div class="lift:xxxx"/>, snippets should be invocable as <div snippet="snippet?param=value">\n\n'
1079,'jonifreeman','Improved support for custom collections in Lift JSON\nIt is currently not possible to provide a custom serializer for collection types. Adding support for IndexedSeq\'s for instance does not work now:\n\n<pre><code>\nclass IndexedSeqSerializer extends Serializer[IndexedSeq[_]] {\n  def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), IndexedSeq[_]] = {\n    case (TypeInfo(clazz, ptype), json) if classOf[IndexedSeq[_]].isAssignableFrom(clazz) => json match {\n      case JArray(xs) => \n        val t = ptype.getOrElse(throw new MappingException("parameterized type not known"))\n        xs.map(x => Extraction.extract(x, TypeInfo(t.getActualTypeArguments()(0).asInstanceOf[Class[_]], None))).toIndexedSeq\n      case x => throw new MappingException("Can\'t convert " + x + " to IndexedSeq")\n    }\n  }\n\n  def serialize(implicit format: Formats): PartialFunction[Any, JValue] = {\n    case i: IndexedSeq[_] => JArray(i.map(Extraction.decompose).toList)\n  }\n}\n</code></pre>\n'
88,'timperrett',"Handle PayPal IPN messages that don't have payment status\nThe PayPal module assumes that all IPN messages have a payment status.  However, some don't and those that don't aren't passed to the user defined PaypalIPN.actions method.  See discussion at http://groups.google.com/group/liftweb/browse_thread/thread/462644a2b29e2b7f"
371,'dpp','OneToMany.save should call apply(obj) on LongMappedForeignKey\n'
654,'jonifreeman',"Values can't be extracted from JSON with Map[String, List[String]]\nhttp://groups.google.com/group/liftweb/browse_thread/thread/ab7527562103869e/78bec05608b68cd4?show_docid=78bec05608b68cd4"
937,'rusho',"PasswordField not storing salt\nRecord PasswordField doesn't store and load hashed values properly.  It hashes new passwords with randomly generated salt without storing the salt, and re-hashes the database value with a new salt when loading it.  There is no mechanism to actually match against the original password.\n\nA test case is provided at https://gist.github.com/872498 .\n"
229,'dpp',"Ability for Attribute binding to not emit an attribute\nhttp://groups.google.com/group/liftweb/browse_thread/thread/2f78c7bf9dcd8c79\n\nAlex Black needs the ability to not emit an attribute conditionally at an attribute binding location.\n\nGiving null use to suppress the attribute, but that has since stopped working, and it's using null besides.\n"
512,'dpp','Ability to generate database statement from Seq[QueryParam[A]]\nGiven a Seq[QueryParam[A]] and a MetaMapper[A], there\'s currently no way to get the statement generated by these QueryParams when invoking MetaMapper[A]#findAll(...). It is therefore impossible to unit test modular queries or similar, and QueryParams become "black boxes", which introduces problems on its own.\n\nBy introducing a method like "MetaMapper[A]#createQuery(QueryParam[A]*)" and "MetaMapper[A]#createQuery(Seq[SelectableField], QueryParam[A]*)", these issues would be eliminated.'
795,'eltimn','Add support for MongoOptions in MongoDB\nAdd an option to pass a MongoOptions (or alternative) when defining a MongoDB instance thus we can configure some connection parameters such as pool size, timeouts, etc..'
87,'',"Inaccurate ranges for previous and next (page) in CRUDify \nCRUDify's pagination size is 20, but the ranges for the previous and next links use 21! Stange maths ..."
370,'dpp',"When setting the FK of a MappedForeignKey its _obj should not be uncached unless its incorrect\nSee #165.\nWhen the currently cached obj's PK matches the new FK, it should not be uncached.\nThe current behavior interacts badly with the current implementation of MappedOneToMany.save, which sets some of its children's FK. Subsequently calling obj on the child will reload a new instance of its parent. Thus the child cannot be relied upon to remove itself from its parent (via OneToMany) because it will be pending deletion on the wrong parent instance.\nAdmittedly this is a corner case but the situation could be improved.\n"
653,'dpp','DisplayWithLabel\'s toForm is missing the error\nDisplayWithLabel is missing the error message:\n<lift:msg id={id} errorClass="lift_error"/>\n\nIt\'s a quick fix, toForm should yield:\n\n<div id={ id + "_holder" }>\n<div><label for={ id + "_field" }>{ displayName }</label></div>\n{ control }\n<lift:msg id={id} errorClass="lift_error"/>\n</div> \n\n'
936,'eltimn',"Change mongodb.fields' type param to BsonRecord\nThe type parameters for the custom mongo fields need to be changed from MongoRecord to BsonRecord so they can be used in the latter."
228,'indrajitr','Version update for build plugins\nMajor ones in the list:\r\n\r\n- maven-scala-plugin 2.3.1\r\n- maven-changes-plugin 2.3\r\n- maven-jar-plugin 2.3'
511,'dpp',"POSTing XML sends the wrong content-type headers\nThere's a bunch of problems with Posting XML and such with TestKit... fix them"
794,'dpp','MenuCssClass not displaying css in li\nHow do I use MenuCssClass locparam? I tried to do it this way:\n\nMenu("Menu1") / "path1" >> MenuCssClass("classMenu1") submenus( ... ),\nMenu("Menu2") / "path2" >> PlaceHolder >> MenuCssClass("classMenu2") submenus( ... ),\nMenu("Menu3") / "path3" >> MenuCssClass("classMenu3")\n\nbut there is no class attribute generated in any <ul> or <li>. What am I doing wrong?\n\nThanks'
1077,'jonifreeman','lift-json extraction fails on Map with algebraic data structure\nrelevant topic in mailing list:https://groups.google.com/forum/#!starred/liftweb/ZpcDpNphGMs\n\nI have an algebraic data structure,  SingleOrVector. I\'ve made a serializer for it and it works fine if it\'s not inside a Map, but if I put it inside a map I get an error:\n\n*\nimport net.liftweb.json.Serialization._\nimport net.liftweb.json._\n\nobject Test {\n\n  class SingleOrVectorSerializer extends Serializer[SingleOrVector[Double]] {\n    private val singleOrVectorClass = classOf[SingleOrVector[Double]]\n\n    def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), SingleOrVector[Double]] = {\n      case (TypeInfo(`singleOrVectorClass`, _), json) => json match {\n        case JObject( List(JField("val", JDouble(x:Double)) ) ) => SingleValue(x)\n        case JObject( List(JField("val", JArray(x:List[JDouble])) ) ) => VectorValue( x.map(_.num).toIndexedSeq )\n        case x => throw new MappingException("Can\'t convert " + x + " to SingleOrVector")\n      }\n    }\n\n    def serialize(implicit format: Formats): PartialFunction[Any, JValue] = {\n      case SingleValue(x:Double) => JObject( List(JField("val", JDouble(x)) ) )\n      case VectorValue(x:Vector[Double]) => JObject( List( JField("val", JArray( x.toList.map(JDouble(_)) ) ) ) )\n    }\n  }\n\n\n  implicit val formats = DefaultFormats +  new SingleOrVectorSerializer\n\n\n  sealed trait SingleOrVector[A]\n  case class SingleValue[A](value:A) extends SingleOrVector[A]\n  case class VectorValue[A](value:IndexedSeq[A]) extends SingleOrVector[A]\n\n  case class A(a:Map[String,SingleOrVector[Double]])\n  case class B(b:SingleOrVector[Double])\n  def main(args: Array[String]) {\n\n    val jsonString1 =  write( B(SingleValue(2.0)) )\n    val x = read[B](jsonString1) //this works.\n    println(x)\n\n    val jsonString2 =  write( A(Map("hello"->SingleValue(2.0))) )\n    val y = read[A](jsonString2) //this fails...\n    println(y) \n\n  }\n}\n\nError:\n\nException in thread "main" net.liftweb.json.MappingException: unknown error\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:45)\n\tat net.liftweb.json.JsonAST$JValue.extract(JsonAST.scala:290)\n\tat net.liftweb.json.Serialization$.read(Serialization.scala:48)\n\tat Test$.main(testjsonbug2.scala:48)\n\tat Test.main(testjsonbug2.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: java.lang.IndexOutOfBoundsException: 0\n\tat scala.collection.LinearSeqOptimized$class.apply(LinearSeqOptimized.scala:51)\n\tat scala.collection.immutable.List.apply(List.scala:45)\n\tat net.liftweb.json.ScalaSigReader$.findPrimitive$1(ScalaSig.scala:68)\n\tat net.liftweb.json.ScalaSigReader$.findArgType(ScalaSig.scala:74)\n\tat net.liftweb.json.ScalaSigReader$.readConstructor(ScalaSig.scala:26)\n\tat net.liftweb.json.Meta$$anonfun$2.apply(Meta.scala:114)\n\tat net.liftweb.json.Meta$$anonfun$2.apply(Meta.scala:112)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Meta$.parameterizedTypeOpt$1(Meta.scala:112)\n\tat net.liftweb.json.Meta$.mkConstructor$1(Meta.scala:123)\n\tat net.liftweb.json.Meta$.fieldMapping$1(Meta.scala:139)\n\tat net.liftweb.json.Meta$.mkContainer$1(Meta.scala:106)\n\tat net.liftweb.json.Meta$.fieldMapping$1(Meta.scala:135)\n\tat net.liftweb.json.Meta$.toArg$1(Meta.scala:153)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1$$anonfun$apply$1.apply(Meta.scala:98)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1$$anonfun$apply$1.apply(Meta.scala:97)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1.apply(Meta.scala:97)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1.apply(Meta.scala:96)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Meta$.constructors$1(Meta.scala:96)\n\tat net.liftweb.json.Meta$$anonfun$mappingOf$1.apply(Meta.scala:164)\n\tat net.liftweb.json.Meta$$anonfun$mappingOf$1.apply(Meta.scala:159)\n\tat net.liftweb.json.Meta$Memo.memoize(Meta.scala:198)\n\tat net.liftweb.json.Meta$.mappingOf(Meta.scala:159)\n\tat net.liftweb.json.Extraction$.mkMapping$1(Extraction.scala:192)\n\tat net.liftweb.json.Extraction$.net$liftweb$json$Extraction$$extract0(Extraction.scala:194)\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:42)\n\t... 9 more\n\nProcess finished with exit code 1'
86,'dchenbecker','Schemify SQL-generation problem with Oracle\nLift (1.0.2) with oracle (10.2, and using latest drivers), schemify fails on adding a column to a model:\r\nINFO - ALTER TABLE table_name ADD COLUMN label VARCHAR(1000)\r\nERROR - Failed to Boot\r\njava.sql.SQLException: ORA-00904: : invalid identifier\r\n\r\nThe correct syntax for this in oracle is:\r\nALTER TABLE table_name ADD label VARCHAR(1000)\r\n'
369,'dpp','Enabling logging in mapper throws UndeclaredThrowableException instead of SQLException \nHow to reproduce:\n\n- Enable logging in MapperSpecs\n- Run tests and watch "enforce NOT NULL" fail\n- Cause: the expected SQL Exception is not thrown, instead an UndeclaredThrowableException is thrown:\n\norg.specs.runner.UserError: java.lang.reflect.UndeclaredThrowableException: null\n\tat $Proxy5.executeQuery(Unknown Source)\n\tat net.liftweb.mapper.PostgreSqlDriver$$anonfun$performInsertWithGenKeys$2.apply(Driver.scala:267)\n\tat net.liftweb.mapper.PostgreSqlDriver$$anonfun$performInsertWithGenKeys$2.apply(Driver.scala:265)\n\tat net.liftweb.mapper.DB$$anonfun$runPreparedStatement$2.apply(DB.scala:548)\n\tat net.liftweb.mapper.DB$$anonfun$runPreparedStatement$2.apply(DB.scala:547)\n\tat net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:247)\n\tat net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tat net.liftweb.mapper.DB$.runPreparedStatement(DB.scala:546)\n\tat net.liftweb.mapper.DB$.prepareStatement(DB.scala:489)\n\tat net.liftweb.mapper.PostgreSqlDriver$.performInsertWithGenKeys(Driver.scala:264)\n\tat net.liftweb.mapper.DriverType.performInsert(Driver.scala:81)\n\tat net.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:749)\n\tat net.liftweb.mapper.MetaMapper$$anonfun$15.apply(MetaMapper.scala:694)\n\tat net.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:570)\n\tat net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tat net.liftweb.mapper.DB$currentConn$.run(DB.scala:557)\n\tat net.liftweb.mapper.DB$.use(DB.scala:567)\n\tat net.liftweb.mapper.MetaMapper$class.save(MetaMapper.scala:693)\n\tat net.liftweb.mapper.SampleModel$.save(MapperSpecs.scala:385)\n\tat net.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:87)\n\tat net.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:87)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.mapper.Safe$.runSafe(Safe.scala:45)\n\tat net.liftweb.mapper.Mapper$class.runSafe(Mapper.scala:53)\n\tat net.liftweb.mapper.SampleModel.runSafe(MapperSpecs.scala:399)\n\tat net.liftweb.mapper.Mapper$class.save(Mapper.scala:86)\n\tat net.liftweb.mapper.SampleModel.save(MapperSpecs.scala:399)\n\tat net.liftweb.mapper.MapperSpecs$$anonfun$2$$anonfun$apply$1$$anonfun$apply$40.apply(MapperSpecs.scala:148)\n\tat org.specs.specification.LifeCycle$class.withCurrent(ExampleLifeCycle.scala:64)\n\tat org.specs.specification.Examples.withCurrent(Examples.scala:52)\n\tat org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:108)\n\tat org.specs.specification.Examples$$anonfun$specifyExample$1.apply(Examples.scala:108)\n\tat org.specs.specification.ExampleExecution$$anonfun$3$$anonfun$apply$5.apply(ExampleLifeCycle.scala:195)\n\tat scala.Option.getOrElse(Option.scala:61)\n\tat org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:86)\n\tat org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:55)\n\tat org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:86)\n\tat org.specs.specification.LifeCycle$$anonfun$executeExpectations$1.apply(ExampleLifeCycle.scala:86)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.LifeCycle$class.executeExpectations(ExampleLifeCycle.scala:86)\n\tat org.specs.specification.BaseSpecification.executeExpectations(BaseSpecification.scala:55)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1$$anonfun$apply$2.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1$$anonfun$apply$2.apply(ExampleContext.scala:58)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:31)\n\tat org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:32)\n\tat org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:32)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2.apply(ExampleContext.scala:57)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:57)\n\tat org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1$$anonfun$apply$2.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1$$anonfun$apply$2.apply(ExampleContext.scala:58)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2$$anonfun$apply$1.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$class.id$1(ExampleContext.scala:31)\n\tat org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:32)\n\tat org.specs.specification.ExampleContext$$anonfun$1.apply(ExampleContext.scala:32)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2.apply(ExampleContext.scala:58)\n\tat org.specs.specification.ExampleContext$$anonfun$executeExpectations$2.apply(ExampleContext.scala:57)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.ExampleContext$class.executeExpectations(ExampleContext.scala:57)\n\tat org.specs.specification.Examples.executeExpectations(Examples.scala:52)\n\tat org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:195)\n\tat org.specs.specification.ExampleExecution$$anonfun$3.apply(ExampleLifeCycle.scala:182)\n\tat org.specs.specification.ExampleExecution$$anonfun$2.apply(ExampleLifeCycle.scala:165)\n\tat org.specs.specification.ExampleExecution.execute(ExampleLifeCycle.scala:215)\n\tat org.specs.specification.SpecificationExecutor$$anonfun$executeExample$1.apply(SpecificationExecutor.scala:51)\n\tat org.specs.specification.SpecificationExecutor$$anonfun$executeExample$1.apply(SpecificationExecutor.scala:51)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.SpecificationExecutor$class.executeExample(SpecificationExecutor.scala:51)\n\tat org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:55)\n\tat org.specs.specification.BaseSpecification.executeExample(BaseSpecification.scala:55)\n\tat org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:124)\n\tat org.specs.specification.ExampleLifeCycle$$anonfun$executeExample$1.apply(ExampleLifeCycle.scala:124)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.ExampleLifeCycle$class.executeExample(ExampleLifeCycle.scala:124)\n\tat org.specs.specification.Examples.executeExample(Examples.scala:52)\n\tat org.specs.specification.Examples.executeExample(Examples.scala:52)\n\tat org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n\tat org.specs.specification.Examples$$anonfun$executeExamples$1.apply(Examples.scala:80)\n\tat scala.Option.map(Option.scala:70)\n\tat org.specs.specification.Examples.executeExamples(Examples.scala:80)\n\tat org.specs.specification.ExampleStructure$class.examples(ExampleStructure.scala:77)\n\tat org.specs.specification.Examples.examples(Examples.scala:52)\n\tat org.specs.runner.ExamplesTestSuite$$anonfun$initialize$4.apply(JUnit.scala:157)\n\tat org.specs.runner.ExamplesTestSuite$$anonfun$initialize$4.apply(JUnit.scala:153)\n\tat scala.List.foreach(List.scala:841)\n\tat org.specs.runner.ExamplesTestSuite.initialize(JUnit.scala:153)\n\tat org.specs.runner.JUnitSuite$class.init(JUnit.scala:53)\n\tat org.specs.runner.ExamplesTestSuite.init(JUnit.scala:143)\n\tat org.specs.runner.JUnitSuite$class.getName(JUnit.scala:65)\n\tat org.specs.runner.ExamplesTestSuite.getName(JUnit.scala:143)\n\tat org.specs.runner.TestDescription$class.asDescription(JUnitSuiteRunner.scala:116)\n\tat org.specs.runner.JUnitSuiteRunner.asDescription(JUnitSuiteRunner.scala:32)\n\tat org.specs.runner.TestDescription$class.makeDescription(JUnitSuiteRunner.scala:125)\n\tat org.specs.runner.JUnitSuiteRunner.makeDescription(JUnitSuiteRunner.scala:32)\n\tat org.specs.runner.TestDescription$$anonfun$makeDescription$1.apply(JUnitSuiteRunner.scala:127)\n\tat org.specs.runner.TestDescription$$anonfun$makeDescription$1.apply(JUnitSuiteRunner.scala:126)\n\tat scala.List.foreach(List.scala:841)\n\tat org.specs.runner.TestDescription$class.makeDescription(JUnitSuiteRunner.scala:126)\n\tat org.specs.runner.JUnitSuiteRunner.makeDescription(JUnitSuiteRunner.scala:32)\n\tat org.specs.runner.JUnitSuiteRunner.getDescription(JUnitSuiteRunner.scala:57)\n\tat org.junit.runner.Runner.testCount(Runner.java:38)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestClassReference.countTestCases(JUnit4TestClassReference.java:30)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.countTests(RemoteTestRunner.java:487)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:455)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat net.liftweb.mapper.DBLog$LoggedStatementHandler.chain(LoggingStatementWrappers.scala:330)\n\tat net.liftweb.mapper.DBLog$LoggedPreparedStatementHandler$$anonfun$invoke$68.apply(LoggingStatementWrappers.scala:394)\n\tat net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:247)\n\tat net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tat net.liftweb.mapper.DBLog$class.logStatement(LoggingStatementWrappers.scala:53)\n\tat net.liftweb.mapper.DBLog$LoggedStatementHandler.logStatement(LoggingStatementWrappers.scala:110)\n\tat net.liftweb.mapper.DBLog$LoggedPreparedStatementHandler.invoke(LoggingStatementWrappers.scala:393)\n\t... 114 more\nCaused by: org.postgresql.util.PSQLException: ERROR: null value in column "notnull_c" violates not-null constraint\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:1592)\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1327)\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:192)\n\tat org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:451)\n\tat org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:350)\n\tat org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:254)\n\t... 124 more\n\n\n'
652,'Dridus','Regression in Fields marked Optional\nI\'ve identified another regression between Lift 2.0/2.1-M1 and Lift 2.1-RC1/RC2.\n\nGiven the following code:\n\n<pre><code>\nimport net.liftweb.common._\nimport net.liftweb.mongodb.record._\nimport net.liftweb.record.field._\n\nclass SimpleUser extends MongoRecord[SimpleUser] with MongoId[SimpleUser] {\n  override def meta = SimpleUser\n\n  object name extends StringField(this, 50) {\n    setBox(Empty)\n    override def optional_? = true\n  }\n}\n\nobject SimpleUser extends SimpleUser with MongoMetaRecord[SimpleUser] {\n  override def createRecord = new SimpleUser // This line needs to be commented out to compile under Lift 2.1-RC1/2\n}\n</code></pre>\n\nUnder Lift 2.0 and Lift 2.1-M1, you get the following (expected) behavior:\n\n<pre><code>\nscala> SimpleUser.createRecord.asDBObject\nres0: com.mongodb.DBObject = { "_id" : { "$oid" : "4c93df29cd1395091868b217"}}\n</code></pre>\n\nThe "name" field is optional_?=true and has been set to be Empty, so it is excluded from the DBObject.\n\nUnder Lift 2.1-RC1 and Lift 2.1-RC2, you get the following (unexpected) behavior:\n\n<pre><code>\nscala> SimpleUser.createRecord.asDBObject\nres0: com.mongodb.DBObject = { "name" : "" , "_id" : { "$oid" : "4c93dd3f09b0950958646c6e"}}\n</code></pre>\n\nThe "name" field is still optional_?=true and set to Empty, but now the DBObject includes the "name" field with an empty string (the default value).\n\nI suspect this has to do with the toValueType/toBoxMyType roundtrip in TypedField, but I\'m not sure and I do not have a fix yet.'
935,'jonifreeman','Scalaz support for JSON\nhttps://github.com/lift/framework/tree/master/core/json-scalaz'
227,'indrajitr',"Miscellaneous improvements on archetypes\nAmong other things take care of:\n\n- Get rid of the Warning message: PT Don't override file .../pom.xml during archetype:generate\n- Remove ext.vm parsing and set up velocity-macro variables to do the needful\n- Enable setting lift version during archetype:generate\n- Remove unnecessary dependencies from the generated archetypes\n- Streamline maven-scala-plugin settings\n"
510,'',"Add path-based field replacement to JValue\nIt's useful to be able to do path-based replacement deep within a JSON document without manually wiring up the nested map expressions. The attached patch provides this functionality, and associated tests."
793,'dchenbecker','Add support for unit testing RestHelper without full Jetty/Lift environment\nIf I have following example RestHelper:\n<pre><code>\nobject Rest extends RestHelper  {\n  serve {\n    case "api" :: "info" :: Nil JsonGet req => {\n      val infos = Info.findAll\n      Extraction.decompose(infos)\n    }\n  }\n}\n</code></pre>\nit would be great to unit test it without running Jetty with full Lift on it.\nFor example by just calling:\n<pre><code>\n  val req = mockReq(JsonGet, "api" :: "info" ::  Nil)\n  val response = Rest(req)\n  // ... check response\n</code></pre>\nor something in this manner. '
1076,'','Allow adding children to a ManyToMany before it\'s saved\nRequires two changes:\n1. Save the parent mapper before saving its "fields"\n2. Join table records\' foreign key to the parent should be set to its primary key automatically.\n\nSee https://groups.google.com/d/topic/liftweb/MrSby8v90qM/discussion\n'
85,'dpp','Add support for MappedOptLong\nFor long fields that can be set to NULL.\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/6ddee18695161ce3\r\n\r\nAlso MappedOptInter and possibly others would make sense as well.'
368,'jeppenejsum',"Introduce a validateSignup method\nThe method will be useful for checking captchas, as that's validation that needs to be done only on signup.\n\nProposed changes:\n* add a method to MetaMegaProtoUser: protected def validateSignup(user: User) = user.validate\n* in ProtoUser.scala:386, in the testSignup method, replace theUser.validate with validateSignup(theUser)\n\n\n\n"
651,'eltimn',"MongoListField in 2.8.0 does not deserialize correctly\nThere's a bug in setFromDBObject caused by the change in scala 2.8.0 SetLike collections where .map returns a Set rather than an Iterable.  \n\nThis causes ordering to be lost and duplicate values to be removed.\n\n"
226,'','Documentation\nDocumentation and/or code examples of the added features/commands added to 1.1'
509,'dpp','MockHttpServletRequest has null-typed declarations\nI\'m attempting to use the net.liftweb.mocks.MockHttpServletRequest for some testing and I\'ve run into a problem.  Currently, there are some fields like "contentType" which are set as null and do not have an explicit type.  This causes problems when I try to redefine the var\'s to a new value.\n\nHere\'s an example of the failure:\n\n\n<pre><code>scala> new net.liftweb.mocks.MockHttpServletRequest\nres0: net.liftweb.mocks.MockHttpServletRequest = net.liftweb.mocks.MockHttpServletRequest@56426132\n\nscala> res0.contentType = "application/x-www-form-urlencoded"\n<console>:5: error: type mismatch;\nfound   : java.lang.String("application/x-www-form-urlencoded")\nrequired: Null\n      res0.contentType = "application/x-www-form-urlencoded"\n                         ^\n\n</code></pre>\n\nCould we change the definition of those vars to include the String type?'
792,'dpp','confirmScreen_? should display all fields in wizard\nAs per discussion in http://groups.google.com/group/liftweb/browse_thread/thread/9636ba87669000b7#\n\nWhen overriding confimScreen_? in a Wizard, the page should display all visible fields used in all screens of the wizard.\nCurrently my screen displays nothing when using this.\n\nCode:\n\n<pre><code>\nobject MyWizard extends Wizard {\n  val s = new Screen {\n    val prosjektnummer = field("Prosjektnummer", 0)\n    val ok = radio("Er testen ok?", "Feil", List("OK", "Feil"))\n\n    private object FirstTime extends WizardVar[Boolean](true)\n    override def transitionIntoFrom(from: Box[Screen]) {\n      if (FirstTime.get) {\n        FirstTime.set(false)\n      }\n    }\n  }\n\n  val s2 = new Screen {\n    val prosjekt = field("prosjekt", "")\n  }\n\n  val conf = new Screen {\n    override def confirmScreen_? = true\n  } \n\n  override def finish {\n    S.notice("prosjekt" + s.prosjektnummer + s.ok)\n  }\n}\n</code></pre>\n\n'
1075,'jonifreeman','Un-Un-Escaped Symbol Literal Using \'.\' During JSON Extract\nDiscussion: http://groups.google.com/group/liftweb/browse_thread/thread/508ba020b36c65ea\n\nExample:\n    scala> import _root_.net.liftweb.json._ \n    scala> case class foo(`SHAPE.LEN`:String) \n    scala> case class bar(attributes:foo) \n    scala> case class baz(results:List[bar]) \n    scala> val json = parse("""{ "results" : [ { "attributes" : \n{ "SHAPE.LEN":"1251427.125859" } } ] } """) \n    scala> implicit val formats = net.liftweb.json.DefaultFormats \n    scala> val result = json.extract[baz] \nnet.liftweb.json.MappingException: Parsed JSON values do not match \nwith class constructor \nargs= \narg types= \nconstructor=public baz$2(scala.collection.immutable.List) \n        at net.liftweb.json.Extraction$.instantiate$1(Extraction.scala: \n245) \n        at net.liftweb.json.Extraction$.newInstance$1(Extraction.scala: \n268) \n        at net.liftweb.json.Extraction$.build$1(Extraction.scala:286) \n        at net.liftweb.json.Extraction$.extract0(Extraction.scala: \n333) \n        at net.liftweb.json.Extraction$.net$liftweb$json$Extraction$ \n$extract0(Extraction.scala:187) \n        at net.liftweb.json.Extraction$.extract(Extraction.scala:39) \n        at net.liftweb.json.JsonAST$JValue.extract(JsonAST.scala:290) \n        at .testSymbolLiteralJSONParsing(<console>:12) \n        at .<init>(<console>:7) \n        at .<clinit>(<console>) \n        at RequestResult$.<init>(<console>:9) \n        at RequestR... '
84,'','Enhance CRUDify i18n\nThere are some labels in CRUDify which are not internationalized, most important the menu labels for viewing, editing and deleting.'
367,'dpp','exception net.liftweb.common.LRUMap.value1\nERROR - Exception being returned to browser when processing\nReq(List(), Map(), ParsePath(List(mobile, signup),,true,false), ,\nGetRequest, Empty)\njava.lang.NullPointerException: Foo\n       at net.liftweb.common.LRUMap.value1(LRU.scala:63)\n       at net.liftweb.common.LRUMap.update(LRU.scala:101)\n       at net.liftweb.util.InMemoryCache$$anonfun$set$1.apply(TemplateCache.scala:83)\n       at net.liftweb.util.InMemoryCache$$anonfun$set$1.apply(TemplateCache.scala:82)\n       at net.liftweb.util.ConcurrentLock.write(ConcurrentLock.scala:36)\n       at net.liftweb.util.InMemoryCache.set(TemplateCache.scala:82)\n       at net.liftweb.util.InMemoryCache.set(TemplateCache.scala:70)\n       at net.liftweb.util.TemplateCache$class.update(TemplateCache.scala:39)\n       at net.liftweb.util.InMemoryCache.update(TemplateCache.scala:70)\n       at net.liftweb.http.TemplateFinder$.findAnyTemplate(LiftSession.scala:1340)\n       at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$findVisibleTemplate(LiftSession.scala:661)\n       at net.liftweb.http.LiftSession$$anonfun$processTemplate$1$1.apply(LiftSession.scala:473)\n       at net.liftweb.http.LiftSession$$anonfun$processTemplate$1$1.apply(LiftSession.scala:473)\n       at net.liftweb.common.EmptyBox.or(Box.scala:378)\n       at net.liftweb.http.LiftSession.processTemplate$1(LiftSession.scala:473)\n       at net.liftweb.http.LiftSession$$anonfun$10$$anonfun$apply$34$$anonfun$apply$37.apply(LiftSession.scala:527)\n       at net.liftweb.http.LiftSession$$anonfun$10$$anonfun$apply$34$$anonfun$apply$37.apply(LiftSession.scala:527)\n       at net.liftweb.common.EmptyBox.or(Box.scala:378)\n       at net.liftweb.http.LiftSession$$anonfun$10$$anonfun$apply$34.apply(LiftSession.scala:526)\n       at net.liftweb.http.LiftSession$$anonfun$10$$anonfun$apply$34.apply(LiftSession.scala:526)\n       at net.liftweb.util.StackableMaker$class.doWith(Maker.scala:104)\n       at net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\n       at net.liftweb.util.StackableMaker$class.doWith(Maker.scala:98)\n       at net.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\n       at net.liftweb.http.LiftSession$$anonfun$10.apply(LiftSession.scala:525)\n       at net.liftweb.http.LiftSession$$anonfun$10.apply(LiftSession.scala:520)\n       at net.liftweb.common.EmptyBox.or(Box.scala:378)\n       at net.liftweb.http.LiftSession.processRequest(LiftSession.scala:520)\n       at net.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:269)\n       at net.liftweb.http.LiftServlet$$anonfun$3.apply(LiftServlet.scala:177)\n       at net.liftweb.http.LiftServlet$$anonfun$3.apply(LiftServlet.scala:177)\n       at net.liftweb.http.S$.net$liftweb$http$S$$wrapQuery(S.scala:971)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$25.apply(S.scala:1111)\n       at net.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:908)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$doAround$1.apply(S.scala:909)\n       at com.foursquare.model.ExtendedSession$myWrapper$.apply(ExtendedSession.scala:29)\n       at net.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:909)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$doAround$1.apply(S.scala:909)\n       at bootstrap.liftweb.Boot$$anon$1$$anonfun$apply$3.apply(Boot.scala:78)\n       at bootstrap.liftweb.Boot$$anon$1$$anonfun$apply$3.apply(Boot.scala:78)\n       at net.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:570)\n       at net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n       at net.liftweb.mapper.DB$currentConn$.run(DB.scala:557)\n       at net.liftweb.mapper.DB$.use(DB.scala:567)\n       at bootstrap.liftweb.Boot$$anon$1.apply(Boot.scala:78)\n       at net.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:909)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$doAround$1.apply(S.scala:909)\n       at net.liftweb.mapper.DB$$anon$1$$anonfun$apply$10.recurseMe$1(DB.scala:188)\n       at net.liftweb.mapper.DB$$anon$1$$anonfun$apply$10$$anonfun$recurseMe$1$1.apply(DB.scala:195)\n       at net.liftweb.mapper.DB$$anon$1$$anonfun$apply$10$$anonfun$recurseMe$1$1.apply(DB.scala:195)\n       at net.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:570)\n       at net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n       at net.liftweb.mapper.DB$currentConn$.run(DB.scala:557)\n       at net.liftweb.mapper.DB$.use(DB.scala:567)\n       at net.liftweb.mapper.DB$$anon$1$$anonfun$apply$10.recurseMe$1(DB.scala:195)\n       at net.liftweb.mapper.DB$$anon$1$$anonfun$apply$10.apply(DB.scala:197)\n       at net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n       at net.liftweb.mapper.DB$$anon$1$DepthCnt$.run(DB.scala:178)\n       at net.liftweb.mapper.DB$$anon$1.apply(DB.scala:181)\n       at net.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:909)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1109)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$.net$liftweb$http$S$$_nest2InnerInit(S.scala:1108)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$28$$anonfun$apply$29$$anonfun$apply$30$$anonfun$apply$31.apply(S.scala:1134)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$28$$anonfun$apply$29$$anonfun$apply$30.apply(S.scala:1133)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$28$$anonfun$apply$29.apply(S.scala:1132)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$28.apply(S.scala:1131)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1130)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$.net$liftweb$http$S$$_innerInit(S.scala:1129)\n       at net.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41$$anonfun$apply$42.apply(S.scala:1176)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41.apply(S.scala:1175)\n       at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:327)\n       at net.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n       at net.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40.apply(S.scala:1174)\n       at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:327)\n       at net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n       at net.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$38$$anonfun$apply$39.apply(S.scala:1173)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$_init$1$$anonfun$apply$38.apply(S.scala:1172)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$$anonfun$_init$1.apply(S.scala:1171)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.S$._init(S.scala:1170)\n       at net.liftweb.http.S$.init(S.scala:822)\n       at net.liftweb.http.LiftServlet.doService(LiftServlet.scala:176)\n       at net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:75)\n       at net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:75)\n       at net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:247)\n       at net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n       at net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:256)\n       at net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n       at net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:74)\n       at net.liftweb.http.LiftServlet.service(LiftServlet.scala:82)\n       at net.liftweb.http.provider.HTTPProvider$$anonfun$service$3.apply(HTTPProvider.scala:58)\n       at net.liftweb.http.provider.HTTPProvider$$anonfun$service$3.apply(HTTPProvider.scala:58)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.URLRewriter$.doWith(Req.scala:537)\n       at net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:57)\n       at net.liftweb.http.LiftFilter.service(LiftServlet.scala:537)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$class.protected$service(ServletFilterProvider.scala:62)\n       at net.liftweb.http.LiftFilter.protected$service(LiftServlet.scala:537)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$1.apply(ServletFilterProvider.scala:62)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$1.apply(ServletFilterProvider.scala:57)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:333)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:332)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10.apply(Vars.scala:331)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9.apply(Vars.scala:330)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:329)\n       at net.liftweb.http.RequestVarHandler$.apply(Vars.scala:250)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:56)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:56)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11$$anonfun$apply$12.apply(Vars.scala:333)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11.apply(Vars.scala:332)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9$$anonfun$apply$10.apply(Vars.scala:331)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$9.apply(Vars.scala:330)\n       at net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n       at net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:329)\n       at net.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:254)\n       at net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:55)\n       at net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:537)\n       at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)\n       at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:387)\n       at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n       at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n       at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\n       at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)\n       at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n       at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n       at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n       at org.mortbay.jetty.Server.handle(Server.java:326)\n       at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)\n       at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:864)\n       at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)\n       at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n       at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n       at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)\n       at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)'
650,'dpp',"LifecycleCallbacks should be self-typed to Fields\nThe LifecycleCallbacks trait is only recognized on Fields, but there's no self-type describing this.  Add a self-type and enhance documentation"
933,'fmpwizard','Add CometActor to a page dynamically\nIt would be immensely helpful for authors of highly interactive web apps if it were possible to add a CometActor to a page after the page was loaded.'
225,'dpp','Wrong value for PostgreSqlDriver.doubleColumnType\nInstead of\r\n    def doubleColumnType = "DOUBLE"\r\nit should be\r\n    def doubleColumnType = "DOUBLE PRECISION"\r\n\r\nSee http://www.postgresql.org/docs/8.4/interactive/datatype-numeric.html#DATATYPE-FLOAT'
508,'jorgeortiz85','FacebookClient calls can block indefinitely\nThere should be a timeout of some kind on this.\n\n"1801837807@qtp-2026789660-846" prio=10 tid=0x00007f28d76a0000 nid=0x7f81 runnable [0x000000004ba0c000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:129)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:258)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:317)\n\t- locked <0x0000000710acd200> (a java.io.BufferedInputStream)\n\tat sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:687)\n\tat sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:632)\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1072)\n\t- locked <0x0000000710acd2a8> (a sun.net.www.protocol.http.HttpURLConnection)\n\tat net.liftweb.ext_api.facebook.FacebookClient$.call(FacebookRestApi.scala:74)\n\tat net.liftweb.ext_api.facebook.FacebookClient.callMethod(FacebookRestApi.scala:171)\n\tat net.liftweb.ext_api.facebook.FacebookClient.$bang$qmark(FacebookRestApi.scala:176)\n\tat com.foursquare.lib.FacebookApi$.userHasPermission(FacebookApi.scala:44)\n\tat com.foursquare.snippet.Import.facebookLink$1(Import.scala:44)\n'
1074,'','Simple Wiring Demo misses updates\nI was looking at the simple wiring demo here: http://demo.liftweb.net/simple_wiring \nI found that if you rapidly clicked a checkbox several times but ended \nwith it unchecked, the Todo count can be 1 higher than it should be. I \nguess something is consuming events somewhere? '
83,'dpp','Ability to exclude certain paths during URL re-write\nI have deployed a Lift application in a WAR with a context path (e.g. /myapp) alongside a monolithic non-lift application with context path /. This works in general, except constructing links from the Lift app to the other one are hackish -- the method I\'m using right now is to write the links as "/../path/in/other/app" which gets rewritten to "/myapp/../path/in/other/app".\r\n\r\nIdeally (for me) would be some kind of special URL syntax, such as two leading slashes instead of one that would tell _fixHtml to stop writing in the context path.'
649,'davidB','couchdb : StackOverflow in \nWhen read sub record from couchdb, StackOverflow is raise :\n\nin net.liftweb.couchdb.JSONSubRecordField :\n\n<pre><code>  def setFromJValue(jvalue: JValue): Box[SubRecordType] = jvalue match {\n    case JNothing|JNull if optional_? => setBox(Empty)\n    case _                            => setBox(setFromJValue(jvalue))\n  }\n</code></pre>\n'
932,'eltimn',"Add better support for referenced records in mongodb\nCurrently there is only DBRefField and DBRef is no longer supported in MongoDB. The driver still recognizes them, but there's no special meaning to the database itself.\n\nAnother limitation of DBRefField is only ObjectId is supported. Support for UUID, String, Int, and Long will be added.\n\nSupport for toForm, as a selectObj,  will also be added."
790,'dpp','Use of the form=post method on <form> tag\ncauses double form tags'
224,'dpp','Foreign keys are not created by Schemifier\nSchemifier does not create foreign keys although the needed code is already there.\r\nAt the moment, supportsForeignKeys_? is false in every database "driver".\r\nSettings this to true works, but I only tested it using a PostgreSQL 8.3.7 server and using postgresql-8.4-701.jdbc4.jar'
507,'jorgeortiz85','object MongoDB not thread-safe\nAccess to MongoDB\'s "dbs" map is not synchronized, which is a potential race condition and a more serious visibility bug (threads are not guaranteed to see writes by other threads). This will rarely be an issue on most JVMs, but it\'s still good to fix. '
1073,'jonifreeman','lift-json: mapping exception thrown when mapping to a case class with a non-implicit companion object.\nper this discussion at the lift group\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/dbcb137db4ce649f\n\nWhen you map json to a case class that has a non-implicit companion object you get \n\nnet.liftweb.json.MappingException: Can\'t find constructor class \n\nthrown upon calling extract whereas before scala 2.9.x you did not.\n\nThis triggers the bug:\n\nimport net.liftweb.json.Serialization._\nimport net.liftweb.json._\n\nobject Test {\n\n  implicit val formats = DefaultFormats\n\n  object A {\n    implicit val formats = DefaultFormats\n\n    def hello = "hello"\n  }\n\n  case class A(int:Option[Int], double:List[Double])\n\n  def main(args: Array[String]) {\n\n    val jsonString =  write( A(Some(2),List(2.0)) )\n    val x = read[A](jsonString)\n    println(x)\n\n  }\n}\n\nthis doesn\'t trigger the error:\n\nimport net.liftweb.json.Serialization._\nimport net.liftweb.json._\n\nobject Test {\n\n  implicit val formats = DefaultFormats\n\n  case class A(int:Option[Int], double:List[Double])\n\n  object A {\n    implicit val formats = DefaultFormats\n\n    def hello = "hello"\n  }\n\n  def main(args: Array[String]) {\n\n    val jsonString =  write( A(Some(2),List(2.0)) )\n    val x = read[A](jsonString)\n    println(x)\n\n  }\n}'
82,'','Add parameterized ?? to S\n? comes in two flavors: Without and with parameters for formatting via String.format.\r\nIn order to support better core resources, ?? also should be overloaded with parameters.'
365,'dpp',"Add new JSON handler based on lift-json\nThe current mechanism for handling JSON from the client is via JSON parsed using Lift's old, clunky JSON parser.  There should be a second (and anti-deprecated) version that uses the new JSON parser."
648,'indrajitr','lift-mapper should not depend on H2 & Derby\nThe scope of these dependencies should be test'
931,'eltimn',"Add better support for primary key field in mongodb\nCurrently the only thing available is MongoId and it's suboptimal in that id is the field's value. MongoRecord.id being typed as Any was a mistake that I'd like to correct. This will be the first step, in a later version MongoId will be removed and MongoRecord.id will be changed to MandatoryTypedField[_]. That's the plan, anyway.\n\nThe other limitation with MongoId is it only supports ObjectId. You can currently use other types, but you need to create them yourself.\n\n"
223,'dpp','THe JNDI context object not synchronized\n'
506,'jorgeortiz85','mongodb-record swallows errors\nOn record save, delete_!, and bulkDelete_!!, mongodb-record swallows errors'
1072,'','ItemsListEditor needs to escape som javascript \nhttps://groups.google.com/forum/#!topic/liftweb/Hz7Ub3OQZM0'
81,'','No i18n for "Sign Up" in MetaMegaProtoUser.signupXhtml\nIn the following code snippet from MetaMegaProtoUser the heading label for the sign up form is hard coded:\r\n\r\ndef signupXhtml(user: ModelType) = {\r\n  (<form method="post" action={S.uri}><table><tr><td\r\n            colspan="2">Sign Up</td></tr>\r\n...\r\n\r\ni18n should be applied according to all other labels, i.e. ??("Sign Up")'
364,'','On Scala 2.8 templates are not read with UTF-8 encoding\nWhen I changed my latest Lift-base project to Scala 2.8 (German) special characters in templates were no longer shown correctly. This is due to the fact that in PCDataXmlParser Lift uses Source.fromInputStream to read the template. On Scala 2.7 UTF-8 was used by default which changed in 2.8 where the platform default (Mac in my case) is used by default. Giving an explicit UTF-8 argument should fix the issue.'
647,'dchenbecker','Add support for prefixed attributes to BindParam subclasses\nThe following code attempts to bind a prefixed attribute "test2:y", but instead creates an UnprefixedAttribute with label "test2:y". \n\n<pre><code>\n  def setX2Y(xhtml: NodeSeq): NodeSeq =\n  {\n    bind("test1", xhtml, FuncAttrBindParam("x", ns => ns , "test2:y"))\n  }\n</code></pre>\n\nThe bind code needs reworked so that we can support prefixed attributes'
788,'dpp','Add helper methods to make nice Ajax functions\nEnhance mechanisms for creating client-side JavaScript that executes code on the server side including marshalling, etc.'
222,'dpp','Provide an eager default for connection pool\nIf the connection pool is too small and the connection is acquired during a synchronized block, there can be resource starvation/deadlock\r\n'
505,'mariusdanciu','Function evaluation order in test mode when using ajaxSubmit\nDiscussion thread here: http://groups.google.com/group/liftweb/browse_thread/thread/c7227dfceb67f9c8'
80,'dpp','PreCache can return incorrect results when used with non deterministic queries\nFoos.findAll(OrderBy(Foos.someField, Ascending),\r\n                    MaxRows(10),\r\n                    PreCache(Foos.userid))\r\n\r\nIf the order by is non deterministic (if, for example, someField can be NULL), then when the query to PreCache the userid is run:\r\n\r\nSELECT DISTINC users.id, users.name FROM users WHERE id IN (SELECT userid FROM foos ORDER BY someField ASCENDING LIMIT 10);\r\n\r\nIt may return a different set of User objects than is required to to the PreCache causing the userid field to be incorrectly populated with null values (so foo.userid.obj.open_! could unexpectedly cause an exception).\r\n\r\nReally, rather than using a subquery for the PreCache it would be better to do IN (10, 20, 30) where 10, 20, 30 are read directly from the results of the initial query.'
363,'mariusdanciu',"LiftRules.jQueryVersion should not be there.\nDetails are described here: http://groups.google.com/group/liftweb/browse_thread/thread/807a9397f1e3fa9?hl=en_US\n\nLiftRules should not have JQuery specific API's. JsArtifacts can/should cope with script versioning."
646,'dpp',"Browser Detection (for max simultaneous connections) Doesn't Handle Firefox 4\nLift 2.0 has a very nice mechanism for dynamically setting the maximum simultaneous connections based on the user's browser.  This allows Comet applications to avoid the short-poll unless *absolutely* necessary.  Unfortunately, it appears that this mechanism does not properly identify Firefox 4, causing Lift to set the maximum simultaneous connections to 2 (or possibly 3, I didn't actually measure it) on that browser.  Opening the application in a second window throws both windows into short-poll mode.  The same test on Firefox 3.6 remains in long-poll for both windows.\n\nThis seems like a fairly trivial issue with the user agent sniffing.  It's not a high priority for us (Novell Pulse) since we don't currently support Firefox 4, but it will eventually become an issue.\n\nTest environment\n===============\nHTTP_USER_AGENT:Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b7pre) Gecko/20100914 Firefox/4.0b7pre"
929,'',"Joda Time Serializers cannot deserialize null values\nhttp://groups.google.com/group/liftweb/browse_thread/thread/cef74ed2eaac43b5\nWhen trying to deserialize JNull to org.joda.time.Interval there is an\nexception:\n\nCan't convert JNull to class org.joda.time.Interval\n\nwhich is thrown from ClassSerializer.deserialize method in file\nJodaTimeSerializer.scala.\n\nMaybe it should work without exception and result value be null? \nMy solution:\nadd       case JNull => null.asInstanceOf[A]\nin SimpleTypeSerializer.deserialize and ClassSerializer.deserialize "
787,'dpp','Make http.js stuff more liftweb.json friendly\nMake nice conversions from Lift-json stuff (JValue) into JsExp so they can be used interchangeably.'
221,'dpp','AnyVar does far too coarse grained lock\nThere are a number of places in AnyVar where the instance is synchronized.  This locking is too coarse grained and can lead to deadlocks.'
504,'indrajitr',"Set charset to UTF-8 by default for maven-scala-plugin for archetype templates\nSet charset to UTF-8 by default for maven-scala-plugin for archetype templates.\nIt's always a good practice to have UTF-8 charset by default."
1070,'dpp','Add JValue versions of jsonCall to SHtml\nThe current jsonCall uses the old JSON parser. It would be useful to have jsonCall versions that use lift-json.\n\nSee\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e0b65cd3dc972519\n for more details\n\n'
79,'dpp','Schemefier Creates a BIGINT for a MappedStringForeignKey\nSchemifier doesn\'t seem to respect the MappedStringForeignKey type and creates a BIGINT column, as you can see in the following output:\r\n\r\n    INFO - CREATE TABLE packets (temp DOUBLE , id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE KEY , mac BIGINT UNSIGNED , dt DATETIME , mah DOUBLE , lux DOUBLE , rssi DOUBLE)  ENGINE = InnoDB\r\n    INFO - ALTER TABLE packets ADD CONSTRAINT packets_PK PRIMARY KEY(id)\r\n    INFO - CREATE INDEX packets_mac ON packets ( mac )\r\n\r\nI can override fieldCreatorString for the foreign key but I don\'t think I should have to. This is with 1.1-SNAPSHOT.\r\n\r\nAnd the relevant parts of my models:\r\n\r\n    class Node extends KeyedMapper[String, Node] {\r\n     def getSingleton = Node\r\n     /* MAC address as primary key */\r\n     def primaryKeyField = mac\r\n     object mac extends MappedStringIndex(this, 17) with IndexedField [String] {\r\n            override def dbDisplay_? = true\r\n            override lazy val defaultValue = randomString(maxLen)\r\n            /* allow user-defined primary key */\r\n            override def writePermission_? = true\r\n            override def dbAutogenerated_? = false\r\n            private var myDirty = false\r\n            override def dirty_? = myDirty\r\n            override def dirty_?(b : Boolean) = { myDirty = b; super.dirty_?(b) }\r\n            override def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" CHAR("+maxLen+") NOT NULL "\r\n     }\r\n    }\r\n    \r\n    class Packet extends LongKeyedMapper[Packet] with IdPK {\r\n     def getSingleton = Packet\r\n     object node extends MappedStringForeignKey(this, Node, 17) {\r\n            // Change the default behavior to add a database index for this column.\r\n            override def dbIndexed_? = true\r\n            override def dbColumnName = "mac"\r\n     }'
362,'','Make runMode configurable in LiftRules\n\nSee discussion here:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e870a13b7051a297/7e2fc29e757a84cd?lnk=gst&q=runmode#7e2fc29e757a84cd\n'
645,'dpp','Misleading error message in net.liftweb.util.Props\nIf no properties are found, the Props object logs an error message like that:\nSearched: /props/chris.taupo.propsprops, /props/chris.propsprops, /props/taupo.propsprops, /props/default.propsprops, /chris.taupo.propsprops, /chris.propsprops, /taupo.propsprops, /default.propsprops\n\nIt should print:\nSearched: /props/chris.taupo.props, /props/chris.props, /props/taupo.props, /props/default.props, /chris.taupo.props, /chris.props, /taupo.props, /default.props\nwhich are the files that it actually looked for. The error seems to be in line 252 of /net/liftweb/util/Props.scala where the "props" suffix is appended again (tried.map(_ + "props")) though it is already appended in line 221 when building the paths.\n\nI actually tried to fix an error I had with my property files by renaming it to "default.propsprops" :D \n'
928,'','Lift-json: wrong deserialization of Option type\nI have following format for UUID type:\nclass UUIDFormat extends Serializer[UUID] {\n  val UUIDClass = classOf[UUID]\n\n  def serialize(implicit format: Formats): PartialFunction[Any, JValue] = {\n    case x: UUID => JString(x.toString)\n  }\n\n  def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), UUID] = {\n    case (TypeInfo(UUIDClass, _), JString(x)) => UUID.fromString(x)\n  }\n}\n\nSerialization of UUID type works as expected:\n    val uuid = UUID.randomUUID\n    val seruuid =Extraction.decompose(uuid)\n    println(seruuid)\n    println(Extraction.extract[UUID](seruuid))\n\nBut when UUID is used within an option field in case class:\n\ncase class A(b: Option[B])\ncase class B(uuid: UUID)\n\nthen  deserialization of None fails:\n    val a = A(None)\n    val sera = Extraction.decompose(a)\n    println(sera)\n    println(Extraction.extract[A](sera))\n\ncauses:\nnet.liftweb.json.MappingException: unknown error\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:42)\n\tat LiftJsonTest.testLftJson(LiftJsonTest.scala:19)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:94)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:192)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:64)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)\nCaused by: java.lang.IllegalAccessException: Class net.liftweb.json.Extraction$ can not access a member of class java.util.UUID with modifiers "private"\n\tat sun.reflect.Reflection.ensureMemberAccess(Reflection.java:65)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:505)\n\tat net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:201)\n\tat net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:227)\n\tat net.liftweb.json.Extraction$.build$1(Extraction.scala:245)\n\tat net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:274)\n\tat net.liftweb.json.Extraction$.build$1(Extraction.scala:247)\n\tat net.liftweb.json.Extraction$$anonfun$4.apply(Extraction.scala:198)\n\tat net.liftweb.json.Extraction$$anonfun$4.apply(Extraction.scala:198)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:198)\n\tat net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:227)\n\tat net.liftweb.json.Extraction$.build$1(Extraction.scala:245)\n\tat net.liftweb.json.Extraction$.mkValue$1(Extraction.scala:274)\n\tat net.liftweb.json.Extraction$.build$1(Extraction.scala:247)\n\tat net.liftweb.json.Extraction$$anonfun$4.apply(Extraction.scala:198)\n\tat net.liftweb.json.Extraction$$anonfun$4.apply(Extraction.scala:198)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:206)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:206)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Extraction$.instantiate$1(Extraction.scala:198)\n\tat net.liftweb.json.Extraction$.newInstance$1(Extraction.scala:227)\n\tat net.liftweb.json.Extraction$.build$1(Extraction.scala:245)\n\tat net.liftweb.json.Extraction$.extract0(Extraction.scala:288)\n\tat net.liftweb.json.Extraction$.extract0(Extraction.scala:175)\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:39)\n\t... 27 more\n\nIt\'s because non existent optional field is being resolved.'
786,'dpp','Allow access to file headers for multipart posts\nThere is currently no way to access headers passed inside a mime file field other than content-type. It may be useful under certain circumstances to be able to access other headers, such as content-transfer-encoding in LiftRules.handleMimeFile or somewhere similar.'
220,'dpp','checkboxes not serialized as expected in JSON forms\nonly one value is being send to the server'
503,'indrajitr','Set jvmArg -Xmx1024m by default for maven-scala-plugin for archetype templates\nSet jvmArg -Xmx1024m by default for maven-scala-plugin for archetype templates.\nThis would be helpful for newbies (and pretty much needed for typical mid to large lift apps).'
1069,'','Lift fails to start cleanly when java.net.InetAddress.getLocalHost() throws an UnknownHostException. \nLift fails to start cleanly when java.net.InetAddress.getLocalHost() throws an UnknownHostException.\n\nOn systems where the hostname doesnt resolve to an ip, lift wont start.  I found this using the lift_23_sbt/lift_basic template.   \n\nLine 179 in framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala\n\nis   \n   \n    lazy val hostName: String = (if (inGAE) "GAE" else InetAddress.getLocalHost.getHostName)\n\nshould probably be something like \n \n     lazy val hostName: String = (if (inGAE) "GAE" else try{InetAddress.getLocalHost.getHostName}catch{case _ => "localhost"})\n\n'
78,'dpp','  Derby Identity column DDL and SQL insert scripts\nUsing Derby and have hit an issue when running some SQL scripts to\r\ninsert data into a fresh mapper DB created by schemifier.\r\nSpecifically when inserting records with the id column I get a\r\nviolation:\r\n\r\nError: Attempt to modify an identity column \'ID\'.\r\nSQLState:  42Z23\r\nErrorCode: -1\r\n\r\ni.e data can\'t be inserted into this column which is not helpful when\r\nthis id is the primary key and foreign key on another table.  Derby\r\ndoes support auto-incremented sequence values as *default only* when\r\nyou are not providing values as opposed to always providing auto-\r\nincremented sequence values which you are not allowed to specify your\r\nown values.  The difference is GENERATED BY DEFAULT AS IDENTITY\r\ninstead of GENERATED ALWAYS AS IDENTITY.\r\n\r\nTo this end it looks like net.liftweb.mapper.DerbyDriver.scala needs\r\nupdating from\r\n  def integerIndexColumnType = "INTEGER NOT NULL GENERATED ALWAYS AS\r\nIDENTITY"\r\n  def longIndexColumnType = "BIGINT NOT NULL GENERATED ALWAYS AS\r\nIDENTITY"\r\n\r\nto\r\n  def integerIndexColumnType = "INTEGER NOT NULL GENERATED BY DEFAULT\r\nAS IDENITY"\r\n  def longIndexColumnType = "BIGINT NOT NULL GENERATED BY DEFAULT AS\r\nIDENTITY"\r\n\r\nHope this helps\r\n\r\n-- Ewan '
361,'jeppenejsum','Rename OpenId -> OpenID\nBoth spellings are used in lift-openid. The correct one seems to be OpenID.\n\n'
644,'indrajitr','Change log4j version in lift 2.1 from 1.2.14 to 1.2.16\nThe current lift 2.1-SNAPSHOT has a dependency on log4j 1.2.14 (released in 2006). The current log4j version is 1.2.16. Currently one cannot use parts of the log4j extra companion lib with lift, as it requires log4j 1.2.15 or higher for correct configuration. Changing the dependency to the newest version would make that companion lib usable with lift out-of-the-box. Currently, one has to override the log4j version manual in the sbt project file for ones project to achieve that: \n"log4j" % "log4j" % "1.2.16" % "compile->default"\n'
927,'dchenbecker',"MapperSpec fails during full build\nDuring full build 'net.liftweb.mapper.MapperSpec' fails. However they work fine when it is executed individually."
219,'dpp','S.render was removed\nIt appears S.render was unintentionally commented out and then removed. Can you please insert it back.'
502,'mariusdanciu',"Broaden S.notice et al so that one can configure JsCmd's\nUpdate the S.notices and friends so that they can have arbitrary JsCmd's assigned to them... its highly possible users would want a different effect than just simply fading out after a given time. \n\nSee thread: http://groups.google.com/group/liftweb/browse_thread/thread/f96dccbbd03e653f\n\n"
785,'dpp','isIPhone is false for iPhone\nUsing Scala 2.8 and Lift 2.2-RC1 the isIPhone method on Req is returning false on the iPhone and iPhone Simulator.    This appears to be because isSafari is returning false for those devices.  I suspect it is the "Mobile/7A341" part of userAgent is throwing isSafari.  \n\nHere are the user agent values I see for the simulator and an iPhone 4:\n\nFull(Mozilla/5.0 (iPhone Simulator; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16)\n\nFull(Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5)\n\nI\'d expect isIPhone to return true for the above two cases.\n\nFor the record, I\'ve just checked the iPad too, and isIPhone false also (which I guess it should be) but isSafari is also false.  Again, simulator and real:\n\nFull(Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10)   // <-- yes, it;s \'iPad" not "iPad Simulator" apparently\n\nFull(Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5)\n'
1068,'',"Delete with cascade fails when MapperRules.createForeignKeys_? is true\nWhen using Mapper, cascade deletes fail when foreign keys are enabled (i.e. MapperRules.createForeignKeys_? = _ => true)\n\nWhen you try to delete the one side of the many-to-one relationship, you get a referential integrity constraint violation.\n\nThe problem is in OneToMany.delete_!.  It attempts to delete the current object prior to deleting the oneToManyFields.  Reversing the logic (deleting the oneToManyFields first should fix the problem.\n\nThe fk-delete-cascade branch in git://github.com/leedm777/lift-sample-app.git has a spec (ForeignKeySpecs) that demonstrates the problem.\n\nI'm using Lift 2.3."
77,'','Change net.liftweb.mapper.ByList to take a Seq[T] instead of a List[T]\nTrivial change.\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/f13d5e5842202b40'
360,'jonifreeman','Add support to extract primitve values from JSON\nFor example:\n\n<pre><code>\n    (json \\ "name").extract[String] mustEqual "joe"\n    ((json \\ "children")(0) \\ "birthdate").extract[Date] mustEqual date("2004-09-04T18:06:22Z")\n\n    JInt(1).extract[Int] mustEqual 1\n    JInt(1).extract[String] mustEqual "1"\n    JField("foo", JInt(1)).extract[Int] mustEqual 1\n</code></pre>\n'
926,'eltimn','Add better support for embedded objects in mongodb-record\nThe objective is to have embedded objects that are actual Records, instead of simple case classes, like we have now.'
218,'','Can not setup css at JqJsCmds.ModalDialog\nWhen I use ModalDialog I want to setup the css but fail,\r\nMy code would be:\r\nModalDialog(someHtml, "top: \'10px\'")\r\n\r\nI found the ModalDialog code at Lift:\r\nclass ModalDialog(html: NodeSeq, css: Box[String]) extends JsCmd {\r\n    val toJsCmd = "jQuery.blockUI({ message: " + AltXML.toXML(Group(S.session.map(s =>\r\n            s.fixHtml(s.processSurroundAndInclude("Modal Dialog", html))).openOr(html)), false, true, S.ieMode).encJs +\r\n            (css.map(w => ",  css: \'" + w + "\' ").openOr("")) + "});"\r\n  }\r\n\r\nthe css is wrap by " \'  \' " ,\r\nbut I found http://malsup.com/jquery/block/#demos\r\nthe css is wraped by "{ }"'
501,'dpp','AttrBindParam: double quoting of string values\nWhen I do this:\n\n<pre><code>bind("prefix", ..., AttrBindParam("suffix", "myid", "id"))</code></pre>\n\nI get an attribute value with extra double quotes, like this:\n\n<pre><code><div id=""myid""> ... </div></code></pre>\n\nWhereas when I do this:\n\n<pre><code>bind("prefix", ..., AttrBindParam("suffix", Text("myid"), "id"))</code></pre>\n\nI get the output I\'d expect, with a single set of quotes:\n\n<pre><code><div id="myid"> ... </div></code></pre>\n\nTrond on the maling list said this was probably something to do with implicit conversions to/from JsExps. I\'m not sure how these work yet - here is my list of imports in case you need them.\n\n<pre><code>import scala.xml._\nimport net.liftweb.common._\nimport net.liftweb.http._\nimport net.liftweb.mapper._\nimport net.liftweb.util._\nimport net.liftweb.http.js.JsCmd\nimport net.liftweb.http.js.jquery.JqJsCmds._\nimport net.liftweb.http.js.JsCmds._\nimport net.liftweb.http.js.JE._\nimport Helpers._\nimport SHtml._\nimport S._</code></pre>\n'
784,'dpp','ValById (and related case classes) produce invalid javascript\nThis change appears to be broken:\n\nhttps://github.com/lift/lift/commit/7cbabcb26ad42df038fb46c0cc2da96051324681\n\nDue to missing return statements I think?  Not 100% sure though. '
1067,'eltimn','Add support for BinaryField in MongoDB\nBinaryField is not currently supported.'
76,'dpp',"Basic Archetype doesn't do DI correctly\nThe time object in DependencyFactory is not initialized causing no dependency to be injected into the default snippet"
359,'Dridus','Optional fields in JSONRecord do not work without setting needAllJSONFields to false\nGives an error about the missing field.\n'
642,'dchenbecker','Add support for using bind/bind-at with embedded templates\nPer this thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/8936d8832ddef391/4f7078992c85d2d1'
925,'hoffrocket',"Mailer should optionally allow synchronous sends\nMailer currently queues all message onto an actor.  That's useful to achieve non-blocking behavior, but if you're already reading from some other queue, can be suboptimal"
217,'mariusdanciu',"Allow different Comet implementations by adding an abstraction layer\nCurrently Lift's Comet transparently detects Jetty 6 continuations API and leverage it when possible. However using jetty 7 continuations API is not possible without non trivial Lift code changes. \n\nIn that sense abstracting away the Comet strategy in term of underlying container support would plugging in specific implementation for other JEE containers. For non JEE containers this is already supported as the entire request/response interface is abstracted away from lift by the provider interfaces.\n\nBr's,\nMarius"
500,'eltimn','Integrate Scamongo\nMove the Scamongo project into Lift.'
783,'','Missing i18n propertis for Crudify generated pages\nHey,\n\nthe following keys which are used for i18n in Crudify are missing in i18n.lift-core.properties.\n\nPlease append them to *i18n.lift-core.properties* in english and german\n\nSave = Save\nEdit = Edit\nDelete = Delete\nCreate = Create\nView = View\nList = List\nNext = Next\nPrevious = Previous\nCreated = Created\n\nSave = Speichern\nEdit = Bearbeiten\nDelete = Löschen\nCreate = Erstellen\nView = Betrachten\nList = Anzeigen\nNext = Vor\nPrevious = Zurück\nCreated = Erstellt'
1066,'eltimn','Add support to JObjectParser for Lists of BSON types\nBSON types (ObjectId, UUID, Pattern, Date) are not being converted properly when in a List.'
75,'dpp','Better error reporting when snippet methods can\'t be found\nSnippets are matched against methods using reflection. If a method cannot be found, it is sometimes because of a signature mismatch, and useful information about this can be conveyed to the user.\r\n\r\nThe mismatch is typically either the wrong arguments, or wrong return type. (The latter can easily happen  if is not declared explicitly, but inferenced by the compiler!) \r\n\r\nError cases can be tricky to report, because of overloading. However, if there is only a single method by the matching name, the user would benefit greatly from an error message saying that the method WAS in fact found, but it could not be used, for this reason. Simply saying that the method wasn\'t found is slightly misleading, and suggests that a rebuild is needed, or something.\r\n\r\nThe case of the wrong return type should be easier to report, since methods cannot be overloaded by return type only. Hence, if there is a method with the correct argument list (which should be checked for first) it could be reported as "the method you probably wanted to use". '
358,'jonifreeman','JSON deserialization fails for null value\ncase class X(y: Y)\ncase class Y(s: String)\n\n// This fails\nread[X](""" { "y": null } """) '
641,'Dridus','Breaking toString change in Record Fields\nRecord\'s StringField\'s toString used to just return the string value of the field (or the defaultValue if no value was set), but now it returns "Full(...)" and "Empty". Not sure if this affects other Field types.'
924,'dpp','invalid Cache-Control header\nSee: https://github.com/lift/lift/blob/master/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala\n\n"no-cache; private; no-store"  <-- should be comma delimited not ; delimited\n\nI\'m honestly not able to determine where in the spec it says this (see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) but other major sites (google, twitter) use commas.'
216,'mariusdanciu',"Allow user's function to determine the suffix splitting rules\n\r\nCurrently Lift's splits the suffix of an URI based on predefined rules and an significant list of known suffixes. Although this is sufficient in most cases it is not very flexible mechanism.\r\n\r\nThis is why allowing users to specify their own splitting rule though LiftRules would allow such flexibility.\r\n\r\nBr's,\r\nMarius"
499,'dpp','cleaning up single use LiftSessions\nQuiker expiration of single use sessions created by bots/crawlers.  Message group thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/d7fbb698d086c1d3/953ec6aa67bc59d2'
782,'dpp','LiftRules.otherPackages\nAccess to LiftRules.otherPackages is synchronized on LiftRules.  This is a threading bottleneck.'
1065,'','Silent fail if class="lift:surrond" is missing "at"\n<div class="lift:surround?with=default;at=content"> will silently fail - display nothing on the page, and no error in the logs - if the "at" argument is not present.\n\nTry <div class="lift:surround?with=default;alt=content">.\n\nVerified in Lift 2.3.'
74,'','ProtoUser superUser versus Role\nHello,\r\n\r\nI\'m implementing a Role in my model to ultimately replace the functionality provided by ProtoUser.superUser\r\n\r\nPlease let me know what the argument against having this functionality in Lift is, and if you\'d like to see this implemented, I\'d gladly commit my changes.\r\n\r\nSensible defaults like "0=super, 1=normal" could replace superUser.\r\n\r\nThanks,\r\nJuan'
357,'dpp','Elements with ajaxInvoke not rendered using setHtml in comet [Lift-2.0-scala280]\nWhile trying to port an existing application from 2.7.7 to Lift-2.0-scala280-SNAPSHOT I discovered a issue where elements containing ajaxInvoke is not rendered when using setHtml in Comet.\n\nWhen invoking the following partial update nothing seems to happen: \n<pre><code>\npartialUpdate(SetHtml("field", <input type="button" onclick={ajaxInvoke(() => JsRaw("alert(\'hi\')"))._2} value="Say hi"/ >)) \n</code></pre>\n\nThis works as expected however: \n<pre><code>\npartialUpdate(SetHtml("field", a(() => JsRaw("alert(\'hi\')"), <span>Link</span>))) \n</code></pre>\n\nLink to example application: \ngit://github.com/tbje/Lift-2.0-scala280-SNAPSHOT-issue.git\n\nThe application compiles and runs as expected by editing pom.xml by replacing \n<pre><code>\n  <scala.version>2.8.0.Beta1</scala.version> \n  <lift.version>2.0-scala280-SNAPSHOT</lift.version> \n</code></pre> with <pre><code>\n  <scala.version>2.7.7</scala.version> \n  <lift.version>2.0-SNAPSHOT</lift.version> \n</code></pre>\n\nSee also: http://groups.google.com/group/liftweb/browse_thread/thread/44c543a239c598dc\n\n'
640,'vdichev','Add XML matchers to TestResponse\nIt would help write more concise tests if one could conveniently test if the XML response contains or doesn\'t contain certain XML nodes. A lot of the code which must be written currently is to test if the response contains valid XML, extract it from the Box and then test it if it contains the elements. This leads to a lot of duplication of code of the sort (the example is using Specs):\n\n<pre><code>\nfor {\n  message <- post("/statuses/update.xml", "status" -> "test_msg1")\n    !@ "Couldn\'t post message" if message.xml must notBeEmpty\n  xml <- message.xml\n} {\n  xml must \\\\(<text>test_msg1</text>)\n}\n</code></pre>\n\nWe can use the XML matchers in Specs and create similar test methods in Lift\'s TestResponse, which would resemble the NodeSeq XPath operators \\\\ and \\. The user would be able to chain these methods together and test the same TestResponse for multiple conditions.\n\nThe above snippet would result in this:\n\n<pre><code>\npost("/statuses/update.xml", "status" -> "test_msg1") \\\\(<text>test_msg1</text>)\n</code></pre>\n\nSo far I see that operators for exact XML nodes or nodes with a specified label would be useful, which could be found anywhere in the XML or as direct children. Since it\'s not easy to compose a negation operator, there could be negated forms like !\\\\ and !\\'
923,'indrajitr',"Mongo Specs fail under Scala 2.8.0\nSome of the recently added Mongo Specs fail under Scala 2.8.0.\n\nTo verify, either do a cross-build:\n./liftsh 'project lift-mongodb-record' +update +test\n\nor try the specific spec only under 2.8.0 using this command:\n./liftsh 'project lift-mongodb-record' ++2.8.0 'test-only net.liftweb.mongodb.record.MongoFieldSpecs'\n"
215,'jonifreeman','Improve error message when JsonParser.parse is called with invalid JSON text\n     scala> parse("\\"foobar\\"")\r\n     net.liftweb.json.JsonParser$ParseException: unexpected null\r\n     Near: "foobar\r\n        at net.liftweb.json.JsonParser$Parser.fail(JsonParser.scala:166)\r\n        at net.liftweb.json.JsonParser$ValStack.peek(JsonParser.scala:153)\r\n        at net.liftweb.json.JsonParser$.newValue$1(JsonParser.scala:110)\r\n        at net.liftweb.json.JsonParser$.parse0(JsonParser.scala:125)\r\n        at net.liftweb.json.JsonParser$.parse(JsonParser.s...\r\n\r\nJoni says:\r\n\r\nHi,\r\n\r\nThis is from JSON RFC (http://www.ietf.org/rfc/rfc4627.txt): "A JSON\r\ntext is a serialized object or array."\r\n\r\nI checked with another parser (http://www.jsonlint.com) and it fails\r\ntoo when given just JSON value:\r\n"syntax error, unexpected TNUMBER, expecting \'{\' or \'[\' at line 1"\r\n\r\nSo perhaps a better error message is a proper fix here?\r\n\r\nCheers Joni\r\n'
498,'eltimn','Companion object for LocaleField\nA companion object for LocaleField that has a list of all possible locales (similar to TimeZoneField)\n\nThis was the second part of ticket 162 that I have made a separate ticket.'
1064,'','UTF-8 support for i18n\nI18n in Lift is currently using the Java resource bundle system which defaults to ASCII with Unicode-escapes as encoding (@see bottom of http://java.sun.com/developer/technicalArticles/Intl/ResourceBundles/). For international users this forms additional complexity where many frameworks offer i18n using UTF-8. ResourceBundles allow specifying the encoding since Java 1.6.'
73,'','Mailer: Consider merging System.properties into Props\n> Rather than using System.getProperties should Mailer use\r\n> net.liftweb.util.Props?  It seems a little inconsistent as is.\r\n> -harryh\r\n\r\nThis makes sense for me too.  In our live lift app we have code in Boot to just copy props (that we happen to have named the same as the System mail properties) to System.properties:\r\n\r\n<pre><code>\r\n // props starting "mail.smtp." just need to be copied to System.properties:\r\n Props.props.filter(_._1 startsWith "mail.smtp").foreach( entry => System.setProperty(entry._1, entry._2) )\r\n    \r\n    //  Set up SMTP auth if a username and password is supplied\r\n    Mailer.authenticator = (Props.get("mail.user"), Props.get("mail.password")) match {\r\n      case (Full(u), Full(p)) => Full(new javax.mail.Authenticator {\r\n          override def getPasswordAuthentication = new javax.mail.PasswordAuthentication(u,p)\r\n        })\r\n      case _ => Empty\r\n    }\r\n</code></pre>\r\n\r\n...and that seems a little messy, although not particularly painful.\r\n \r\nI\'d expect any explicitly set System.properties (-D flags) to take precedence over any in Props, but that\'s maybe just my taste (and almost the exact opposite of the code we\'ve written!).\r\n '
356,'Dridus','Add ability to use doc result of query, not just value\nFrom the list:\n\nHi,\n\nI\'ve started working with the CouchRecord support and I\'ve run into a bit of a problem with the queryView function. I\'ve been writing views involving both map and reduce so I could generate statistics on some hierarchical data, and access leaves in one view, by using include_docs. As I discovered when my views returned no results in CouchRecord, its implementation is always using the "value" key in the returned row, whereas my views pulled the document in using the "doc" key.\n\nFor the present its fairly trivial for me to either split the view into two separate ones or perform a slightly cleverer reduce (I\'ve only been counting totals so far), but it would be more convenient if it were possible to do everything in one view. Also, in CouchDB 0.11 they\'re adding support for linked documents in views, which will place the resulting documents in the "doc" key. The current implementation makes it impossible to use a linked document view to query.\n\nPerhaps there could be a version of queryView that uses the "doc" key to generate the actual record, and provide it and the "value" key as a JValue in a tuple, as that value may be occasionally useful too?\n\nThanks,\nJustin Reardon\n\n'
639,'dchenbecker','Add binding support to the embed tag\nPer this discussion:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/8936d8832ddef391/4f7078992c85d2d1'
922,'jonifreeman','Lift-JSON occassionally chooses the wrong constructor, resulting in erroneous serialization\nOn decomposing a case class Lift-JSON will pick a constructor to base it\'s decomposition on with the "primaryConstructorArgs"-function (approximately line 188, net/liftweb/json/Meta.scala of lift-json project), which picks the first available constructor.\n\nHowever, the JVM does not guarantee the ordering of constructors, so in the case of classes with multiple alternative available constructors, the behavior becomes unpredictable and indeterminable.\nI would suggest the current unpredictable behavior is fixed so that "primaryConstructorArgs" always picks the declared Constructor with the most arguments, as this is a more reasonable assumption on the primary constructor for a case class to be serialized to JSON.\n\nCurrent implementation in net/liftweb/json/Meta.scala is: \ndef primaryConstructorArgs(c: Class[_]) = constructorArgs(c.getDeclaredConstructors()(0))\n\nSuggested fix is: \n def primaryConstructorArgs(c: Class[_]) = constructorArgs({var constructor: java.lang.reflect.Constructor[_] = null\n\t    \t  c.getDeclaredConstructors.foreach(cons =>{\n\t      \t\t  if (constructor == null) constructor = cons\n\t      \t\t  if(cons.getParameterTypes.size > constructor.getParameterTypes.size) constructor = cons\n\t    \t  })\n\t\t  constructor\n\t\t})\n'
214,'Dridus',"Bug in json parsing (doesn't correctly interpret \\/)\nhttp://groups.google.com/group/liftweb/browse_thread/thread/6db3cded182fe7ca"
497,'dpp','Allow disabling of column and table renaming\nAllow global enabling/disabling of table and column renaming.\n'
72,'','provide access to HttpServletRequest and HttpServletResponse from S\nTitle says it all.  Sometimes we need access to the raw request/response objects\r\n'
355,'Dridus',"Deprecate createRecord and createRecordFromJSON preferring new MyRecord\nCurrently you can create a record instance in two ways -- MyRecordMeta.createRecord or new MyRecord. Prior to the fix for #354, doing the latter resulted in a not-entirely-initialized Record instance.\n\nIt's not good to have two ways to create a record, since problems like this one where the paths differ in the results, so the plan is to deprecate the two methods on MetaRecord and then eventually remove them.\n\nCalls to MyRecordMeta.createRecord should be replaced with new MyRecord.\nCalls to MyRecordMeta.createRecordFromJSON should be replaced with new MyRecord().fromJSON"
638,'','autocompleteObj fails to bind selected object on submit\nAs default, the associated hidden field takes as value a generated "nonce" (term from the source code).\nOnce a value provided by the auto-completion is selected, the hidden field value attribute is set to the selected name.\nThis is done by the anonymous function given as parameter to the function "result" of the autocomplete js object.\nOn form submit, because the hidden field value is not one of the "nonce", the given onSubmit callback is not called.\n\n*net.liftweb.widgets.autocomplete.AutoComplete*\n<pre><code>\nprivate def autocomplete_*(options: Seq[(String, String)], default: Box[String],\n                    defaultNonce: Box[String], onSubmit: AFuncHolder, jsonOptions: List[(String,String)]): Elem = {\n  val id = Helpers.nextFuncName\n\n  fmapFunc(onSubmit){hidden =>\n\n    val data = JsArray(options.map {\n      case (nonce, name) => JsObj("name" -> name, "nonce" -> nonce)\n    } :_*)\n\n  /* merge the options that the user wants */\n    val jqOptions =  ("minChars","0") ::\n                      ("matchContains","true") ::\n                      ("formatItem","function(row, i, max) { return row.name; }") ::\n                      Nil ::: jsonOptions\n    val json = jqOptions.map(t => t._1 + ":" + t._2).mkString("{", ",", "}")\n    val autocompleteOptions = JsRaw(json)\n\n    val onLoad = JsRaw("""\n    jQuery(document).ready(function(){\n      var data = """+data.toJsCmd+""";\n      jQuery("#"""+id+"""").autocomplete(data, """+autocompleteOptions.toJsCmd+""").result(function(event, dt, formatted) {\n        jQuery("#"""+hidden+"""").val(formatted);\n      });\n    });""")\n\n...\n\n}\n</code></pre>\n\nI think there should have a specific "autocomplete_*" definition for autocompleteObj with a closure that recover the corresponding "nonce" that match the selected "name".\nAnd then set the hidden field value attribute with this recovered "nonce".\n'
921,'','Update the committer process wiki\nhttps://www.assembla.com/wiki/show/liftweb/Guide_to_Committing_Code\n'
213,'dpp','It should be possible to reconstruct a Mapper object from a non RDBMS source\nIf, for example, I have some json:\r\n\r\n{\r\n  "user": {\r\n    "id": 12,\r\n    "name": "Harry",\r\n    "age": 31,\r\n  }\r\n}\r\n\r\nI should be able to construct a User Mapper object such that I can then do:\r\n\r\nval user = // build user object from json\r\nuser.age(32).save\r\n\r\nand have the data be correctly saved back to the DB.'
496,'dpp','Fixed problems in the eventuallyUpdate code in Listeners/CometActors\nThe ListenerManager code for eventuallyUpdate needs fixing (e.g., wrappers around the partial function call, etc.)'
779,'dpp','Scala 2.8 package objects\nUse Scala package objects to support much simpler importing including Helpers._\n'
1062,'','util.Props.modeName should have a case for mode=Development\nThe subject says it all.\n\nhttps://github.com/lift/framework/blob/master/core/util/src/main/scala/net/liftweb/util/Props.scala#L147'
71,'dpp',"Add setting that makes lift destroy comet actors as soon as they don't appear on a page.\nOriginal thread:\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b29c263835ca2104"
354,'Dridus','Bug with record field initialisation  \nThere is an initialisation error with record in that the introspect method is not called if you make a new instance with the new language keyword. Basicaly, its all b0rked if you dont use createRecord'
637,'dpp','Specs 1.6.5 SNAPSHOT is called out in pom.xml files\n1.6.5 has shipped and the poms should be updated.'
920,'dpp','Add support for multiple Menu.param entries with the same prefix\nMore details here: http://groups.google.com/group/liftweb/browse_thread/thread/f8c734ad0844f98e/b48a1e467d619842#b48a1e467d619842'
212,'',"Add DataBinding stuff to Lift\nAdd Kris Nuttycombe's DataBinding types & traits to lift-webkit."
495,'dpp','MapperRules.quoteColumnName and MapperRules.quoteTableName defined as vals\nPlease change the definitions of the above from vals to something customizable.'
778,'dpp','Move DB from mapper to its own package\nMove DB from mapper to its own package... make it webkit independent such that it can be used as a generic Database connection manager.'
1061,'dpp','Allow snippet resolution for subpackages\nCurrently (without modification in  LiftRules.snippetNamesToSearch) snippet resolution is restricted to those classes in the *xxx.snippet* package.  It would be useful for organizing large numbers of snippets to be able to create sub packages within the snippet package and resolve snippet classes by including the name of their sub package, i.e.\n\n<span class="lift:subpack.Foo.bar">Hello</span> \n\nwould resolve to the snippet class *xxx.snippet.subpack.Foo* and method bar.  Current behaviour resolves this to *xxx.snippet.Foo* and method bar, silently discarding the subpack. Sub packages of sub packages could also be supported.  '
70,'dpp','There should be an image map function in SHtml\nThere should be support for image maps in SHtml.  See http://groups.google.com/group/liftweb/browse_frm/thread/84fee9386108a922?hl=en#'
353,'dpp','Add NotIn QueryParam\nThere is an In QueryParam, but no NotIn.'
636,'mads379',"Typo in Lift sbt 21\n\nFrom Scala ML reported by Todd O'Bryan:\n\nsrc/scala/code/lib/DepencyFactory.scala\n\nshould probably be\n\nsrc/scala/code/lib/DependencyFactory.scala\n\nAlso, in project/build.properties, the fourth line should be\n\nproject.name=Lift SBT Template\n\ninstead of Tempalte. :-)"
919,'dpp','Make it easier to register Screen and Wizard as snippets in Loc\nSee https://groups.google.com/d/topic/liftweb/F9G2O8W71hg/discussion'
211,'','java.sql.SQLException for MappedBoolean on  oracle.jdbc.driver.OracleDriver (Oracle 10g)\nHi,\n\nUsing the default MegaProtoUser trait for my User class, the following query fails on oracle but works just fine on H2:\n\n        scala> User.findAll(By(User.superUser, false))\n        java.sql.SQLException: Invalid column type\n        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:112)\n        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:146)\n        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:208)\n        at oracle.jdbc.driver.OraclePreparedStatement.setObjectCritical(OraclePreparedStatement.java:9168)\n        at ora...\n\nSurprisingly however, the following statement works as it should:\n\n        scala> User.findAll.head.superUser\n        res22: object com.mi.ahl.hal.ooh.model.User#superUser = true\n\nIs there a quick fix for this issue?\n\nRegards, Mathias'
494,'Dridus','PasswordField in lift-record cannot be validated\nBecause set_! hashes whatever value comes in, and the validation occurs on the stored value, the validator always sees some hashed value and so cannot validate the fields value in any reasonable fashion.'
777,'',"LiftActor ScalaDoc\nLiftActor has a bunch of different methods for posting events. Five of them are the same as Scala actors but I couldn't find any description of  !< which appears to be new. I got a vague idea from the source, but then, I shouldn't have to read the source. Could we please get some ScalaDoc?\n\nAlso, would it be possible to get at least as much ScalaDoc for the message posting methods as there is for the Scala actors? And perhaps even just a bit more since it isn't even remotely clear what the difference is between the two forms of !!\n"
1060,'davewhittaker','Update Squeryl dependency to 0.9.4-Final\nSee https://groups.google.com/group/liftweb/browse_thread/thread/79d9eb07dd5cb09'
69,'mariusdanciu','No GC if not items\nChange support for Lift GC so that the GC code is not added to pages that have no GUIDs that point back to the server.\r\n\r\n'
352,'jonifreeman','Do not serialize the internal state of a case class (JSON)\ncase class Foo(x: String, y: Int) {\n  lazy val baz = "baz"\n}\n\nShould serialize just fields \'x\' and \'y\'.\n'
635,'dpp','Resolve ResourceBundle for pages, as well as globally\nIn response to this thread: \nhttp://groups.google.com/group/liftweb/browse_thread/thread/a5fc26fdb4c71bab\n\nI have altered the resource bundle loading mechinhim so that it first checks the "local" bundle namespace, then checks the existing "global" namespace. Essentially, this allows you to have both page specific bundles and global bundles based on the existing LiftRules.resourceNames variable, as well as having this new auto-computed search path. It is NOT a breaking change as its an under the hood API change.\n\nUPDATE: dpp has off list conversation with harryh and takes ownership of this ticket.'
918,'dpp','Request should not return status 200 when a snippet/template failure occurs\n'
210,'',"Insert and delete Mapper statements aren't getting deleted\nThis appears to be due to a change I made for issue 99. Turns out that I should be logging in runPreparedStatement, not exec."
493,'','Decrease the number of time the localeCalculator rules are invoked per request\nBy adding a new custom rule to localeCalculator i noticed that the custom code was getting invoked a huge number of times instead of the "normal" once per request.\n\nLooking at the source code i figured that the cause is this implementation in the S object:\n<pre><code>def locale: Locale = LiftRules.localeCalculator(containerRequest)\n</code></pre>\nWhat this means is that every time someone wants to know the current locale the whole localeCalculator rules set is executed.\nUnless i\'m missing something, i think it would make more sense for the locale calculation to only occur once per request.\n\nThis is also valid for other values like timeZone.'
776,'dpp',"Req.snapshoting breaks ParamCalculator\nReq's ParamCalculator is not a thunk... and thus it winds up breaking when Reqs are copied.\n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/04cd6b3d861bef17?hl=en#"
1059,'jonifreeman','Deserialization of Eithers throws a MappingException\nDeserialization of Eithers from JSON throws a MappingException\n\nExample code and output in the thread below\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/025cf059ef464647#\n'
68,'','Better handling of context and allow Lift apps to have context modified on a session-by-session basis\nSupport for changing the context root for requests so the root can be blank even if the actual context path is not or that a context path can be added (and all requests will be rewritten removing that context path from the head of the path) or subtracted.'
351,'Dridus',"Update lift-couchdb to use dispatch 0.7.1 once released\nThe version of databinder-http that lift-couchdb uses (0.6.3) is no longer up on public repos for Scala 2.8.0.Beta1. I believe this means that this module cannot be compiled in the 280_port_refresh branch (or, at least I can't on my machine)\n\n0.7.0 is the current version of databinder-http, but it has a problem with its POM that prevents it from being used. n8han knows of the issue and said it would be fixed in a few days."
634,'hoffrocket','upgrade mongo-java-driver to 2.1\nbump mongo-java-driver to 2.1\n - new driver required to support replica sets\n - involves one line code change'
917,'dpp','Add ^* to CSS selector transforms\nDetails here: http://groups.google.com/group/liftweb/browse_thread/thread/e4c907ac33e7f6ca_'
209,'timperrett','File extension defaults need widening\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e189fc4a2726a94f'
492,'jeppenejsum','Lift-OpenID Is Missing Commons-Logging Dependency\nhttp://groups.google.com/group/liftweb/msg/b0ad89ff345efef1\n\nApparently openid4java requires commons-logging but neither it nor lift-openid includes the dependency in its POM.'
1058,'','Allow RHS of CSS selector to be an Option[primitive] or Box[primitive]\nIt would be nice if Lift supported java-primitives and their respective boxed types in Option/Box on the RHS of the CSS selector.\n\nThis would allow one to write\n\n\t\t\t"stuff" #> Some(4) &\n\t\t\t"stuff" #> Full(4) &\n\t\t\t"stuff" #> Some(new java.lang.Long(4)) &\n\t\t\t"stuff" #> Full(new java.lang.Long(4)) &\n\nThis is now (2.4-M1) not possible.'
67,'dchenbecker','Lift 1.1 does not compiler under JDK 1.5\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] [scala:compile {execution: default}]\r\n[INFO] Checking for multiple versions of scala\r\n[INFO] Compiling 37 source files to /home/dpp/Desktop/liftweb/lift-mapper/target/classes\r\n[WARNING] Picked up JAVA_TOOL_OPTIONS: -Xmx1024M\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:77: error: value isWrapperFor is not a member of java.sql.Statement\r\n[WARNING]       case _ => underlying.isWrapperFor(clazz)\r\n[WARNING]                            ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:82: error: value unwrap is not a member of java.sql.Statement\r\n[WARNING]       case _ => underlying.unwrap(clazz)\r\n[WARNING]                            ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:237: error: value isClosed is not a member of java.sql.Statement\r\n[WARNING]           underlying.isClosed()\r\n[WARNING]                      ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:242: error: value isPoolable is not a member of java.sql.Statement\r\n[WARNING]           underlying.isPoolable()\r\n[WARNING]                      ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:277: error: value setPoolable is not a member of java.sql.Statement\r\n[WARNING]           underlying.setPoolable(poolable)\r\n[WARNING]                      ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:303: error: value isWrapperFor is not a member of java.sql.PreparedStatement\r\n[WARNING]       case _ => super.isWrapperFor(clazz) || underlying.isWrapperFor(clazz)\r\n[WARNING]                                                         ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:308: error: value unwrap is not a member of java.sql.PreparedStatement\r\n[WARNING]       case _ => if (super.isWrapperFor(clazz)) super.unwrap(clazz) else underlying.unwrap(clazz)\r\n[WARNING]                                                                                    ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:370: error: wrong number of arguments for method setAsciiStream: (Int,java.io.InputStream,Int)Unit\r\n[WARNING]       underlying.setAsciiStream(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:380: error: type mismatch;\r\n[WARNING]  found   : Long\r\n[WARNING]  required: Int\r\n[WARNING]       underlying.setAsciiStream(index, x, length)\r\n[WARNING]                                           ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:390: error: wrong number of arguments for method setBinaryStream: (Int,java.io.InputStream,Int)Unit\r\n[WARNING]       underlying.setBinaryStream(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:400: error: type mismatch;\r\n[WARNING]  found   : Long\r\n[WARNING]  required: Int\r\n[WARNING]       underlying.setBinaryStream(index, x, length)\r\n[WARNING]                                            ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:410: error: type mismatch;\r\n[WARNING]  found   : java.io.InputStream\r\n[WARNING]  required: java.sql.Blob\r\n[WARNING]       underlying.setBlob(index, x)\r\n[WARNING]                                 ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:415: error: wrong number of arguments for method setBlob: (Int,java.sql.Blob)Unit\r\n[WARNING]       underlying.setBlob(index, x, length)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:435: error: wrong number of arguments for method setCharacterStream: (Int,java.io.Reader,Int)Unit\r\n[WARNING]       underlying.setCharacterStream(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:445: error: type mismatch;\r\n[WARNING]  found   : Long\r\n[WARNING]  required: Int\r\n[WARNING]       underlying.setCharacterStream(index, x, length)\r\n[WARNING]                                               ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:455: error: type mismatch;\r\n[WARNING]  found   : java.io.Reader\r\n[WARNING]  required: java.sql.Clob\r\n[WARNING]       underlying.setClob(index, x)\r\n[WARNING]                                 ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:460: error: wrong number of arguments for method setClob: (Int,java.sql.Clob)Unit\r\n[WARNING]       underlying.setClob(index, x, length)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:495: error: value setNCharacterStream is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNCharacterStream(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:500: error: value setNCharacterStream is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNCharacterStream(index, x, length)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:504: error: not found: type NClob\r\n[WARNING]   def setNClob (index : Int, x : NClob) {\r\n[WARNING]                                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:505: error: value setNClob is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNClob(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:510: error: value setNClob is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNClob(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:515: error: value setNClob is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNClob(index, x, length)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:520: error: value setNString is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setNString(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:554: error: not found: type RowId\r\n[WARNING]   def setRowId (index : Int, x : RowId) {\r\n[WARNING]                                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:555: error: value setRowId is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setRowId(index, x)\r\n[WARNING]                  ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:564: error: not found: type SQLXML\r\n[WARNING]   def setSQLXML (index : Int, x : SQLXML) {\r\n[WARNING]                                   ^\r\n[WARNING] /home/dpp/Desktop/liftweb/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala:565: error: value setSQLXML is not a member of java.sql.PreparedStatement\r\n[WARNING]       underlying.setSQLXML(index, x)\r\n[WARNING]                  ^\r\n[WARNING] 28 errors found\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] command line returned non-zero value:1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] For more information, run Maven with the -e switch\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 26 seconds\r\n[INFO] Finished at: Mon Sep 21 15:33:07 PDT 2009\r\n[INFO] Final Memory: 15M/28M\r\n[INFO] ------------------------------------------------------------------------\r\ndpp@david-desktop:~/Desktop/liftweb/lift-mapper$ \r\n\r\n'
350,'dpp','View only version of toForm\nIt would be useful to have an equivalent to the toForm method to present a view of the mapper. Something like:\n\ndef toView = mapper.formFields.map(f => <tr><td>{f.displayName}</td><td>{f.asHtml}</td></tr>)'
633,'nau','mongodb-record querying with fields selection\nAdd support to mongodb-record for querying with field selection: http://www.mongodb.org/display/DOCS/Querying#Querying-FieldSelection\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/1f08a02cdd20070f#'
916,'indrajitr','2.3-SNAPSHOT: Minified JS files missing from jar \nA detailed report on the exact problem can be found here: \n\nhttps://groups.google.com/forum/#!topic/liftweb/vQX5e0mY43Y'
208,'dpp',"Functions created during an API request are not preserved\nFunctions created during an API request are discarded rather than merged into the Session's list of functions."
491,'indrajitr','Use vscaladoc instead of scaladoc for archetype templates\nScaladoc does not support scaladoc links for external libraries. Use vscaladoc instead in the archetype templates to get around this.'
774,'dpp','S.notice in LiftScreen does not work\nS.notice/warning/error does not work with Wizard or LiftScreen. '
1057,'dpp','valMinLen and ValManLen fail validation on null strings\nvalMinLen and valMaxLen fail validation for objects with mapper string fields that are null. I ran into this problem when reading a User object that has valid null data in some MappedString fields. For example, I have a User object with a MappedString field called ZipCode (not a MappedPostalCode) that was null in the DB. When I tried to update another field on this user, say firstName for example, the null ZipCode failed validation.  Here is the original thread on the lift discussion group that I added: http://groups.google.com/group/liftweb/browse_thread/thread/6c9dc59adca8c688/4e562d6584bf6eed\n\nIn that thread, David mentions he will modify these methods with a flag to leave the default behavior the same as to not break existing code. Thanks all.'
66,'dpp','Lazy snippet evaluation\nset a flag on snippets that would fork the evaluation of the snippet into a thread pool and then allow the weaving of the responses at page render time.  This would be a benefit to systems that need to fork multiple long running threads (e.g., ad servers, etc.) to pull data in.'
632,'indrajitr','Add SBT build support for Lift Framework build\n1. Add support for building Lift Framework with SBT.\n2. Provide standard SBT configuration for archetypes.'
915,'jeppenejsum','Better formatting of snippet error message\n'
207,'dpp','Put <? XML ?> stuff into LiftRules\nPut the determination of how to add the <? xml ?> stuff into LiftRules.'
490,'indrajitr','Update h2 version to newer one and have the scope adjusted to runtime\nUpdate h2 to 1.2.132 consistently in all the places and adjust the scope to runtime'
773,'hoffrocket','Stack Trace on record initialization\nUse this project: https://github.com/ndarilek/lift-mongo-protouser\n\nOn boot:\n\nCaused by: java.lang.IndexOutOfBoundsException: 6\n\tat scala.collection.mutable.ListBuffer.remove(ListBuffer.scala:256) ~[scala-library.jar:na]\n\tat net.liftweb.record.MetaRecord$$anonfun$1$$anonfun$apply$mcV$sp$4$$anonfun$apply$1.apply(MetaRecord.scala:131) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.record.MetaRecord$$anonfun$1$$anonfun$apply$mcV$sp$4$$anonfun$apply$1.apply(MetaRecord.scala:131) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat scala.Option.foreach(Option.scala:121) ~[scala-library.jar:na]\n\tat net.liftweb.record.MetaRecord$$anonfun$1$$anonfun$apply$mcV$sp$4.apply(MetaRecord.scala:131) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.record.MetaRecord$$anonfun$1$$anonfun$apply$mcV$sp$4.apply(MetaRecord.scala:131) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:61) ~[scala-library.jar:na]\n\tat scala.collection.immutable.List.foreach(List.scala:45) ~[scala-library.jar:na]\n\tat net.liftweb.record.MetaRecord$$anonfun$1.apply$mcV$sp(MetaRecord.scala:131) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.record.MetaRecord$$anonfun$1.apply(MetaRecord.scala:115) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.record.MetaRecord$$anonfun$1.apply(MetaRecord.scala:115) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71) ~[lift-util_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.mapper.Safe$.runSafe(Safe.scala:45) ~[lift-mapper_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat net.liftweb.record.Record$class.runSafe(Record.scala:58) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat code.model.User.runSafe(User.scala:48) ~[classes/:na]\n\tat net.liftweb.record.MetaRecord$class.$init$(MetaRecord.scala:115) ~[lift-record_2.8.0-2.2-RC1.jar:2.2-RC1]\n\tat code.model.User$.<init>(User.scala:17) ~[classes/:na]\n\tat code.model.User$.<clinit>(User.scala) ~[classes/:na]\n'
1056,'','noTime in TimeHelpers always uses current date not the provided date\nThe noTime function for the DateExtension class always returns the time without hours, minutes, seconds and milliseconds for the current time not the time the function is supposed to be working on.\n\nI think the calendar.setTime(date) needs to be called just after the val calendar = Calendar.getInstance line.\n\nGoogle discussion: [[url:http://groups.google.com/group/liftweb/browse_thread/thread/94143b706c9c2237/e200690f274481d5?lnk=gst&q=noTime#e200690f274481d5|http://groups.google.com/group/liftweb/browse_thread/thread/94143b706c9c2237/e200690f274481d5?lnk=gst&q=noTime#e200690f274481d5]]'
65,'','MappedEmail rejecting e-mails with a - (dash)\nOn Wed, Sep 16, 2009 at 11:27 AM, harryh <harryh@gmail.com> wrote:\r\n>> Hrm, MappedEmail is now rejecting e-mails with a - in the part before\r\n>> the @.\r\n>> is %-+ being interpreted as % through + and not % OR - OR + ?\r\n\r\nI agree:\r\n\r\n$ git pull\r\n[ output omitted]\r\n$ grep -R \'val emailPattern\' *\r\nlift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala:  val emailPattern = Pattern.compile("^[a-z0-9._%-+]+@(?:[a-z0-9-]+\\\\.)+[a-z]{2,4}$")\r\nlift-record/src/main/scala/net/liftweb/record/field/EmailField.scala:  val emailPattern = Pattern.compile("^[a-z0-9._%-]+@(?:[a-z0-9-]+\\\\.)+[a-z]{2,4}$")\r\n$ scala\r\nWelcome to Scala version 2.7.5.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_15).\r\nType in expressions to have them evaluated.\r\nType :help for more information.\r\n\r\nscala>  import java.util.regex._ \r\nimport java.util.regex._\r\n\r\n// current regexp in mapper:\r\nscala> val emailPattern = Pattern.compile("^[a-z0-9._%-+]+@(?:[a-z0-9-]+\\\\.)+[a-z]{2,4}$")\r\nemailPattern: java.util.regex.Pattern = ^[a-z0-9._%-+]+@(?:[a-z0-9-]+\\.)+[a-z]{2,4}$\r\n\r\nscala> emailPattern.matcher("richard-with-dash@someplace.com").matches\r\nres0: Boolean = false\r\n\r\n// a possible fix - escape the dashes:\r\nscala> val emailPattern = Pattern.compile("^[a-z0-9._%\\\\-+]+@(?:[a-z0-9\\\\-]+\\\\.)+[a-z]{2,4}$")\r\nemailPattern: java.util.regex.Pattern = ^[a-z0-9._%\\-+]+@(?:[a-z0-9\\-]+\\.)+[a-z]{2,4}$\r\n\r\nscala> emailPattern.matcher("richard-with-dash@someplace.com").matches                        \r\nres1: Boolean = true\r\n\r\nRichard'
348,'jeppenejsum','OpenId attribute exchange support for well known providers\nThis makes it easy to get common attributes (name, email etc) from well known providers.\n\nDetails: http://groups.google.com/group/liftweb/browse_thread/thread/01b3d57b43b25c34/3995f152d9c99aa2#3995f152d9c99aa2'
631,'indrajitr','JettyTestServer start/stop not sequenced properly\nnet.liftweb.webapptest.ToHeadUsage and net.liftweb.webapptest.OneShot should do JettyTestServer.start() and JettyTestServer.stop() within doBeforeSpec() and doAfterSpec() respectively.'
914,'migo','Squeryl-record Calendar query\nI just updated from Lift 2.2 to 2.3-M1 to fix #869, which appears to\nhave fixed the bug. Unfortunately, the upgrade broke querying by date.\n\n// crontask.scala\nclass CronTask extends Record[CronTask] with KeyedRecord[Long] {\n  override def meta = CronTask\n\n  @Column(name="id")\n  override val idField = new LongField(this)\n  val last_ran = new DateTimeField(this)\n}\n\nobject CronTask extends CronTask with MetaRecord[CronTask]\n\n// elsewhere\nfrom(Schema.crontasks)(c =>\n      where (c.last_run < Calendar.getInstance.getTime)\n      select (c))\n\n// compiler error\n[error]  found   : java.util.Date\n[error]  required:\norg.squeryl.dsl.NonNumericalExpression[java.sql.Timestamp]\n[error]       where (c.last_ran < Calendar.getInstance.getTime)\n[error]                                                ^ (under getTime)\n'
1197,'dpp','Improve Mailer functionality for attachments…\nMails with PDF attachments sent with Mailer causes problems in lots of mail clients. It seems to be due to the "multipart/related" header. Changing to "multipart/mixed" makes the problem go away. Maybe we need a way for clients to control this header and while at it it would be nice to do real mixed content (inline attachments). At the moment Mailer puts all attachments at the end but "inline".\n\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/xIPg2be17Fg\n'
206,'mariusdanciu',"LiftRules exceptionHandler should be applied for Ajax exceptions as well\n\r\nif a Ajax functions throws exceptions these are not provided to LiftRules.exceptionHander.\r\n\r\nBr's,\r\nMarius"
489,'jonifreeman',"Support for Box in JSON\nSupport for Box in JSON library just as there's support for Option (although what do we do about Failure?)"
772,'eltimn','ensureIndex ignores unique parameter\nOne version of ensureIndex ignores the unique parameter.\n\n'
1055,'dchenbecker','Add lift-core_zh_TW.properties (Traditional Chinese)\nHere is the translation.\n\nhttps://gist.github.com/1048312 \n\nThanks.'
347,'Dridus','lift-couchdb has dependencies to outdated lift-json version\nThe lift-couchdb module has a dependency on the dispatch-lift-json module, which in turn depends upon a version of lift-json-1.1-M6 in the databinder repository. As a consequence, any project using lift-couchdb has dependencies both to the current lift-json (as lift-couchdb as relies upon that), and to an outdate version of the same module. In some build environments (confirmed in sbt) this results in compilation or runtime failures.'
630,'Dridus','CouchDB integration sends non-application/json Content-Type; CouchDB > 0.11.0 full of hate\nNeed to send down a content-type. Aaron Valade confirmed on the list that sending this does not bug older versions.\n'
64,'',"Update the Logo in http://twitter.com/liftweb\nSubject says it all :-) Shouldn't we have the new logo there?"
913,'indrajitr','CombParserHelpers#isNum not to handle supplementary characters\nCombParserHelpers#isNum depends on Character#isDigit(char) which cannot handle supplementary characters having code points greater than U+FFFF.\n\nAs a result, the outcome is inconsistent for character set outside U+0000 to U+FFFF\nPut necessary guard around that and mention it in the scaladoc.\n'
1196,'hoffrocket','Remove Mapper and Record safe_# due to performance costs\nnoticed that instantiation of Record instances is \npretty expensive (in terms of wall clock time) due to the Safe.next \ncall during construction. \n\nsee discussion: https://groups.google.com/group/liftweb/browse_thread/thread/f6a74d92d895f6ce/e8d3ef6ceced6ee8#e8d3ef6ceced6ee8'
205,'Dridus',"Add CRUDify.deleteMenuLocParams\nto match editMenuLocParams, viewMenuLocParams, etc.\r\n\r\noriginal message from the list:\r\n\r\n\tSubject: \t[Lift] Feature Request: deleteMenuLocParams in CRUDify\r\n\tFrom: \ttommycli <tommycli@ucla.edu>\r\n\tDate: \tNovember 23, 2009 11:50:09 PM EST\r\n\tTo: \tLift <liftweb@googlegroups.com>\r\n\tReply-To: \tliftweb@googlegroups.com\r\n\r\n    Add deleteMenuLocParams to CRUDify.\r\n\r\n    Patch below. (I tried github, but you guys don't pull apparently).\r\n"
488,'pr1001','Lift-OpenID ScalaDocs is Out of Data/Wrong\nUpdate the ScalaDocs (and wiki).'
771,'dpp','LiftScreen and Wizard.Screen should not display fields  shouldDisplay_? set to false\nPer - http://groups.google.com/group/liftweb/browse_thread/thread/399e085aad6b6e54\n\nLiftScreen Wizard Screens still show fields registered with _register even if shouldDisplay_? is overriden to false \n\n\n'
1054,'dpp','RedirectResponse & PermRedirectResponse should not have different signatures\nThe inconsistency makes switching back and forth annoying.'
346,'mariusdanciu',"Solve CSS/JS unwanted caching\nThe details are described here:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/bdb388defd16beb6\n\nMain points:\n\n1. Allow the ability for user's function to add id-s for resource URI's in order to have proper resource refresh and browse cache optimization\n\nResource combining is a different story as I believe that static serving by reverse proxies is mostly used in production.\n"
629,'dpp','option bind, being able to remove large portion of html if none\nDavid Pollock\n\nBelow, address2 is optional.  If it doesn\'t exist, I do not want the outer <span> tag to even be displayed.\n\n<address:existing> \n        <h2>Existing Addresses</h2> \n        <div class="show_existing_address"> \n            <span><address:recipient>Barry Obama</address:recipient></span> \n            <span><address:address1>1 Main St</address:address1></span> \n            <span><address:address2>1 Main St</address:address2></span> \n       </div> \n</address:existing> \n\n\nHere is my solution.\n\nAdded a local util method:\n\n    def valueBind[T](name: String, value: Option[NodeSeq]) : BindParam = {\n        new FuncBindParam(name, (ns: NodeSeq)  => {\n            val template = chooseTemplate(name, "value", ns)\n            value.map( v =>\n                bind(name, template, "value" -> v)\n            ).getOrElse(NodeSeq.Empty)\n        })\n    }\n\nAnd the resulting XML \n<address:existing> \n        <h2>Existing Addresses</h2> \n        <div class="show_existing_address"> \n            <span><address:recipient>Barry Obama</address:recipient></span>\n            <span><address:address1>1 Main St</address:address1></span>\n            <address:address2><span><address2:value>Ste 55</address2:value></span></address:address2>\n       </div> \n</address:existing> \n\nAnd the binding:\n        bind("address", xhtml,\n            "recipient" -> h(address.getRecipient),\n            "address1" -> h(address.getAddress1),\n            valueBind("address2", h(address.getAddress2))  //Address2 is Option[String], h() is a util method to turn string into NodeSeq\n       )\n\nThe original thread: http://groups.google.com/group/liftweb/browse_thread/thread/92de8da5e502c758/88f238808aec8d26#88f238808aec8d26\n\n'
63,'','lift-archetype-jpa-blank 1.1-M5 does not work (NPE)\nvisiting http://localhost:9090/ after mvn jetty:run gives:\n<pre>\nException occured while processing /\nMessage: java.lang.NullPointerException\n\tscala.runtime.BoxedObjectArray.length(BoxedObjectArray.scala:21)\n\tscala.runtime.BoxedArray$AnyIterator.hasNext(BoxedArray.scala:47)\n\tscala.Iterator$class.toList(Iterator.scala:696)\n\tscala.runtime.BoxedArray$AnyIterator.toList(BoxedArray.scala:45)\n\tscala.Iterable$class.toList(Iterable.scala:397)\n\tscala.runtime.BoxedArray.toList(BoxedArray.scala:24)\n\tnet.liftweb.http.provider.servlet.HTTPRequestServlet.param(HTTPRequestServlet.scala:61)\n\tbootstrap.liftweb.Boot$$anonfun$localeCalculator$1$1.apply(Boot.scala:67)\n\tbootstrap.liftweb.Boot$$anonfun$localeCalculator$1$1.apply(Boot.scala:67)\n\tnet.liftweb.util.Full.flatMap(Box.scala:332)\n\tbootstrap.liftweb.Boot.localeCalculator$1(Boot.scala:67)\n\tbootstrap.liftweb.Boot$$anonfun$boot$1.apply(Boot.scala:74)\n\tbootstrap.liftweb.Boot$$anonfun$boot$1.apply(Boot.scala:74)\n\tnet.liftweb.http.S$.locale(S.scala:320)\n        ...\n</pre>\n\nIt is because here\n<code>def param(name: String): List[String] = req.getParameterValues(name).toList</code>\nreq.getParameterValues(name) returns null, it boxed to BoxObjectArray and toList tries to access length on null - NPE as a result\nusing http://localhost:9090/?swedish of course does the trick (no NPE)\n\nThere is a ticket for scala <https://lampsvn.epfl.ch/trac/scala/ticket/1954> marked as "Unreleased-2.8.x" but having in ScalaRuntime\n<pre><code>def boxArray(value: AnyRef): BoxedArray[_] = value match {\n    case x: Array[AnyRef] => new BoxedObjectArray(x,ClassManifest.classType(x.getClass.getComponentType))\n    case x: Array[Int] => new BoxedIntArray(x)\n    case x: Array[Double] => new BoxedDoubleArray(x)\n    case x: Array[Long] => new BoxedLongArray(x)\n    case x: Array[Float] => new BoxedFloatArray(x)\n    case x: Array[Char] => new BoxedCharArray(x)\n    case x: Array[Byte] => new BoxedByteArray(x)\n    case x: Array[Short] => new BoxedShortArray(x)\n    case x: Array[Boolean] => new BoxedBooleanArray(x)\n    case x: BoxedArray[_] => x\n    case null => null\n }</code></pre>\nlike it is in trunk now, might be just the same for this situation since boxArray returns null for null and invoking toList on null will throw NPE.\nI might be wrong, but that\'s why I am posting here. Would be nice to hear if I am missing something, thx'
912,'','When DB connection failed, error message is not helpful\nWhen an exception to load a DB driver exists, the error message is misleading and completely nonintuitive as to what is actually  happening. I believe there should be an error message saying that the "Driver failed to load" or something more helpful.\n\nI have my DB connection configured like so in Boot.scala\n\n<pre><code>\n    DB.defineConnectionManager(DefaultConnectionIdentifier, Database)\n    LiftRules.unloadHooks.append(() => Database.closeAllConnections_!())\n\n// ... later down\n\n  object Database extends StandardDBVendor(\n    Props.get("db.class").openOr("org.h2.driver"),\n    Props.get("db.url").openOr("jdbc:h2:mem:lollerskates;DB_CLOSE_DELAY=-1"),\n    Props.get("db.user"),\n    Props.get("db.pass")\n  )\n</code></pre>\n\nI had forgotten to add the H2 driver dependency to my SBT project so it wasn\'t available at all. When I loaded the web app I got this giant stacktrace (attached as a text file since it is so large, but the top is reproduced below):\n\n<pre><code>\njava.lang.NullPointerException: Looking for Connection Identifier ConnectionIdentifier(lift) but failed to find either a JNDI data source with the name lift or a lift connection manager with the correct name\n\tat net.liftweb.mapper.DB$$anonfun$7$$anonfun$apply$12.apply(DB.scala:141)\n\tat net.liftweb.mapper.DB$$anonfun$7$$anonfun$apply$12.apply(DB.scala:141)\n</code></pre>'
204,'Dridus','Use of S.? or other resource bundles outside of S.init throws NPE instead of helpful error\nIf you use S.? or S.??, etc when not in a valid S scope (e.g. during boot time) you get an NPE from the bowels of S.?! instead of useful exception text.'
487,'dpp','Change stuff in S from StatefuleSnippet to DispatchSnippet\nThere are a bunch of places in S that require aStatefuleSnippet that could just as easily take a DispatchSnippet... change them to make these things more flexible.'
770,'','LiftScreen and Wizard.Screen should not display fields  shouldDisplay_? set to false\nPer - http://groups.google.com/group/liftweb/browse_thread/thread/399e085aad6b6e54\n\nLiftScreen Wizard Screens still show fields registered with _register even if shouldDisplay_? is overriden to false \n\n\n'
1053,'fmpwizard','LiftScreen buttons are not localized\nLiftScreen\'s default button implementation uses S.??("Cancel") and S.??("Finish") but Cancel and Finish are not listed in lift\'s localization files. So if we overload LiftRules.localizationLookupFailureNotice to log notices to error log then errors are generated.\n\nhttps://groups.google.com/d/topic/liftweb/R73Dx-ubONw/discussion'
345,'fmpwizard','Remove deprecated logging functionality from lift-util\n#309 will implement new logging functionality and deprecate logging from lift-util. Once 2.0 is out, existing logging code in lift-util should be removed'
628,'eltimn',"Move JsonBoxSerializer to new package and remove $ from field names\nMove net.liftweb.util.JsonBoxSerializer to new package net.liftweb.json.ext so using it doesn't bring in all of util's dependencies. Also, remove $ from field names to be compatible with MongoDB."
62,'dpp','two "Expires" entries in response header\nThere can be only one:\r\n\r\n$ curl -I demo.liftweb.net \r\nHTTP/1.1 200 OK \r\nServer: nginx/0.6.32 \r\nDate: Tue, 15 Sep 2009 06:37:32 GMT \r\nContent-Type: text/html; charset=utf-8 \r\nConnection: keep-alive \r\nExpires: Thu, 01 Jan 1970 00:00:00 GMT \r\nSet-Cookie: JSESSIONID=4ybw6k5861ab;Path=/ \r\nContent-Length: 8061 \r\nExpires: Tue, 15 Sep 2009 06:37:32 UTC \r\nCache-Control: no-cache; private; no-store; must-revalidate; max- \r\nstale=0; post-check=0; pre-check=0; max-age=0 \r\nPragma: no-cache \r\nX-Lift-Version: 1.1-SNAPSHOT '
203,'indrajitr','Enforce Lift build using Maven 2.1.x or above but less than 3.x\nLift (and possibly Maven Scala plugin) is done best with Maven version > 2.1.x and < 3.x. Enforce that in the project model.'
486,'jonifreeman','Empty XML tag should not be rendered into JSON\nhttp://groups.google.com/group/liftweb/browse_thread/thread/27beeae86a6208af/ec3a09d241896d5b?show_docid=ec3a09d241896d5b\n'
769,'dpp','Fix for non-serilizable lock object in ContainerVar doSync\nBased upon this thread and offline discussion between myself and derek I will make the lock object serilizable so that when it enters a session distribution service it doesnt explode as being non-serilizable. \n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c7b53d345e7ed2dc'
1052,'eltimn','Add BsonDSL for querying MongoDB\nAdd BsonDSL as an extension of JsonDSL to handle BSON types ObjectId, Pattern, UUID, and Date.'
344,'indrajitr',"Archetype build fails\nAs part of #309 I've made changes to the archetypes. When switching back to master, I can no longer build/install the archetypes. It seems that, when trying to build a sample project based on the archetype, it uses the old archetype installed previously not the one being tested. \n\nAs can be seen in the log below, it doesn't install the archetype jar before creating a sample project based on the archetype.\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Building lift-archetype-blank\n[INFO]    task-segment: [install]\n[INFO] ------------------------------------------------------------------------\n[INFO] [enforcer:enforce {execution: default}]\n[INFO] [resources:resources {execution: default-resources}]\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 13 resources\n[INFO] [scala:compile {execution: default}]\n[INFO] Checking for multiple versions of scala\n[INFO] includes = [**/*.scala,**/*.java,]\n[INFO] excludes = []\n[WARNING] No source files found.\n[INFO] [resources:testResources {execution: default-testResources}]\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/src/test/resources\n[INFO] [scala:testCompile {execution: default}]\n[INFO] Checking for multiple versions of scala\n[INFO] includes = [**/*.scala,**/*.java,]\n[INFO] excludes = []\n[WARNING] No source files found.\n[INFO] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.\n[INFO] Setting property: velocimacro.messages.on => 'false'.\n[INFO] Setting property: resource.loader => 'classpath'.\n[INFO] Setting property: resource.manager.logwhenfound => 'false'.\n[INFO] [archetype:jar {execution: default-jar}]\n[INFO] [archetype:add-archetype-metadata {execution: default-add-archetype-metadata}]\n[INFO] [source:jar-no-fork {execution: default}]\n[INFO] Building jar: /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/lift-archetype-blank-2.0-SNAPSHOT-sources.jar\n[INFO] [invoker:install {execution: default}]\n[INFO] Installing /Users/jeppe/projects/lift/liftweb/archetypes/pom.xml to /Users/jeppe/.m2/repository/net/liftweb/archetypes/2.0-SNAPSHOT/archetypes-2.0-SNAPSHOT.pom\n[INFO] Installing /Users/jeppe/projects/lift/liftweb/resources/lift-parent/pom.xml to /Users/jeppe/.m2/repository/net/liftweb/lift-parent/2.0-SNAPSHOT/lift-parent-2.0-SNAPSHOT.pom\n[INFO] Installing /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/pom.xml to /Users/jeppe/.m2/repository/net/liftweb/lift-archetype-blank/2.0-SNAPSHOT/lift-archetype-blank-2.0-SNAPSHOT.pom\n[INFO] Installing /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/lift-archetype-blank-2.0-SNAPSHOT.jar to /Users/jeppe/.m2/repository/net/liftweb/lift-archetype-blank/2.0-SNAPSHOT/lift-archetype-blank-2.0-SNAPSHOT.maven-archetype\n[INFO] Installing /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/lift-archetype-blank-2.0-SNAPSHOT-sources.jar to /Users/jeppe/.m2/repository/net/liftweb/lift-archetype-blank/2.0-SNAPSHOT/lift-archetype-blank-2.0-SNAPSHOT-sources.jar\n[INFO] [archetype:integration-test {execution: default-integration-test}]\n[INFO] [invoker:run {execution: default}]\n[INFO] Building: sample\n[INFO] [INFO] Scanning for projects...\n[INFO] [INFO] Searching repository for plugin with prefix: 'archetype'.\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Building Maven Default Project\n[INFO] [INFO]    task-segment: [archetype:generate] (aggregator-style)\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Preparing archetype:generate\n[INFO] [INFO] No goals needed for project - skipping\n[INFO] [INFO] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.\n[INFO] [INFO] Setting property: velocimacro.messages.on => 'false'.\n[INFO] [INFO] Setting property: resource.loader => 'classpath'.\n[INFO] [INFO] Setting property: resource.manager.logwhenfound => 'false'.\n[INFO] [INFO] [archetype:generate {execution: default-cli}]\n[INFO] [INFO] Generating project in Batch mode\n[INFO] [INFO] Archetype defined by properties\n[INFO] [INFO] snapshot net.liftweb:lift-archetype-blank:2.0-SNAPSHOT: checking for updates from lift-archetype-blank-repo\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] BUILD SUCCESSFUL\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Total time: 5 seconds\n[INFO] [INFO] Finished at: Fri Feb 12 09:43:02 CET 2010\n[INFO] [INFO] Final Memory: 13M/80M\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Scanning for projects...\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Building sample-project Project\n[INFO] [INFO]    task-segment: [clean, verify]\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] [clean:clean {execution: default-clean}]\n[INFO] [INFO] [resources:resources {execution: default-resources}]\n[INFO] [WARNING] Using platform encoding (MacRoman actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] [INFO] Copying 0 resource\n[INFO] [INFO] [yuicompressor:compress {execution: default}]\n[INFO] [INFO] nb warnings: 0, nb errors: 0\n[INFO] [INFO] [compiler:compile {execution: default-compile}]\n[INFO] [INFO] Nothing to compile - all classes are up to date\n[INFO] [INFO] [scala:compile {execution: default}]\n[INFO] [INFO] Checking for multiple versions of scala\n[INFO] [INFO] includes = [**/*.scala,**/*.java,]\n[INFO] [INFO] excludes = []\n[INFO] [INFO] /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/it/sample/sample-project/src/main/scala:-1: info: compiling\n[INFO] \n[INFO] [INFO] Compiling 2 source files to /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/it/sample/sample-project/target/classes at 1265964195161\n[INFO] [ERROR] /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/it/sample/sample-project/src/main/scala/bootstrap/liftweb/Boot.scala:17: error: not found: value Log4JLogBoot\n[INFO] [INFO]     LogBoot.loggerSetup = Log4JLogBoot.setup\n[INFO] [INFO]                           ^\n[INFO] [ERROR] one error found\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [ERROR] BUILD ERROR\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] wrap: org.apache.commons.exec.ExecuteException: Process exited with an error: 1(Exit value: 1)\n[INFO] \n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] For more information, run Maven with the -e switch\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] [INFO] Total time: 15 seconds\n[INFO] [INFO] Finished at: Fri Feb 12 09:43:20 CET 2010\n[INFO] [INFO] Final Memory: 31M/80M\n[INFO] [INFO] ------------------------------------------------------------------------\n[INFO] ..FAILED (25.0 s)\n[INFO]   The build exited with code 1. See /Users/jeppe/projects/lift/liftweb/archetypes/lift-archetype-blank/target/it/sample/build.log for details.\n[INFO] -------------------------------------------------\n[INFO] Build Summary:\n[INFO]   Passed: 0, Failed: 1, Errors: 0, Skipped: 0\n[INFO] -------------------------------------------------\n[ERROR] The following builds failed:\n[ERROR] *  sample\n[INFO] -------------------------------------------------\n"
627,'mads379','Update "Starting with Lift"\nUpdate the "Starting with Lift" article to address these issues: \n\n(Message by David from Lift ML)\n----\n- The old-school HTML is ugly\n- It uses Maven which makes people think Lift is Maven only and then I get hate mail\n- I shows Mapper first and coming from Ruby, Mapper looks heavy-weight, so I wanted to do something that shows Comet/Ajax first\n----\n\nAlso sneak in as much use of Lifty as possible ;)'
61,'dpp',"Add support for user-specified encoding in Mailer\nWe're adding a default of UTF-8, per http://groups.google.com/group/liftweb/browse_thread/thread/3b3c356d0e0b01d6/c4ea5bb027e64d62#c4ea5bb027e64d62, but we should probably also allow the user to specify something if they want to."
910,'jonifreeman','Map[String, V] support to JSON DSL\nval tags: Map[String, ...]\n("tags" -> tags)\n\nshould render tags as a JSON object.\n'
1193,'dpp',"Functions mapped in an ajax call gets GC'ed prematurely\nDetails: http://groups.google.com/group/liftweb/browse_frm/thread/059442615ab2d77f#"
202,'mariusdanciu',"HttpAuthProtected LocParam functionality was somehow removed\n\r\nProbably due to Loc refactoring this functionality was accidentally removed. \r\n\r\nBr's,\r\nMarius"
485,'mariusdanciu','Add Global Fade Out Mechanism for Lift Messages\nAdd any easy way to enable all Lift messages (errors, notices, warnings) to be faded out after a certain amount of time. Presumably off my default but can be enabled via one LiftRules command.'
768,'dpp',"Opening up AbstractScreen\nPer discussion in : http://groups.google.com/group/liftweb/browse_thread/thread/399e085aad6b6e54\n\nIt would be very useful if we could extend AbstractScreen to be able to do the bulk of a screen definition independently of whether the screen will be used as a one off in LiftScreen or as part of a workflow in Wizard.\n\nThe use case I have is that I have a couple dozen models implemented with Record that will need screens with validation, etc. I'd like to be able to offer these screens to the rest of the team for use in custom LiftScreens or Wizards without having to redo the parts about registering fields and validators.\n\nThis way the team would be able to reuse the the screens in various applicatiosn and in the case of a wizard only need to add previous/next and in the case of a LiftScreen, probably nothing at all.\n\nThanks!\n\n\n"
1051,'vdichev','Support Textile markup just before sentence ending\nFor this given Textile markup...\n\n<code>the _end of a sentence_.</code>\n\nExpected output is: <code>the <em>end of a sentence</em>.</code>\n\nActual output is: <code>the _end of a sentence_.</code>\n\nURLs (at least using the <code>"phrase":name</code> syntax) show the same problem.\n\nMailing list discussion: http://groups.google.com/group/liftweb/browse_frm/thread/4733278fa2be4180#\n\nSample test cases:\n<pre><code>\n "deal with emphasis just before end of sentence" in {\n      toHtml("Works _great_.") must ==/(<p>Works <em>great</em>.</p> )\n      toHtml("Works _great_!") must ==/(<p>Works <em>great</em>!</p> )\n      toHtml("Works _great_?") must ==/(<p>Works <em>great</em>?</p> )\n    }\n</code></pre>\nNot 100% sure this one would pass because of the space between the <code>liftweb.</code> and the <code>[liftweb]</code>\n<pre><code>\n "deal with URLs just before end of sentence" in {\n      toHtml("""See "LiftWeb":liftweb. [liftweb]http://liftweb.net""") must ==/(<p>See <a href="http://liftweb.net">LiftWeb</a>.</p> )\n  }\n</code></pre>\n\n'
343,'dpp','Add linkToSelf="true/false" option to Menu snippet\nSee http://groups.google.com/group/liftweb/browse_thread/thread/ef87d2b52445ae52/70727158d7a03131?hl=en%EF%BF%BDd7a03131'
626,'mads379',"TableSorter Enhancements\nThe TableSorter JS allows for lots of customizations on initialization that you can't take advantage of right now. This is stuff like initial sorting order and what conversion to use on the different columns. Also if you add content to the table with javascript after the initial initialization you have to tell it to refresh or it won't sort properly - I would like to add a method that takes care of injecting lines with JS and then update the widget. "
60,'dpp','Setting cookies does not work in an ajax response\nI have an SHtml.ajaxSelect that, when executed sets a cookie:\r\n\r\nS.addCookie(HTTPCookie("CITYID", city.id.toString))\r\n\r\nand then returns a JsCmds.RedirectTo(uri) command.  The cookie isn\'t\r\nactually being set (if I look at the live http headers the Set-Cookie\r\nline isn\'t sent down in the http response to the ajax call).\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/a9a7de2cb1f05544/'
909,'fmpwizard','One file deploy (including Jetty)\nSee https://groups.google.com/group/liftweb/browse_thread/thread/ddc24fa29c040f99\n\nBasically, add an action to SBT that will bundle the war and Jetty into one executable, big, fat, jar.'
1192,'','Add S.appendGlobalJs method\nAdd analog to S.appendJs that appends javascript not surrounded by OnLoad.\n'
201,'Dridus','Checkbox not return all elements\ndef checkbox[T](possible : Seq[T], actual : Seq[T], func : (Seq[T]) => Any, attrs : (String, String)*)\r\n\r\nFunc will only return first element in possible when it is checked or List().\r\n'
484,'dpp','Allow for easier control over Mailer\nMy specific use case:\n\nI only want mail to actually be sent when run.mode is production or staging. Otherwise I want to do nothing (maybe log something).\n\nI can imagine a wide array of things that someone might want to do though, especially in unit tests.  Perhaps it would be best to allow easy override of the sendMail function?'
767,'dpp',"Wizard and Screen setup lifecycle is broken\nWizard and Screen lifecycle is messed up:\n\n* Back button doesn't always cause transition from/to\n* Notices get lost on page entry\n* WizardVar lifecycle not correct on initial page entry\n"
1050,'pr1001',"Comment JsCmds.SetHtml\nPrompted by https://groups.google.com/d/topic/liftweb/6KFsRo26eVk/discussion\n\nThe ticket's probably not necessary but I figured it couldn't hurt."
342,'dpp',"Some examples dont work\nDuring testing of #309, I discovered that some of the examples didn't seem to work:\n\nhttp-authentication:\n\nWARN - Snippet Failure: SnippetFailure(/ -> ParsePath(List(index),,true,false),Full(HelloWorld.howdy),Class Not Found)\n\nSkittr:\nWARN - Snippet Failure: SnippetFailure(/ -> ParsePath(List(index),,true,false),Full(user_mgt:watch_or_show),Class Not Found)\nWARN - Snippet Failure: SnippetFailure(/ -> ParsePath(List(index),,true,false),Full(user_mgt:login_panel),Class Not Found)\nWARN - Snippet Failure: SnippetFailure(/ -> ParsePath(List(index),,true,false),Full(error_report),Class Not Found)\n"
625,'dpp','JsCmds.Replace has no effect when using Opera\nUsing JsCmds.Replace in a SHtml.a method has no effect when using Opera. JqJsCmds.Hide works, however.\n\nExample code is in http://github.com/Debilski/opera_problem_with_jscmds_replace as well as in \n\n<pre><code>\ndef replace(in: NodeSeq): NodeSeq = { \n  SHtml.a(() => \n    Replace("replace_id", <span>I am the new text</span>),\n    Text("Replace text after colon: ")\n  ) ++ \n  <span id="replace_id">I will be replaced.</span> \n}\n</code></pre>\n\n*Proposed solution*\nOpera seems to dislike Js variables with the name ‘parent’. Renaming to something else should help fixing the issue.\n'
59,'mariusdanciu','Move liftAjax script to tail of page\nIt would be nice to be able to insert the liftAjax script tag at the bottom of the page body, rather than in the head. Its insertion in the head requires the jQuery script tag to be inserted in the head as well, because this script must precede the liftAjax script.'
908,'jeppenejsum','The source link on demo.liftweb.net points to old git repo\n'
1191,'dpp','XmlResponse within RestHelper PF not returning Content-Type header\n[[url:https://groups.google.com/d/topic/liftweb/tpg6F2Xln24/discussion|Mailing List Thread]]\n<pre><code>object Twilio extends RestHelper {\n  serve( "api" / "twilio" prefix {\n    case _ => () => {\n      Full(XmlResponse(<Response><Say>Goodbye!</Say><Hangup/></Response>))\n    }\n  })\n}\n\ncurl -XPOST --dump-header - http://localhost:8080/api/twilio\nHTTP/1.1 200 OK\nExpires: Tue, 31 Jan 2012 05:11:22 GMT\nContent-Length: 101\nCache-Control: no-cache, private, no-store\nPragma: no-cache\nDate: Tue, 31 Jan 2012 05:11:22 GMT\nX-Lift-Version: 2.4\nServer: Jetty(7.4.5.v20110725)\n\n<?xml version="1.0" encoding="UTF-8"?>\n<Response><Say>Goodbye!</Say><Hangup></Hangup></Response>\n</code></pre>\n\n'
200,'','Allow CRUDify to be mixed with MetaMegaProtoUser\nCurrently, the "def menus" collide.\r\n\r\nDetails here:http://groups.google.com/group/liftweb/browse_thread/thread/6f17647690d9aa59/32ccdf5e2907ba83#32ccdf5e2907ba83'
483,'timperrett',"Enhance Lift's Pagination Support so it is not tied to Mapper\nRework the existing pagination support so that it does the following:\n\na) continue to work with ModelViews et al\nb) lets you customize linking (i.e. so you can have bookmarkable links)\nc) let you work with other non-mapper persistance structures (i.e. record)\n\nCheers, Tim"
766,'dpp',"Make SetValById more forgiving\nDoing a SetValById can result in nasty JavaScript exceptions if the id isn't found.  Make this JavaScript more forgiving so Comet partialUpdates don't get borked."
1049,'dpp','Connection starvation on Chrome\nThere is a connection starvation issue with Chrome with 6 connections and lots of Ajax.  See https://groups.google.com/forum/#!topic/liftweb/opzEm7GwOJ0'
341,'jonifreeman','Type hints are needed in JSON serializization for non-polymorphic Map \nDescription and work-around: http://groups.google.com/group/liftweb/browse_thread/thread/a376957f91f3333f/77bd540296a7cbc5?lnk=gst&q=json#77bd540296a7cbc5\n\ncase class Plan( plan:Option[Action] )\ncase class Game( game:Map[String,Plan])\ncase class Action(id:Int, subAction : Option[Action]) \n'
624,'dpp','merge form ids\nThe problem:\nSHtml.submitAjaxForm("myformid", myfunc) takes a form id as a parameter, but all of Lift\'s functionality for generating forms overrides the form id. This includes: \n\n<pre><code><lift:form id="myformid">\n\n<lift:MySnippet.mysnippetmethod form="POST" id="myformid">\n\nSHtml.ajaxForm(<div>myform</div>)% ("id" -> "myform")\n</code></pre>\n\nThe solution:\nDo not override form ids (optimal).\n\nOR\n\nDo an id merge, so that when you write:\n<lift:form id="myformid">\nthen something like this would be the output:\n<form id="myformid:F261431860064Y2C" action="javascript://"  ....\nAdditionally, SHtml.submitAjaxForm would need to be updated so that it would be compatible with the merged form id syntax.\n\n\n'
58,'',"2 required artifacts missing for lift-archetype-basic\nFollowing chapter 2 instructions here:  http://liftweb.net/docs/StartingWithLift.pdf\r\nI tried to create a sample project based on the lift-archetype-basic.  Then, when I try to compile it (mvn clean package), I get 2 required artifacts missing:  org.igniterealtime.smack:smack:jar:3.1.0 and org.igniterealtime.smack:smackx:jar:3.1.0.  These look like transitive dependencies from net.liftweb:lift-xmpp:jar.\r\n\r\nNote that I tried archetype 1.0 and 1.1-M4.  If you expect these archetypes to work, I suggest making these required archetypes available in either the central repository, or in scala-tools.\r\n\r\nAlso a little surprised that lift-xmpp is a required transitive dependency of lift-core.  I'm thinking that I would want to create a lift web app without XMPP, so bringing in that dependency by default seems a little odd to me.  Maybe excluding it or marking it as optional would be prudent.\r\n"
907,'','new html5 input types (email, …) values are not updated in ajax forms\nIn an ajaxForm,  html5 input types (email) values are not updated ("setter" not called).\n\nIn the logs "comet_trace - AJAX Request" Map doesn\'t contain these fields.\n\nI\'ve created a sample project highlighting the problem (run it and check the logs)\n\nhttps://github.com/diligiant/ajaxformhtml5email'
1190,'pbrant','Add version of LiftScreen that uses CSS style binding\nAdding for tracking purposes.  Branch pmb_liftscreen in git.'
199,'','non-autoincrement primary key; MetaMapper opening Empty Box\nDiscussion(s):\n1) http://groups.google.com/group/liftweb/browse_thread/thread/bca1ae85f1fa6a3a/b5b97a0da8b517f9?lnk=gst&q=metamapper#b5b97a0da8b517f9\n2) http://groups.google.com/group/liftweb/browse_thread/thread/e295526e8a7905c8/d35f233879445ad7?lnk=gst&q=metamapper#d35f233879445ad7\n\nRunnable test case here:\nhttp://github.com/opyate/bug.liftweb.metamapper\n\nTo re-create:\n\nexport JETPORT=8081\ncd /tmp\ngit clone git://github.com/opyate/bug.liftweb.metamapper.git\ncd bug.liftweb.metamapper/metamapperbug\nmvn -U clean jetty:run -Djetty.port=$JETPORT\n\\# now open your browser on http://localhost:$JETPORT\n\n\\#+ and enter an ID into the input box and click save\n\nGenerated exception:\nMessage: java.lang.NullPointerException: Trying to open an empty Box\n\tnet.liftweb.common.EmptyBox.open_$bang(Box.scala:370)\n\tnet.liftweb.common.EmptyBox.open_$bang(Box.scala:366)\n\tnet.liftweb.mapper.MetaMapper$$anonfun$runAppliers$1$1.apply(MetaMapper.scala:617)\n'
482,'dpp',"asJsExp overrides are limiting type\nConsider the *asJsExp* field defined in [[url:http://www.scala-tools.org/mvnsites/liftweb-2.0-M4/framework/lift-persistence/lift-mapper/scaladocs/net/liftweb/mapper/BaseMappedField.html|BaseMappedField]] -- it returns *JsExp*.\n\nThen consider cases where _subclasses_ override this field:\n* [[url:http://www.scala-tools.org/mvnsites/liftweb-2.0-M4/framework/lift-persistence/lift-mapper/scaladocs/net/liftweb/mapper/MappedDateTime.html|MappedDateTime]]\n* [[url:http://www.scala-tools.org/mvnsites/liftweb-2.0-M4/framework/lift-persistence/lift-mapper/scaladocs/net/liftweb/mapper/MappedEnum.html|MappedEnum]]\nNote that in both of these cases, the new type is now a Num.  (A JE.Num is a subclass of JsExp.)\n\nThe problem is that I can not override a MappedEnum's asJsExp field to return a JsExp (like Str) because the subclass needs to declare an explicit type of JsExp (rather than use inference).\n\nFor an enum, I'm interested in returning the enum's string value; and for a date-time, I'm interested in returning an alphanumeric time code (not a long integer).\n"
765,'indrajitr','lift-archetype-jpa-basic_2.8.1:2.2-RC1 needs dependency update\nAfter achetype build and *mvn clean install* I am getting the following log error message during *mvn jetty:run* upstart in web/ \n\njava.lang.NoSuchMethodError:\norg.slf4j.impl.StaticLoggerBinder.getSingleton()Lorg/slf4j/impl/\nStaticLoggerBinder\n... and lift will not start\n\n*Possible resolution* \nLooking at *mvn dependency:tree* I fond out that it can be *resolved by adding the following dependency* to *spa/pom.xml*\n<dependency>\n <groupId>org.slf4j</groupId>\n <artifactId>slf4j-api</artifactId>\n <version>1.4.2</version>\n <scope>compile</scope>\n</dependency>\n\nregards \n  Peter Petersson'
1048,'davewhittaker','DateTimeField cannot be used in a custom Squeryl function\nSee http://groups.google.com/group/liftweb/browse_thread/thread/b8442adcfb8ee0c'
340,'','ItemsListEditor should catch SQLException in ItemsList.save\n'
623,'dpp','Add a CMS module\nAdd a bunch of abstractions and a concrete example program for a Lift-based CMS syste,'
57,'',"Improve error message if database driver is not supported\nThe error message occurs if no Driver is available for a DBMS (in lift versions > 1.0, in 1.0 there is only a MatchError instead)\n\nTrying to start a small project with lift this was the first problem I stumbled over when I tried to access an SQLite DB which isn't supported AFAICS.\n\nMy attempt to improve the error message: 87bae732727ca83835477ffa575a9dfba7bc1c4d \n\nI found no list of supported DBMS yet, I think that info should be put on a prominent place at the lift web page."
906,'eltimn','Remove MongoDateListField and JObjectField\nRemove deprecated field types.'
198,'dpp',"Strange form submission behavior with AJAX form elements.\nFrom Paul O'Rorke:\r\n\r\nsince rebuilding a day or two ago with no recent code or other changes: every second time I go to click on an ajax checkbox or select widget, I get effectively no response. actually, it looks like there is a very quick spinning wheel (almost imperceptible) but the page doesn't  get  repainted and the database does not change.\r\n\r\nIf  I use another operation that is non ajax (going in and editing an item and doing old fashioned get / posts) everything works fine after that (one time).\r\nOr if I reload the page then if I use an ajax widget after reloading ajax works (once).\r\n\r\nMy experience of the bug:\r\n\r\n1) load a page where the snippets are managed by a StatefulSnippet\r\n2) some page elements (in my case select boxes) have their values update by AJAX in response to user events. This appears to work normally. \r\n3) upon submission of the form on the page, the page is re-rendered. Logging in the submission function indicates that it is never called.\r\n4) if I fill in the form again and resubmit after the initial failure, the form submit behaves properly.\r\n5) I believe I've seen at least one instance (though I can't reliably reproduce this) where just a normal AJAX call (modifying one of the select boxes) caused the entire page to reload.\r\n"
481,'jonifreeman','Improve segment cache in JSON parser\nSegments has poor performance in a heavily multi-threaded environment, because it has a "synchronized" block that allocates memory. Allocation should be moved outside of synchronized block.'
764,'jonifreeman','Partially deserialize JSON into a case class\nhttp://reviewboard.liftweb.net/r/446/'
1047,'','Menu.builder does not add li_path attributes when specifying a group\nIf you have a menu like this:\n\nMenu.i("Venues") / "venue"/ "index" >> LocGroup("row1") submenus(\n\tMenu(code.snippet.VenuePage)    //this takes "venue" / **\n)\n\nThen insert it like this:\n<lift:Menu.builder ul:class="subnav" li_item:class="active" li_path:class="active" expandAll="true" linkToSelf="true" donthide="true" group="row1" top:class="dropdown" />\n\nThe li_path class is not applied at all. But it works fine if you get rid of the group attribute. Same thing happens if you specifiy li_path:id.'
339,'','ItemsListEditor (and thus TableEditor) should warn when leaving page with unsaved changes\n'
622,'dpp','Remove shouldUpdate from CometListener\n'
56,'mariusdanciu','Add lazy loading to Lift\nLet\'s say you have a bit of a page like so:\r\n\r\n<lift:SomeSnippet.section>\r\n <foo:name/>\r\n<lift:SomeSnippet.section>\r\n\r\nNow, let\'s assume that computing whatever is bound to <foo:name/>\r\ntakes a long time (maybe it takes a network call, or a long database\r\nquery, or whatever).  You don\'t want to hold up your entire page view\r\non that so.....\r\n\r\n<lift:Util.lazyLoad>\r\n <lift:SomeSnippet.section>\r\n   <foo:name/>\r\n <lift:SomeSnippet.section>\r\n</lift:Util.lazyLoad>\r\n\r\nThen in your Util snippet:\r\n\r\ndef lazyLoad(xhtml: NodeSeq) = {\r\n val id = "lazy"+System.currentTimeMillis()\r\n val (name, exp) = ajaxInvoke(() => { SetHtml(id, xhtml) })\r\n <div id={id}>\r\n   <img src="/img/ajax_spinner.gif" height="32" width="32" alt="wait"/\r\n>\r\n   {Script(OnLoad(exp.cmd))}\r\n </div>\r\n}\r\n\r\nFeel free to critique if there is a better way of doing this.  It\'s\r\nworking pretty good for me so far though.'
905,'eltimn','Allow using a "column" name in MongoDB different from Field name\nImplementation borrowed from JSONField in couchdb package.'
1188,'fmpwizard','Support form=ajax as snippet-attribute\nWhen appending form=post to a snippet-invokation, Lift generates a <form>-element and wraps the output of the snippet in the form.\nExtend this to also support ajax-forms and reuse as much as possible from the built-in Form-snippet.'
197,'dpp','Add a second URL re-write phase\nWithin the session scope.  This is the phase that should be used by CRUDify.'
480,'Dridus','Squeryl integration for Record (Scala 2.8 only)\nUpdate the squeryl integration to use the unowned field types from issue479 and bring it into the repo.\n'
763,'dpp','CSS Selector Transform ^^ evaluates too eagerly\nThe transform should not evaluate anything with ^^ until the matching node is found'
1046,'indrajitr','Remove OSGi config from modules build\nThe config is causing deps to be sucked into the modules JARs. See http://groups.google.com/group/liftweb/browse_thread/thread/352d8cb9d7f72d89/e294c652566b17fe.'
338,'jeppenejsum','Cleanup lift-openid dependencies\nlift-openid depends on openid4java which pulls in alot of cruft such as spring. \n\nRemove the dependency on openid4java and the sample server/consumers and add openid4java-{server|consumer}. \n\nAlso openid4java depends on commons-logging. Once #309 is done, we should add the jcl-over-slf4j bridge to get logging over Slf4j instead\n'
621,'dpp','i18n sorting for countries\nCurrently, in order to sort the countries in the MappedCountry list, something like the following has to be done:\n\n<pre><code>\nobject birthplace_country extends MappedCountry(this) { \n  val collator = java.text.Collator.getInstance() // might/should receive the lift locale \n  override def buildDisplayList: List[(Int, String)] = ( \n    super.buildDisplayList.sortWith((s1, s2) => collator.compare(s1._2, s2._2) < 0) \n  ) \n  // override def defaultValue is probably not solvable on a global scale, or is it? \n} \n</code></pre>\nThe collator part is important here, otherwise the output is still wrong. (Depending on the locale o=ö, o<ö or o<z<ö.)\n\nIt would be a good idea to add this maybe to the country fields (and other i18n fields) or at least to add a Helper function for locale based string sorting.\n\n'
55,'',"Enable downloading sources for maven-idea-plugin\nEnabling idea plugin to download sources (just like it's done for maven-eclipse-plugin) would be useful for IntelliJ IDEA users. Basically, we need to add the following plugin configuration block in pom.xml (both Lift's internal pom.xml and the ones generated by the archetypes).\n\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-idea-plugin</artifactId>\n        <configuration>\n          <downloadSources>true</downloadSources>\n        </configuration>\n      </plugin>\n\nSee: http://maven.apache.org/plugins/maven-idea-plugin/ for details.\n"
904,'dchenbecker','Add withTemplateFor(...) to WebSpec\nPer the discussion on http://groups.google.com/group/liftweb/browse_thread/thread/b8cbb8c20d2dd5c/5fd8108e3b54a775:\n\n<pre><code>\nI was actually thinking that it would look like\n\n"some test" withTemplateFor(request and/or String URL) in {\n  templateResults => ... // We pass the resulting markup here, and S is initialized as well\n}\n\nSo, for example\n\n"must say hello" withTemplateFor("http://foo.com/helloWorld") in {\n  _ must_== ...<span>Hello World!</span>...\n}\n</code></pre>\n'
196,'dpp','Add a S.cookieValue helper method\nThat returns a Box[String]'
479,'Dridus','Allow for unowned field types in lift-record, to support squeryl integration\nsqueryl needs to handle typed fields without their owner type for the query DSL and so on. The test integration Maxime put together uses a DummyRecord as the owner of all fields, but that makes anything using the owner stop working, e.g. safe_?, apply, etc.'
762,'dpp','HTML5 file input elements with "multiple" attribute cause too many callbacks (2.2-RC1)\nI wanted to add HTML5 multiple-file-upload-with-a-single-input-element to my project: \n\nhttp://www.w3.org/TR/html-markup/input.file.html#input.file.attrs.mul... \n\n...and having had a quick peek at the lift code, decided that it should work (even though it isn\'t explicitly supported by lift).  So I tried it, and it does work, with the exception that the callback for the input control is called too many times: if N files are selected for upload, then the callback is called N times for each file, so you get N^2 callbacks.  I\'ve worked around this in my project by using a Set to stash the FileParamHolders. \n\nI\'m pretty sure this is a lift bug and not a browser bug as the behaviour is reproducible in the most recent Safari, Chrome and Firefox releases, and while N^2 callbacks are made, there are only N FileParamHolder objects.  A project that demonstrates the error is here: \n\n  https://github.com/guyboltonking/lift-html5-upload-multiple-bug \n\n...:it\'s the 2.2-RC1 archetype plus this commit: \n\n  https://github.com/guyboltonking/lift-html5-upload-multiple-bug/commi... \n\n...which is the code that demonstrates the bug, \n'
1045,'jonifreeman','JSON serialization using FieldSerializer does not work with symbolic names\nSerializing case class Test(`a-hyphen`: String) results in {"a$minushyphen": ... , "a-minushyphen": ...) when using the write() function.\n\nNote I am using playframework which the code below, im not sure if its related.\n\n<pre><code>\n  object PlayParameterNameReader extends ParameterNameReader{ \n        import java.lang.reflect.Constructor \n        import play.classloading.enhancers.LocalvariablesNamesEnhancer \n        import scala.collection.JavaConversions._\n    \n        def lookupParameterNames(constructor: Constructor[_]) = \n            LocalvariablesNamesEnhancer.lookupParameterNames(constructor) \n    }\n\n   \n    object Json { \n        import net.liftweb.json._\n    \n        implicit val formats = new DefaultFormats { \n            override val parameterNameReader = PlayParameterNameReader\n     } + FieldSerializer[AnyRef]()\n</code></pre>\n'
337,'mariusdanciu','Forcing Authentication not working\nThe documentation says that if I have a rule that responds with Empty, it means that authentication is performed, but not an authorization check.  This is what I need.  So, I have a rule something like:\n\n<pre><code>\nLiftRules.httpAuthProtectedResource.append { \n  case req :  Req => req.path match { \n    case ParsePath("restricted" :: _, _, _, _) => restrictedRole \n    case _ => Empty \n  } \n} \n</code></pre>\n\nAlas, I can clearly see that my authentication is NOT being performed for just any page. I think I found the source code that is the culprit.  From LiftServlet.scala: \n\n<pre><code>\n  private def authPassed_?(req: Req): Boolean = { \n    val checkRoles: (Role, List[Role]) => Boolean = { \n      case (resRole, roles) => (false /: roles)((l, r) => l || resRole.isChildOf(r.name)) \n    } \n    val role = NamedPF.applyBox(req, LiftRules.httpAuthProtectedResource.toList) \n    role.map(_ match { \n      case Full(r) => \n        LiftRules.authentication.verified_?(req) match { \n          case true => checkRoles(r, userRoles.get) \n          case _ => false \n        } \n      case _ => true \n    }) openOr true \n  } \n</code></pre>\n\nThis logic seems to be inconsistent with the documentation found in LiftRules.scala: \n\n<pre><code>\n  /** \n   * Defines the resources that are protected by authentication and authorization. If this function \n   * is notdefined for the input data, the resource is considered unprotected ergo no authentication \n   * is performed. If this function is defined and returns a Full can, it means that this resource \n   * is protected by authentication,and authenticated subjed must be assigned to the role returned by \n   * this function or to a role that is child-of this role. If this function returns Empty it means that \n   * this resource is protected by authentication but no authorization is performed meaning that roles are \n   * not verified. \n   */ \n  val httpAuthProtectedResource = RulesSeq[HttpAuthProtectedResourcePF] \n</code></pre>\n\nShouldn\'t there be something like: \n<pre><code>\n      case Empty => \n        LiftRules.authentication.verified_?(req) \n</code></pre>\n? \n\nSee [[url:http://groups.google.com/group/liftweb/browse_thread/thread/8da152e414d25b2a/ca782b9d2b38bdcb#ca782b9d2b38bdcb|thread]] for more details.\n'
620,'dchenbecker',' Support for Sybase ASE using JTDS JDBC driver for Lift 3.0\nCan add with know to work with ASE 15 should work with most ASE version AFAIK:\ndiff --git a/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala b/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala\nindex d9beb97..5d48f42 100644\n--- a/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala\n+++ b/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala\n@@ -144,6 +144,7 @@ object DriverType {\n       case (H2Driver.name,_,_) => H2Driver\n       case (SqlServerDriver.name,major,_) if major >= 9 => SqlServerDriver\n       case (SqlServerDriver.name,_,_) => SqlServerPre2005Driver\n+      case (AseDriver1.name,_,_) => AseDriver\n       case (OracleDriver.name,_,_) => OracleDriver\n       case (MaxDbDriver.name,_,_) => MaxDbDriver\n       case x => throw new Exception(\n@@ -333,6 +334,15 @@ object SqlServerDriver extends SqlServerBaseDriver {\n   override def binaryColumnType = "VARBINARY(MAX)"\n   override def clobColumnType = "NVARCHAR(MAX)"\n }\n+/**\n+ * Sybase ASE driver\n+ */\n+object AseDriver extends  SqlServerBaseDriver {\n+  override val name = "ASE"\n+  override def binaryColumnType = "VARBINARY(MAX)"\n+  override def clobColumnType = "NVARCHAR(MAX)"\n+  override def brokenLimit_? : Boolean = true\n+}\n\n /**\n  * Driver for Oracle databases. Tested with:'
54,'dpp','"Edit" label of Submit Button in default Edit and Create Forms (e.g. those created by CRUDify) is misleading\nButtons labeled "Edit" are commonly used to *start* editing. The Submit Button in an editable form should be labeled "Save"'
903,'','Have the ability to add WellKnownEndpoints for OpenID handling\nAt this moment there is a fixed list of well known endpoints available. \nIt is handy to have the option to add your own known endpoints to that. \n\nMail thread pasted in this message (as I cannot find the thread in the google group. \n\n\n\nOn Fri, Feb 18, 2011 at 10:24 AM, Olger Warnier <olger.warnier@gmail.com> wrote:\nHi List,\n\nI\'d like to support logon based on a google apps domain in my application.\nIn order to do such a thing, you need a setup (actually a single file called: openid) on your domain webserver that will redirect the actual openId check to the google openid server for app domains.\n\nThe liftweb openid supports the general google openid host, but in the WellKnownEndpoints there is no entry for the Google App handling.\n\nCould we add the following to the WellKnownEndpoints ?\n\n val GoogleApps = new DiscoveredEndpoint("Google","https://www\\\\.google\\\\.com/a/.+\\\\..+/o8/.+") {\n   override def makeAttributeExtension(attrs: List[Attribute]): Box[MessageExtension] =\n     Full(fetchRequestExtension(attrs.zipAll(Nil, null, true)))\n }\n\n(and to the endpoints list of course)\n\n- or -\n\nIn what way do I register an aditional endpoint in order to have it found and mapped as done for the WellKnownEndpoints ?\n\nFor completeness:\nThis code is used with the beforeAuth = Full(ext _) stuff as found on the wiki. (Could add some info there on the support for apps domain)\n\nRegards,\n\nOlger\n\n\nAfair, there\'s currently no support for registering additional endpoints. This seems like a useful feature, so please open a ticket at ticket.liftweb.net, referencing this thread (you must be a watcher of the Liftweb space)\n\nAlso, you can update the wiki yourself once you become a watcher :-)\n\n/Jeppe\n\n'
478,'mariusdanciu',"Make the default docType configurable in LiftRules\nCurrently, you need to provide a PF in ResponseInfo if you need to switch everything to HTML5. This seems against Lift's philospophy of configuring things via LiftRules"
761,'','Allow file uploads with CRUDify\nThis has been mentioned on the mailinglist:\n[[url:https://groups.google.com/group/liftweb/browse_thread/thread/5c44aabd86200448|SHtml.fileUpload and CRUDify]]\n\nAlthough there is a method uploadField_? in the BaseField class, this method has no effect on CRUDify. It would be nice, if CRUDify would automatically generate a form with enctype="multipart/form-data", whenever the underlying model contains at least one field, that is marked as upload-field. \n\nI added a patch, that implements the above behaviour. Let me know if you need more.'
195,'dpp',"Vars (SessionVars, etc.) should support memoization\nCurrently, one can specify the way a Var is precalculated, but they should also support a flag for testing if the current value has been set/calculated and also support a by-name method for calculating the value if it hasn't been calculated."
1044,'',"Swedish localization for lift core\nI have put together a lift core localization file for Swedish, for inclusion in Lift:\n * Native: http://stts.se/hanna/lift/lift-core_sv.properties \n * UTF-8: http://stts.se/hanna/lift/lift-core_sv.properties_UTF8\n\nI posted it on the [[url:https://groups.google.com/d/topic/liftweb/zxQQexZDCdM/discussion|mailing list]], but it didn't get any reactions, so I'll just put it here. (Since the [[url:https://groups.google.com/d/topic/liftweb/V6O-EfQzH8c/discussion|Czech localization]] was recently added, I figured Swedish could just as well be included.)\n\nCheers,\nHanna"
336,'hoffrocket','Facebook Connect utilities and example code\nAdd basic facebook connect functionality\nBring existing APIs a little bit more up to date\nAllow alternate parsers (json), to be used to facebook api\nProvide simple example fb connect application'
619,'eltimn',"Support for null and Box in Mongo\nMongoDocument doesn't currently support null values properly."
53,'','Menu builder group and li_item not working\nI\'m trying to work with a SiteMap which has some different LocGroups in Lift 1.1-snapshot.\r\n\r\nWhen I do: \r\n\r\n<lift:Menu.builder li_item:class="selected" /> \r\n\r\nI can render a menu for the whole sitemap and the selected item has \r\nthe class attribute applied. \r\n\r\nBut, when I do: \r\n\r\n<lift:Menu.builder group="site" li_item:class="selected" /> \r\n\r\nI would expect the same behavior with a subset of items, but it just \r\ndoesn\'t work. The selected item doesn\'t get the class attribute. \r\n\r\nHowever, if I do: \r\n\r\n<lift:Menu.builder group="site" li:class="hello" /> \r\n\r\nEvery item gets the class attribute.'
1185,'dpp','Support data-name attribute in CSS Selector Transforms\nSupport data-name attribute selection with a shortcut in CSS Selector Transforms so that id and class do not have to be over-loaded with server-side meaning. So, perhaps ";foo" #> "bar" replaces all elements with data-name="foo" with "bar"'
477,'dpp',"Improvements to Mapper to exclude fields from encodeAsJSON\nTwo improvements to mapper have been discussed on the mailing list:\n\n1) Change BaseMappedField's asJsonField to return a Box such that fields can be excluded in MetaMapper's encodeAsJSON\n2) It should be possible to prevent MappedFields from beeing written\n\nThread on the mailing list:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/224b62561586c16d"
760,'','Wiring Invoice demo html template causes "Message: expected closing tag of input"\nHi,\n\nI went ahead and tried to use the sample wiring invoice code from:\n\nhttps://github.com/lift/lift/raw/master/examples/example/src/main/webapp/invoice_wiring.html\n\nand I had to replace the line:\n\n  <div>Tax Rate: <input class="lift:InvoiceWiring.taxRate" ></div>\n\nfor\n\n  <div>Tax Rate: <input class="lift:InvoiceWiring.taxRate" /></div>\n\n(added / to close the input tag)\n\notherwise on get this error:\n\n=====================\n<?xml version="1.0" encoding="UTF-8"?>\n\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n<div class="snippeterror" style="display: block; margin: 8px; border: 2px solid red">\n             <div>Error locating template /invoice_wiring.html.<br />Message: expected closing tag of input<br /><pre>scala.xml.parsing.FatalError: expected closing tag of inputscala.xml.parsing.MarkupParser$class.errorNoEnd(MarkupParser.scala:41)\nnet.liftweb.util.PCDataXmlParser.errorNoEnd(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParserCommon$class.xEndTag(MarkupParserCommon.scala:96)\nnet.liftweb.util.PCDataXmlParser.xEndTag(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:524)\nnet.liftweb.util.PCDataXmlParser.element1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:377)\nnet.liftweb.util.PCDataXmlParser.content1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:398)\nnet.liftweb.util.PCDataXmlParser.content(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:523)\nnet.liftweb.util.PCDataXmlParser.element1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:377)\nnet.liftweb.util.PCDataXmlParser.content1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:398)\nnet.liftweb.util.PCDataXmlParser.content(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:523)\nnet.liftweb.util.PCDataXmlParser.element1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:377)\nnet.liftweb.util.PCDataXmlParser.content1(PCDataMarkupParser.scala:98)\nscala.xml.parsing.MarkupParser$class.document(MarkupParser.scala:200)\nnet.liftweb.util.PCDataXmlParser.document(PCDataMarkupParser.scala:98)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$6$$anonfun$apply$7.apply(PCDataMarkupParser.scala:194)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$6$$anonfun$apply$7.apply(PCDataMarkupParser.scala:194)\nnet.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:46)\nnet.liftweb.util.Helpers$.tryo(Helpers.scala:34)\nnet.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:82)\nnet.liftweb.util.Helpers$.tryo(Helpers.scala:34)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$6.apply(PCDataMarkupParser.scala:194)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$6.apply(PCDataMarkupParser.scala:192)\nnet.liftweb.common.Full.flatMap(Box.scala:400)\nnet.liftweb.util.PCDataXmlParser$.apply(PCDataMarkupParser.scala:192)\nnet.liftweb.util.PCDataXmlParser$.apply(PCDataMarkupParser.scala:223)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$2.apply(PCDataMarkupParser.scala:186)\nnet.liftweb.util.PCDataXmlParser$$anonfun$apply$2.apply(PCDataMarkupParser.scala:185)\nnet.liftweb.common.Full.flatMap(Box.scala:400)\nnet.liftweb.util.PCDataXmlParser$.apply(PCDataMarkupParser.scala:185)\nnet.liftweb.http.OldHtmlProperties$$anonfun$htmlParser$1.apply(HtmlProperties.scala:282)\nnet.liftweb.http.OldHtmlProperties$$anonfun$htmlParser$1.apply(HtmlProperties.scala:282)\nnet.liftweb.http.LiftRules$$anonfun$doWithResource$2.apply(LiftRules.scala:948)\nnet.liftweb.http.LiftRules$$anonfun$doWithResource$2.apply(LiftRules.scala:948)\nnet.liftweb.common.Full.map(Box.scala:398)\nnet.liftweb.http.LiftRules$.doWithResource(LiftRules.scala:948)\nnet.liftweb.http.TemplateFinder$.findAnyTemplate(TemplateFinder.scala:126)\nnet.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$findVisibleTemplate(LiftSession.scala:1163)\nnet.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:941)\nnet.liftweb.http.LiftSession$$anonfun$processTemplate$1.apply(LiftSession.scala:941)\nnet.liftweb.common.EmptyBox.or(Box.scala:467)\nnet.liftweb.http.LiftSession.processTemplate(LiftSession.scala:941)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$49.apply(LiftSession.scala:1035)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$49.apply(LiftSession.scala:1035)\nnet.liftweb.common.EmptyBox.or(Box.scala:467)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45$$anonfun$apply$46.apply(LiftSession.scala:1034)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45$$anonfun$apply$46.apply(LiftSession.scala:1034)\nnet.liftweb.util.StackableMaker$class.doWith(Maker.scala:141)\nnet.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\nnet.liftweb.util.StackableMaker$class.doWith(Maker.scala:135)\nnet.liftweb.http.Factory$FactoryMaker.doWith(Factory.scala:37)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45.apply(LiftSession.scala:1033)\nnet.liftweb.http.LiftSession$$anonfun$19$$anonfun$apply$45.apply(LiftSession.scala:1029)\nnet.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$checkStatelessInSiteMap(LiftSession.scala:973)\nnet.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1029)\nnet.liftweb.http.LiftSession$$anonfun$19.apply(LiftSession.scala:1027)\nnet.liftweb.common.EmptyBox.or(Box.scala:467)\nnet.liftweb.http.LiftSession.processRequest(LiftSession.scala:1027)\nnet.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:314)\nnet.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:191)\nnet.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:191)\nnet.liftweb.http.S$.net$liftweb$http$S$$wrapQuery(S.scala:1169)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$29.apply(S.scala:1309)\nnet.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:1106)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$doAround$1.apply(S.scala:1107)\nnet.liftweb.mapper.DB$$anon$1$$anonfun$apply$13.recurseMe$1(DB.scala:197)\nnet.liftweb.mapper.DB$$anon$1$$anonfun$apply$13$$anonfun$recurseMe$1$1.apply(DB.scala:204)\nnet.liftweb.mapper.DB$$anon$1$$anonfun$apply$13$$anonfun$recurseMe$1$1.apply(DB.scala:204)\nnet.liftweb.mapper.DB$$anonfun$use$1.apply(DB.scala:587)\nnet.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\nnet.liftweb.mapper.DB$currentConn$.run(DB.scala:574)\nnet.liftweb.mapper.DB$.use(DB.scala:584)\nnet.liftweb.mapper.DB$$anon$1$$anonfun$apply$13.recurseMe$1(DB.scala:204)\nnet.liftweb.mapper.DB$$anon$1$$anonfun$apply$13.apply(DB.scala:206)\nnet.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\nnet.liftweb.mapper.DB$$anon$1$DepthCnt$.run(DB.scala:187)\nnet.liftweb.mapper.DB$$anon$1.apply(DB.scala:190)\nnet.liftweb.http.S$.net$liftweb$http$S$$doAround(S.scala:1107)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1307)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$.net$liftweb$http$S$$_nest2InnerInit(S.scala:1306)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$31$$anonfun$apply$32$$anonfun$apply$33$$anonfun$apply$34.apply(S.scala:1332)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$.withReq(S.scala:1341)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$31$$anonfun$apply$32$$anonfun$apply$33.apply(S.scala:1331)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$31$$anonfun$apply$32.apply(S.scala:1330)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$31.apply(S.scala:1329)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1328)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$.net$liftweb$http$S$$_innerInit(S.scala:1327)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43$$anonfun$apply$44$$anonfun$apply$45.apply(S.scala:1381)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43$$anonfun$apply$44.apply(S.scala:1379)\nnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:524)\nnet.liftweb.http.RequestVarHandler$.apply(Vars.scala:445)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$41$$anonfun$apply$42$$anonfun$apply$43.apply(S.scala:1378)\nnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:524)\nnet.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:449)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$41$$anonfun$apply$42.apply(S.scala:1377)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$41.apply(S.scala:1376)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1.apply(S.scala:1375)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.S$.net$liftweb$http$S$$_init(S.scala:1374)\nnet.liftweb.http.S$.init(S.scala:991)\nnet.liftweb.http.LiftServlet.doSession$1(LiftServlet.scala:190)\nnet.liftweb.http.LiftServlet.doService(LiftServlet.scala:200)\nnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply$mcZ$sp(LiftServlet.scala:86)\nnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\nnet.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:86)\nnet.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:329)\nnet.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\nnet.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:338)\nnet.liftweb.util.Helpers$.logTime(Helpers.scala:34)\nnet.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:85)\nnet.liftweb.http.LiftServlet.service(LiftServlet.scala:96)\nnet.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply$mcV$sp(HTTPProvider.scala:66)\nnet.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:65)\nnet.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:65)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.URLRewriter$.doWith(Req.scala:888)\nnet.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:64)\nnet.liftweb.http.LiftFilter.service(LiftServlet.scala:635)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ServletFilterProvider.scala:67)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:530)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:529)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:528)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:527)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:526)\nnet.liftweb.http.RequestVarHandler$.apply(Vars.scala:445)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply$mcV$sp(ServletFilterProvider.scala:61)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:530)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:529)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:528)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:527)\nnet.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\nnet.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:526)\nnet.liftweb.http.TransientRequestVarHandler$.apply(Vars.scala:449)\nnet.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\nnet.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:635)\norg.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\norg.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\norg.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\norg.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\norg.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\norg.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)\norg.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\norg.mortbay.jetty.Server.handle(Server.java:326)\norg.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\norg.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)\norg.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)\norg.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\norg.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\norg.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)\norg.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)</pre>\n                  </div>\n             <br />\n             <br />\n          <i>note: this error is displayed in the browser because\n          your application is running in &quot;development&quot; or &quot;test&quot; mode.If you\n          set the system property run.mode=production, this error will not\n          be displayed, but there will be errors in the output logs.\n          </i>\n\n          </div>  \n  '
194,'dpp','Lift Actor pool size limits\nCurrently, the java.util.concurrent package will create a lot of threads for Actor handling.  This can lead to thousands of unused threads.\r\n\r\nLift Actors should have a limit for the number of threads created and also support harvesting threads in the thread pool'
1043,'indrajitr','Upgrade JavaMail API to 1.4.4 version\nI suggest to upgrade JavaMail API from version 1.4.1 to 1.4.4. Please see this discussion: https://groups.google.com/d/topic/liftweb/UQvUJdxlNN8/discussion'
335,'dpp','Make ActorPing schedule functions as well as sending messages to Actors\nMake ActorPing schedule functions as well as sending messages to Actors'
618,'dpp','Deprecate shouldUpdate in ListenerManager\nAnd also make CometListenee a self-typed thing'
52,'timperrett',"Fix lift-archetype-jpa-basic\nRef: http://groups.google.com/group/liftweb/browse_thread/thread/c932dd45c70094ca\n\nIssues:\n1. Velocity is unhappy and spewing warnings\n2. mvn install fails after archetype being created\n\nDiagnosis:\n1. \\#1 Happens because vm variables don't resolve appropriately during archetype:generate\n2. \\#2 Happens likely because scala.version is set to 2.7.4 in pom.xml (unlikely to be main reason).\n3. LiftRules.localeCalculator is now of type Box[HTTPRequest] => Locale in snapshot instead of Box[HttpServletRequest] => Locale in 1.1-M4\n\n\nSolutions:\nFix archetype-resources to look like those in lift-archetype-basic.\nSpecifically:\n\n1. In ext.vm set(...) should be prepended with '#' to look like #set(...)\n\n2. Update pom.xml with the lines (somewhere at the top, before vm encounters ${} resolution)\n\\#set($sv = '${scala.version}')\n\\#parse('ext.vm')\n\n3. While at this, would be good to have the jetty version range fixed to [6.1.6,7.0)\n\n4. Either fix Boot.localeCalculator to honor the new signature in the SNAPSHOT or set lift-core dependency to 1.1-M4 in the lift-archetype-jpa-basic resource web/pom.xml in the interim till Boot.localeCalculator is fixed."
901,'davewhittaker','Non-autogenerated PKs in squeryl-record\nIn squeryl-record, there should be an option to have non-autogenerated PKs. Currently mixing in KeyedRecord trait makes PK autogenerated and without mixing that trait, one cannot use table in relationships, as for that, KeyedEntity is required.'
759,'dpp','Wizard and Screen lifecycle\nAdd lifecycle callbacks to Screen and Wizard'
193,'dpp',"AutoComplete broken\nRun lift-examples/example from SNAPSHOT (11/5) on a local server, autocompletion isn't happening on the AJAX Samples page. The rest of the Ajax stuff seems to work fine.\n"
334,'mariusdanciu','Support for HTTP Reason Phrase\nSupport setting the HTTP Reason Phrase in responses. Discussion about this was here:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/8d2163f9c0665272'
617,'Dridus','remove undesired display logic from record Fields\nBased on discussion in this thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/eb8cb01dcb828b9e\n\n1) Remove all HTML generation other than the core <input/> element from Field toForm methods\n2) Move this logic to a trait that can be mixed in to fields for users that want to maintain current HTML generation\n\nThere are some additional methods on Field that I think are only used for this display stuff that can probably be removed from Field and put in the newly created trait as well: displayName and label.\n\nSee also this related ticket:\n\nhttps://www.assembla.com/spaces/liftweb/tickets/594-overriding-field-label-not-affecting-textareafield-tofrom'
51,'','SiteMenu - login/logout not redirecting/refreshing in InnovationGames/HelloLift\nI noticed in my application (innovationgames.com) that login/logout were behaving strangely.  I would login and sometimes it would not proceed to the post-login page.  Also, I would logout and it would not proceed to the post-logout page.\r\n\r\nI decided to try this out on one of the lift examples (HelloLift) and sure enough the (bad) behavior reproduces.\r\n\r\nAs this is affecting my production site, I need to get a fix ASAP.\r\n\r\n\r\nDan'
900,'hoffrocket',"MongoCaseCaseListField.setFromAny doesn't correctly match against List\nMongoCaseCaseListField.setFromAny doesn't correctly match against List"
1183,'davewhittaker','Some Record fields don\'t work when optional_? = false\nBased on the thread https://groups.google.com/d/msg/liftweb/jo3xkhu2Fjs/lKV4Cdzgy9EJ\n\nThere is a bug in some Record field classes by which the setFromString method does not handle the empty string when the\nfield is optional.\n\nFields with the bug:\n* DoubleTypedField\n* DecimalTypedField\n* LongTypedField\n* BooleanTypedField\n\nFields without the bug (if it\'s not here, I didn\'t check it):\n* BinaryTypedField\n* DateTimeTypedField\n* IntTypedField\n\nEmailTypedField might also have a similar bug (I think) since the validateEmail() doesn\'t include the empty string as valid when the field is empty. \n\n\nTo correct this bug the following (or equivalent) code can be used:\n\n<pre><code>def setFromString(s: String): Box[Double] = s match {\n case "" if optional_? => setBox(Empty)\n case _ =>setBox(tryo(java.lang.Double.parseDouble(s)))\n}\n</code></pre>\n\n'
475,'',"support Scalate as an optional new form of templates in addition to Lift templates\nsupport the Scalate template engine as a possible view in Lift so folks can choose to use Scalate templates as an alternative to Lift templates; particularly in cases when developers own the templates (rather than designers) so there's a need for more DRY and easier to hack templates.\n\na comparison of Scalate and Lift templates are here...\nhttp://scalate.fusesource.org/code-in-view.html\n\nthey both have their strengths and weaknesses; kinda depends on your team and requirements as to which approach you'll prefer\n"
192,'',"Allow HTTP headers to be added to Ajax requests\n\r\nAdd a way for allowing easy specification of custom HTTP header attributes.\r\n\r\nBr's,\r\nMarius"
1041,'jonifreeman','json failure parsing solo quote mark with a parser function\n\n<pre><code>\n   "Strange behavior parsing a solo quote mark with a parser" in {\n     // this usually throws but it seems to be looking at a varying string\n     // and so the exact error can vary\n     JsonParser.parse("\\"", discardParser)\n   }\n\n   private val discardParser = (p : JsonParser.Parser) => {\n     var token : JsonParser.Token = null\n     do {\n       token = p.nextToken\n     } while (token != JsonParser.End)\n   }\n\n</code></pre>\n\nAn example exception from this is:\n\n\n<pre><code>[error]   x Strange behavior parsing a solo quote mark with a parser\n[error]     String index out of range: -980 (String.java:207)\n[error]     java.lang.String.<init>(String.java:207)\n[error]     net.liftweb.json.JsonParser$Buffer.near(JsonParser.scala:382)\n[error]     net.liftweb.json.JsonParser$Parser.fail(JsonParser.scala:224)\n[error]     net.liftweb.json.JsonParser$Parser.parseString$1(JsonParser.scala:245)\n[error]     net.liftweb.json.JsonParser$Parser.nextToken(JsonParser.scala:285)\n[error]     net.liftweb.json.ParserBugs$$anonfun$7.apply(ParserBugs.scala:57)\n[error]     net.liftweb.json.ParserBugs$$anonfun$7.apply(ParserBugs.scala:54)\n[error]     net.liftweb.json.JsonParser$.parse(JsonParser.scala:76)\n[error]     net.liftweb.json.JsonParser$.parse(JsonParser.scala:69)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply$mcV$sp(ParserBugs.scala:51)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply(ParserBugs.scala:51)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply(ParserBugs.scala:51)\n\n\n</code></pre>\nBut a second run on exact same code gave me:\n\n<pre><code>\n\n[error]   x Strange behavior parsing a solo quote mark with a parser\n[error]     expected boolean\n[error] Near: ""foo" : "bar"]0 (JsonParser.scala:224)\n[error]     net.liftweb.json.JsonParser$Parser.fail(JsonParser.scala:224)\n[error]     net.liftweb.json.JsonParser$Parser.nextToken(JsonParser.scala:298)\n[error]     net.liftweb.json.ParserBugs$$anonfun$7.apply(ParserBugs.scala:57)\n[error]     net.liftweb.json.ParserBugs$$anonfun$7.apply(ParserBugs.scala:54)\n[error]     net.liftweb.json.JsonParser$.parse(JsonParser.scala:76)\n[error]     net.liftweb.json.JsonParser$.parse(JsonParser.scala:69)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply$mcV$sp(ParserBugs.scala:51)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply(ParserBugs.scala:51)\n[error]     net.liftweb.json.ParserBugs$$anonfun$1.apply(ParserBugs.scala:51)\n\n</code></pre>\n\nIt seems to somehow get some nondeterministic buffer in the parser.'
333,'jonifreeman','JSON pull parser API\nA low level parsing API.\n'
616,'dchenbecker','Paginator text should be localized\nCurrently most of the Paginator display strings appear to be just plain text.'
50,'dchenbecker','MySQL getting case mismatch on tables created by schemifier\nhttp://groups.google.com/group/the-lift-book/browse_thread/thread/d4076f0a72085b50'
899,'','Remove protected access modifier from trait MailerImpl\nI am deploying a Lift application to Google App Engine and needed to adapt MailerImpl.sendMail(…) to not use an actor (thread). My current implementation copies much of the MailerImpl just to override sendMail(…). If I could extend MailerImpl, I could remove both the copy/paste code from MailerImpl and unnecessary generateResetEmailBodies() and generateValidationEmailBodies() method re-implementations from my ProtoUser-derived class.'
1182,'','NPE in CSS transforms when using attribute interpolation\n\ndef cssClass: Option[String] = None\n\nscala> def listTemplate: NodeSeq = <table class={cssClass.map(Text(_))}></table>\nlistTemplate: scala.xml.NodeSeq\n\nscala> val func = "#headerxx_item" #> "x"\nfunc: net.liftweb.util.CssSel = CssBind(Full(#headerxx_item), Full(IdSelector(headerxx_item,Empty)))\n\nscala> func(listTemplate)\njava.lang.NullPointerException\n\tat scala.xml.NodeSeq.iterator(NodeSeq.scala:51)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.xml.NodeSeq.map(NodeSeq.scala:43)\n\tat scala.xml.NodeSeq.text(NodeSeq.scala:152)\n\tat scala.xml.MetaData$$anonfun$asAttrMap$1.apply(MetaData.scala:168)\n\tat scala.xml.MetaData$$anonfun$asAttrMap$1.apply(MetaData.scala:168)\n\tat scala.collection.Iterator$$anon$19.next(Iterator.scala:335)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:660)\n\tat scala.collection.Iterator$$anon$19.foreach(Iterator.scala:333)\n\tat scala.collection.TraversableOnce$class.toMap(TraversableOnce.scala:256)\n\tat scala.collection.Iterator$$anon$19.toMap(Iterator.scala:333)\n\tat scala.xml.MetaData.asAttrMap(MetaData.scala:168)\n\tat scala.xml.MetaData.strict_$eq$eq(MetaData.scala:137)\n\tat scala.xml.Equality$class.doComparison(Equality.scala:103)\n\tat scala.xml.Equality$class.equals(Equality.scala:92)\n\tat scala.xml.MetaData.equals(MetaData.scala:74)\n\tat net.liftweb.util.SelectorMap.slurpAttrs(BindHelpers.scala:2291)\n\tat net.liftweb.util.SelectorMap.net$liftweb$util$SelectorMap$$treatElem(BindHelpers.scala:2324)\n\tat net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2386)\n\tat net.liftweb.util.SelectorMap$$anonfun$net$liftweb$util$SelectorMap$$run$1.apply(BindHelpers.scala:2384)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:200)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:200)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:660)\n\tat scala.collection.LinearSeqLike$$anon$1.foreach(LinearSeqLike.scala:50)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:73)\n\tat scala.xml.NodeSeq.foreach(NodeSeq.scala:43)\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:200)\n\tat scala.xml.NodeSeq.flatMap(NodeSeq.scala:43)\n\tat net.liftweb.util.SelectorMap.net$liftweb$util$SelectorMap$$run(BindHelpers.scala:2384)\n\tat net.liftweb.util.SelectorMap.apply(BindHelpers.scala:2380)\n\tat net.liftweb.util.CssBind$class.apply(BindHelpers.scala:2405)\n\tat net.liftweb.util.CssBindImpl.apply(BindHelpers.scala:2461)\n\tat net.liftweb.util.CssBindImpl.apply(BindHelpers.scala:2461)\n\tat .<init>(<console>:21)\n\tat .<clinit>(<console>)\n\tat .<init>(<console>:11)\n\tat .<clinit>(<console>)\n\tat $print(<console>)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)\n\tat scala.tools.nsc.interpreter.IMain$Request$$anonfun$14.apply(IMain.scala:920)\n\tat scala.tools.nsc.interpreter.Line$$anonfun$1.apply$mcV$sp(Line.scala:43)\n\tat scala.tools.nsc.io.package$$anon$2.run(package.scala:25)\n\tat java.lang.Thread.run(Thread.java:680)\n\nI realize I can use transforms to achieve this, but this was existing code :-)'
474,'mariusdanciu','Redirects involving window.location in response to comet requests can produce a persistent request loop in Firefox\nFirefox does not stop processing the current page, and by consequence does not stop sending comet requests, which results in it receiving multiple window.location redirects and attempting to follow all of them, which further delays its departure from the current page, thus producing more requests.\n\nWebkit correctly stops sending new comet requests upon being redirected via a window.location assignment.\n\nOriginal thread at http://groups.google.com/group/liftweb/browse_thread/thread/79460ac02e0553c1 .'
757,'','More flexible CRUDify\nCRUDify contains some un-overridable methods within the *MenuLoc (e.g viewMenuLoc), and it will be great to make them overridable.  I have the following method in mind (all in Crudify.scala): displayRecord (:211), doCrudAll (:620),  crudyDelete (:343).\n\nSimilarly, crudDoForm (:703) can be refactored to separate the snippet layout from the submission handling.\n\n- Mahmood'
191,'mariusdanciu',"contextFuncBuilder doesn't capture all request state\n\r\nWhen running asynchronously say from a different actor the state capture when the fork happens does not capture HTTP parameters for example. This is quite useful snapshot information to have when doing parallel processing.\r\n\r\nBr's,\r\nMarius   "
1040,'','json parser allows duplicate object keys\n<pre><code> "Does not return duplicate keys in object" in {\n       val v = parse("""{ "foo" : "bar", "foo" : "boo" }""")\n       v mustEqual JObject(List(JField("foo", JString("bar"))))\n   }\n\n</code></pre>\n\nPossible fixes could include\n\n* document this behavior and advise apps to check for it if they need to\n* keep first key\n* keep last key\n* throw exception\n\n'
332,'indrajitr','Update project descriptors to use Assembla\n- Add assembla as a system to issueManagement section.\n- Update maven-changes-plugin configuration for assembla.\n- Update changes.xml to add Assembla system (in 2.0-SNAPSHOT release section for now)'
615,'dpp','All external links in SiteMap treated as same link\nSee this thread on the google group for liftweb: http://groups.google.com/group/liftweb/browse_thread/thread/2b6a0c4d3de8b097\n\nDPP said "We started enforcing link uniqueness post 1.1-M8.  It\'s a bug that we\'re treating all external links as the same link. "\n\nIf you add more than one external link to your sitemap, and leave SiteMap.enforceUniqueLinks == true, then your webapp will fail to run with the exception "Message: net.liftweb.sitemap.SiteMapException: Location <foo> defines a duplicate link List()"\n\nHere is a code snippet that caused the problem for me:\n\n // list of menus for the sitemap; externalized as a val so other \ncode can \n  // add/remove menus \n  var menus = \n    Menu(Loc("about", Pair("about" :: Nil, false), "About")) :: \n    Menu(Loc("support", ExtLink("http://extlink1"), "Feedback")) :: \n    Menu(Loc("blog", ExtLink("http://extlink2"), "Blog")) :: \n    Menu(Loc("news", ExtLink("http://extlink3"), "News")) ::     \n    Menu(Loc("twitter", ExtLink("http://extlink4"), "Twitter")) :: \n\nstack trace snippet:\n\nMessage: net.liftweb.sitemap.SiteMapException: Location <foo> defines a \nduplicate link List() \n        net.liftweb.sitemap.SiteMap.addLoc(SiteMap.scala:52) \n        net.liftweb.sitemap.Loc$class.menu_$eq(Loc.scala:245) \n        net.liftweb.sitemap.Loc$UnitLoc.menu_$eq(Loc.scala:343) \n        net.liftweb.sitemap.Menu.init(Menu.scala:136) \n        net.liftweb.sitemap.SiteMap$$anonfun$2.apply(SiteMap.scala:40) \n        net.liftweb.sitemap.SiteMap$$anonfun$2.apply(SiteMap.scala:40) \n        scala.List.foreach(List.scala:841) \n        net.liftweb.sitemap.SiteMap.<init>(SiteMap.scala:40) \n        net.liftweb.sitemap.SiteMap$.apply(SiteMap.scala:133) \n        bootstrap.liftweb.Boot$$anonfun$boot$10.apply(Boot.scala:149) \n        bootstrap.liftweb.Boot$$anonfun$boot$10.apply(Boot.scala:149) \n        net.liftweb.http.LiftRules$$anonfun$net$liftweb$http$LiftRules$ \n$resolveSitemap$1$$anonfun$apply$28.apply(LiftRules.scala:678) \n        net.liftweb.http.LiftRules$$anonfun$net$liftweb$http$LiftRules$ \n$resolveSitemap$1$$anonfun$apply$28.apply(LiftRules.scala:671) \n        net.liftweb.common.Full.flatMap(Box.scala:400) \n        net.liftweb.http.LiftRules$$anonfun$net$liftweb$http$LiftRules$ \n$resolveSitemap$1.apply(LiftRules.scala:670) \n        net.liftweb.http.LiftRules$$anonfun$net$liftweb$http$LiftRules$ \n$resolveSitemap$1.apply(LiftRules.scala:670) \n        net.liftweb.http.LiftRules$.liftedTree1$1(LiftRules.scala:656) \n        net.liftweb.http.LiftRules$.runAsSafe(LiftRules.scala:654) \n        net.liftweb.http.LiftRules$.net$liftweb$http$LiftRules$ \n$resolveSitemap(LiftRules.scala:669) \n        net.liftweb.http.LiftRules$sitemapRequestVar$$anonfun$$init$ \n$7.apply(LiftRules.scala:630) \n        net.liftweb.http.LiftRules$sitemapRequestVar$$anonfun$$init$ \n$7.apply(LiftRules.scala:630)'
49,'','Schema (for schemifier) should be specifiable\nSchemifier seems to decide for you what schema to schemify tables in. When the DriverType doesn\'t specify a default schema, the username is used. This precludes automatically creating an H2 database with a username because it doesn\'t have the schema. Should the default schema name for H2 be ""?'
898,'indrajitr','Maintain a blacklist of library dependencies for SBT build\nWith SBT build, far too many unnecessary libraries are downloaded. Many of them unnecessary (or incompatible).\nMaintain a blacklist and have a convenient way of adding to them from sub-projects.'
1181,'indrajitr','lift-mapper depends on derby \n'
473,'jeppenejsum','Show non-minified javascript when running in dev mode\nSee related discussion:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/7e0b73f51691ed8c/6b9c14b7345f7afc\nhttp://groups.google.com/group/liftweb/browse_thread/thread/6b9160d4d14394c4/f4ea8e00a6671f98'
756,'dpp','Refactor Crudify.scala to make snippet methods overridable\n*Situation*\nCustomizing CRUDify is possible by overriding the methods _editTemplate_, _deleteTemplate_, _createTemplate_, _viewTemplate_ and\n_showAllTemplate_. The main restriction is however, that data will be shown in sequential order and all fields are treated the same. \n\n*Problem*\nSometimes the data is not strictly sequential and it would be nice to have more customized templates.\nFor example, one could want to have view-template for a user model like this:\n\n<pre><code>\n<lift:crud.view>\n  <h1><crud:name /> (<curd:city />, <crud:state />)</h1>\n  <h2><crud:userType /></h2>\n  <br />\n  <p><crud:personalStatement /></p>\n</lift:crud.view>\n</code></pre>\n\n*Solution*\nUsing such special templates is already possible for create- and edit-templates. One only has to override the method _crudDoForm_ (Crudify.scala:703).\n\nFor special view-, list- and delete-templates, it would be necessary to override the methods _displayRecord_ (Crudify.scala:211), _doCrudAll_ (Crudify.scala:620) and _crudyDelete_ (Crudify.scala:343). These are defined inside other methods and are not direct members of Crudify, so overriding them is not possible. The methods do not use anything of the scope of their surrounding methods, so moving them out and making them direct members of the Crudify trait seems possible.\n'
190,'mariusdanciu','Possible lift error in <lift:form> tag\nI think I might have found a lift bug in the <lift:form>  tag\n\nI just did a update for ESME and certain HTML buttons (for example, "Add" in\ncreating a new action, etc.) no longer work. A javascript syntax error\nis thrown.\n\nThe file in question is\n\\trunk\\server\\src\\main\\webapp\\action_view\\index.html. The code is\nhere:\n\n <lift:form>\n   <lift:main>\n   <table>\n\n\nThis is code currently generated and which causes the syntax error.\n<form id="F1008082309036RKD" action="javascript://"\nonsubmit="liftAjax.lift_ajaxHandler(jQuery(\'#\'+&quot;F1008082309036RKD&quot;).serialize(),\n, null, &quot;javascript&quot;);return false;">\n\nThis older generated code is currently deployed on stax are works correctly.\n\n<form id="F444961682037I0I"  action="javascript://"\nonsubmit="liftAjax.lift_ajaxHandler(jQuery(\'#\'+&quot;F444961682037I0I&quot;).serialize(),\nnull, null, null);return false;">\n\nNotice the difference in the onsubmit value.\n\nD.'
1039,'jonifreeman','json parser allows colon in arrays\nThese two tests fail\n\n \n<pre><code>  "Does not allow colon at start of array" in {\n       parseOpt("""[:"foo", "bar"]""") mustEqual None\n   }\n\n   "Does not allow colon instead of comma in array" in {\n       parseOpt("""["foo" : "bar"]""") mustEqual None\n   }\n</code></pre>\n'
331,'timperrett','Support for page and snippet level localization\nLift only support global resource bundles, i think it would be very useful if page level resource bundles were supported.\nFor example, if i have a page _"index"_ it would automatically have access to the _index_<locale>.properties_ bundle. Obviously this bundle would not be accessible from any other page.\n\nThis feature was discussed in [[url:http://groups.google.com/group/liftweb/browse_thread/thread/35f20380c5341f25?hl=en|this thread]].'
614,'indrajitr','Avoid version range for dependencies\n\n* Avoid version range for dependencies.\n* Push down dependency declaration in lift-base, lift-persistence and lift-modules to respective artifacts.\n\nThese two things would make dependency resolution with Ivy more reliable (used by SBT).'
48,'','H2 not getting primary keys created\nRun the following code\n<code><pre>\nimport _root_.net.liftweb.util._\nimport Helpers._\nimport _root_.java.sql.{Connection, DriverManager}\n\n\nclass M extends LongKeyedMapper[M] with IdPK {\n  def getSingleton = M\n  object field extends MappedString(this, 10)\n}\nobject M extends M with LongKeyedMetaMapper[M]\n\n\nobject H2TestCase  {\n  def main(args: Array[String]) {\n    DB.defineConnectionManager(DefaultConnectionIdentifier, new ConnectionManager {\n      def newConnection(name: ConnectionIdentifier): Box[Connection] = {\n        Class.forName("org.h2.Driver")\n        Full(DriverManager.getConnection("jdbc:h2:mem:lift;DB_CLOSE_DELAY=-1"))\n      }\n\n      def releaseConnection(conn: Connection) {\n          try {\n              conn.close\n          } catch {\n              case e => Empty //ignore\n          }\n      }\n\n      \n    })\n\n    Schemifier.schemify(true, Log.infoF _, M)\n  }\n\n}\n</pre></code>\n\nThe output is:\nINFO - CREATE TABLE m (field VARCHAR(10) , id BIGINT NOT NULL AUTO_INCREMENT) \nINFO - CREATE INDEX m_id ON m ( id )\n'
897,'indrajitr','Improve offline build with SBT\nImprove offline build with SBT. While at that, would be good to have system property -Doffline=true enabled.'
1180,'dpp','DB.asAny and DB.asString are not checking for null\nWhen I perform a query  with net.liftweb.db.DB.performQuery(sql) for my int and double columns I am getting zeros when the database has null.  It seems to me that DB.asAny and DB.asString should check for null and leave that value as null instead of calling (for example) rs.getDouble(pos) and getting back 0.0\n\nProblem code is at:\nhttps://github.com/lift/framework/blob/master/persistence/db/src/main/scala/net/liftweb/db/DB.scala#L414'
472,'dpp','Make FactoryMaker take a Vendor rather than a () => T\nChange Factory#FactoryMaker to take Vendor[T].  This will allow for more friendly implicit conversions.'
755,'','Update Facebook Module with latest API\nLift-Facebook supports an outdated Facebook Graph API.  The new graph api is supported at: http://developers.facebook.com/docs/api .\n\nThe work involves updating Facebook module along with the example code available.  Some documentation would be helpful as well.'
189,'dpp','Lift not parsing query params under some circumstances\nhttp://groups.google.com/group/liftweb/browse_thread/thread/592acaddac546b81'
1038,'jeppenejsum','Schemifier fails if performWrite=false and table does not exist\n'
330,'indrajitr','Use identical names for repositories\nThe lift-parent POM calls the repositories _scala-tools.release_ and _scala-tools.snapshot_ (singular), whereas the POM generated with lift-archetype-basic calls these _scala-tools.releases_ and _scala-tools.snapshots_ (plural). This will lead to unnecessary mulitiple and time-consuming lookups to the same repositories.\n\nExample:\n[INFO] snapshot net.liftweb:lift-webkit:2.0-SNAPSHOT: checking for updates from scala-tools.releases\n[INFO] snapshot net.liftweb:lift-webkit:2.0-SNAPSHOT: checking for updates from scala-tools.snapshots\n[INFO] snapshot net.liftweb:lift-webkit:2.0-SNAPSHOT: checking for updates from scala-tools.release\n[INFO] snapshot net.liftweb:lift-webkit:2.0-SNAPSHOT: checking for updates from scala-tools.snapshot\nDownloading: http://scala-tools.org/repo-snapshots/net/liftweb/lift-webkit/2.0-SNAPSHOT/lift-webkit-2.0-SNAPSHOT.pom\n...\n\nI suggest to use identical names everywhere. As there are lots of artifact POMs I suggest to change the names in the lift-parent POM to plural what sounds better anyway.'
613,'dpp','Add "body: NodeSeq" Parameter to Shtml.submit() \nWe need to be able to create submit links with a body in order to display jQueryUI Icons described in this http://www.filamentgroup.com/lab/styling_buttons_and_toolbars_with_the_jquery_ui_css_framework/|post.\n\nTherefore we need a body:NodeSeq Parameter in Shtml.submit() equivalent to Shtml.link()'
47,'dpp','Mapper support for NOT NULL\n'
896,'dchenbecker',"Modify User.logUserIn to work in the request scope\nCurrently User.logUserIn sets a SessionVar so it won't work, for example, within HTTP authentication handlers. See\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e9b388de2574d59a/488c06e133700f4b\n\nFor more details. "
1179,'eltimn','Invalidate cached object in MongoRefField upon setting the value\nCurrently, when you set a new value in a MongoRefField, the object cache does not get refreshed and contains the previous value. \n\nProposed solution is to override setBox:\n\noverride def setBox(in: Box[MyType]): Box[MyType] = {\n  _calcedObj = false\n  super.setBox(in)\n}\n\nNote: super.setBox is synchronized and the above should be as well.\n'
471,'dpp','Make entity resurection feature optional\nIssue 274 made it the default to turn certain unicode characters into XML entities.  This messes with existing code.  Add a LiftRule (off by default) to enable the behavior.'
754,'migo','Several issues with squeryl-record\nIn the current squeryl-record implementation, there are the following issues:\n\n* createRecord is not called for records fetched from the database by squeryl. This has the result that the field names are not set, for example.\n* The squeryl version that is required by squeryl-record is outdated. The newest squeryl version should be supported for getting access to new squeryl features\n* Not all record field types are supported (e.g. PasswordTypedField, BinaryTypedField, IntTypedField)\n* There are currently no unit tests for squeryl-record\n'
188,'dpp','Emit warning if SessionVars are used with no Lift session\nIt is possible to set/get SessionVars even when there is no Lift session active. It would be nice to get some warnings logged in these cases.\r\n\r\nMore details here: http://groups.google.com/group/liftweb/browse_thread/thread/efb58c2bd56556ef'
1037,'dpp','Statelessness is broken in 2.4-M1\nMore info at https://groups.google.com/d/msg/liftweb/5e0mjHXAfIg/b1DtlrqH5lcJ\n\nThe most immediate symptom for us was that rendering a template in a stateless flow throws a StateInStateless exception.'
329,'jeppenejsum',"Make OpenID support more extensible\nLift-OpenID should allow extending OpenIdConsumer in a way that only the Attribute-Exchange request and SimpleRegistration request need to be overriden without changing the rest of the code.\n\nI propose that the following methods be extracted (and default to returning None), Option could of course be replaced with Box if that's better.\n\n\n<pre><code>def reqAttributeExchange(discovered: DiscoveryInformation): Option[FetchRequest] = None\ndef reqSimpleRegistration(discovered: DiscoveryInformation): Option[SRegRequest] = None\n</code></pre>\n\nand authRequest be changed like this:\n\n\n<pre><code>    reqAttributeExchange(discovered) match {\n      case Some(fetch) => authReq.addExtension(fetch) \n      case None =>\n    }\n\n    reqSimpleRegistration(discovered) match {\n      case Some(sreg) => authReq.addExtension(sreg)\n      case None =>\n    }\n</code></pre>\n\nThe parameter discovered is for the purpose of customizing the requests for certain well-known OpenID providers, whose behaviour and attribute support varies."
612,'dpp','add lift-core_zh_CN.properties (Simplified Chinese translation)\nhere is the translation http://gist.github.com/507621#file_lift_core_zh_cn.properties '
46,'mads379','autocomplete widget - make options settable?\nthe default autocomplete options i.e.\r\n\r\nval autocompleteOptions = JsRaw(...\r\n\r\nneed to be more easily set. I had to override and copy-paste the render function to change these. Making them settable without extending the class would be ideal. making the autocompleteOptions val an overridable outer function would be fine though.'
895,'dchenbecker','Update Content Types in MockHttpServletRequest\nJSON should default to application/json, not text/json, and the user should be able to manually set the content type if they desire something other than the default.\n\nAs per this discussion: https://groups.google.com/d/topic/liftweb/8C6Rz-dy6LQ/discussion'
470,'dpp','Did memory consumption grow?\nSome users are reporting increased memory consumption from M3 to M4.  Investigate the memory consumption using YourKit to see.'
753,'dpp','add follow-up function to call to RedirectTo\nAdd a follow-up function call to RedirectTo so that you can redirect to a page and set a RequestVar.\n\nSee:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/a1150ec416626457'
187,'','Automated tests for examples\nExamples seem to broke now and then and it would be beneficial for the reader of the examples to see how lift applications can be tested automatically.'
1036,'dpp',"Jetty JNDI issue with LiftActor's scheduler\nRef http://groups.google.com/group/liftweb/browse_thread/thread/0e8ea02486ae37b4\n\nTomcat fix in ticket 1001 causes Jetty JNDI issues for LiftActor's scheduler. Jetty 6.1.24-6 on Ubuntu 11.04, Java 1.6.0_22, MySQL driver configured via JNDI  and DefaultConnectionIdentifier.jndiName. \n\nOn Jun 7, 8:52 pm, David Pollak <feeder.of.the.be...@gmail.com> wrote: \n> Can you put together a reproducible example?  I'd like to see what the core \n> issue is. \n\nSure. Please check https://github.com/terjesb/lift-actor-classpath. \nLet it run with jetty-run. This works for 2.3, but fails after a few \nseconds with 2.4-M1. \nIf I comment \nd setContextClassLoader null \nin core/actor/src/main/scala/net/liftweb/actor/LAPinger.scala it also \nworks against a local 2.4-SNAPSHOT. \n\n> Okay... looks like the JNDI code is looking to figure out its context via \n> the thread's contextclasspath and when it's null, bad things (tm) happen. \n"
328,'dpp','Mapper objects deserialized from json have all of their fields marked dirty.\nMapper objects deserialized from json have all of their fields marked dirty.'
611,'dchenbecker','Paginator & empty collection, negative offset\na) When there is empty collection (0 items, nothing to iterate over)\nthen following [1]\n      def currentXml: NodeSeq = Text("Displaying records"+(first+1)+"-"+(first+itemsPerPage min count)+" of "+count)\n  calculates to\n      "Displaying records 1-0 of 0"\n\nDoes not look right to me, I would expect "Displaying records 0-0 of 0"\n\n\nb) I\'d suggest to split calculations away from\n     Text("Displaying records "+(first+1)+"-"+(first+itemsPerPage min count)+" of "+count)\nso that it could be used via paginate() binding like\n <nav:recordsFrom /> - <nav:recordsTo /> of <nav:recordsCount />\n\n\nc) Calculation for "next" link [2]\n      "next" -> pageXml(first+itemsPerPage min itemsPerPage*(numPages-1), nextXml),\ncalculates negative value when \'numPages\' is zero resulting\n"next"-link to contain\n   ?offset=-<itemsPerPage>\nExpected: No link in case of empty collection (as there is for "prev")\n\n\nd) Same problem for the "last" (as for "next", described previously)\n\n\ne) More of a debatable robustness issue: I would expect the Paginator\noffered by the framework to be smart enough that it could not result\nin an error like\n     Message: org.postgresql.util.PSQLException: ERROR: OFFSET must\nnot be negative\n  (even when user plays with parameters on address bar)\n\n\n[1] Line 102 at\nhttp://github.com/lift/lift/blob/2.x-2.8_devel/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Paginator.scala\n[2] Line 142 at\nhttp://github.com/lift/lift/blob/2.x-2.8_devel/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Paginator.scala\n\n\nOriginal thread: http://groups.google.com/group/liftweb/browse_thread/thread/50260536cebd0ae\n\nInitially assigned to \'timperrett\' because instructed so by \'dpp\':\n> Finally, Tim Perrett currently maintains the paginator.  He\'s off-grid this week.\n> [...]  Tim will address the ticket when he has the bandwidth.\n'
45,'','Xml parsing problem with html special characters\nI\'m having trouble parsing xhtml pages as xml if that page contains special characters like &reg; or &nbsp; The html im parsing is created by lift.\n\nThe problem is generated whenever referencing a variable.xml and the result is:\n[Fatal Error] :54:46: The entity "reg" was referenced, but not declared.\nAnd the printout of the xml.\n\nCode example:\n    val result: String = \n      get("/some_page/here/" + variable) match {\n        case h: HttpResponse => \n          val input = (h.xml \\\\ "input")\n          println("I got something" + input)\n          ""\n        case other => \n\t        println("Got something weird - got "+other)\n\t        ""\n      }\n    result \n'
894,'indrajitr','Update lift-scalate module to use scalate 1.4.0\n'
1177,'dpp','Single LoanWrapper invocation per request\nLoanWrappers are currently executed up to three times per request while their ScalaDoc seems to imply only one invocation.  See: https://groups.google.com/d/topic/liftweb/w8BqoJTCrq8/discussion'
469,'jeppenejsum','basic archetype shows error during boot\nDetails here http://groups.google.com/group/liftweb/browse_frm/thread/35e5d84eb2ec95c1#'
752,'dpp','Create a SHtml.radioObj similar to .selectObj\nIt would be interesting to have a SHtml.radioObj to generate radio buttons that behaves similarly to SHtml.selectObj. Today\'s radio button generator only accepts Strings for both it`s value and label which is not very flexible, specially when dealing which I18n of labels.\n\nIn fact, the radio button can be thought of a different "template" for selectObj, since they are both an implementation of a single-select mechanism.'
186,'','Ability to manually create Lift session during rewrite\nNormally, the Lift session is not created in the rewrite phase. It could be useful to manually force a lift session to be created.\r\n\r\nMore details here: http://groups.google.com/group/liftweb/browse_thread/thread/efb58c2bd56556ef'
327,'dpp','StandardDBVendor should register with container for shutdown\nThe StandardDBVendor should register itself with the right place in LiftRules so that during container shutdown, the StandardDBVendor can close all the JBBC connections'
610,'dpp','Comet chat - input drops down after page refresh\nAfter logging into chat at http://demo.liftweb.net/chat and hitting refresh in browser input drops down. The same effect is seen in 2.1-SNAPSHOT Scala 2.8.0 branch on similar app.'
44,'','TextileParser issues\n1# * and _. Look at the following:\r\n\r\nscala> import net.liftweb.textile._ \r\nimport net.liftweb.textile._ \r\n\r\nscala> TextileParser.toHtml("*foo* __bar__") \r\nres7: scala.xml.NodeSeq = \r\n<p><strong>foo</strong> __bar__</p> \r\n\r\nscala> TextileParser.toHtml("__bar__") \r\nres8: scala.xml.NodeSeq = \r\n<p><i>bar</i></p> \r\n\r\nscala> TextileParser.toHtml("__bar__ *foo*") \r\nres9: scala.xml.NodeSeq = \r\n<p><i>bar</i> *foo*</p> \r\n\r\nSomething clearly isn\'t working with __ and ** ;) \r\n\r\n\r\n#2 links with classes \r\n\r\nscala> TextileParser.toHtml(""" "(cmsadmin-link)click here":#  """) \r\nres10: scala.xml.NodeSeq = \r\n<p> <a href="javascript://">(cmsadmin-link)click here</a>  </p> \r\n\r\nUsually this should work too.'
893,'jonifreeman','Improve class -> JSON serialization\nJSON serialization was originally designed for algebraic data types (for sum types and for product types using type hints). This feature enables support for object oriented types too.\n\n<pre><code>\nval dogSerializer = FieldSerializer[WildDog](\n  renameTo("name", "animalname") orElse ignore("owner"),\n  renameFrom("animalname", "name")\n)\n\nimplicit val formats = DefaultFormats + dogSerializer\n</code></pre>\n\n'
1176,'dpp',"DoS against Web-Application Platforms\nThe issues come with the non-randomized hashing-functions, but are better described here:\nhttp://events.ccc.de/congress/2011/Fahrplan/attachments/2007_28C3_Effective_DoS_on_web_application_platforms.pdf\n\nI've created a thread on Liftweb Groups (http://groups.google.com/group/liftweb/browse_thread/thread/870c23057925ccb3) regarding this, David told me to open a ticket.\n"
468,'timperrett','Ajax handler not reporting exception\nThe following silently fails with no indication that an exception has occurred:\n\n<pre><code>import _root_.net.liftweb.widgets.tree.{Tree, TreeView}\nimport _root_.net.liftweb.http.js.JE.JsObj\n\nobject HelloWorld {\n  val world = "World"\n  val i = world.toInt       // Cause an exception...\n  }\n\nclass HelloWorld {\n  def speak = <span>Hello</span>\n  def render = TreeView("tree", JsObj(), branches, leaves)\n  def branches(): List[Tree] = Tree(HelloWorld.world, "world",  true) :: Nil\n  def leaves(id: String): List[Tree] =  Tree("1st leaf") :: Tree("2nd leaf") :: Nil\n  }\n</code></pre>\n\nThe full example is at git://github.com/dbrnz/Lift-Web-example.git.\n\nThe resolution is to always log exceptions to the console -- full thread is at http://groups.google.com/group/liftweb/browse_thread/thread/d1dd62a62907eb2'
751,'dpp',"Check to make sure Chrome is getting 6 or more open HTTP connections\nIt's looking like Google Chrome is not being correctly given enough open http connections... fix that please."
185,'dpp','MappedDouble should be able to be set from a Box\nIt can be set from an Option, it should be able to recognize a Box in the same way as, for example, MappedInt can.\r\n'
1034,'dpp','Please Fix LiftScreen.field and MappedField for FormParam\nLiftScreen.field() is not honoring FormParam (However, Liftscreen.password and others are). Please fix this for 2.4-M2. \nAlso, please add a mechanism to MappedField (and Record Field) for adding attributes to the form elements.\nMore information on the bug can be found at this thread:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/06c1a7936a15d259#'
609,'dchenbecker','DB.runQuery and runUpdate need common type handling refactored\nThe fix for ticket #582 introduced some copy/paste code. This should be fixed to avoid maintenance issues in the future.'
43,'timperrett','Installer issue with existing bash profile\nThe Liftweb installer for Mac OS X generates a .bash_profile file whether .profile exists already or not. As a result of this, the shell will ignore the preexisting environment variables defined by .profile. The installer should detect the presence of .profile, and perform an append operation instead.'
326,'','Extend Comet (ListenerManager) to selectively update subscribers\nIn the current state the ListenerManager will always update all subscribers. I have got a use case where only certain subscribers should be updated. Therefore I suggest to extend the ListenerManager such that there can be an optional partial function that determines which subscribers will be updated. This change will not break the current API and will not affect the default behavior.'
892,'','Autocomplete() should have option to allow user to enter their own value\nThe Autocomplete user allows the user to start typing, then select any of a popped up list of strings, and have the selected string passed to a function at submit time.\n\nHowever, if the user types their own value, instead of choosing from the list, the string "" is passed to the specified function at submit time.  This is right for some apps (where only the choices to be completed from are valid), but wrong for others (where the popped up completions are only suggestions).\n\nThe following javascript, from Mads Jensen, can be manually added to the page to fix this behavior:\n\n\n<pre><code>\nPaul,\nAm I correct in assuming that what you want is to be able to submit a value that isn\'t part of the drop-down box? If this is the case you can fix it with a bit of javascript. In a javascript somew\\\nhere that you load on the page with the form put this\n\n$(document).ready(function(){\n        $(\'#idOfTheAutocompleteField\').bind(\'blur\',function(){\n                $(this).next().val($(this).val());\n        });\n});\n\nHope that helps,\nMads Hartmann Jensen\n</code></pre>\n\n\nThere should be a way to make this happen automatically (especially as this code is JQuery-specific).  I\'m not sure which behavior should be the default.'
467,'dpp','Treating Views differently from Snippets for Exception Handling purposes\nIn the sample below, "hi" is a simple view that has a problem in that \nit has infinite recursion and so throws an exception.  By default, if \nI call buriedHi, I get no exceptions.  If I call unearthedHi the \nexception is shown.\n\n<pre><code>class foo extends InsecureLiftView { \n  def hi: NodeSeq = <html>{ hi }</html> \n  def buriedHi: NodeSeq = hi \n  def unearthedHi: NodeSeq = try { hi } catch { case t:Throwable => t.printStackTrace; <html><body>stack trace found</body></html> } \n} \n</code></pre>\n\nDavid Pollack said:\n\n"This looks like a bug to me... it looks like we\'re treating views \ndifferently from snippets for exception purposes. \nPlease open a ticket at http://ticket.liftweb.net and we\'ll get a fix into M5."\n\nFull thread:  http://groups.google.com/group/liftweb/browse_thread/thread/13a2d9de184fb11c\n\n'
750,'dpp','<head> merge does not work in HTML5\nThe new HTML5 parser attempts to remove the <head> tags inside the <body> before it is possible for Lift to merge them.'
184,'','RequestVarEM is broken with JTA in AJAX requests due to RequestVar persistence.\nRequestVarEM needs to use TransientRequestVar instead of RequestVar so that a new transaction is initiated on each HTTP request since transactions are scoped to the actual HTTP request by the container.'
1033,'','JSON-Scalaz depends on incompatible Scalaz version\nCurrently the POM of lift-json-scalaz_2.9.0-1-2.4-M1 states scalaz-core_2.8.0-5.0 as a dependency. The only Scalaz version that is compatible with scala-2.9.0-1 is release 6.0 which was released today (June 8).'
608,'','Add attributes to fileUpload\nFrom the mailing list:\n\nIs there a good reason that a fileUpload cannot be given attributes like the other components?\n\nE.g. def text(value: String, func: String => Any, attrs: (String, String)*): Elem = ...\nBut def fileUpload(func: FileParamHolder => Unit): Elem = ...\n\nI think it would be easy to add that support.\n\nThis is what we already have:\n  def fileUpload(func: FileParamHolder => Unit): Elem = {\n    val f2: FileParamHolder => Unit = fp =>\n            if (fp.file != null && fp.file.length > 0) func(fp)\n\n    fmapFunc(BinFuncHolder(f2))(name => <input type="file" name={name}/>)\n  }\n\nLet\'s add:\n  def fileUpload(func: FileParamHolder => Unit, attrs: (String, String)*): Elem = {\n    val f2: FileParamHolder => Unit = fp =>\n            if (fp.file != null && fp.file.length > 0) func(fp)\n\n    fmapFunc(BinFuncHolder(f2))(name => attrs.foldLeft(<input type="file" name={name}/>)(_ % _))\n  }\n\nIf you don\'t see any issues I would open a ticket and add that.'
42,'','Incorrect Lock Ordering on SessionVar When Called from CometActor Constructor\nWhen accessing a session variable from the constructor of a `CometActor`, deadlock will sometimes occur (usually with another comet thread already running against the session).  The issue is comet actors are created from within `LiftSession#findComet`, which locks the session.  If you access a `SessionVar` during this construction process, you will then lock the corresponding variable.  However, most often it is the *variable* which locks first, and then the session (e.g. when accessing a session var during the normal course of execution).  This of course can lead to deadlock when one thread is attempting to access a session var while another thread is creating a comet actor.'
325,'mariusdanciu','JsCmds.RedirectTo not properly handling context path\nWhen deployed to the "/mt" context in Jetty, this code:\r\n<span>Here\'s request map: {S.request.map(_.contextPath)}</span>\r\n<span>Here\'s session map: {S.session.map(_.contextPath)}</span>\r\n<span>and finally S.contextPath: {S.contextPath}</span>\r\n\r\nYields:\r\nHere\'s request map: Full(/mt)Here\'s session map: Full(/mt)and finally \r\nS.contextPath: /mt\r\n\r\nYet neither of these buttons go to the right place:\r\n"homeButton" ->\r\n     SHtml.ajaxButton(\r\n          Text("Home"),\r\n          () => RedirectTo("/index")\r\n     ),\r\n"hiddenButton" ->\r\n     SHtml.ajaxButton(\r\n         Text("Hidden"),\r\n         () => RedirectTo(S.contextPath+"/hidden")\r\n    )\r\n\r\n[I was experimenting to see if having the Loc declared Hidden in the Boot made a difference -- seems not.]\r\nScala 2.7.7\r\nLift 2.0-M1'
891,'dpp','Register custom file-suffix for lift-templates\nMake it possible to register custom file-suffixes for lift-templates, f.ex. *.lift\nThe typical use-case is when Lift must co-exist with other framework(s), like JSF, which might already occupy *.html and *.xhtml'
466,'jeppenejsum','Add widget that allows changing of loglevels at runtime\n'
749,'dpp','Update Blueprint to 1.0\n'
183,'indrajitr','move changes:changes-validate to verify phase\nchanges:changes-validate can be invoked in verify phase instead of waiting till pre-site phase.\r\nCommitters updating chages.xml can intercept (and fix) validation issue during the regular "mvn install" workflow.'
1032,'dpp',"LiftScreen.field isn't honoring FormParam and there's no simple generic way to add params to MappedField\nFrom [[url:http://groups.google.com/group/liftweb/browse_thread/thread/6c1a7936a15d259|ML discussion]]:\n\nOkay... it looks like LiftScreen.field isn't honoring FormParam and there's \nno simple generic way to add params to MappedField. \n\nPlease open a ticket (http://ticket.liftweb.net you must be a watcher of the \nLiftWeb space on Assembla to open a ticket) referencing this thread and \nassign the ticket to me for 2.4-M2.  I'll fix field and add a mechanism to \nMappedField (and Record Field) for adding attributes to the form elements."
607,'dchenbecker','General check of code to see if we have other things broken by new 2.8.0 collections semantics\nSince issue #596 came up, it would be a good idea to do a general audit of the code base to find out where else we use "projection" and make sure that the new semantics fit with our assumptions.'
41,'',"Remove dependency on Maven\nit seems doing even Hello World in Lift means getting acquainted with maven. There is no stand-alone ZIP of Lift for easy download (especially on Linux).\n\nMaven is a fairly divisive platform, with lots of supporters and naysayers. I don't think it's in Lift's interest to force it upon users (I personally prefer running with just plain embedded Jetty in my web app and no Maven).\n\nGregg Bolinger mentions in one of his blogs that the Maven dependency is the reason he never looked into Lift seriously:\n\nhttp://www.greggbolinger.com/blog/2009/07/29/1248925200000.html\n\nRe: Grails: The Search Really Is Over (For Now)\nComment from Gregg Bolinger on August 5, 2009 3:02:02 AM CDT #\nI've looked at Scala. It is supported in Grails now, as is Clojure and something else I can't remember. Anyway, looking at list my first big issue was every tutorial I saw was using Maven. I know some folks like it, I personally don't. Other than that, I have no real opinion of Lift. I haven't looked at it enough.\n\nPlease provide a regular ZIP or TAR.GZ of the stable Lift version, together with all dependencies.\nThanks"
324,'','Help embedding lift in jetty\nHello - newbie to scala and (esp) lift.\n\nI\'m trying to get lift embedded into a server I wrote which also embeds jetty, so trying to avoid making war files, etc (the init code is at the end of this email) and thought someone out there might be able to point me in the right direction. I am using lift-util-1.0.jar and lift-webkit-1.0.jar, a bunch of the jetty jars, and any other jars needed to resolve dependencies. I may be a sucker for punishment, but everything works fine - the LiftServlet and LiftFilter are installed into jetty, and when I surf to :\n\nhttp://localhost:8081/lift/\n\nI get a \'broken link\' error response to the browser, and the scala console outputs:\n\nscala> INFO - Service request (GET) /lift/ took 136 Milliseconds\n\nSo, it looks like it\'s getting to lift, but likely lift thinks that there are no web apps, and hence the error (or something).\n\nI have a directory containing a simple hello world lift app created with maven archetype:generate, and I\'d like to point the LiftServlet to that, if at all possible. Or copy that project structure somewhere underneath jetty...\n\nI\'ve tried copying the lift app to cwd, the classes directory, the lib directory, etc to no avail.\n\nDoes anyone know how to get the LiftServlet to find the web apps?\n\nAny help is appreciated.\n\nbrian...\n\n--- x8 snip\n\nimport com.whatevernot.liaison.servlet.HelloServlet\nimport net.liftweb.http._\nimport org.eclipse.jetty.server._\nimport org.eclipse.jetty.servlet._\n\nval server = new Server(8081)\nval context = new ServletContextHandler(ServletContextHandler.SESSIONS)\n\ncontext.addFilter(new FilterHolder(new LiftFilter()), "/lift/*", 1)\ncontext.addServlet(new ServletHolder(new HelloServlet()), "/hello/*")\ncontext.addServlet(new ServletHolder(new LiftServlet()), "/lift/*")\ncontext.setContextPath("/")\n\nserver.setHandler(context)\nserver.start\n'
890,'indrajitr',"Lift projects reorganized, SBT does not generate SHA or MD5 by default\nDue the usage of new SBT-based for build process one gets now 'Checksum failed on download'-warnings when doing 'mvn clean install' or similar.\n\nIssue explained in the thread \n  http://groups.google.com/group/liftweb/browse_thread/thread/1b94d2a9d937a2ee\nmore specifically in this message:\n  http://groups.google.com/group/liftweb/msg/29488ff785a31b37"
1173,'dpp','Extending the data-lift html5 mechanism\nAs discussed and proposed in \nhttp://groups.google.com/group/liftweb/browse_thread/thread/734f48235c45faaa\nthe data-lift html5 mechanism could be extended to also operate on the \n<body class="lift:content_id=xxxx"> marker in the template to make it possible to use something like \n<body data-lift="content_id=xxxx"> or if better suited and to distinguish it from a snippet invocation to something like \n<body data-lift-content-id="xxxx">'
465,'jeppenejsum','Move asHtml to BaseField\nDetails: http://groups.google.com/group/liftweb/browse_frm/thread/bb5dff39aa666175'
748,'dpp','Make Menu.title HTML5 friendly\nThe HTML5 parser forbids <title>My Site <lift:Menu.title></lift:Menu.title></title>, so we need a new way to deal with this situation.'
182,'dpp','MetaMegaProtoUser should provide a "menus" alias for "sitemap"\nJust to be consistent with other menu-generating traits in Mapper (e.g. CRUDify)'
1031,'eltimn',"Impossible to override MongoMapField.toForm\nAs discussed on the ML : https://groups.google.com/d/topic/liftweb/rjySEZqZiik/discussion\n\nCurrently MongoMapField.toForm is defined as follows:\n\ndef toForm = Empty //FIXME\n\nSo it's impossible to override it with anything other than a method returning Empty.\n\n(this problem affects MongoCaseClassField, MongoCaseClassListField and PatternField)\nIt used to affect MongoListField, but it has been fixed.\n\nI've written a fix for this : ( https://github.com/divarvel/framework/commit/2356199bfea3db26f3854d83e7c55d3c63b2436c,https://github.com/divarvel/framework/commit/ba4a0e9b47f1758ad32e78af7ecb034138f928a7 and https://github.com/divarvel/framework/commit/5ed34281fcc0074a06b9f1f6803252be6faff844 ).\nI hope it can help\n"
606,'dchenbecker',"MS SQL Server Driver is set to disable FK support\nI'm pretty sure SQL Server supports it, so I'm not sure why we default it to false."
40,'','Problem with schemifier and H2\nThere is an issue with the mapper schemifier when using an H2 database. Specifically, if a user and password are specified, an exception is thrown during the boot process when attempting to verify the schema. If a user/password are not specified there is no problem.\r\n\r\nA reproduce-able example can be found at:\r\nhttp://github.com/eltimn/lift_1_1_sample/tree/master\r\n\r\nHere is a partial stack-trace:\r\n[INFO] Starting jetty 6.1.16 ...\r\n2009-07-30 13:54:55.416::INFO:  jetty-6.1.16\r\n2009-07-30 13:54:55.566::INFO:  No Transaction manager found - if your webapp requires one, please configure one.\r\nINFO - CREATE TABLE users (id BIGINT NOT NULL AUTO_INCREMENT , firstname VARCHAR(32) , lastname VARCHAR(32) , email VARCHAR(48) , locale VARCHAR(16) , timezone VARCHAR(32) , password_pw VARCHAR(48) , password_slt VARCHAR(20) , textarea VARCHAR(2048) , validated BOOLEAN , uniqueid VARCHAR(32) , superuser BOOLEAN) \r\nERROR - Failed to Boot\r\njava.util.NoSuchElementException: key not found: users\r\n\tat scala.collection.Map$class.default(Map.scala:169)\r\n\tat scala.collection.mutable.HashMap.default(HashMap.scala:33)\r\n\tat scala.collection.Map$class.apply(Map.scala:80)\r\n\tat scala.collection.mutable.HashMap.apply(HashMap.scala:33)\r\n\tat net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$7.apply(Schemifier.scala:189)\r\n\tat net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$7.apply(Schemifier.scala:189)\r\n\tat net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$using(Schemifier.scala:43)\r\n'
323,'jonifreeman','lift-Json doesn\'t appear to be correctly handling attributes\nWhen converting XML to Json attributes are being lost, given the below XML document, we would expect \n    {"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}\nwhere as we get \n    {"word":"content"} \nexample XML: \n    <word term="example" self="http://localhost:8080/word/example" available="true">content</word>\n\nThis is been tested on M1 and trunk.\n\nLink to the google group thread :\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/4d056e8e5c82671e#\n\nTo repeat\n\n// From the command line, adjust paths as needed\n    $scala -cp\n    /Users/jono/.m2/repository/com/thoughtworks/paranamer/paranamer/2.0/paranamer-2.0.jar:/Users/jono/.m2/repository/net/liftweb/lift-json/2.0-SNAPSHOT/lift-json-2.0-SNAPSHOT.jar\n\n    import scala.xml._\n    import net.liftweb.json.JsonAST._\n    import net.liftweb.json.Printer\n    import net.liftweb.json.Xml\n\n    val example1 = <word term="example" self="http://localhost:8080/word/example" available="true">content</word>\n    val expected1 = """{"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}"""\n    val got1 = Printer.compact(render(Xml.toJson(example1)))\n\n\n    val example2 = <word term="example" self="http://localhost:8080/word/example" available="true"></word>\n    val expected2 = """{"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}"""\n    val got2 = Printer.compact(render(Xml.toJson(example2)))\n\n\n// Add to src/test/scala/net/liftweb/json/XmlBugs.scala\n\n    "Jono\'s XML with attributes parses correctly" in {\n        val example1 = <word term="example" self="http://localhost:8080/word/example" available="true">content</word>\n        val expected1 = """{"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}"""\n\n        val example2 = <word term="example" self="http://localhost:8080/word/example" available="true"></word>\n        val expected2 = """{"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}"""\n  \n        Printer.compact(render(toJson(example1))) mustEqual expected1\n        Printer.compact(render(toJson(example2))) mustEqual expected2\n    }\n\n\nHere is what I get when I run the example provided.\n\n\n    $scala -cp /Users/jono/.m2/repository/com/thoughtworks/paranamer/paranamer/2.0/paranamer-2.0.jar:/Users/jono/.m2/repository/net/liftweb/lift-json/2.0-SNAPSHOT/lift-json-2.0-SNAPSHOT.jar\n    Welcome to Scala version 2.7.7.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_17).\n    Type in expressions to have them evaluated.\n    Type :help for more information.\n\n    scala> import scala.xml._\n    import scala.xml._\n    \n    scala> import net.liftweb.json.JsonAST._\n    import net.liftweb.json.JsonAST._\n    \n    scala> import net.liftweb.json.Printer\n    import net.liftweb.json.Printer\n    \n    scala> import net.liftweb.json.Xml\n    import net.liftweb.json.Xml\n    \n    scala> \n    \n    scala> val example1 = <word term="example" self="http://localhost:8080/word/example" available="true">content</word>\n    example1: scala.xml.Elem = <word self="http://localhost:8080/word/example" term="example" available="true">content</word>\n    \n    scala> val expected1 = """{"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}"""\n    expected1: java.lang.String = {"word":{"word":"content","self":"http://localhost:8080/word/example","term":"example","available":"true"}}\n    \n    scala> val got1 = Printer.compact(render(Xml.toJson(example1)))\n    got1: String = {"word":"content"}\n    \n    scala> \n    '
889,'','Conversion from XML to Json AST is wrong\nDuring conversion from xml to Json AST (using XML.toJson method) no JInt, JDouble and JBool types are created. Only JString.\nThat makes problems when serializing object with:\n  Xml.toXml(Extraction.decompose(object))\nand trying to deserialize it with:\n  Extraction.extract(XML.toJson(xml), typeInfo)'
464,'dpp','textile parser fails for \'?\' in urls\nwhen trying to parse an url (e.g. "video link":http://www.youtube.com/watch?v=FclcMfzjwug) with a question mark, the parser can\'t create a proper <a/>'
747,'dpp','Using 2.8.1, multiple head script tags are generated for the same source\nUsing 2.7.7, the following only emits one script tag\n\n def howdy(in:NodeSeq):NodeSeq = <head>\n    <script src="stuff"/>\n    <script src="stuff"/>\n  </head>\n\nbut with 2.8.1, two script tags are emitted'
181,'dchenbecker','Add ajaxEditable method to SHtml\nPer http://groups.google.com/group/liftweb/browse_thread/thread/7970997492e238c0/fa8a3635eba7575f?lnk=gst&q=ajaxeditable#fa8a3635eba7575f'
1030,'dpp','CSS Selector Transforms. Allow "#foo [attribte-]" \nWith "#foo [attribute+]" selector we are able to append values to an attribute.\nJust like that with "#foo [attribute-]" remove value from an attribute.\n\nExample:\n\n1. \nHTML: <span class="foo andOther" />\nLift code: ".foo [class-]" #> "andOther"  \nResult:  <span class="foo" />\n\n\n2.\nHTML: <span id="myElem" class="foo" />\nLift code: "#myElem [class-]" #> "foo"\nResult: <span id="myElem" />\n\n3.\nHTML: <span id="myElem" class="foo" />\nLift code: "#myElem [class-]" #> "nonExistedClass"\nResult: <span id="myElem" class="foo" />\n\nThanks so much\n'
605,'dpp','Enhance Menu DSL to support WikiStuff style Locs\nMake it very easy to create a Loc for a particular type with query parameters being part of the path (e.g., /foo/bar/44)'
39,'dpp','Make sure that all imports are _root_ and that Lift can compile with some net.java libraries in the path\n'
322,'pr1001','Upgrade the Flot lift-widget to 0.6\nThe current version of Flot is 0.4.  The new version has some slight differences in describing the way to draw series and includes plugin functionality.\r\n\r\nhttp://code.google.com/p/flot/'
888,'dpp','Screen/Wizard generating duplicate notices\nLiftScreen/Wizard are generating duplicate notices, see this http://groups.google.com/group/liftweb/browse_thread/thread/55771148722622f3/b58a4272a2ccb4e6|thread .'
1171,'indrajitr','lift-json paranamer should be upgraded to 2.4 to avoid NPE under heavy load\nIn paranamer 2.4 the following issue is fixed: http://jira.codehaus.org/browse/PARANAMER-19 which occurs under gc action.\nTherefore I suggest to upgrade.'
463,'mariusdanciu',"Change order of render and fixedRender in CometActor\nHave the fixedRender output placed before render's.\n\nFrom http://groups.google.com/group/liftweb/browse_thread/thread/bca0eb2f29a1534b"
746,'jeppenejsum','Add a link to the github source to demo.liftweb.net\n'
180,'indrajitr',"cleanup vscaladoc settings\nMost packages don't have the right baseUri for scaladoc. They need to be set up on a per package basis via packageLinkDefs system property as expected by vscaladoc.\r\n"
1029,'dpp','Mailer addresses should support optional personal name\nCan you add an optional personal name to the constructors of all all Mailer address types? It should then be passed as the 2nd parameter to the javax.mail.internet.InternetAddress constructor during the implicit conversion. Thanks\n\nhttps://groups.google.com/d/topic/liftweb/1dv1DD7UwAE/discussion'
604,'dpp',"object SecurityHelpers doesn't extend the trait\nTitle sez it all"
38,'',"scala.MatchError: Index(Array(IndexField(NULL), IndexField(NULL)))\nFor the last couple of days I get the MatchErro on boot of ESME (see below for full stack trace).\r\n\r\nI guess this is related to the following commit, although I verified that dchenbecker's fix on 20 July is updated on my system, and the error persists:\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/722c75462e400a4c\r\n\r\nWe are using Lift 1.1-SNAPSHOT. This is ESME constructs the index:\r\n\r\n  override def dbIndexes = Index(user, message) :: super.dbIndexes\r\n\r\nFull stack trace follows:\r\n\r\nscala.MatchError: Index(Array(IndexField(NULL), IndexField(NULL)))\r\n        at net.liftweb.mapper.Schemifier$$anonfun$net$liftweb$mapper$Schemifier$$ensureIndexes$2.apply(Schemifier.scala:266)\r\n        at net.liftweb.mapper.Schemifier$$anonfun$net$liftweb$mapper$Schemifier$$ensureIndexes$2.apply(Schemifier.scala:261)\r\n        at scala.List.foreach(List.scala:841)\r\n        at net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$ensureIndexes(Schemifier.scala:260)\r\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$3.apply(Schemifier.scala:62)\r\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$3.apply(Schemifier.scala:62)\r\n        at scala.List.foldLeft(List.scala:1066)\r\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:62)\r\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.scala:54)\r\n        at net.liftweb.mapper.DB$.use(DB.scala:317)\r\n        at net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:53)\r\n        at net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:36)\r\n        at bootstrap.liftweb.Boot.boot(Boot.scala:71)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Unknown Source)\r\n        at net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:408)\r\n        at net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:406)\r\n        at net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:1096)\r\n        at net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:1096)\r\n        at net.liftweb.util.Full.map(Box.scala:330)\r\n        at net.liftweb.http.DefaultBootstrap$.boot(LiftRules.scala:1096)\r\n        at net.liftweb.http.LiftFilter.bootLift(LiftServlet.scala:556)\r\n        at net.liftweb.http.LiftFilter.init(LiftServlet.scala:530)\r\n        at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)\r\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\r\n        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:653)\r\n        at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)\r\n        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1239)\r\n        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)\r\n        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:466)\r\n        at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)\r\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\r\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\r\n        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)\r\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\r\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\r\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\r\n        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\r\n        at org.mortbay.jetty.Server.doStart(Server.java:222)\r\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\r\n        at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)\r\n        at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)\r\n        at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)\r\n        at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:210)\r\n        at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)\r\n        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:512)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:482)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)\r\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)\r\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)\r\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Unknown Source)\r\n        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\r\n        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\r\n        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\r\n        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)\r\n"
321,'mariusdanciu',"HTTP Authentication is bypassed when using a custom context\nWhen setting a custom context Lift's HTTP authentication is disabled. Already discussed with Marius off-list. "
1170,'','JSON Parsing can\'t cope with escaped double quote in keys\nThe problem has been observed in 2.4-M4 and 2.4-M5.\nThe following code: \n<pre><code>\n @Test\n  def shouldParseEscapedStringAsKey {\n    val testInput = """{\n        "a\\"":"value"\n    }\n    """\n    import net.liftweb.json.JsonParser._\n    parse(testInput);\n  }\n</code></pre>\n\nyields the following exception:\n<pre><code>\nnet.liftweb.json.JsonParser$ParseException: unknown token v\nNear: {\n        "a\\"":"value"\n    }\n    '
462,'','Make Logger and Loggable members protected\nCurrently _Loggable.logger_ is public and so are the _Logger_ members. This "pollutes" all types these traits are mixed in, because their public members will become part of the public API.'
179,'dpp','MappedString.valUnique should return one FieldError\nCurrently valUnique maps each match it found to a FieldError, but \r\nshould probably return one FieldError regardless of how many matches \r\nit finds. '
1028,'davewhittaker',"Squeryl/Record does not support Squeryl's Optimistic trait\nSee this thread: https://groups.google.com/d/topic/liftweb/_NPjLo63oQE/discussion"
603,'dpp','The find method in Actors consumes stack space\nMake it not consume stack space.'
37,'','Oracle: Invalid column type\nI just tried to run the todo app. \r\n(http://liftweb.net/docs/getting_started/mod_master.html) against our Oracle (10.2) database. I used Oracle\'s SQLDeveloper to confirm that the tables had been created and had the right columns. However, when I tried to "Sign Up" in the todo app., I got this stuff right in the browser (nothing in the log): \r\nException occured while processing /user_mgt/sign_up \r\nMessage: java.sql.SQLException: Invalid column type\r\n\r\nMore details about this exception can be found here:\r\n<http://groups.google.com/group/liftweb/browse_thread/thread/9adaf97d0ccb1fbd>\r\n\r\nI\'m using Lift 1.0.\r\n\r\n/Jon'
320,'indrajitr','Internationalizing missing strings in ProtoUser\nThe patch is here: http://gist.github.com/293435 and the discussion here: http://groups.google.com/group/liftweb/browse_thread/thread/7c31bc68e33bf0e0/731da62cfc406821'
886,'dpp','Support isIPhone with apple-mobile-web-app-capable meta tag\nIf your Lift web app sets the <meta name="apple-mobile-web-app-capable" content="yes" /> meta tag, the iPhone browser user agent changes from something like:\n\nMozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\n\nto\n\nMozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Mobile/8C148\n\nThis means that isIPhone returns false (with Lift 2.2)\n\nThis appears to be a pattern with Apple devices:\nhttp://stackoverflow.com/questions/2153877/what-is-the-ipad-user-agent/3330941#3330941\n\n'
1169,'','Bug in JSON extraction under Scala 2.9.1\nUnder Scala 2.9.1, extracting JSON to some case classes fails when it succeeded under 2.8.1.\n\nI suspect this may be due to a change in the scalap libraries.\n\nThe attached file works when run under Scala 2.8.1 and Lift 2.4-M5. When run under Scala 2.9.1 and Lift 2.4-M5, however, it produces the following exception:\n\n\n<pre><code>net.liftweb.json.MappingException: unknown error\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:45)\n\tat net.liftweb.json.JsonAST$JValue.extract(JsonAST.scala:300)\n\tat ExtractBug$.main(ExtractBug.scala:11)\n\tat ExtractBug.main(ExtractBug.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\nCaused by: java.lang.IndexOutOfBoundsException: 1\n\tat scala.collection.LinearSeqOptimized$class.apply(LinearSeqOptimized.scala:51)\n\tat scala.collection.immutable.List.apply(List.scala:45)\n\tat net.liftweb.json.ScalaSigReader$.findPrimitive$1(ScalaSig.scala:69)\n\tat net.liftweb.json.ScalaSigReader$.findArgType(ScalaSig.scala:75)\n\tat net.liftweb.json.ScalaSigReader$.readConstructor(ScalaSig.scala:26)\n\tat net.liftweb.json.Meta$Reflection$.term$1(Meta.scala:275)\n\tat net.liftweb.json.Meta$Reflection$.typeParameters(Meta.scala:293)\n\tat net.liftweb.json.Meta$.mkContainer$1(Meta.scala:107)\n\tat net.liftweb.json.Meta$.fieldMapping$1(Meta.scala:136)\n\tat net.liftweb.json.Meta$.mkContainer$1(Meta.scala:106)\n\tat net.liftweb.json.Meta$.fieldMapping$1(Meta.scala:138)\n\tat net.liftweb.json.Meta$.toArg$1(Meta.scala:154)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1$$anonfun$apply$1.apply(Meta.scala:98)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1$$anonfun$apply$1.apply(Meta.scala:97)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1.apply(Meta.scala:97)\n\tat net.liftweb.json.Meta$$anonfun$constructors$1$1.apply(Meta.scala:96)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n\tat scala.collection.immutable.List.foreach(List.scala:45)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n\tat scala.collection.immutable.List.map(List.scala:45)\n\tat net.liftweb.json.Meta$.constructors$1(Meta.scala:96)\n\tat net.liftweb.json.Meta$$anonfun$mappingOf$1.apply(Meta.scala:168)\n\tat net.liftweb.json.Meta$$anonfun$mappingOf$1.apply(Meta.scala:160)\n\tat net.liftweb.json.Meta$Memo.memoize(Meta.scala:197)\n\tat net.liftweb.json.Meta$.mappingOf(Meta.scala:160)\n\tat net.liftweb.json.Extraction$.mkMapping$1(Extraction.scala:193)\n\tat net.liftweb.json.Extraction$.net$liftweb$json$Extraction$$extract0(Extraction.scala:198)\n\tat net.liftweb.json.Extraction$.extract(Extraction.scala:42)\n\tat net.liftweb.json.JsonAST$JValue.extract(JsonAST.scala:300)\n\tat ExtractBug$.main(ExtractBug.scala:11)\n\tat ExtractBug.main(ExtractBug.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\n</code></pre>\n'
461,'dpp','JSON  extractor/unapply for JsCmd\nMake a bunch of unapply helpers for parsing the new Json ajax stuff'
744,'','Comet Chat app stopped working with version 2.2-SNAPSHOT\nI made a sample Lift Chat application from liftweb.net page.\n\nIt works well with Lift 2.1 release. Today I switched to 2.2-SNAPSHOT (maven) and chat functionality stopped working with following error:\n\n<pre><code>\nError processing snippet comet. \nReason: Comet Component did not response to requests \nnet.liftweb.builtin.snippet.Comet$$anonfun$buildComet$1$$anonfun$apply$2.apply(Comet.scala:74)\nnet.liftweb.builtin.snippet.Comet$$anonfun$buildComet$1$$anonfun$apply$2.apply(Comet.scala:59)\nnet.liftweb.common.Full.map(Box.scala:398)\nnet.liftweb.builtin.snippet.Comet$$anonfun$buildComet$1.apply(Comet.scala:58)\nnet.liftweb.builtin.snippet.Comet$$anonfun$buildComet$1.apply(Comet.scala:52)\nnet.liftweb.common.Full.map(Box.scala:398)\nnet.liftweb.builtin.snippet.Comet$.buildComet(Comet.scala:52)\nnet.liftweb.builtin.snippet.Comet$.render(Comet.scala:37)\nnet.liftweb.builtin.snippet.Comet$$anonfun$dispatch$1$$anonfun$apply$1.apply(Comet.scala:30)\nnet.liftweb.builtin.snippet.Comet$$anonfun$dispatch$1$$anonfun$apply$1.apply(Comet.scala:30) XML causing this error:\n<lift:comet type="Chat" xmlns:lift="http://liftweb.net/">\n      <ul id="ul_dude">\n        <chat:line>\n          <li>\n            <chat:msg></chat:msg>\n            <chat:btn></chat:btn>\n          </li>\n        </chat:line>\n      </ul>\n      <lift:form>\n        <chat:input></chat:input>\n        <input value="Chat" type="submit"></input>\n      </lift:form>\n    </lift:comet>\n</code></pre>\n\n'
178,'','ManyToMany should skip broken joins rather than call Predef.error\nCurrently MappedManyToMany.children throws an error when, in the process of looking up the child elements via the join table, a join found to be broken (no child element for it).\r\nInstead, it should use flatMap to skip broken joins. This requires some conversion of indexes between the join list and the children list.\r\n'
1027,'','ManyToMany should not use FieldFinder yet because it loads contents eagerly\nRevert the change to ManyToMany.scala with #1018\nCurrent behavior can cause an infinite loop (besides unnecessary memory usage).\n'
602,'dpp',"Alternate names for test_cond conditions\n<lift:test_cond.loggedin/> seems slightly inconsistent with other snippet names, which can be camel or snake-case.\n\nIt would be nice if this and other conditions could be referenced like <lift:test_cond.logged_in/> or <lift:test_cond.loggedIn/> to make their use consistent with other snippet invocations. Though, if it's a matter of choosing only one, then I'd much rather have logged_in, as that seems to be the style most commonly used when invoking snippets."
36,'dpp','Problem with Db.runQuery and NUMERIC results\n\r\nI\'m using adhoc queries and I\'m running into a problem where the results\r\nof aggregate functions get mapped to integers: \r\n\r\nI have this\r\n\r\n val (_,result) = DB.runQuery("SELECT AVG(vt.fuel_efficiency), vt.fuel_type, vt.category FROM "+\r\n                    "vehicles v JOIN vehicle_types vt ON v.vehicle_type_id= vt.id "+\r\n                    "WHERE v.account_id=? "+\r\n                    "GROUP BY vt.fuel_type, vt.category "+\r\n                    "ORDER BY vt.fuel_type, vt.category",\r\n                    List(User.currentUser.open_!.account.is))\r\n\r\nin Postgres, the first column is returned as NUMERIC, ie with decimals, but in \r\n\r\nprivate def asString(pos: Int, rs: ResultSet, md: ResultSetMetaData) \r\n\r\nwe have this: \r\n\r\ncase BIGINT | INTEGER | DECIMAL | NUMERIC | SMALLINT | TINYINT =>\r\nrs.getLong(pos).toString\r\n  \r\nwhich seems wrong.\r\n\r\n>\r\n> So... numeric should be rs.getDouble(pos).toString ?\r\n\r\nYes, or BigDecimal. Same goes for DECIMAL I think. "The recommended Java\r\nmapping for the DECIMAL and NUMERIC types is java.math.BigDecimal" [1]\r\n\r\n[1] http://java.sun.com/j2se/1.5.0/docs/guide/jdbc/getstart/mapping.html\r\n'
319,'dpp','Control characters in input can lead to Denial of Service attacks\nControl characters in user input can lead that is displayed in Lift can lead to unparsible pages that contain that input.  The fix is to filter all Text fields on output to insure they do not contain illegal characters.'
885,'dpp','Firefox hammers restarted server with Comet messages\nFirefox queues up comet requests while a server is down so the moment the server comes back up it\'s hammered with comet requests, all of which instantiate a new client and register with the server.\n\n\nTo reproduce create basic comet client actor and server, and have the client log its registration message. Hit a page using this comet actor, then shut down the server. Restart the server, and the logs will be full of registration messages that the browser helpfully queued up for you.\n\n class MessageClient extends CometActor with CometListener with Loggable {\n     logger.debug(S.request.map(theRequest => theRequest.headers + " path " + theRequest.hostAndPath))\n  def registerWith = MessageServer\n\n  override def lowPriority = {\n    case x =>{\n        logger.info("$$$$$$ GOT MESSAGE: " + x + "$$$$$$$")\n    }\n  }\n\n  def render = "* *" #> "MessageClient"\n\n}\n\nobject MessageServer extends LiftActor with ListenerManager with Loggable{\n\n  def createUpdate = "REGISTERED WITH MESSAGE ADMIN"\n\n  override def lowPriority = {\n    case x => updateListeners(x)\n  }\n}'
1168,'davewhittaker',"Squeryl CRUDify doesn't properly use transactions during rewrites\nSee https://groups.google.com/d/topic/liftweb/5lgMX_HKhoU/discussion"
460,'jeppenejsum','CRUDify doesn\'t filter hidden fields\nHi! I found small bug in CRUDify trait.. It doesn\'t filter hidden\nfields of entity when generates body of list..\n\n---\n .../main/scala/net/liftweb/mapper/CRUDify.scala    |    2 +-\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\ndiff --git a/framework/lift-persistence/lift-mapper/src/main/scala/net/\nliftweb/mapper/CRUDify.scala b/framework/lift-persistence/lift-mapper/\nsrc/main/scala/net/liftweb/mapper/CRUDify.scala\nindex cb0db2c..69a3ed2 100644\n--- a/framework/lift-persistence/lift-mapper/src/main/scala/net/\nliftweb/mapper/CRUDify.scala\n+++ b/framework/lift-persistence/lift-mapper/src/main/scala/net/\nliftweb/mapper/CRUDify.scala\n@@ -489,7 +489,7 @@ trait CRUDify[KeyType, CrudType <:\nKeyedMapper[KeyType, CrudType]] {\n      def doRows(in: NodeSeq): NodeSeq =\n      list.take(20).flatMap{\n        c =>\n-        def doRowItem(in: NodeSeq): NodeSeq = fieldsForList.map(ffl\n=> getActualField(c, ffl)).flatMap(\n+        def doRowItem(in: NodeSeq): NodeSeq =\nfieldsForList.filter(_.field.dbDisplay_?).map(ffl => getActualField(c,\nffl)).flatMap(\n          f => bind("crud", in, "value" -> f.asHtml))\n\n        bind("crud", in , "row_item" -> doRowItem _,\n--\n1.6.3.3'
743,'eltimn','Rename asJson and fromJson\nRename asJson and fromJson as they are causing conflicts with asJSON and fromJSON on case-insensitive file systems.'
177,'aboisvert','n.l.http.XmlResponse should take a code: Int\nPretty simple.  I want to be able to send XmlResponses with a HTTP code other than 200.'
1026,'','Make MappedString.apply(null) not require a type annotation\nCurrently MappedString still has the deprecated apply(Box[String]), which means that apply(null) is ambiguous; you have to write apply(null: String). By moving apply(Box[String]) into a supertrait and apply(String) in MappedString directly, apply(null) will work.\n'
601,'','Calendar widgets display single-didget times incorrectly\nWhen viewing calendars, times with single-didget minutes are displayed as "3:0" rather than "3:00". I suspect the issue is this line in CalendarUtils.scala:\n\n  private lazy val timeFormatter = new SimpleDateFormat("h:m")\n\nPerhaps that should be "h:mm"?'
35,'timperrett',"lift 1.0 uninstaller has HOSED mvn for all mvn on box even new versions on OS X javarebel\nThis really blows. First I got a javarebel expiration.  Then I ran the uninstaller for lift.  Now I can't run mvn - maven - from the command line.  I get this:\r\n\r\n./mvn \r\nError opening zip file: /Applications/liftweb-1.0/java-rebel/javarebel.jar\r\nError occurred during initialization of VM\r\nagent library failed to init: instrument\r\nAbort trap\r\n\r\nHow can I fix this!!!!!  I need to use mvn.  I have work to do!!!!"
318,'','Tomcat - PocketChange - app startup\nhello: I\'m trying to run thru the example in the book for "PocketChange" app. under Tomcat instead of Jetty and I keep getting the following error: (notice the SEVERE debugs. It keeps repeating)\r\n\r\nLatest code taken from the GIT repository on Feb 01, 2010.\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nFeb 1, 2010 11:48:04 AM org.apache.coyote.http11.Http11Protocol init\r\nINFO: Initializing Coyote HTTP/1.1 on http-80\r\nFeb 1, 2010 11:48:04 AM org.apache.catalina.startup.Catalina load\r\nINFO: Initialization processed in 389 ms\r\nFeb 1, 2010 11:48:04 AM org.apache.catalina.core.StandardService start\r\nINFO: Starting service Catalina\r\nFeb 1, 2010 11:48:04 AM org.apache.catalina.core.StandardEngine start\r\nINFO: Starting Servlet Engine: Apache Tomcat/6.0.24\r\nINFO - CREATE TABLE users (firstname VARCHAR(32) , lastname VARCHAR(32) , email VARCHAR(48) , locale VARCHAR(16) , timezone VARCHAR(32) , password_pw\r\nVARCHAR(48) , password_slt VARCHAR(20) , validated BOOLEAN , superuser BOOLEAN , uniqueid VARCHAR(32) , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE tag (account BIGINT , name VARCHAR(64) , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE account (externalaccount VARCHAR(300) , balance DECIMAL(16,2) , is_public BOOLEAN , name VARCHAR(100) , id BIGINT NOT NULL AUTO_IN\r\nCREMENT , description VARCHAR(300) , owner BIGINT)\r\nINFO - CREATE TABLE accountadmin (administrator BIGINT , account BIGINT , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE accountviewer (viewer BIGINT , account BIGINT , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE accountnote (note LONGVARCHAR , account BIGINT , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE expense (dateof TIMESTAMP , amount DECIMAL(16,2) , description VARCHAR(100) , notes VARCHAR(1000) , account BIGINT , serialnumber\r\nBIGINT , currentbalance DECIMAL(16,2) , receiptmime VARCHAR(100) , receipt BINARY , id BIGINT NOT NULL AUTO_INCREMENT)\r\nINFO - CREATE TABLE expensetag (expense BIGINT , id BIGINT NOT NULL AUTO_INCREMENT , tag BIGINT)\r\nINFO - CREATE INDEX users_email ON users ( email )\r\nINFO - CREATE INDEX users_uniqueid ON users ( uniqueid )\r\nINFO - CREATE INDEX users_id ON users ( id )\r\nINFO - CREATE INDEX tag_account ON tag ( account )\r\nINFO - CREATE INDEX tag_id ON tag ( id )\r\nINFO - CREATE INDEX account_id ON account ( id )\r\nINFO - CREATE INDEX account_owner ON account ( owner )\r\nINFO - CREATE INDEX accountadmin_administrator ON accountadmin ( administrator )\r\nINFO - CREATE INDEX accountadmin_account ON accountadmin ( account )\r\nINFO - CREATE INDEX accountadmin_id ON accountadmin ( id )\r\nINFO - CREATE INDEX accountviewer_viewer ON accountviewer ( viewer )\r\nINFO - CREATE INDEX accountviewer_account ON accountviewer ( account )\r\nINFO - CREATE INDEX accountviewer_id ON accountviewer ( id )\r\nINFO - CREATE INDEX accountnote_account ON accountnote ( account )\r\nINFO - CREATE INDEX accountnote_id ON accountnote ( id )\r\nINFO - CREATE INDEX expense_account ON expense ( account )\r\nINFO - CREATE INDEX expense_id ON expense ( id )\r\nINFO - CREATE INDEX expensetag_expense ON expensetag ( expense )\r\nINFO - CREATE INDEX expensetag_id ON expensetag ( id )\r\nINFO - CREATE INDEX expensetag_tag ON expensetag ( tag )\r\nINFO - Bootstrap up\r\nFeb 1, 2010 11:48:09 AM org.apache.coyote.http11.Http11Protocol start\r\nINFO: Starting Coyote HTTP/1.1 on http-80\r\nFeb 1, 2010 11:48:09 AM org.apache.jk.common.ChannelSocket init\r\nINFO: JK: ajp13 listening on /0.0.0.0:8009\r\nFeb 1, 2010 11:48:10 AM org.apache.jk.server.JkMain start\r\nINFO: Jk running ID=0 time=0/31  config=null\r\nFeb 1, 2010 11:48:10 AM org.apache.catalina.startup.Catalina start\r\nINFO: Server startup in 5455 ms\r\nFeb 1, 2010 11:48:19 AM org.apache.catalina.loader.WebappClassLoader modified\r\nINFO:     Additional JARs have been added : \'mail-1.4.jar\'\r\nFeb 1, 2010 11:48:19 AM org.apache.catalina.core.StandardContext reload\r\nINFO: Reloading this Context has started\r\nFeb 1, 2010 11:48:20 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc\r\nSEVERE: A web application registered the JBDC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a me\r\nmory leak, the JDBC Driver has been forcibly unregistered.\r\nFeb 1, 2010 11:48:20 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: A web application appears to have started a thread named [Thread-12] but has failed to stop it. This is very likely to create a memory leak.\r\nFeb 1, 2010 11:48:20 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@16477d9]) and a value of type [\r\nnet.liftweb.util.Full] (value [Full(java.util.PropertyResourceBundle@f864fe)]) but failed to remove it when the web application was stopped. To preven\r\nt a memory leak, the ThreadLocal has been forcibly removed.\r\nFeb 1, 2010 11:48:20 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@1ae9aaa]) and a value of type [\r\nscala.collection.mutable.HashMap] (value [Map()]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLo\r\ncal has been forcibly removed.\r\nINFO - Bootstrap up\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.loader.WebappClassLoader modified\r\nINFO:     Additional JARs have been added : \'mail-1.4.jar\'\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.core.StandardContext reload\r\nINFO: Reloading this Context has started\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc\r\nSEVERE: A web application registered the JBDC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a me\r\nmory leak, the JDBC Driver has been forcibly unregistered.\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: A web application appears to have started a thread named [Thread-22] but has failed to stop it. This is very likely to create a memory leak.\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@1b493c6]) and a value of type [\r\nnet.liftweb.util.Full] (value [Full(java.util.PropertyResourceBundle@51e67c)]) but failed to remove it when the web application was stopped. To preven\r\nt a memory leak, the ThreadLocal has been forcibly removed.\r\nFeb 1, 2010 11:48:31 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@f2da21]) and a value of type [s\r\ncala.collection.mutable.HashMap] (value [Map()]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLoc\r\nal has been forcibly removed.\r\nINFO - Bootstrap up\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.loader.WebappClassLoader modified\r\nINFO:     Additional JARs have been added : \'mail-1.4.jar\'\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.core.StandardContext reload\r\nINFO: Reloading this Context has started\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc\r\nSEVERE: A web application registered the JBDC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a me\r\nmory leak, the JDBC Driver has been forcibly unregistered.\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: A web application appears to have started a thread named [Thread-32] but has failed to stop it. This is very likely to create a memory leak.\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@1435686]) and a value of type [\r\nnet.liftweb.util.Full] (value [Full(java.util.PropertyResourceBundle@1e58565)]) but failed to remove it when the web application was stopped. To preve\r\nnt a memory leak, the ThreadLocal has been forcibly removed.\r\nFeb 1, 2010 11:48:42 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@198dc19]) and a value of type [\r\nscala.collection.mutable.HashMap] (value [Map()]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLo\r\ncal has been forcibly removed.\r\nINFO - Bootstrap up\r\nFeb 1, 2010 11:48:54 AM org.apache.catalina.loader.WebappClassLoader modified\r\nINFO:     Additional JARs have been added : \'mail-1.4.jar\'\r\nFeb 1, 2010 11:48:54 AM org.apache.catalina.core.StandardContext reload\r\nINFO: Reloading this Context has started\r\nFeb 1, 2010 11:48:54 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc\r\nSEVERE: A web application registered the JBDC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a me\r\nmory leak, the JDBC Driver has been forcibly unregistered.\r\nFeb 1, 2010 11:48:54 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: A web application appears to have started a thread named [Thread-42] but has failed to stop it. This is very likely to create a memory leak.\r\nFeb 1, 2010 11:48:54 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@1e26d42]) and a value of type [\r\nscala.collection.mutable.HashMap] (value [Map()]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLo\r\ncal has been forcibly removed.\r\nINFO - Bootstrap up\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.loader.WebappClassLoader modified\r\nINFO:     Additional JARs have been added : \'mail-1.4.jar\'\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.core.StandardContext reload\r\nINFO: Reloading this Context has started\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc\r\nSEVERE: A web application registered the JBDC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a me\r\nmory leak, the JDBC Driver has been forcibly unregistered.\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: A web application appears to have started a thread named [Thread-52] but has failed to stop it. This is very likely to create a memory leak.\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@141e00a]) and a value of type [\r\nnet.liftweb.util.Full] (value [Full(java.util.PropertyResourceBundle@1dbb12b)]) but failed to remove it when the web application was stopped. To preve\r\nnt a memory leak, the ThreadLocal has been forcibly removed.\r\nFeb 1, 2010 11:49:05 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap\r\nSEVERE: A web application created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@4c8422]) and a value of type [s\r\ncala.collection.mutable.HashMap] (value [Map()]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLoc\r\nal has been forcibly removed.\r\nINFO - Bootstrap up'
884,'dpp','Designer friendly templates repeat attributes under certain circumstances\nI\'ve created a small project to illustrate, you can clone it from https://iradix@github.com/iradix/attrbug.git and use sbt jetty-run.  The bug appears on the index page where "selected" is applied to the class attribute of each anchor twice.  In creating the test case I realized that this only happens if I modify both the id and class attribute of the parent element ".question".\n\n".question" #> elements.map(value => {\n\t\t\t*".question [id]" #> ("question-" + value) &\n\t\t\t".question [class]" #> ("question-" + value) &*\n\t\t\t".L" #> anchor("L", value) &\n\t\t\t".U" #> anchor("U", value) &\n\t\t\t".D" #> anchor("D", value)\n\t\t})\n\nIf I remove either of those statements the attribute does not seem to be repeated.'
459,'mariusdanciu','Comet updates delayed for full long-poll duration\nIt is possible for the ContinuationActor to call resume request before the main request thread has actually been suspended.  This causes the long-poll to run for its full duration and events get delayed by the full Comet timeout.  See http://groups.google.com/group/liftweb/browse_thread/thread/2c56ac9187a67d1/f0b69eb35ce3674b for more discussion and info on reproducing.'
742,'dpp','Adding convenience field functions to LiftScreen and Wizard\nSee https://mail.google.com/mail/?shva=1#starred/12c73ccb98d03faf\n\nAdding "mezzanine" functions for creating checkboxes, text area, password fields to LiftScreen and Wizard.'
176,'dpp','Context rewriting exclusion does not apply to JsCmds.RedirectTo\nFrom JsCommands.scala\n\n    case class RedirectTo(where: String) extends JsCmd {\n      private val context = S.contextPath\n\n      def toJsCmd = "window.location = " + S.encodeURL(context + where).encJs + ";"\n    }\n\nIt always writes the context in, so the redirect output to the browser has the context path on it even if where is excluded from context rewriting.\n\n'
1025,'dpp','Multiple style attributes for menus\nI am using jquery ui which provides many styles you can apply to elements.\n\nFor my menu I would like to set the style for the elements to be something like this:\n   class="fg-button ui-state-default fg-button-icon-solo ui-corner-all ui-state-active"\n\nHow do I do that with the menu defined like this:\n   <span class="lift:Menu.builder "></span>\n\n-- on the group David replied:\n\nI don\'t think it\'s possible.  It\'s looking like there\'s no way to get the attribute namespaces with the designer friendly snippet invocation.\n\nPlease open a ticket and assign it to me for 2.4-M2 and reference this thread.'
600,'','Add mechanism to dynamically update calendars\nI would like to be able to update calendars dynamically from a comet actor, adding/removing items without a full page rerender. In my current actor I have:\n\n  private def addCalendarItems(items:List[CalendarItem]) = {\n    JE.Call("CalendarMonthView.buildMonthViewCalendars", CalendarUtils.toJSON(items))\n  }\n\nUnfortunately, after further testing, that doesn\'t seem to work. My actor receives an item, but doesn\'t appear to update the page. The JS I get back includes &quot; around all of the item strings, which I suspect shouldn\'t be present in an expression given to partialUpdate().\n\nIt would be nice to have an addCalendarItems/removeCalendarItems method on each calendar view. Maybe even an updateCalendarItems method that either replaces each item, or that calls any calendar JS that may exist for changing existing items.'
34,'',"JSON strings should be enclosed in double quotes\nCurrently, lift appears to generate JSON string values enclosed in single quotes such as ['hello', 'world']. Although this is valid for JavaScript strings, the same is not true for JSON strings, which must (for strict parsers) always be encloded in double quotes.\n\nThis occurred with lift 1.0 and server generated JSON via the JsonResponse class."
317,'','Extra space in Menu.builder result\nExtra space between `li` tag and `a` tag also `li` and `span` tag\nResult:\n    <ul class="menu"><li> <a href="/about">About</a></li><li> <a href="/shop">Shop</a></li><li class="current"> <span>Artists</span></li><li> <a href="/contact">Contact</a></li></ul>\nIn default.html:\n    <lift:Menu.builder ul:class="menu" li_item:class="current" />\nIn Boot.scala:\n    // Build SiteMap\n    val entries =\n    Menu(Loc("Home", List("index"), "Home", Hidden)) ::\n    Menu(Loc("About", List("about"), "About")) ::\n    Menu(Loc("Shop", List("shop"), "Shop")) ::\n    Menu(Loc("Artists", List("artists"), "Artists")) ::\n    Menu(Loc("Contact", List("contact"), "Contact")) ::\n    Nil\n\n    LiftRules.setSiteMap(SiteMap(entries:_*))\n\nVersions:\nLift: 2.0-M1'
883,'eltimn',"Fix @Deprecated in 2 source files\nJObjectField.scala & MongoListField.scala contain the @deprecated scala annotation, incorrectly written (@Deprecated). Lift scaladocs therefore don't mention the deprecation."
1166,'',"Ability to disable/modify default HTTP headers in RestHelper\nI'm using RestHelper as a replacement for ImageServlet. My ImageServer RestHelper is serving images which should be cacheable. Right now there is no way how to specify that default HTTP headers should not be added for RestHelper responses.\n\nOne can disable default HTTP headers globally, which is not flexible enouch.\n\nSee also this discussion on lift google groups: http://groups.google.com/group/liftweb/browse_thread/thread/94e46f3993dcc0d8/6448bba962a5c05f?lnk=gst&q=resthelper+headers#6448bba962a5c05f"
458,'dpp','Nicer DSL for creating menus\nMenu creation is verbose... make a nicer DSL for creating menus.'
741,'dpp','Multiple css selector rules should match multiple classes on element\nOnly the first declared class is picked up.\n\n\xa0 \xa0val xml = <a class="link field" href="#">link text</a>\n\xa0 \xa0val func =\n\xa0 \xa0".field [id]" #> "fieldId" &\n\xa0 \xa0 \xa0".link [href]" #> "http://example.org"\n\n\n\xa0 \xa0println(func.apply(xml)) ml))\n\nresults in\n\n<a href="http://example.org" class="link field">link text</a>\n\nreverse the class declarations and you get\n\n<a id="fieldId" href="#" class="field link">link text</a>\n\nYou should be able to match multiple rules to the multiple classes, it isn\'t expected that only the first declared class will match if there are multiple rules.\n\nThe output for the above should be\n<a href="http://example.org" id="fieldId" class="link field">link text</a> '
175,'','Contribute German lift-core.properties\n'
1024,'dpp','Tweaks to Javascript Responses with RestHeloper\n'
599,'','[2.1-SNAPSHOT Scala 2.8]AjaxButton : JsCmd need to return false to execute the command\nI just moved from a custom Lift 2.0 compiled with scala 2.8 to the official Lift 2.1-Snapshot for Scala 2.8, and none of my ajaxButton are working anymore\n\nI had to change all my code from something like :\n\n<pre><code>\n SHtml.ajaxButton("Configure", () => configure())\n\nprivate def configure() : JsCmd = {\n    Alert("configurePolicy")\n  }\n</code></pre>\n\nto \n<pre><code>\n SHtml.ajaxButton("Configure", () => configure())\n\nprivate def configure() : JsCmd = {\n    Alert("configurePolicy") & JsReturn(JsFalse)\n  }\n</code></pre>\n\nI don\'t know if it\'s a bug or a feature, but now all my action need to finish by a return false.\n'
33,'dpp','Disabling auto-reload on webapp restart\nPrior state:\r\n- local web application server is running\r\n- browser has the application open on some page other than the start page\r\n\r\nTrigger:\r\n- local server restarts, for example due to changed .class files\r\n\r\nCurrent Result:\r\nThe next jQuery request from the open browser window results in the browser being returned to the start page.  This can be problematic during development, because the prior state then often has to be manually reinstated again before work can continue.\r\n\r\nDesired Result:\r\nIt would be great to be able to continue work in the browser without be sent back to the start page again.'
316,'','should use getColumnLabel insead of getColumnName in DB.resultSetToXXX\nhttp://java.sun.com/javase/6/docs/api/java/sql/ResultSetMetaData.html#getColumnLabel(int)'
882,'dchenbecker',"Fix WebSpec's withMods methods to take a function MockHttpServletRequest ⇒ Unit (instead of ... ⇒ A)\nRealized while editing the Mock wiki page that it won't work standalone."
740,'dpp','share an Actor between CometActor and REST with long polling\nCould you please provide example code to demonstrate how to "share an Actor between CometActor and REST with long polling, so you have 1 piece of business logic, but delivery via HTML and delivery via REST."\n\nDavid asked me to open a ticket here so I am doing it.\nI am wondering how to do this and I have no idea if i should do a S.respondAsync{} and call request.suspend somewhere or not... there has to be a better way\n\nThanks a lot for helping'
174,'dpp','form input names change when changing Lift versions\nPlease see thread http://groups.google.com/group/liftweb/browse_thread/thread/1b5f84876b9d16d7\r\n\r\nThanks'
457,'dpp','Enhanced REST wrapper\nBuild a REST wrapper/trait that supports:\n\n* Multiple output formats based on request headers and suffix\n* Lots of helpful implicits gathered from my various REST implementations\n* etc.\n'
598,'dpp','ParamFailure does not work correctly\n1) ~> does not convert from empty \nScaldoc says "Transform an Empty to a ParamFailure with the specified \ntypesafe parameter" \nbut it seems to only be implemented for converting from Failure to \nParamFailure \n\n2) toString() is not implemented \nParamFailures just show up as Failure, which also make it awfully \ntough to debug problems like (1) \n\n3) equals() is not implemented '
32,'','lift-testkit - xml parsing error when processing HttpResponse\nI have a test case which issues http gets/posts to our server running the Innovation Games application. It is our \'stress test\' for the Buy-A-Feature game.   It currently works using an older variant of the lift-testkit library.  When I run it with the current lift-testkit library I get the exception below.\r\n\r\nI have isolated it down to the line in the library which is failing.  Below I list both the working and non-working code.\r\n\r\nTestFramework.scala: line 280 (non-working):\r\n  override lazy val xml = XML.load(new _root_.java.io.ByteArrayInputStream(body))\r\n\r\nTestFramework.scala (working):\r\n    override lazy val xml = {\r\n    try3{\r\n      val s = new String(body, "UTF-8").replaceAll("""\\<\\!.*\\>""","")\r\n      XML.loadString(s)}\r\n\r\nStack Trace/Exception:\r\n\r\nFirst test instance get headers: Map(Content-Length -> List(2711), Expires -> List(Wed, 8 Jul 2009 17:41:35 UTC), Set-Cookie -> List(JSESSIONID=1x0d2w2cmflwg;Path=/), Pragma -> List(no-cache), Server -> List(Jetty(6.1.16)), Content-Type -> List(text/html), X-Lift-Version -> List(1.1-SNAPSHOT), Cache-Control -> List(no-cache; private; no-store; must-revalidate; max-stale=0; post-check=0; pre-check=0; max-age=0))\r\nException in thread "Thread-7" java.io.IOException: Server returned HTTP response code: 503 for URL: http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1290)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:677)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:1315)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:1282)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:283)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.dispatch(XMLDocumentScannerImpl.java:1192)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.next(XMLDocumentScannerImpl.java:1089)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:1002)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)\r\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:395)\r\n\tat scala.xml.parsing.FactoryAdapter.loadXML(FactoryAdapter.scala:292)\r\n\tat scala.xml.parsing.NoBindingFactoryAdapter.loadXML(NoBindingFactoryAdapter.scala:60)\r\n\tat scala.xml.XML$.load(XML.scala:64)\r\n\tat net.liftweb.http.testing.HttpResponse.xml(TestFramework.scala:280)\r\n\tat com.enthiosys.buyafeature.stress_test.TestInstance.runWith(StressTest.scala:66)\r\n\tat com.enthiosys.buyafeature.stress_test.StressTest$$anonfun$main$2$$anon$2.run(StressTest.scala:44)\r\n'
315,'dpp','How overriding of _showAllTemplate to show a limited number of columns\nSee the following discussion for more information.\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e65e50c362282285/ed1b7fb4d9f2ebaf?lnk=gst&q=crudify#ed1b7fb4d9f2ebaf\r\n\r\nJono'
881,'jeppenejsum','Improve Js conversion\n * Better conversion from Numeric to JsExp\n * Make JsArray(List[]) work correctly\n\nDetails here:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/602de79127070b90#\n'
1164,'dpp',"Comet-AJAX requests are not canceled if comet-actor throws exception\nThe exception is correctly handled by the comet-actor's exception-handler, if defined, but the thread processing the comet-request is not cancelled so the AJAX-request hangs until LiftRules.cometProcessingTimeout is reached.\n\nThe comet-actor thread should be canceled after the exception-handler is executed.\n\nSee the example here illustrating the problem: https://github.com/andreak/on-example-cometexceptiontest"
739,'fmpwizard','MetaLDAPProtoUser add field focus on username and password\nThe LDAPProtoUser.scala file has a method \n\noverride def login\n\nwhich binds the user, password fields and submit button.\nIt has a problem because it adds a JsCmds.FocusOnLoad to both, the username and password fields. This results in having the cursor focus on the password, instead of the username.\n\n\nSimple fix:\n\n\n\n        Helpers.bind("user", loginXhtml,\n                    "name" -> (JsCmds.FocusOnLoad(<input type="text" name="username"/>)),\n -                   "password" -> (JsCmds.FocusOnLoad(<input type="password" name="password"/>)),\n                    "submit" -> (<input type="submit" value={S.??("log.in")}/>))\n\n\n        Helpers.bind("user", loginXhtml,\n                    "name" -> (JsCmds.FocusOnLoad(<input type="text" name="username"/>)),\n +                   "password" -> (<input type="password" name="password"/>),\n                    "submit" -> (<input type="submit" value={S.??("log.in")}/>))'
173,'dpp','The current TestKit APIs are hard to use\nCreate alternative APIs that are cleaner and easier to use'
456,'jonifreeman','Improve JSON extraction error message\nThe error message should show which field could not be extracted.'
597,'dchenbecker','Schemifier FK support uses incorrect JDBC API method (FKs generated every time)\nSee \n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e3b10610e95e146\n\nLooks like it should be using getImportedKeys, not getExportedKeys.'
31,'','Add an XHTML validator to Lift\nAdd an XHTML validator to Lift during development and testing modes.'
314,'dpp','Allow thread-local Connection Identerifer resolution\nDB should allow thread-local connection identifier resolution which will allow a given connection identifier (e.g. DefaultConnectionIdentifier) to be associated with a different ConnectionManager.\r\n'
880,'dpp','java.lang.Double.parseDouble may cause infinite loop and is used in Lift codebase for user input\nThe dreaded PHP floating point bug [1] has surfaced in a similar form in Java as well [2]\n\nThe following line of code will result in an infinite loop, effectively hanging your thread: java.lang.Double.parseDouble("2.2250738585072012e-308")\n\nThe Lift codebase relies on java.lang.Double.parseDouble through Helpers.asDouble, which uses Scala\'s toDouble which in turn calls the affected parseDouble method. Discussion: http://groups.google.com/group/liftweb/browse_thread/thread/70278514de0fd39a/ad3a5625622d3531\n\n[1] http://www.pcworld.idg.com.au/article/372418/php_floating_point_bug_crashes_servers/\n[2] http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/'
738,'dchenbecker',"LDAP module returns CommunicationException on timeout\nThe LDAP server we use at work seems to disconnect my lift application after one or two minutes. This produces a stack trace if it has been more than two minutes between login attempts.\n\nWhat I do:\n1- Start my lift app\n2- Try lo login\n3- It all works ok\n4- if right away I do many more logout and logins, it all works fine, but once I let the app sit there for two minutes, and try to login again, I get:\n\nERROR net.liftweb.http.LiftRules - Exception being returned to browser when processing /user_mgt/login: Message: \njavax.naming.CommunicationException: connection closed [Root exception is java.io.IOException: connection closed]; remaining name 'dc=mysql,dc=com' \n        com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1979) \n        com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1824) \n        com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1749) \ncom.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.j ava: 368) \ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialComposite DirContext.java: 338) \ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialComposite DirContext.java: 321) \njavax.naming.directory.InitialDirContext.search(InitialDirContext.java: 248) \n        net.liftweb.ldap.LDAPVendor.search(LDAP.scala:102) \n        net.liftweb.ldap.MetaLDAPProtoUser $class.ldapLogin(LDAPProtoUser.scala:124) \n        code.model.User$.ldapLogin(User.scala:20) \n        net.liftweb.ldap.MetaLDAPProtoUser $class.login(LDAPProtoUser.scala:110) \n        code.model.User$.login(User.scala:20) \n        net.liftweb.proto.ProtoUser$$anonfun$7.apply(ProtoUser.scala: 275) \n        net.liftweb.proto.ProtoUser$$anonfun$7.apply(ProtoUser.scala: 275) \n\n......\n\nThe only way to get it back to work is by restarting the lift app.\n\nI posted this \nhttp://groups.google.com/group/liftweb/browse_thread/thread/e498b2c75587750b/639916e7cedc6c5e?lnk=gst&q=ldap+timeout#\nand following what Francois proposed I changed\n\n    Lazy val initialContext = getInitialContext(parameters()) \nfor \n   def initialContext = getInitialContext(parameters()) \nin LDAP.scala \n\nand this fixed it for me.\n\n\nLet me know if you would need more information, as I may have omitted some details due to working with this issue for a few days in a row :)\n\nThanks\n\n  -Diego"
172,'','findOne in addition to findAll\nFor Lift-Mapper, when searching for a record, I am using findAll...\r\n\r\nJPA makes a distinction between a single result object vs. a List of objects: http://java.sun.com/javaee/5/docs/api/javax/persistence/Query.html#getSingleResult() vs. http://java.sun.com/javaee/5/docs/api/javax/persistence/Query.html#getResultList()\r\n\r\nCertainly, it is convenient with Scala just to call findAll() then take the head -- but a fundamental assertion is missing:  when calling getSingleResult, I am expecting only one matching item -- if the List length > 1, then that is a problem!\r\n\r\nIn the mean time, I will call findAll().head to get the single result.  But, I would really like it if Mapper was extended to include this concept so that I could replace it with findOne()...  If more than one record returned, an exception should be thrown (or a Failure).  A Box would make a lot of sense because then you have a concept for Empty.\r\n'
455,'dpp','Ability to disable unique Loc check\nPer thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/4a4ccace784a105b\n'
1021,'','Fold LongMappedMapper features into MappedForeignKey\nSee https://groups.google.com/d/topic/liftweb/JfPPq3EWLU0/discussion\n'
596,'dchenbecker',"On 2.8 ordinary snippets get instantiated a few times\nA diff of the stack traces seems to reveal the problem:\nAt LiftSession.scala:909, def locateAndCacheSnippet calls ListHelpers.first with a function that potentially instantiates the snippet. Then first creates a view from the parameter 'in' and flatMaps the resulting view using that function which when called may instantiate the class. However that function is called multiple times, since every call to isEmpty is delegated to IterableViewLike's iterator, which is created each time anew, reevaluating the flatmapping function.\n\nChanging the code to the following fixed the problem:\n\n    def locateAndCacheSnippet(tagName: String): Box[AnyRef] = \n      snippetMap.is.get(tagName) or {\n        val tmp = scala.collection.mutable.HashMap[String,Box[AnyRef]]()\n        first(LiftRules.snippetNamesToSearch.vend(tagName)) { nameToTry =>\n          tmp.getOrElseUpdate(nameToTry, {\n            val ret = LiftRules.snippet(nameToTry) or findSnippetInstance(nameToTry)\n            ret.foreach(s => snippetMap.set(snippetMap.is.update(tagName, s)))\n            ret\n          })\n        }\n      }\n\nNote that my local repository is not 100% up to date so I marked the changes in bold.\n\nHere are the relevant slices of the stack traces:\n\n\nONCE:\n\n        at java.lang.Class.newInstance(Class.java:308)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$instantiateOrRedirect$1.apply(LiftSession.scala:756)\n        at net.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:67)\n        at net.liftweb.util.Helpers$.tryo(Helpers.scala:34)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$instantiateOrRedirect(LiftSession.scala:752)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.common.Full.flatMap(Box.scala:400)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$findSnippetInstance(LiftSession.scala:818)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:909)\n        at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:48)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:405)\n        at scala.collection.IterableLike$class.isEmpty(IterableLike.scala:92)\n        at scala.collection.SeqViewLike$$anon$4.isEmpty(SeqViewLike.scala:176)\n        at scala.collection.TraversableLike$class.headOption(TraversableLike.scala:483)\n        at scala.collection.SeqViewLike$$anon$4.headOption(SeqViewLike.scala:176)\n        at net.liftweb.util.ListHelpers$class.first(ListHelpers.scala:56)\n        at net.liftweb.util.Helpers$.first(Helpers.scala:34)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n\n\nTWICE:\n\n        at java.lang.Class.newInstance(Class.java:308)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$instantiateOrRedirect$1.apply(LiftSession.scala:756)\n        at net.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:67)\n        at net.liftweb.util.Helpers$.tryo(Helpers.scala:34)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$instantiateOrRedirect(LiftSession.scala:752)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.common.Full.flatMap(Box.scala:400)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$findSnippetInstance(LiftSession.scala:818)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:909)\n        at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:48)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:405)\n        at scala.collection.IterableLike$class.isEmpty(IterableLike.scala:92)\n        at scala.collection.SeqViewLike$$anon$4.isEmpty(SeqViewLike.scala:176)\n        at scala.collection.IterableLike$class.head(IterableLike.scala:101)\n        at scala.collection.SeqViewLike$$anon$4.head(SeqViewLike.scala:176)\n        at scala.collection.TraversableLike$class.headOption(TraversableLike.scala:483)\n        at scala.collection.SeqViewLike$$anon$4.headOption(SeqViewLike.scala:176)\n        at net.liftweb.util.ListHelpers$class.first(ListHelpers.scala:56)\n        at net.liftweb.util.Helpers$.first(Helpers.scala:34)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n\n\nTHREE TIMES:\n\n        at java.lang.Class.newInstance(Class.java:308)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$instantiateOrRedirect$1.apply(LiftSession.scala:756)\n        at net.liftweb.util.ControlHelpers$class.tryo(ControlHelpers.scala:67)\n        at net.liftweb.util.Helpers$.tryo(Helpers.scala:34)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$instantiateOrRedirect(LiftSession.scala:752)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1$$anonfun$apply$51.apply(LiftSession.scala:819)\n        at net.liftweb.common.Full.flatMap(Box.scala:400)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.http.LiftSession$$anonfun$net$liftweb$http$LiftSession$$findSnippetInstance$1.apply(LiftSession.scala:819)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession.net$liftweb$http$LiftSession$$findSnippetInstance(LiftSession.scala:818)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61$$anonfun$22.apply(LiftSession.scala:910)\n        at net.liftweb.common.EmptyBox.or(Box.scala:467)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:910)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1$$anonfun$apply$61.apply(LiftSession.scala:909)\n        at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:48)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.IterableViewLike$FlatMapped$$anonfun$iterator$1.apply(IterableViewLike.scala:52)\n        at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:405)\n        at scala.collection.Iterator$$anon$21.next(Iterator.scala:406)\n        at scala.collection.IterableLike$class.head(IterableLike.scala:102)\n        at scala.collection.SeqViewLike$$anon$4.head(SeqViewLike.scala:176)\n        at scala.collection.TraversableLike$class.headOption(TraversableLike.scala:483)\n        at scala.collection.SeqViewLike$$anon$4.headOption(SeqViewLike.scala:176)\n        at net.liftweb.util.ListHelpers$class.first(ListHelpers.scala:56)\n        at net.liftweb.util.Helpers$.first(Helpers.scala:34)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n        at net.liftweb.http.LiftSession$$anonfun$locateAndCacheSnippet$1$1.apply(LiftSession.scala:909)\n\n\nThanks.\n"
30,'dpp','Error attempting to persist Keyless Mapper \nCalling save on a keyless Mapper object results in a NullPointerException: Trying to open an empty Box.\n\nA simple example to reproduce the issue is attached along with the full stack trace.\n\n***\nBoot.scala\n    \n    package bootstrap.liftweb\n    \n    import _root_.net.liftweb.util._\n    import _root_.net.liftweb.http._\n    import _root_.net.liftweb.sitemap._\n    import _root_.net.liftweb.sitemap.Loc._\n    import Helpers._\n    \n    import com.spiralarm.liftbug.mapperissue.model._\n    import _root_.java.sql.{Connection, DriverManager}\n    import _root_.net.liftweb.mapper.{DB, ConnectionManager, Schemifier, DefaultConnectionIdentifier, ConnectionIdentifier}\n    \n    /**\n        * A class that\'s instantiated early and run.  It allows the application\n        * to modify lift\'s environment\n        */\n    class Boot {\n        def boot {\n        // where to search snippet\n        LiftRules.addToPackages("com.spiralarm.liftbug.mapperissue")\n    \n        // Build SiteMap\n        val entries = Menu(Loc("Home", List("index"), "Home")) :: Nil\n        LiftRules.setSiteMap(SiteMap(entries:_*))\n        DB.defineConnectionManager(DefaultConnectionIdentifier, DBVendor)\n        DB.addLogFunc((query, time) =>  Log.debug("DBQUERY {" +query + "} time{" + time + "} ms") )\n        Schemifier.schemify(true,Log.infoF _,Parent,Child,ParentChild)\n        \n        Log.info("Parent Child join " + ParentChild.join("parent","child"))\n        \n        \n        \n        \n        }\n    }\n    object DBVendor extends ConnectionManager { \n    \n        // Force load the driver \n    \t Class.forName("com.mysql.jdbc.Driver")   \n    \t\n        // define methods \n    \t\n            def newConnection(name : ConnectionIdentifier) = { \n    \t\t try { \n    \t\t\t Full(DriverManager.getConnection("jdbc:mysql://localhost:3306/bugs", "bugs", "bugs")) \n    \t\t } catch { \n    \t\t case e : Exception => e.printStackTrace; Empty \n    \t\t } \n    \t } \n    \n        def releaseConnection (conn : Connection) { conn.close } \n    } \n    \n***\nParent.scala\n    package com.spiralarm.liftbug.mapperissue.model\n\n\n    import net.liftweb._ \n    import net.liftweb.mapper._\n\n    class Parent extends LongKeyedMapper[Parent] with IdPK {\n    \n      def getSingleton = Parent\n    \n      object name  extends MappedString(this,10) \n    }\n    object Parent extends Parent with LongKeyedMetaMapper[Parent]\n    \n    class Child extends LongKeyedMapper[Child] with IdPK {\n    \n      def getSingleton = Child\n      \n      object name  extends MappedString(this,10)\n      \n    }\n    object Child extends Child with LongKeyedMetaMapper[Child]\n    \n    class ParentChild extends Mapper[ParentChild] {\n    \n      def getSingleton = ParentChild\n      \n      object parent extends MappedLongForeignKey(this, Parent)  \n      object child  extends MappedLongForeignKey(this, Child) \n      object index  extends MappedInt(this) \n  \n    }\n    object ParentChild extends ParentChild with MetaMapper[ParentChild]{\n    \n      \n       def join (parent :String, child :String):Boolean = {\n         val p = Parent.create.name(parent).saveMe\n         val c = Child.create.name(parent).saveMe\n         join(p,c)\n       }\n      \n      \n       def join (parent :Parent, child :Child):Boolean = {\n        val list = ParentChild.findAll(By(ParentChild.parent,parent))\n        val i = list.isEmpty match {\n          case true => 0\n          case false => list.size\n        }\n        this.create.parent(parent).child(child).index(i).save\n        }\n      \n    }\n\n    java.lang.NullPointerException: Trying to open an empty Box\n    \tat net.liftweb.util.EmptyBox.open_$bang(Box.scala:370)\n    \tat net.liftweb.util.EmptyBox.open_$bang(Box.scala:366)\n    \tat net.liftweb.mapper.MetaMapper$$anonfun$12.apply(MetaMapper.scala:583)\n    \tat net.liftweb.mapper.MetaMapper$$anonfun$12.apply(MetaMapper.scala:578)\n    \tat net.liftweb.mapper.DB$.use(DB.scala:305)\n    \tat net.liftweb.mapper.MetaMapper$class.save(MetaMapper.scala:577)\n    \tat com.spiralarm.liftbug.mapperissue.model.ParentChild$.save(Parent.scala:35)\n    \tat net.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:84)\n    \tat net.liftweb.mapper.Mapper$$anonfun$save$1.apply(Mapper.scala:84)\n    \tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:65)\n    \tat net.liftweb.mapper.Safe$.runSafe(Safe.scala:44)\n    \tat net.liftweb.mapper.Mapper$class.runSafe(Mapper.scala:50)\n    \tat com.spiralarm.liftbug.mapperissue.model.ParentChild.runSafe(Parent.scala:26)\n    \tat net.liftweb.mapper.Mapper$class.save(Mapper.scala:83)\n    \tat com.spiralarm.liftbug.mapperissue.model.ParentChild.save(Parent.scala:26)\n    \tat com.spiralarm.liftbug.mapperissue.model.ParentChild$.join(Parent.scala:51)\n    \tat com.spiralarm.liftbug.mapperissue.model.ParentChild$.join(Parent.scala:41)\n    \tat bootstrap.liftweb.Boot$$anonfun$boot$3.apply(Boot.scala:29)\n    \tat bootstrap.liftweb.Boot$$anonfun$boot$3.apply(Boot.scala:29)\n    \tat net.liftweb.util.Log4JLogger.info(Log.scala:240)\n    \tat net.liftweb.util.Log$.info(Log.scala:54)\n    \tat bootstrap.liftweb.Boot.boot(Boot.scala:29)\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    \tat java.lang.reflect.Method.invoke(Method.java:585)\n    \tat net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:392)\n    \tat net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHelpers.scala:390)\n    \tat net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:909)\n    \tat net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.scala:909)\n    \tat net.liftweb.util.Full.map(Box.scala:330)\n    \tat net.liftweb.http.DefaultBootstrap$.boot(LiftRules.scala:909)\n    \tat net.liftweb.http.LiftFilter.bootLift(LiftServlet.scala:573)\n    \tat net.liftweb.http.LiftFilter.init(LiftServlet.scala:548)\n    \tat org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)\n    \tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n    \tat org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:653)\n    \tat org.mortbay.jetty.servlet.Context.startContext(Context.java:140)\n    \tat org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1239)\n    \tat org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)\n    \tat org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:466)\n    \tat org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)\n    \tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n    \tat org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n    \tat org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)\n    \tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n    \tat org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n    \tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n    \tat org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n    \tat org.mortbay.jetty.Server.doStart(Server.java:222)\n    \tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n    \tat org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)\n    \tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)\n    \tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)\n    \tat org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:210)\n    \tat org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)\n    \tat org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:512)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:482)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)\n    \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)\n    \tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)\n    \tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)\n    \tat org.apache.maven.cli.MavenCli.main(MavenCli.java:287)\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    \tat java.lang.reflect.Method.invoke(Method.java:585)\n    \tat org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n    \tat org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n    \tat org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n    \tat org.codehaus.classworlds.Launcher.main(Launcher.java:375)\n'
313,'indrajitr','Backport codes from Scala 2.8 branch to Scala 2.7 branch\nBackport code snippets from 280_port_refresh to master to keep the gap between master and 280_port_refresh minimal.'
879,'',"Lift archetypes refer to out-dated scala-ide names\nThe archetypes' prototype poms refer to the out-dated package names ch.epfl.lamp.sdt... from the Scala IDE tooling, which have been succeeded by org.scala-ide.sdt.core (at least) in recent builds. As result, Eclipse projects created from these archetypes are not built properly.\nI added a patch to fix this issue for .classpath and .project generation."
1162,'andreak','React to comet-timeout, both render and ajax\nWe really should have a mechanism to react to comet-timeouts, both render() (initial rendering of the comet-component), and ajax-requests going to the actor.\n\nI propose to add 2 methods to LiftCometActor (naming similar to the configuration-variables for timeouts):\n<pre>\n  def cometProcessingTimeoutHandler(): JsCmd = Noop\n  def cometRenderTimeoutHandler(): Box[NodeSeq] = Empty\n</pre>'
737,'eltimn','Mongo version of ProtoUser creates an odd Sign-up form.\nHi Tim,\n\nI pulled down a fresh copy of the ProtoUser Mongo repo and the sign-up form is rendered like the screenshot.\n\nLooks like this showed up in 2.2-M1, see thread: http://groups.google.com/group/liftweb/t/c0e82f4b4ad758fd\n\n'
171,'','derby.log file created in ${basedir} for lift-mapper\nAfter doing a build for lift-mapper, I see a derby.log file created in the ${basedir} (beside pom.xml, etc.).  This log file was created by the unit tests.  This log file should have been created in the target folder (${project.build.directory}, for example) so that a mvn clean destroys any build artifacts.'
454,'dpp','Finish Lift port to Scala 2.8\nFinish the Lift port to Scala 2.8.  Remove all "FIXME" statements and make it production ready.'
595,'dpp','Enable attribute merging on wizard form fields\nEnable wizard templates to merge attribute metadata into the final output so one can control the attributes applied to the output (for example, specifying special CSS classes) \n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/5eed90607fec7443'
29,'','Add a <lift:dont_ignore /> tag to complement <lift:ignore />\n'
312,'','Full featured Option/Select in SHtml\n(That follows a thread in the mailing list http://groups.google.com/group/liftweb/browse_frm/thread/992a7c1d326d3094/2047dbc3cf4637d0?tvc=1&q=optgroup#2047dbc3cf4637d0 )\r\n\r\nA far as can I see, SHtml doesn\'t allow to create some things for select/option tags. We can\'t add attribute to option tags, nor group option thanks to optgroup.\r\n\r\nI would like to purpose this starting point as a "full featured" select/option API. I think it covers almost every thing "select" related, but I don\'t know Lift internal to know if it\'s somewhat realistic.\r\n\r\n8<-----------\r\ncase class OptionModel[T](value:T, label:String, disabled:Boolean, attrs:(String,String)*)\r\ncase class OptionGroupModel[T](label:String, options:Seq[OptionModel[T]], disabled:Boolean, attrs:(String,String)*) {\r\n  def values = options map( _.value )\r\n}\r\ncase class SelectOptions[T](options:Seq[OptionModel[T]],groups:Seq[OptionGroupModel[T]]) {\r\n  def values = (options map( _.value)) ++ (groups map( _.values))\r\n}\r\n\r\n\r\nobject SHtml {\r\n  \r\n  // ....\r\n  private def selected(in: Boolean) = if (in) new UnprefixedAttribute("selected", "selected", Null) else Null\r\n  // ....\r\n\r\n  private def disabled(in: Boolean) = if (in) new UnprefixedAttribute("disabled", "true", Null) else Null\r\n  \r\n  def select_*(opts: SelectOptions[String], deflt: Box[String], func: AFuncHolder, attrs: (String, String)*): Elem = {\r\n    //build an <option> from an option model\r\n    def buildOption(option:OptionModel[String]) = {\r\n      option.attrs.foldLeft(\r\n        <option value={option.value}>{option.label}</option> % disabled(option.disabled) % selected(deflt.exists(_ == option.value))\r\n      )(_ % _)\r\n    }\r\n    \r\n    val testFunc = LFuncHolder(in => in.filter(v => opts.values.contains(v)) match {case Nil => false case xs => func(xs)}, func.owner)\r\n  \r\n    attrs.foldLeft(fmapFunc(testFunc)(fn => <select name={fn}>{\r\n      //start with groups\r\n      opts.groups.flatMap { group =>\r\n        group.attrs.foldLeft(<optgroup label={group.label}>{\r\n          //each option in a groups, with its attributes\r\n          group.options.flatMap { buildOption(_) }\r\n        }</optgroup> % disabled(group.disabled) )(_ % _)\r\n      } ++ \r\n      //now, option that are not in a group\r\n      opts.options.flatMap { buildOption(_) }\r\n    }</select>))(_ % _)\r\n  } \r\n}\r\n'
878,'','save images from google groups files section\nadding the images as attachments to this ticket, so we have URLs to reference from the wiki'
1161,'jonifreeman','JSON field names must be escaped\n'
736,'dpp','Add an "append to attribute" operator on css selector transforms\nSupport for "* [class+]" which will append to the class rather than over-writting it'
170,'aboisvert','Typo in Req.scala (very minor bug)\nMissing a space after "URL" and before "was":\r\n\r\nprivate[liftweb] def defaultCreateNotFound(in: Req) =  \r\n  XhtmlResponse((<html> <body>The Requested URL{in.contextPath + in.uri}was not found on this server</body> </html>), ResponseInfo.docType(in), List("Content-Type" -> "text/html; charset=utf-8"), Nil, 404, S.ieMode)'
453,'dpp','Add an SBT archetype based on the Basic Archetype\nCreate a new Archetype that spits out an SBT project from a Maven archetype.'
1019,'dpp','Add seeOther() to StatefulSnippet\nAs per discussion: http://groups.google.com/group/liftweb/browse_thread/thread/994d7ca28650f0b4 it would be nice if StatefulSnippet had seeOther analogous to redirectTo:\n\ndef seeOther(where: String) = S.seeOther(where, registerThisSnippet)'
594,'Dridus',"overriding Field#label not affecting TextareaField#toFrom\nTextareaField.scala line 42 should call label (so it can be overridden)\nStringField has the same bug.\n\nAlso it's not clear to me why this label has a <div> around it."
28,'','File uploads should provide a streaming interface\nThe current file upload API slurps the whole file into a byte array. This could exhaust server memory for large concurrency and/or large files. Add an API that allows streaming access.'
311,'hoffrocket','jQuery version switching in LiftRules\ncontrol which version of jquery is used when "/classpath/jquery.js" is served\r\ndefault to 1.4.1'
877,'indrajitr',"Surefire style output for Specs under SBT\nCurrently, there isn't a good option to generate surefire style output in SBT that complies well with Specs.\nThis ticket tracks the progress of a Specs ticket which solves the problem in a nice way.\n\nhttp://code.google.com/p/specs/issues/detail?id=167"
735,'dpp','Simpler S template/snippet running \nAdd methods to run either templates or NodeSeqs though process surround and include along with snippet definitions.'
169,'aboisvert','Lift should allow injecting custom driver abstractions\nIn Driver.scala there is no way to intercept singleton method calcDriver to allow user supported driver abstractions since in DB.scala DriverType object is used explicitly.'
452,'dpp','Flag to disable Loc uniqueness\nThe new feature that enforces uniqueness in SiteMap Locs causes problems for existing production sites.  Add a flag to disable this feature.'
1018,'','ManyToMany and OneToMany don\'t know about their "fields" until touched\nSee e.g. https://groups.google.com/d/topic/liftweb/1WizPeI8C4o/discussion -- if you load a OneToMany from the database and call delete_!, the MappedOneToMany\'s children won\'t be deleted (even if you mixed in Cascade) because objects are lazily initialized. Initialize MappedOneToMany and MappedManyToMany when running reflection to discover MappedFields.\n'
593,'dpp','Enhance Wizard form processing capability\nHello. I\'m playing with Lift\'s wizard currently, and meeting some\nproblems.\n\nGenerally, how can add a form to a wizard screen? I override vendForm\nmethod and it does work. But my feeling that this might not be the\nrecommended way, and I can only use ajax way to submit that form,\notherwise I will lose current screen. And what\'s more, as I return a\ntemplate from vendForm, say A.edit() will process this template, if I\ndefine a WizardVar, I have to initialize it in vendForm before I can\nuse it in A.edit(), and if not, after I return from A.edit, that\nWizardVar will be reinitialized.\n\nWell, it is a little bit confusing, so I guess I should post my code\nas well. Thanks guys.\n\n=====================================================================\n\npackage com.honnix.ma.snippet\n\nimport java.util.regex.Pattern\n\nimport scala.reflect.Manifest\nimport scala.xml.NodeSeq\n\nimport net.liftweb.common._\nimport net.liftweb.http._\nimport net.liftweb.util._\nimport net.liftweb.wizard.Wizard\nimport S._\nimport SHtml._\n\nimport com.honnix.ma.model.{NetworkElement => NetworkElementModel,\n                           Function => FunctionModel}\n\nobject NetworkElementWizard extends Wizard with Loggable {\n object networkElementVar extends WizardVar[NetworkElementModel] (\n     NetworkElementModel.create.name("")\n )\n\n val name = new Screen {\n   val name = new Field with StringField {\n     lazy val existingNetworkElements = NetworkElementModel.findAll\n\n     def name = S ? "Name"\n\n     override def required_? = true\n\n     def nameUnique(msg: => String): String => List[FieldError] =\n       s => if (existingNetworkElements.exists(_.name.is == s)) msg else Nil\n\n     override def validations = valRegex(Pattern.compile("[a-zA-Z]+"), "invalid name") _ ::\n       nameUnique("function name is not unique") ::\n       super.validations\n   }\n }\n\n val function = new Screen {\n   val function = new Field {\n     type ValueType = FunctionModel\n\n     def name = S ? "Function"\n\n     lazy val manifest = buildIt[FunctionModel]\n\n     def default = FunctionModel.create\n\n     def atLeastOneFunction(msg: => String): (FunctionModel) => List[FieldError] =\n       (f) => if (networkElementVar.functions.isEmpty) msg else Nil\n\n     override def validations = atLeastOneFunction("at least one function") :: super.validations\n   }\n\n   override protected def vendForm[T](implicit manifest: Manifest[T]) = {\n     networkElementVar.is.name(name.name.is) // ============= here I have to initialize networkElementVar explicitly ==============\n\n     Full((x: T, y: T => Unit) =>\n       <lift:embed what="function" />) // ================== this template will be processed by A.edit, and inside A.edit I will make use of networkElementVar ====================\n   }\n }\n\n def finish {\n   networkElementVar.save\n }\n}'
27,'mariusdanciu',' Autocomplete never submit value \nHello,\r\n\r\nI\'m playing with the Autocomplete widget in Lift 1.1 current SNAPTHOT version (generated on Sat Jun 20 06:47:53 PDT 2009) and I get the submitted value back in the Scala code, everything else works fine (autocomplete elements are shonw, etc). I\'m quite new to lift, so perhaps I miss somthing obious.\r\n\r\nI think that the problem is in the generated Javascript, when the selected value should be copied in the hidden field (line 131 of lift-widgets-1.1-SNAPSHOT-sources.jar!/net/liftweb/widgets/autocomplete/AutoComplete.scala, in "onLoad" value definition): \r\n    8<-------------- \r\n      jQuery("#"""+id+"""").autocomplete(data, """+autocompleteOptions.toJsCmd+""").result(function(event, dt, formatted) { \r\n       jQuery("#"""+hidden+"""").val(dt.nonce); \r\n    8<--------------\r\n\r\nThe problem seems to be that dt has no "nonce" field, it\'s an array. If I modify the code as follow:   \r\n    8<-------------- \r\n      jQuery("#"""+id+"""").autocomplete(data, """+autocompleteOptions.toJsCmd+""").result(function(event, dt, formatted) { \r\n        jQuery("#"""+hidden+"""").val(formatted); \r\n    8<--------------\r\n\r\nEverything works as expected.\r\n\r\nHope it may help ! Francois Armand\r\n'
310,'jeppenejsum','Add logging to Lift\'s internal code\nAdd logging to some of Lift\'s internal code to aid in debugging and understanding.\n\nLogging should be more granular than just the "lift" logger.'
876,'migo','Record-Squeryl selecting unspecified columns in generated SQL\nRecord-Squeryl when selecting specific column, statement includes other unspecified columns.\nEven though result is correct, when used in a "IN" statement will cause SQL exception\n\ncaused by: implicit conversions defined in RecordTypeMode are not applied for arguments of the select function\n\nwork around: \nfrom(KKSchema.textbooks) (b => select(b.idField.is)) \nor \nfrom(KKSchema.textbooks) (b => select(b.bookName.is)) \n\nReported in this thread:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/be5864b4768c12a4'
734,'dpp','Null pointer using CSS selectors with MappedPassword\nIn a template (while attempting to be designer friendly), I have:\n<input id="mypassword" type="password"/>\n\nIn the snippet, when trying to bind using CSS selectors:\nClass Register {\nval user = User.create\ndef render(html: NodeSeq): NodeSeq = {\n    ("#mypassword" #> user.password.toForm).apply(html)\n}\n}\n\nThe above scenario throws a null pointer. I\'m not sure why.  However, the following, producing the same xhtml result works fine:\n\n<user:mypassword/>\n\nClass Register {\nval user = User.create\ndef render(html: NodeSeq): NodeSeq = {\n    bind("user",html,\n           "mypassword" -> user.password.toForm\n          )\n}\n}\n\nAm I doing something wrong or is this a bug in the CSS selector implementation?'
168,'indrajitr','javax.activation dependency\nIf javax.activation is merely a transitive dependency for javax.mail, then it should not be explicitly declared in http://scala-tools.org/repo-releases/net/liftweb/lift/1.1-M7/lift-1.1-M7.pom\r\n\r\nNote that according to this:  http://java.sun.com/products/javamail/\r\nthe Activation framework dependency is not necessary for Java 6 users because it is included.\r\n\r\nSee thread:  http://groups.google.com/group/liftweb/browse_thread/thread/f435fd3a0ddbd08e\r\n'
451,'indrajitr','Remove the deprecated module lift-core\nAccording to previous discussion (and notification), the meta module lift-core is ready for permanent deletion.\n\nSee: http://groups.google.com/group/lift-announce/browse_thread/thread/28e9149425d8e6f3 '
1017,'','ManyToMany requires the parent to be saved first\nSee https://groups.google.com/d/topic/liftweb/6JDS8KSR1wg/discussion\n'
592,'dpp','TimeHelpers.hourFormat is not thread safe\nDateFormats are not thread safe, tt should create a new DateFormat on each access'
26,'','PayPal PDT should have configurable pdtPath\nFrom the list. Unconfirmed, but it sounds like overriding pdtPath makes the module stop working.'
309,'jeppenejsum','Improved logging facilities\nAdd support for MDC\n\nConfigure logback backend in same way as log4j\n\nAdd Logging trait'
875,'','Add untrustedMultiSelect to SHtml\nMultiple select boxes are somewhat second-class citizens in Lift, as you cannot easily create a multiselect where the options can be replaced via AJAX. I intend to remedy this.'
1158,'dpp','Stack overflow using data-lift\nDetails: http://groups.google.com/group/liftweb/browse_frm/thread/87744138c183fda6/f1feca388ad74db0\n'
733,'hoffrocket','SHtml.ajaxSelect onchange javascript not working properly\nraw javascript should refer to value.options instead of this.options'
167,'indrajitr',"No scala source file in *SNAPSHOT-sources.jar\nThe *SNAPSHOT-sources.jar doesn't seem to contain any scala source files, only static resources"
450,'indrajitr','Update AMQP dependencies to use RabbitMQ 1.7.2\nUpdate AMQP dependencies to use RabbitMQ 1.7.2 and remove reference to the repository nexus.griddynamics.net.\n\nSee related discussion in RB [[url:http://reviewboard.liftweb.net/r/167/#review424|here]].'
1016,'','ManyToMany.own should call primeObj on join table FKs\nSee https://groups.google.com/d/topic/liftweb/6JDS8KSR1wg/discussion'
591,'Dridus','Custom CouchDB view query params\nAdd the ability to easily add custom query params (other than key) to a CouchDB query.\n\nFor example creating a query which calls /databaseName/_design/dbViews/_view/designName?otherParam=123'
308,'dpp','The order of fields is random in Mapper\nMapper uses HashMap to determine the order that fields will be presented in queries.  This ordering is random and can sometime different between the field names and the field bindings (not so in Scala 2.7.x, but in Scala 2.8).\r\n\r\nThe field order must be determined and stable.'
874,'dpp',"The mechanism for lazily calculating request params is a GAL\nThe mechanism for calculating Req's paramCalcInfo uses a lazy val in a method.  This results in a synchronized on the Req singleton which blocks the whole request/response chain during large uploads.\n"
1157,'fmpwizard','BasicTypesHelpers.toBoolean("on") returns false\nAccording to [[url:https://groups.google.com/d/topic/liftweb/naGcIXcTCPk/discussion|this thread]].\n\n'
732,'hoffrocket','Utility methods  and case class fields for Mongo Record\nAdding some  find, update, upsert and other functionality to Mongo Record support'
166,'','snapshot jars contains several Box.class files\nThere seems to be a build issue after the reorg into common.\r\n\r\nI can find e.g. net.liftweb.common.Box.class in both\r\n\r\nlift-common-1.1-SNAPSHOT\r\nlift-webkit-1.1-SNAPSHOT\r\n\r\nThis causes  confusion in Eclipse when you try to find the source of a class.\r\n\r\n\r\n'
449,'mariusdanciu','Fix swappable jQuery focus behavior\nPer the [[url:http://groups.google.com/group/liftweb/browse_thread/thread/42f85d654d71d60f|Google group discussion]]:\n\nThe JS for swappable is incorrect.  It currently sets focus to the top-level markup element and then tries to additionally set focus on all direct child input elements (although there is also a bug in the selector used.)\n\nThis issue is obvious in the completed ToDo code provided in the Getting Started guide; when changing the description on a ToDo item, clicking the static text makes the input visible, but focus is not set.  This is due to the surrounding span itself receiving focus on swap, and the input selector on direct children being skipped due to syntactical issues.\n\nDesired behavior would be to have the top-level element tested as an input and focused on match; else focus set only on the first matching descendant input, a la:\n\nvisible.onclick = function() { \n\t\tjQuery(visible).hide(); \n\t\tjQuery(hidden).show();\n\t\tif (jQuery(hidden).is("input")) \n\t\t\tjQuery(hidden).focus(); \n\t\telse \n\t\t\tjQuery(hidden).find("input")[0].focus(); \n\t\treturn false; \n};\n'
590,'dpp','Wizard stuff\nSome enhancements to Wizard and Screen:\n\n* Built in validators should take the first param as lazy so it can be computed against other fields\n* Implicit conversions should be migrated to a trait and applied to wizard so that there can be shared validators (e.g., T => Number)\n* Support for List[T] => drop-down\n\n\n'
307,'indrajitr',"Streamline JDBC library dependencies\nCurrently, the JDBC library dependencies are scattered all over the places in the codebase.\r\n\r\nWe need to fold them as dependencyManagement up in the canonical project-parent pom and refer to them selectively from the modules that need them. less dependency count = faster and leaner build :)\r\n\r\nWhile at this, update the versions of some of the jars. This version update should not affect applications based on Lift because they are in the _runtime_ scope and marked _optional=true_ (and thus aren't transitive)"
873,'indrajitr','Too many deprecation/migration warning with Scala 2.8.x\n'
1156,'jonifreeman','Performance problem with lift-json render 2.4 milestones\nI posted a question about this issue a couple of days ago on the Lift group to see if it was known--I did not receive any response so I am assuming it is not known:\n\nIn this example I am seeing a 12+ *second* render time \nfor a list of 50000 elements: \n\n    val decomposed = decompose(1 to 50000) \n    log.debug("decomposed") \n    val rendered = net.liftweb.json.render(decomposed) \n    log.debug("rendered") \n\nresulting in: \n14:16:42.401 [http-8080-2] DEBUG c.t.s.ServiceServlet - decomposed \n14:16:55.147 [http-8080-2] DEBUG c.t.s.ServiceServlet - rendered \n           ^^ 12+s elapsed\n\nI have reproduced this in both M4 and M5 on a i7 quad and Snow Leopard--JDK is: \n > java -version \njava version "1.6.0_29" \nJava(TM) SE Runtime Environment (build 1.6.0_29-b11-402-10M3527) \nJava HotSpot(TM) 64-Bit Server VM (build 20.4-b02-402, mixed mode) \n\n'
731,'dpp',"Make CometActor markup caching configurable\nThere are a couple of potential uses for CometActors that require per-page lifetimes. When used this way, the automatic markup caching that happens in the default CometActor implementation doesn't provide much benefit and can eat up a sizable chunk of heap space. It would be nice to be able to turn off markup-caching (e.g. CometActor.lastRendering) to avoid this overhead."
165,'dpp','MappedForeignKey : Access to .obj field after update\n<dl>\n  <dt>Module</dt>\n  <dd>Mapper</dd>\n  <dt>Request</dt>\n  <dd>When updating the referenced object in a MappedForeignKey column, the .is field returns the new value of the id, but the .obj field still returns the reference of the object originally loaded with the owner.\nThe .is and .obj should be coherent.</dd>\n  <dt>Example</dt>\n<dd><pre>\n    val testUser : User = User.find(By(User.id, 1)).open_!\n    val testAddress = testUser.homeAddress.obj;\n    Log.debug("Current FK id is "+testUser.homeAddress.is) // returns 1\n\n    testAddress match {\n      case Full(addr) =>\n         val anotherAddr : Address = Address.find(By(Address.id,2)).open_!\n         Log.debug("There was an address: "+addr+". Replace it with addr id#2: "+anotherAddr);\n          testUser.homeAddress(anotherAddr).save\n\n      case _ =>\n        [...]\n    }\n    val retestAddress = testUser.homeAddress.obj\n    Log.debug("Now obj is "+retestAddress); // returns a Box with the old address (id == 1)\n    Log.debug("And is is "+testUser.homeAddress.is) // returns 2 \n</pre></dd>\n<dt>See</dt>\n<dd> http://groups.google.com/group/liftweb/browse_thread/thread/0041894ec33fc538/0bcb1a85658155af?hl=en#0bcb1a85658155af </dd>\n</dl>\n\n\n\n\n\nRegarding to this thread'
448,'','Fix lift-osgi boot\nlift-osgi does not boot Lift correctly. Once it did and I am not sure how and when it was broken. But at least I know how to fix it ;-)'
1014,'fmpwizard','A new CreatedResponse that takes JSON\nnet.liftweb.http.CreatedResponse has a Node as one of its parameters. A new CreatedResponse that takes JSON as well as XML would be useful for creating a JSON-based RESTful interface.\n\nRelated:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/3e3e7f19c296ebd9#'
589,'dchenbecker','Inconsistent rendering of notices in AJAX responses\nAs discussed in this mailing list thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/1e2456b1f63c9b41/411eaa029ec4fd63?hl=en&lnk=gst&q=s.notice+and+ajax#411eaa029ec4fd63\n\nTinyURL version of the above:\n\nhttp://tinyurl.com/2vcy4fy\n\nBest regards,\n\n-- Dave'
306,'Dridus','lift-couchdb\nContribution of an integration to Apache CouchDB using Dispatch and lift-json. Consists of an underlying access layer tied into Dispatches Request class for simple JSON access to CouchDB, a lift-record implementation to represent records that can be encoded and decoded from lift-json AST, and an extension of that lift-record implementation that adds on CouchDB access.'
872,'indrajitr',"Make test cases/specifications work better with SBT\nQuite a few tests failing for a mix of one or more of the following:\n- Tests are JUnit4 tests and thus doesn't benefit from the provided unified test interface [there is JUnit interface, but moving these test to Specs is better]\n- Initialization/execution order varies between Maven build (via Surefire -> JUnit suite) and SBT build (via test interface of specs)\n- Dependence on state from previous SUS and the likes [wasn't a problem in Maven since they were seen as JUnit tests instead of SBT interface] \n"
1155,'eltimn','LiftRules.noticesToJsCmd returns 2 span tags with the same id\nLiftRules.noticesToJsCmd uses jQuery.html() to send the contents of buitin.snippet.Msg.renderIdMsgs. The result is:\n\n<span id="myid">\n  <span id="myd">\n...\n  </span>\n<span>\n\nEasily fixed by moving the span tag in renderIdMsgs to render.\n\nhttps://groups.google.com/d/msg/liftweb/gaJYcGWTRGo/bYHuIoSlBi8J'
730,'dpp','AutoComplete (jquery widget) and CometActor don\'t work together\nnet.liftweb.widgets.autocomplete.AutoComplete and CometActor don\'t work together.\ndemo: https://github.com/meiko/lift-comet-autocomplete\n\nto refer to: http://groups.google.com/group/liftweb/browse_thread/thread/79379dcd4ef10d58/e39a826659d293b1?lnk=gst&q=comet+autocomplete#e39a826659d293b1\n("The AutoComplete widget uses the q and limit parameters which are not available within the scope of the CometActor. ")\n'
164,'dpp','S.notice, S.error, etc. broken from within AJAX/JSON calls\nI had some code working where the snippet generates a JSON callback which uses S.notice / S.error to push notifications back to the browser in addition to whatever JS commands the snippet decides to push down, but it seems that this is now broken in 1.1-SNAPSHOT and 1.1-M7. I can confirm that just after I call S.notice within the jsonCall that S.getNotices has the proper thing in it, but by the time LiftRules.noticesToJsCmd gets called it has vanished.\r\n\r\nI\'ve created a modified lift-archetype-blank that demonstrates the behavior at http://www.github.com/dridus/test-missing-notices -- here is a overview of the code:\r\n\r\nIn template:\r\n\r\n    <lift:surround with="default" at="content">\r\n       <lift:helloWorld.callback />\r\n    \r\n       <h2>Welcome to your project!</h2>\r\n       <p>\r\n       </p>\r\n    \r\n       <lift:Msgs />\r\n    \r\n       <button onclick="testCallback()">Click me</button>\r\n    \r\n    </lift:surround>\r\n\r\nIn Boot:\r\n\r\n       val oldNoticesToJsCmd = LiftRules.noticesToJsCmd\r\n\r\n       LiftRules.noticesToJsCmd = () => {\r\n           println("at noticesToJsCmd: S.getNotices = " + S.getNotices)\r\n           oldNoticesToJsCmd()\r\n       }\r\n\r\nIn snippet:\r\n\r\n    class HelloWorld extends DispatchSnippet {\r\n       val dispatch: DispatchIt = {\r\n           case "callback" => renderCallback _\r\n       }\r\n    \r\n       def renderCallback(ns: NodeSeq): NodeSeq = {\r\n           S.notice("this is the test notice from the snippet")\r\n           <head>{ Script {\r\n               Function("testCallback", Nil, jsonCall(JsNull, (_: Any) => {\r\n                   S.notice("this is the test notice from the callback")\r\n                   println("in callback: S.getNotices = " + S.getNotices)\r\n                   Noop\r\n               })._2)\r\n           } }</head>\r\n       }\r\n    }\r\n\r\nThe output from this on the command line is:\r\n\r\n    INFO - Service request (GET) / took 570 Milliseconds\r\n    INFO - Service request (GET) /classpath/jquery.js took 15 Milliseconds\r\n    INFO - Service request (GET) /ajax_request/liftAjax.js took 8 Milliseconds\r\n    in callback: S.getNotices = List((net.liftweb.http.NoticeType(0),this is the test notice from the snippet,Empty), (net.liftweb.http.NoticeType(0),this is the test notice from the callback,Empty))\r\n    at noticesToJsCmd: S.getNotices = List()\r\n    INFO - Service request (POST) /ajax_request/F1007892194776GPS/ took 59 Milliseconds\r\n\r\nAnd no notice appears.\r\n'
447,'indrajitr','POM Housekeeping\nI noticed two things in the POMs that might need some attention:\n* First there are some dependency declarations with version and scope in "downstream modules", e.g. the paranamer-dependency in lift-json. I think that *all* version and scope declarations belong into lift-parent, except for cases where we need a special scope or version (should rarely be the case).\n* Second we use a deeply nested POM structure, e.g. lift-common has got parent lift-base has got parent framework ... IMHO the modules should directly "extend" lift-parent. But let\'s discuss!'
1013,'dpp','invalid XML transformations with Html5Properties\nWhen LiftRules.htmlProperties.default is set to Html5Properties, XML documents are transformed in odd ways, in some cases producing invalid XML. The example code at git@github.com:mpokorny/TestFeed.git demonstrates the problem in an application that produces an Atom feed. The errors in this application are that the "xmlns" attribute of the "feed" element, and the closing tag of the "link" element are both missing in the Atom feed document, although both are initially present in the code before the call to AtomResponse().\n'
22,'','S.params throws exception for a non-existent parameter\nFrom the list:\r\n\r\nHi,\r\n\r\nI have been having trouble reading a list of HTTP parameters with the\r\nsame name that may or may not exist. If I call S.params("nn") and "nn"\r\ndoesn\'t exist, it throws a NoSuchElementException: "key not found". I\r\nwas expecting an empty List.\r\n\r\nThe code for S.params is\r\n\r\ndef params(n: String): List[String] = request.map(_.params(n)).openOr\r\n(Nil)\r\n\r\nShouldn\'t it be something like:\r\n\r\ndef params(n: String): List[String] = request.map(_.params.getOrElse\r\n(n,Nil)).openOr(Nil)'
305,'Dridus','Add Optional variants of the basic record fields\nThe basic record fields currently in lift-record are non-NULLable. For lift-couchdb I needed Optional versions that can represent no-value-here.\r\n'
588,'dpp','Multiple <lift:lazy-load> in the same page does not work as expected\nMultiple <lift:lazy-load> tag in one page does not work properly, Lift recognizes only the first one, remaining ones it skips.\n\nHere is a sample html code:\n\n<lift:surround with="default" at="content">\n    <table>\n        <lift:lazy-load>\n            <pre>First Lazy call</pre>\n        </lift:lazy-load>\n        <lift:lazy-load>\n            <pre>Second Lazy call</pre>\n        </lift:lazy-load>\n        <lift:lazy-load>\n            <pre>Third Lazy call</pre>\n        </lift:lazy-load>\n    </table>\n</lift:surround>\n\nIn the above example only the first tag gets executed and hence it prints only the first statement "First Lazy call". Remaining tags are skipped.\nWhereas all three should have been executed.\n'
871,'indrajitr','Split main Lift project into separate projects\nAs followup to the discussion in the mailing list [1].\n\nInitially, have the following:\n- Framework [github.com/lift/framework]\n- Modules [github.com/lift/modules]\n- Examples [github.com/lift/examples]\n- Archetypes [github.com/lift/archetypes]\n\n[1] http://groups.google.com/group/liftweb/browse_thread/thread/3d89d4bea9105ee3\n'
729,'dpp','Comet infinite requests after container restart\nWhen a page containing a CometActor is left open while the underlying servlet container is restarted, after a few seconds the browser will issue many GET requests, possibly forever.\n\nThe problem is described at http://groups.google.com/group/liftweb/browse_thread/thread/ace38cf01717d7c5\n\nAn example project that demonstrates the problem is at https://github.com/zcox/lift-multi-comet\n\nAffects at least:\n - Firefox on Ubuntu & OS X\n - Opera on Ubuntu\n\nDoes not affect:\n - Chrome on Ubuntu & OS X\n\nProblem occurs in containers:\n - Jetty (local dev using sbt)\n - Tomcat (on Amazon EC2)'
163,'indrajitr',"Lift pom needs to be updated for new scala-tools.org hudson policies.\nLift's pom needs to be changed for the new nexus/hudson policies on scala-tools.org.  I have a forked repo (jsuereth/liftweb) with the changes (also shown below):\n<pre>\n--- a/pom.xml\n+++ b/pom.xml\n@@ -806,16 +806,16 @@\n       <id>hudson</id>\n       <distributionManagement>\n         <repository>\n-          <id>hudson.scala-tools.org</id>\n-          <url>file:///home/scala-tools.org/www/repo-snapshots</url>\n+          <id>nexus.scala-tools.org</id>\n+          <url>http://nexus.scala-tools.org/content/repositories/releases</url>\n         </repository>\n         <snapshotRepository>\n-          <id>hudson.scala-tools.org</id>\n-          <url>file:///home/scala-tools.org/www/repo-snapshots</url>\n+          <id>nexus.scala-tools.org</id>\n+          <url>http://nexus.scala-tools.org/content/repositories/snapshots</url>\n           <uniqueVersion>false</uniqueVersion>\n         </snapshotRepository>\n         <site>\n-          <id>hudson.scala-tools.org</id>\n+          <id>nexus.scala-tools.org</id>\n           <url>file:///home/scala-tools.org/www/mvnsites-snapshots/liftweb</url>\n         </site>\n       </distributionManagement>\n</pre>"
1012,'dpp','StateInStatelessException when accessing SessionVar in Dispatch with 404 handler\nDiscussion: http://groups.google.com/group/liftweb/browse_thread/thread/fab7a2afe6c440c9\nTest case: https://github.com/alexblack/Lift-StateInStatelessException\n\n1. I created a new lift project, using the 2.8.1 and 2.3 info from here: http://www.assembla.com/spaces/liftweb/wiki/Using_Maven \n2. I added this code to Boot: \n\nobject Session { \n  object flag extends SessionVar[Boolean](true) \n} \n\nclass Boot \n  def boot { \n    // snip \n    setCustomSettings \n    // snip \n  } \n  def setCustomSettings { \n    LiftRules.dispatch.prepend { \n      case _ if Session.flag.is == true => () => Empty \n    } \n    // Catch 404s \n    LiftRules.uriNotFound.prepend { \n      case _ => NotFoundAsTemplate(ParsePath("404" :: Nil, "html", \nfalse, false)) \n    } \n  } \n} \n\nAccessing http://localhost:8080/ gives a 500 error: Attempt to initialize a stateless session within the context of a stateful session (StateInStatelessException)\n\nIf you comment out the LiftRules.uriNotFound code, then you get a simple Lift not found response (when you should get the webapp). \n\nHTTP ERROR 500\n\nProblem accessing /. Reason:\n\n    Attempt to initialize a stateless session within the context of a stateful session\nCaused by:\n\nnet.liftweb.http.StateInStatelessException: Attempt to initialize a stateless session within the context of a stateful session\n\tat net.liftweb.http.S$class.statelessInit(S.scala:1178)\n\tat net.liftweb.http.Req.notFoundViaTemplate(Req.scala:1013)\n\tat net.liftweb.http.Req.createNotFound(Req.scala:1028)\n\tat net.liftweb.http.LiftRules$class.notFoundOrIgnore(LiftRules.scala:449)\n\tat net.liftweb.http.LiftRules$$anon$1.notFoundOrIgnore(LiftRules.scala:56)\n\tat net.liftweb.http.LiftServlet$$anonfun$liftedTree1$1$1.apply(LiftServlet.scala:331)\n\tat net.liftweb.http.LiftServlet$$anonfun$liftedTree1$1$1.apply(LiftServlet.scala:325)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$class.functionLifespan(S.scala:1611)\n\tat net.liftweb.http.LiftServlet.liftedTree1$1(LiftServlet.scala:324)\n\tat net.liftweb.http.LiftServlet.net$liftweb$http$LiftServlet$$dispatchStatefulRequest(LiftServlet.scala:311)\n\tat net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:263)\n\tat net.liftweb.http.LiftServlet$$anonfun$doSession$1$1.apply(LiftServlet.scala:263)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$wrapQuery(S.scala:1357)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1$$anonfun$apply$34.apply(S.scala:1505)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$doAround(S.scala:1286)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$doAround$1.apply(S.scala:1287)\n\tat net.liftweb.db.DB$$anon$2$$anonfun$apply$12$$anonfun$recurseMe$1$1.apply(DB.scala:227)\n\tat net.liftweb.db.DB$$anon$2$$anonfun$apply$12$$anonfun$recurseMe$1$1.apply(DB.scala:227)\n\tat net.liftweb.db.DB$$anonfun$use$1.apply(DB.scala:619)\n\tat net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tat net.liftweb.db.DB$class.use(DB.scala:616)\n\tat net.liftweb.db.DB$$anon$1.use(DB.scala:38)\n\tat net.liftweb.db.DB$$anon$2$$anonfun$apply$12.apply(DB.scala:229)\n\tat net.liftweb.util.DynoVar$class.run(ThreadGlobal.scala:95)\n\tat net.liftweb.db.DB$$anon$2.apply(DB.scala:203)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$doAround(S.scala:1287)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_nest2InnerInit$1.apply(S.scala:1503)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_nest2InnerInit(S.scala:1502)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40$$anonfun$apply$41.apply(S.scala:1541)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$withReq$1.apply(S.scala:1551)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$class.withReq(S.scala:1550)\n\tat net.liftweb.http.S$.withReq(S.scala:48)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39$$anonfun$apply$40.apply(S.scala:1540)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38$$anonfun$apply$39.apply(S.scala:1539)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1$$anonfun$apply$38.apply(S.scala:1538)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_innerInit$1.apply(S.scala:1537)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_innerInit(S.scala:1536)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47$$anonfun$apply$48.apply(S.scala:1574)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46$$anonfun$apply$47.apply(S.scala:1572)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:538)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(S.scala:1571)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:538)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44$$anonfun$apply$45.apply(S.scala:1570)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1$$anonfun$apply$44.apply(S.scala:1569)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$$anonfun$net$liftweb$http$S$$_init$1.apply(S.scala:1568)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.S$class.net$liftweb$http$S$$_init(S.scala:1567)\n\tat net.liftweb.http.S$class.init(S.scala:1171)\n\tat net.liftweb.http.LiftServlet.doSession$1(LiftServlet.scala:262)\n\tat net.liftweb.http.LiftServlet.doService(LiftServlet.scala:272)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:122)\n\tat net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:121)\n\tat net.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:344)\n\tat net.liftweb.util.Helpers$.calcTime(Helpers.scala:34)\n\tat net.liftweb.util.TimeHelpers$class.logTime(TimeHelpers.scala:363)\n\tat net.liftweb.util.Helpers$.logTime(Helpers.scala:34)\n\tat net.liftweb.http.LiftServlet.doIt$1(LiftServlet.scala:121)\n\tat net.liftweb.http.LiftServlet.service(LiftServlet.scala:132)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:68)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2$$anonfun$apply$mcV$sp$1.apply(HTTPProvider.scala:68)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.URLRewriter$.doWith(Req.scala:1228)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:67)\n\tat net.liftweb.http.provider.HTTPProvider$$anonfun$service$2.apply(HTTPProvider.scala:67)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.provider.HTTPProvider$class.service(HTTPProvider.scala:63)\n\tat net.liftweb.http.LiftFilter.service(LiftServlet.scala:722)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1$$anonfun$apply$mcV$sp$1.apply(ServletFilterProvider.scala:62)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:544)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:543)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:542)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:541)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:540)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$$anonfun$doFilter$1.apply(ServletFilterProvider.scala:61)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14$$anonfun$apply$15.apply(Vars.scala:544)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13$$anonfun$apply$14.apply(Vars.scala:543)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12$$anonfun$apply$13.apply(Vars.scala:542)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$$anonfun$apply$12.apply(Vars.scala:541)\n\tat net.liftweb.util.ThreadGlobal.doWith(ThreadGlobal.scala:71)\n\tat net.liftweb.http.CoreRequestVarHandler$class.apply(Vars.scala:540)\n\tat net.liftweb.http.provider.servlet.ServletFilterProvider$class.doFilter(ServletFilterProvider.scala:60)\n\tat net.liftweb.http.LiftFilter.doFilter(LiftServlet.scala:722)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:322)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)'
21,'','Add Germany to Countries and MappedPostalCode validation\n'
304,'hoffrocket','Upgrade jQuery to 1.4.1\nUpdate the included jquery.js to 1.4.1'
587,'',' StatefulSnippet.link() function does not take Attribute Parameters \nTaken from this Groups discussion: http://groups.google.com/group/liftweb/browse_thread/thread/738d5867ab22748d\n\nHi,\n\ni am curious why the StatefulSnippet.link() function does not take any\nAttributes as the SHtml.link() function does.\n\nIs there any reason for this?\nI would suppose to add the possibility to do so, as seen below:\n\n\nh3. Currently: \n\ndef link(to: String, func: () => Any, body: NodeSeq): Elem = SHtml.link(to, () => {registerThisSnippet(); func()}, body)\n\nh3. Possible Fix:\n\ndef link(to: String, func: () => Any, body: NodeSeq, attrs: (String, String)*): Elem = SHtml.link(to, () => {registerThisSnippet(); func()}, body, attrs)\n\nJan Blankenhorn '
870,'migo',"Problems with ManyToMany relations in Squeryl-Record\nManyToMany relations only work partly in Squeryl-Record at the moment.\nThe relation table has to be a record and Squeryl's convenience functions for creating relations do not work.\n\nIt would be easier if normal POSOs could be used for the relation table. Then, the convenience functions would work automatically.\nThis does not work at the moment because RecordTypeMode assumes that all mapped classes are of type Record.\n"
1153,'andreak','More configurable comet-timeouts\nAdd separate timeout for render-method in LiftRules.cometRenderTimeout and make it overridable on a per. comet-basis. This also includes making LiftRules.cometProcessingTimeout overridable on a per comet-basis.'
728,'','Jx ignores XML namespace\n\nThe namespace of a XML Element gets lost through net.liftweb.http.js.Jx .toJs\n\n\nExample: \n\n<pre><code>Jx(<abc:xyz xmlns:abc="http://abc.com/abc" />)</code></pre> generates\n<pre><code>… document.createElement("xyz"); …\n</code></pre>\n but should genererate something more like\n<pre><code>… document.createElementNS("http://abc.com/abc", "abc:xyz"); …</code></pre>\n'
162,'dpp',"Record field helpers\nPlease add valMinLen and valMaxLen validation functions to net.liftweb.record.field.StringField. If it's preferred to put them in a separate helper object that would be fine as well.\r\n\r\nAlso, a companion object for LocaleField that has a list of all possible locales (similar to TimeZoneField) would be nice.\r\n\r\nThanks"
445,'','Make lift-mapper an OSGi bundle and fix broken OSGi configuration of other modules\n* lift-mapper has not yet been an OSGi bundle (no maven-bundle-plugin in build section of POM)\n* Through various changes, e.g. new modules (lift-json), new Logging, etc. the OSGi configuration of some modules is broken\n'
1011,'jonifreeman','Serialization of opaque JSON values fails\ncase class Opaque(x: JValue)\nSerialization.write(x)\n'
20,'tjweir','Add Twitter IDs to the team page.\nAdd Twitter IDs to the team page.\n\nLighthouse #3: http://liftweb.lighthouseapp.com/projects/26102/tickets/3'
303,'jonifreeman','JSON extraction and serialization improvements\nAdd support to extract JSON object into scala.Map.\r\nSupport serialization of recursive types.\r\n'
586,'timperrett',"Enhance the OOTB experience\nI've made a bunch of enhancements to Lift Paypal - none of which are breaking changes, but it now gives a far better out of the box experience as it can generate the button for you and everything, all customizable, with its own little PaypalRules object using FactoryMaker's so you could even override stuff on a per-locale or per-request basis. "
869,'migo','Outer Joins do not work in Squeryl-Record\nSome implicit conversions are missing for dealing with outer joins.\n\nExample:\n\ndef getAccessKeyAndStudentsOn() =\n      join(KKSchema.accessKeys, KKSchema.students.leftOuter) ((ak, s) =>\n        select(ak, s)\n        on(ak.authKey === s.map(_.authKey)))\n\n\n[error] D:\\scala\\lift\\src\\main\\scala\\code\\snippet\\HelloWorld.scala:55: type\nmismatch;\n[error]  found   :\nOption[net.liftweb.record.field.StringField[code.model.Student]]\n[error]  required: org.squeryl.dsl.NonNumericalExpression[String]\n[error]         on(ak.authKey === s.map(_.authKey)))\n[error]                                               ^\n\nReported in this thread: \nhttp://groups.google.com/group/liftweb/browse_thread/thread/ba423af7b40daa6f/a1356d902ed1af19#a1356d902ed1af19\n\nThere need to be implicit conversions for Option[TypedField[T]] to NonNumericalExpression[T] or NumericalExpression[Option[T]], depending on the type. '
1152,'andreak','Add LiftRules.cometProcessingTimeout to have configurable timeouts for comet-requests\nThis is especially useful when developing using JRebel when requests often take way more than 5s (the current hard-coded timeout).'
727,'dpp','Create new HTTP session on login\nIt is strongly recommended, for security reasons, that web applications should destroy the existing session and create a new session when a user successfully logs in to the application. There should be some reasonably easy way to do this in Lift.\n\n\n'
161,'indrajitr','Automated tests for all archetypes\nPart of the build process should insure that archetypes are tested automatically'
444,'dpp','Add big fat warning on use of props when no props file found\nAlter users to a missing properties file'
1010,'','json-ext: JodaTime should restore dates as UTC (github pull request)\nSee https://github.com/samokk/framework/commit/3f45e047ceb604ba676bde1902cc81d24bd765e5'
19,'','Update Mapper/Record to handle unique indices\nUpdate Mapper/Record to handle unique indices\n\nLighthouse #14: http://liftweb.lighthouseapp.com/projects/26102/tickets/14'
302,'','ItemsListEditor should display items pending removal, albeit in strikeout font\n'
585,'dchenbecker','Oracle driver is missing FK support and "timestamp" isn\'t a reserved word\nWhile investigating other FK issues, I found that the Oracle Mapper driver isn\'t set to use FKs (it supports them), and that "timestamp" isn\'t a reserved word. The latter issue can result in SQL errors at least during schemify.'
1151,'dcbriccetti','Support pie charts in Flot widget\nFlot 0.7 ships with a pie chart plugin. Enhance the Lift Flot widget to support some reasonable subset of the pie chart’s features. \n\nSee https://groups.google.com/forum/#!searchin/liftweb/flot$20pie/liftweb/okbMDE3RyL0/3d401H6MdZkJ for a discussion in the Lift group.'
726,'dpp','allow multiple css selectors for the same id\nI should be able to apply multiple css selectors to the same element:\n\n<pre><code>  val xhml = <a class="link" href="#">link text</a>\n  val func = \n    ".link [href]" #> "http://example.org" & \n    ".link *" #> "example"\n  println(func.apply(xhml))\n</code></pre>\n\nWith 2.2-M1 this results in:\n\n<pre><code> <a href="http://example.org" class="link">link text</a></code></pre>\nbecause the second selector is ignored as it has the same id - .link - as the first\n\nIt should result in:\n\n<pre><code> <a href="http://example.org" class="link">example</a></code></pre>\n\ni.e. both selectors should apply, even though they are based on the same css id with different subnodes.\n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/c50d6ee416f77692'
160,'dpp',"IN & OrderBy conflict in H2\n\r\nI just noticed OrderBy statements cause Inner selects to break in h2:\r\n\r\nI query such as: User.findAll(In(User.id, Dog.owner, OrderBy(Dog.name,\r\nAscending)), MaxRows(5))\r\n\r\nProduces:\r\n\r\nMessage: org.h2.jdbc.JdbcSQLException: Order by expression NAME must\r\nbe in the result list in this case; SQL statement:\r\nSELECT DISTINCT OWNER AS _0\r\nFROM PUBLIC.DOG /* PUBLIC.DOG_TABLE_SCAN */\r\nORDER BY =NAME [90068-117]\r\n\r\nCode to duplicate here:\r\n\r\nhttp://github.com/hoffrocket/lift_1_1_sample/commit/0093e2585e0d9d799b503f32da7496e212efd873\r\n\r\nThis works in M5.  Any chance a workaround or fix could be put out\r\nbefore M7?  Sorry, I didn't notice until today."
443,'timperrett','Add response code overload to JsonResponse and rename HeaderStuff\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c3ac2907e424de78\n\nCheers'
1009,'jonifreeman','Primitive related reflection code in JSON does not work in Scala 2.9\nJava reflection no longer works with types constructed with primitives. Read that information from ScalaSig.'
18,'dchenbecker','Test Mapper against Oracle\nTest Mapper against Oracle\n\nLighthouse #8: http://liftweb.lighthouseapp.com/projects/26102/tickets/8'
301,'','ItemsListEditor should allow custom columns\n'
584,'dpp','Many of the Scripts are not properly escaped\nMany of the Widgets have improperly escaped script tags such as:\n\n <script type="text/javascript" charset="utf-8">{\n        Unparsed("\\nvar itemClick = " + (itemClick openOr JsRaw("function(param){}")).toJsCmd) ++\n        Unparsed("\\nvar calendars = " + CalendarUtils.toJSON(calendars filter (c => c.start.after(cal) && c.start.before(lastCal))).toJsCmd) ++\n        Unparsed("""\n         jQuery(document).ready(function() {\n            CalendarWeekView.buildWeekViewCalendars();\n          })\n         """)\n       }\n      </script>\n\nNote that if there are XML characters in any of the Strings they will either cause XML parsing problems or they will cause improperly generated JavaScript.\n\nAll JavaScript should look like:\nScript(...)\nor\nScript(JsRaw(...))\n\nIn no event should we do Unparsed or manually create the <script> tags.'
867,'dpp','S.callOnce and S.oneShot does not work as described\nDiscussed on the mailing list at http://groups.google.com/group/liftweb/browse_thread/thread/aa191cc672292853#\n(copied from mail)\n\n/**\n   * All functions created inside the oneShot scope\n   * will only be called once and their results will be\n   * cached and served again if the same function is invoked\n  */\nS.oneShot\n\nthis is not correct since the function is not removed until AFTER the function has completed.\nThe result it that oneShot can be called multiple times\n\n/**\n   * If you bind functions (i.e. using SHtml helpers) inside the closure passed to callOnce,\n   * after your function is invoked, it will be automatically removed from functions cache so\n   * that it cannot be invoked again.\n   */\n S.callOnce\n\nthis behaves according to the documentation as the function is removed after the invocation.\nBut since the method is called "callOnce" one could easily be lead to believe that it would be called only once\n\nsbt project demonstrating the issue with the current implementation can be found at: https://github.com/teigen/call_once'
1150,'andreak','SHtml.a(() => JsCmd, NodeSeq, ElemAttr*) triggers unwanted behavior in IE\nThe following code:\n<pre><code>\n".link" #> SHtml.a(() => Alert("hi"), Text("Click me))\n</code></pre>\nGenerates code without "return false;" as the last statement in the onclick-handler:\n<pre><code>\n<a class="link" href="javascript://" onclick="liftAjax.lift_ajaxHandler(&quot;F237884313362YJQVOJ=true&quot;, null, null, null)">Click me</a>\n</code></pre>\nIn my application i have a window.onbeforeunload handler which the above code triggers in IE due to the missing "return false;".\n\nThis example-code triggers the issue in IE:\n<pre><code>\n<html>\n<head></head>\n<body>\n<script>window.onbeforeunload = function() {alert("Fooka fooka!");}</script>\n<a href="javascript://" onclick="alert(\'onbeforeunload will NOT trigger\'); return false;">good</a>\n<a href="javascript://" onclick="alert(\'onbeforeunload WILL trigger\');">bad</a>\n</body>\n</html>\n</code></pre>\nAfter clicking the "bad"-link In IE, the above code will show a second alert showing "Fooka fooka" after showing "onbeforeunload WILL trigger".'
725,'dpp','Add ProtoUser to Record\nAdd ProtoUser/MetaProtoUser to Record'
159,'dpp','Implement Wizard multi-screen input forms\n'
442,'dpp','Incorrect initialization (override val) in LoggedStatementWrapper\nProblem with LoggedStatementWrapper initialization.  '
17,'','"<lift:snippet type=""Foo.bar""> != <lift:Foo.bar>"\n"<lift:snippet type=""Foo.bar""> != <lift:Foo.bar>"\n\nLighthouse #21: http://liftweb.lighthouseapp.com/projects/26102/tickets/21'
300,'','ItemsList.save unremoves removed unsaved items\n'
583,'dpp','snippet errors in CRUDify view/edit/delete pages\nre-evaluation of menu creation code in dev mode causes snippet errors in CRUDify view/edit/delete pages. Discussion at http://groups.google.com/group/liftweb/browse_thread/thread/976a902badd2f585'
866,'dpp','SHtml.memoize: caching templates for AJAX re-rendering\nAdd facilities to allow caching of snippet templates, such that they are available for subsequent AJAX calls.\n\nThis thread contains a discussion:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/78e384c86095ab43?hl=en\n\nIn summary: DPP suggested a SHtml.memoize method, that would work something like this:\n\n<pre><code>object MySnip {\n def render = SHtml.memoize {"#Foo" #> bar}\n}\n\ndef memoize(transform: => NodeSeq => NodeSeq): NodeSeq => NodeSeq with MemoizedTransform\n\ntrait MemoizedTransform {\n /**\n * Run the transform again against the most recently passed NodeSeq\n */\n def applyAgain(): NodeSeq\n}\n</code></pre>\n\n@DPP: So what will happen is that MemoizedTransform will capture the most recently applied (for the scope of the Request) NodeSeq so in your ajax call, you simply say "applyAgain()" and voila, you get the transform applied to the\nmemoized view.'
1149,'eltimn',"MongoRecord should reset dirty flags on save\nMongoRecord should be resetting the fields' dirty flags on save."
724,'dpp','Add ability to customize event sent in ListenerManager\nAdd the ability to send a custom event to listeners\n'
158,'dpp','Upgrade Lift to build against Specs 1.6.1\nAnd ScalaTest 1.0 and ScalaCheck 1.6\r\n'
441,'','Access #424 functionality in menu snippe\nNeed a default way of accessing the tree group functionality added in ticket 424'
1007,'dpp',"Lift Machine is stealing from its children\nHello! I hope things are well with you.  I have been trying to compile\nlift with RC3 and I ran into something hard to figure out in\nlift-modules, so I enclose my findings.\n\nYou have some code along these lines.  (The code below compiles in 2.8.1.)\n\ntrait MetaProtoStateMachine [MyType <: ProtoStateMachine[MyType,\nStateType], StateType <: Enumeration]\nextends ProtoStateMachine[MyType, StateType] {\n self: MyType =>\n\n protected def processEvent(who: MyType, x: Int) {\n   getSingleton.processEvent(this, x)\n }\n}\n\ntrait ProtoStateMachine[MyType <: ProtoStateMachine[MyType, StateType],\nStateType <: Enumeration] {\n self: MyType =>\n\n type Meta = MetaProtoStateMachine[MyType, StateType]\n def getSingleton: Meta\n\n def processEvent(x: Int): Unit = {\n   getSingleton.processEvent(this, x)\n }\n}\n\nThis only compiled in 2.8.1 due to a bug, which has been fixed.\n\n https://lampsvn.epfl.ch/trac/scala/ticket/3871\n\nThe error message is extremely confusing due to the overload: because\nthere is a method with the same name which is accessible, it assumes you\ngave the wrong number of arguments and doesn't tell you that the\nprotected one was inaccessible.  I intend to open a ticket about the\nerror message.\n\nThe confusing error is:\n\n./a.scala:17: error: too many arguments for method processEvent: (x:\nInt)Unit\n   getSingleton.processEvent(this, x)\n                            ^\none error found\n\nBut if we rename the 2-argument method to processEvent2 and leave the\nother alone, we get the less confusing error:\n\n./a.scala:17: error: method processEvent2 in trait MetaProtoStateMachine\ncannot be accessed in ProtoStateMachine.this.Meta\n Access to protected method processEvent2 not permitted because\n enclosing class trait ProtoStateMachine is not a subclass of\n trait MetaProtoStateMachine where target is defined\n   getSingleton.processEvent2(this, x)\n                ^\none error found\n\n\nSuperclass can't access protected members of subclass, even from the\nsame instance.  It's like stealing from your children!"
16,'dchenbecker','Fix varchar and text types in SqlServerDriver\nFix varchar and text types in SqlServerDriver\n\nLighthouse #22: http://liftweb.lighthouseapp.com/projects/26102/tickets/22'
299,'','ItemsList should be have refresh method to clear added/removed without requerying database\n'
582,'dpp','SQL UPDATE query support in Mapper\nIt would be nice to have a method DB.runUpdate (like the runQuery method but for update).'
865,'dpp','LiftScreen adds id attribute to all elements in toForm html\nLiftScreen currently adds an id attribute to all elements in a field\'s toForm html. This makes it difficult to use javascript to select the element and violates the uniqueness of ids on a page.\n\nAlso, the code that checks for the existence of an id attribute never gets called because uniqueFieldId takes precedence and the xml selector fails as well.\n\nAll of this is in ScreenWizardRendered.bindFieldLine\n\nI\'m not sure what the solution for the first part is, but the second part could be fixed with changing:\n\nval curId = f.field.uniqueFieldId or theForm.flatMap(x => (x \\ "@id").headOption.map(_.text)) openOr Helpers.nextFuncName\n\nto:\n\nval curId =  theForm.flatMap(x => (x \\\\ "@id").headOption.map(_.text)) or f.field.uniqueFieldId openOr Helpers.nextFuncName\n\nMailing list discussion:\nhttps://groups.google.com/d/topic/liftweb/bfHnuH_AB2k/discussion'
1148,'eltimn',"Add java.util.logging.config system property to default build options\nThis quiets down the mongo-java-driver so it won't print stack traces on warnings. Should clean up the build log on systems that don't have mongodb installed."
723,'eltimn','Add asJValue and fromJson to Record\nAdd asJValue and fromJson functions to Record. fromJSON already exists, but uses JSONParser. fromJson will use lift-json parser.'
157,'','MappedPassword contains misspelled key for unset password\npassword.must.set should be password.must.be.set, the later is in lift-core.properties'
440,'Dridus','Move JValue encoding/decoding out of lift-couchdb into lift-record\nRemoving all those JSON record specific fields except for the odd ball ones (subrecord, array of values, etc)\n'
1006,'dpp','RestContinuation does not work on Jetty7\nRestContinuation.async does not work correctly in Jetty7\n\nSee https://groups.google.com/d/topic/liftweb/J3dDlERNonk/discussion\n\n'
15,'dchenbecker','Update Lift and JPA page on Wiki\nUpdate Lift and JPA page on Wiki\n\nLighthouse #23: http://liftweb.lighthouseapp.com/projects/26102/tickets/23'
298,'dpp','ByList should remove duplicats from list before db query\nFrom line ~390 of MetaMapper.scala\r\n\r\nremoveDuplicates from vals\r\n\r\n'
581,'dpp',"Replace JS Command is fragile\nBasically, if the id you're looking to replace doesn't exist, bad things happen.  Add some error detection"
864,'dpp','Json rest msgs through JsonPost have charset encoding issues\nHave had some trouble receiving json rest messages correctly which transforms my nice national special characters to garbage. \n\nThe Req.json method will be read with the default encoding and it does not change even if I set the content type charset header. I\'m not entirely sure what charset should be default when the charset header is not specified. On one hand it\'s alright to be able to specify it (even though it is set for the whole vm). On the other hand the json rfc 4627 specifies that utf-8 is the default encoding. I use my own JsonPost-rewrite that uses the latter fallback. It looks like this now:\n\n  def charset(req: Req) = {\n    val props = req.contentType.openOr("").split(";").map(_.split("=")).filter(_.length == 2).map(a => (a(0).trim.toLowerCase, a(1).trim)).toMap\n    props.get("charset").getOrElse(org.apache.http.protocol.HTTP.UTF_8)\n  }\n\n  // Copied from Req and modified\n  def json(req: Req): Box[JsonAST.JValue] =\n    try {\n      import _root_.java.io._\n      req.body.map(b => JsonParser.parse(new InputStreamReader(new ByteArrayInputStream(b), charset(req))))\n    } catch {\n      case e: Exception => Failure(e.getMessage, Full(e), Empty)\n    }\n\n  // Copied from RestHelper (JsonBody/JsonPost) and modified\n  protected trait RealJsonBody {\n    def body(r: Req): Box[JValue] = json(r)\n  }\n\n  protected lazy val RealJsonPost = new TestPost[JValue] with JsonTest with RealJsonBody\n\n  // My code\n  serve {\n    case RealJsonPost("rest" :: "memberships" :: Nil, (json, _)) => createMembership(json)\n  } \n\nThanks\nThorÅge'
1147,'eltimn','Upgrade mongo-java-driver to v2.6.5\nUpgrade to latest stable mongo-java-driver'
722,'dpp','add a method to ProtoUser that allows mutation of to ProtoUser on sign up and editing\nOn Wed, Nov 10, 2010 at 10:51 AM, David Pollak <feeder.of.the.bears@gmail.com> wrote:\n\n\n\n    On Tue, Nov 9, 2010 at 10:52 PM, Eric Brigham <ebrigham@gmail.com> wrote:\n\n        Hi guys (and gals),\n        I\'m trying to figure out if it\'s possible to pre-populate the signup form with GET values passed.  I have a couple custom fields that I would like to be filled out automatically when the user clicks a custom signup link.  Is this possible, or is it necessary to write my own signup form?  Thanks in advance.\n        --Eric\n\n\n    You\'d have to override the signup method:\n\n    def signup = {\n        val theUser: TheUserType = createNewUserInstance()\n\n    // use S.param to populate fields... e.g. S.param("first_name").foreach(fn => theUser.firstName(fn))\n\n        val theName = signUpPath.mkString("")\n\n        def testSignup() {\n          validateSignup(theUser) match {\n            case Nil =>\n              actionsAfterSignup(theUser)\n              S.redirectTo(homePage)\n\n            case xs => S.error(xs) ; signupFunc(Full(innerSignup _))\n          }\n        }\n\n        def innerSignup = bind("user",\n                               signupXhtml(theUser),\n                               "submit" -> SHtml.submit(S.??("sign.up"), testSignup _))\n\n        innerSignup\n      }\n'
156,'indrajitr',"JPADemo update pom dependencies hibernate-em 3.4.0GA and slf4j\nOpening an issue at Indrajit's request to update JPADemo/spa/pom.xml to use a newer version of hibernate-entitymanager 3.4.0.GA and resolve slf4j-1.4.2 impl dependencies.\n\nThe hibernate-entitymanager 3.4.0.GA version update causes an update to hibernate-core to 3.3.0.SP1 which **fixes auto-increment column problem with MySQL and H2 databases**, which was present in the older hibernate 3.2.4 (which dated back to before they called it hibernate-core) upon which hibernate-entitymanager 3.3.1 was depending.\n\nBelow is the configuration that worked for me.\n\n    <dependency>\n     <groupId>org.hibernate</groupId>\n     <artifactId>hibernate-entitymanager</artifactId>\n      <version>3.4.0.GA</version>\n      <exclusions>\n       <exclusion>\n        <groupId>javax.transaction</groupId>\n        <artifactId>jta</artifactId>\n       </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n     <groupId>org.slf4j</groupId>\n     <artifactId>slf4j-simple</artifactId>\n     <version>1.4.2</version>\n    </dependency>\n\nHad to manually install slf4j-simple/1.4.2 into to my local maven repo to avoid runtime exception for missing org.slf4j.impl.StaticLoggerBinder.  By putting the slf4j-simple dependency in the spa/pom.xml this allows users to swap out different impl providers (for example slf4j-log4j12) as they see fit, in fact it might not hurt to have an example of switching this over to slf4j-log4j12 or some other provider, perhaps even commented out just below the other one right in the pom.xml such as:\n\n    <!--\n     <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-log4j12</artifactId>\n      <version>1.4.2</version>\n     </dependency>\n    -->\n\nThanks!  Troy\n"
439,'mariusdanciu','Jetty 6 correction for comet\nSee this thread: http://groups.google.com/group/liftweb/browse_thread/thread/9620970164b3e3e0?hl=en_US#\n\nThe cause is a type for reflection code for parameters type'
1005,'jeppenejsum','Support for optional JsMember in JsExp.~>\nDetails: http://groups.google.com/group/liftweb/browse_thread/thread/375d8c492009675c\n'
14,'','SQL Server Alter Table Fail\nSQL Server Alter Table Fail\n\nLighthouse #25: http://liftweb.lighthouseapp.com/projects/26102/tickets/25'
297,'hoffrocket','Add additional functionality to lift-imaging module\n*  Account for orientation in resizing\r\n*  resize to max dimensions preserving aspect ratio\r\n*  resize to square preserving aspect ratio and cropping excess of larger dimension\r\n*  gps lat/long extraction\r\n\r\n'
580,'dchenbecker','LiftSession.processSnippet should handle StatefulSnippet instances returned via LiftRules.snippetDispatch\nGiven a StatefulSnippet class Foo, the following code returns a new instance every time because we don\'t properly locate current registered instances:\n\n\n<pre><code>\nLiftRules.snippetDispatch.append {\n  case "TestHello" => new TestHello\n}\n</code></pre>\n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/45feeef36b91ee9b for details\n'
863,'dchenbecker','Fix build logging\nCurrent build logs exceed 8MB. Can we tune logback to reduce DEBUG-level output unless specifically asked for?'
721,'dpp','Locs with params returning Loc.Stateless possibly keeping phantom sessions around\nWas trying out a custom Loc marked stateless and after repeatedly accessing the page the session count was increasing at least as reported by the SessionWatcher.  Disconcerting.'
155,'jeppenejsum',"Lift Mapper (Record) camelCase to snake_case for case insensitive databases\nPlease make the Scala identifier to database identifier translation convention dependent on whether the database supports case sensitive or case insensitive identifiers.\r\n\r\nFor example, Hibernate offers an Enhanced Naming Convention that translates Java camelCase to a more Oracle friendly snake_case.  I am interested in doing the same thing with Lift Mapper/ \r\nRecord.  In the mean time, I need to override dbTableName and dbColumnName, but I'd like to avoid that and just agree on the convention.\r\n\r\nI could imagine that the Database Provider would maintain a flag to say whether the database is case sensitive or not, and then based on that flag, would pass either the camelCase directly (for case sensitive), or snake_case(camelCase) (for case insensitive).\r\n\r\nI am specifically using Lift Mapper with Oracle, but I think this issue relates to Lift Record too as well as any other case insensitive database.\r\n\r\nSee discussion:  http://groups.google.com/group/liftweb/t/e7f85ede13b303da"
438,'',"Comet Requests Stop Jetty From Restarting\nWhen a CometActor is in use in a web application, the long-running requests to that Actor delays Jetty's restart when it detects a change in class files. This leads to logs that look like this:\n\n[INFO] restarting org.mortbay.jetty.plugin.Jetty6PluginWebAppContext@6bb93c\n{/,/home/debio/workspace/liftapp/src/main/webapp}\n[delay ranging from a few seconds to over a minute]\nINFO - Service request (GET) /comet_request/99063002597/n9frn2ckf67v took\n120002 Milliseconds\n[INFO] Webapp source directory =\n/home/debio/workspace/liftapp/src/main/webapp\n[INFO] Reload Mechanic: automatic\n[INFO] Classes = /home/debio/workspace/liftapp/target/classes\n[INFO] Context path = /\n[INFO] Tmp directory =  determined at runtime\n[INFO] Web defaults = org/mortbay/jetty/webapp/webdefault.xml\n[INFO] Web overrides =  none\n[INFO] web.xml file =\n/home/debio/workspace/liftapp/src/main/webapp/WEB-INF/web.xml\n[INFO] Webapp directory = /home/debio/workspace/liftapp/src/main/webapp\n2010-03-20 01:00:50.737:INFO::No Transaction manager found - if your webapp\nrequires one, please configure one.\nINFO - The CometActor lifttest.comet.Prob@1cf33a6 Received Shutdown\n[INFO] Restart completed at Sat Mar 20 01:00:51 CDT 2010 \n\nThie behavior isn't necessarily incorrect, but it does tend to hinder development as a restart that should take less than 2 seconds is extended to around a minute.\nI can provide a basic code example if necessary, but this bug occurs any time a Jetty restart is attempted while a Comet request is pending."
1004,'indrajitr',"minified files aren't bundled in Lift jars\nCurrently, lift framework jars are missing auto-generated resources, like minified files.  For example, lift-webkit.jar is missing jquery and lift minified files.\n\nThe issue is that Sbt is misconfigured: Lift uses BND sbt plugin, and LiftProject extends `BNDPluginProperties` which uses the main provided resource files [1], rather the main output resource file.  Overriding `bndIncludeResource` to include `project.mainResourcesOutputPath.absolutePath` in the `superbuild` project should fix the problem.\n\nI have already opened a ticket in `bnd4sbt` requesting to include output resources by default [2].\n\nThe relavent group thread is: http://groups.google.com/group/liftweb/browse_thread/thread/373b6730d9d27138 .\n\n[1] https://github.com/weiglewilczek/bnd4sbt/blob/master/src/main/scala/properties.scala#L142\n[2] https://github.com/weiglewilczek/bnd4sbt/issues/27\n"
13,'','Problems with MappedStringIndex (Derby / H2)\nProblems with MappedStringIndex (Derby / H2)\n\nLighthouse #26: http://liftweb.lighthouseapp.com/projects/26102/tickets/26'
296,'dpp','String == Box in JsCommands#ReplaceOption\nIn JsCommands.scala, in ReplaceOption method, there is a:\r\n8<-----------------------------\r\n(if (value == dflt) "y.selected = true; " else "")\r\n8<-----------------------------\r\nwith dflt:Box[String], and so never succed, it should be:\r\n8<-----------------------------\r\n(dflt match { case Full(x) => if (value == x) "y.selected = true; " else "" ; case _ => "" })\r\n8<-----------------------------\r\nor something alike'
579,'indrajitr','Update vscaladoc packageLink defs with baseUri for external dependencies\nUpdate vscaladoc packageLink defs with baseUri for external dependencies.\nThis would make scaladoc cross-refs richer.\n\nHint: This also reduces the "failed to find baseUri for ..." errors found during scaladoc generation. :)'
862,'dpp','Using SHtml.ajaxInvoke in CSS selector transforms results in a StackOverflowError\nThe following will lead to a StackOverflowError:\n<pre><code>\nval onclick = SHtml.ajaxInvoke { () => JsRaw("alert(\'TEST\')") }._2\n"#user" #> <img src="/img/unfollow.png" onclick={ onclick }/>\n</code></pre>\nCurrent workaround: Calling toString\n<pre><code>\nval onclick = SHtml.ajaxInvoke { () => JsRaw("alert(\'TEST\')") }._2.toString\n"#user" #> <img src="/img/unfollow.png" onclick={ onclick }/>\n</code></pre>\n'
720,'dpp','Add a JavaScript accumulator\nAdd a JavaScript accumulator to S such that all the accumulate JavaScript during a page render is sent back with the response whether that response is a full page load or an Ajax call.\n\n'
154,'dpp',"Mapper's view bounds and conversions to Unit don't mix\nMappedField's apply methods take view bounds.  This causes a nasty interaction with Scala's mechanism for converting to Unit.  So:\r\n\r\nval u: Unit = myModel.myForiegnKeyField(1L) // causes problems\r\n\r\nFix: concrete apply method without view bound conversion."
437,'dpp',"Mechanism to Abstract Over Retried AJAX Calls\nWhen the browser makes an AJAX call (form submission, button press, etc) in a high latency situation, it is entirely possible that the request may timeout and the browser will have to retry.  This is handled in the browser by handling failure on the jQuery AJAX request.  Unfortunately, the server-side component of Lift's AJAX has no awareness of the retry mechanism.  As such, a retry can potentially lead to repeated invocations of the AJAX handler function.  Considering that the retry mechanism itself is something handled internally by Lift, I would expect that the application layer would be completely shielded from any associated semantic effects.\n\nI propose that every AJAX request should get a once-use identifier.  Retries would use the same id as the original, but all other requests would get a unique id.  This would allow the server to differentiate repeated AJAX requests from retries, giving it the ability to ensure that AJAX handler functions are only invoked once per request.\n\nSee discussion here: http://groups.google.com/group/liftweb/browse_thread/thread/5b8d430dcea70776"
1003,'dpp','Make it possible to have menus of two subclasses of ProtoUser\nWe need to add something to the names of the Locs of subclasses of ProtoUser to avoid clashes. See https://groups.google.com/d/msg/liftweb/WQp5ObL-dLw/bIg-BKO76S0J'
12,'dchenbecker','MappedDateTime does not store time portion in Derby 10.4.2.0\nMappedDateTime does not store time portion in Derby 10.4.2.0\n\nLighthouse #28: http://liftweb.lighthouseapp.com/projects/26102/tickets/28'
295,'mariusdanciu',"Ajax change from () => Any to () => JsCmd\najax function should return JsCmd type.\r\n\r\n\r\nBr's,\r\nMarius"
578,'indrajitr','Adjust maven-scala-plugin to generate unified scaladoc\nAdjust maven-scala-plugin to generate unified scaladoc. While at this, upgrade to newer maven-scala-plugin and vscaladoc.'
861,'dpp','ExceptionChain or getCause for Failure\nFor debugging/logging purpose, I commonly have to find the root cause of a Failure.\nWhen it is an exception and the failure is composed, I miss something like "messageChain" but which allows to find the deeper exception of the composition.\n\nIt is rather easy to build the list of Failure in a composed Failure with a little recursion and then find the first exception (if exists), but it would be even cooler if it was a built-in method of Failure, something like:\n\n<pre><code>Failure#exceptionChain : List[Throwable] (deeper first ?)\nor\nFailure#getCause : Option[Throwable] (only the deepest ?) \nor even\nFailure#failureChain : Seq[Failure] (deepest first ?)\n</code></pre>\n\n\nSee [[url:https://groups.google.com/d/topic/liftweb/CkdugELLGJA/discussion|https://groups.google.com/d/topic/liftweb/CkdugELLGJA/discussion]]'
153,'aboisvert','Please update documentation for Msgs\nLooking at:  http://github.com/dpp/liftweb/blob/master/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala\n\nThe documentation suggests that certain elements (like error_class) can be overridden.  But I did it using:\n\n    <lift:Msgs>\n        <lift:error_class>errorBox</lift:error_class>\n    </lift:Msgs>\n\nI\'m guessing that the <lift:snippet type="error_report"> is dated?\n'
436,'dpp',"Comet doesn't release during shutdown\nWhen you shutdown a Lift app that's got comet connections, the Comet stuff doesn't release the long poll connection causing Jetty to hang\n\n....and btw, ResourceServer caches lastModified timestamp in development mode :-)"
719,'dpp',"Full support for continuations in Servlet 3.0\nMake sure Lift autodetects a Servlet 3.0 container and takes advantage of the cometness of it.\n\nAlso change the mechanism for REST and Comet so it truly doesn't consume a thread.\n\nAlso, create a unified Lift flow of control exception that people are encouraged not to catch"
1002,'eltimn','Bug in MongoDB.defineDb\nOne of the MongoDB.defineDb methods is causing an infinite recursion because of a naming conflict.\n\nAlso, a defineDbAuth method that takes in a Mongo instance needs to be implemented.'
11,'dpp','Disappearing whitespace\nDisappearing whitespace\n\nLighthouse #29: http://liftweb.lighthouseapp.com/projects/26102/tickets/29'
577,'indrajitr','Converge 2.7 and 2.8 branches as much as possible\nLess divergent branches would be useful for maintaining the two branches for scala 2.7 and 2.8\n\nSome well known ones include:\n1. headOption instead of firstOption\n2. use final class/object pair instead of case classes\n'
860,'hoffrocket',"lift-mongodb-record driver bump and fix for WriteConcerns and MongoAddress overrides\nthe version was already bumped to 2.4 for lift-mongodb, but not for lift-mongodb-record.\nthere's also a fix to apply the WriteConcern on a save to that operation only.  currently, WriteConcern.STRICT would be set for the whole collection for some period of time and if there were an error, would never be set back.\n\nthe new driver is more proactive about establishing a connection at construction time, so I had to make the construction lazy to work with the unit tests.\nthere was also a problem where the MongoAddress and MongoHost were concrete classes with vals that could not be overridden."
1143,'fmpwizard','Please add an additional SHtml.number method to support floating point number.\nFrom the method signature, it does not look like SHtml.number method \nsupports floating point number. But Html5 input type "number" does \nsupport floating point numbers when you set the "step" attribute (of \ninput) to a floating point (for example 0.1).\n\nPlease add an additional SHtml.number method to support floating point number.'
152,'dpp','ajax-loader not showing during ajax requests\nDetails here: http://groups.google.com/group/liftweb/browse_thread/thread/bfc7da05da6a4ec2\r\n'
435,'mariusdanciu','Add support for call-once functions\nSometimes users may need to use functions that are called only once and then cleaned up. \n\nDetails here http://groups.google.com/group/liftweb/browse_thread/thread/5b8d430dcea70776?hl=en_US'
718,'jeppenejsum','Designer friendly I18N\nSupport for designer friendly I18N. Details: http://groups.google.com/group/liftweb/browse_thread/thread/e6e1093bf77be026?tvc=2&pli=1\n'
1001,'dpp','Tomcat complains about Lift Scheduler thread on context stop/reload\nScala 2.8.1, Lift 2.3, Tomcat 6.0.32 (haven\'t tried Tomcat 7.x.x) \n\nCatalina.log:\n<pre><code>\n12:20:44.623 [http-8080-3] DEBUG net.liftweb.http.LiftServlet - Destroyed Lift handler. \nMay 4, 2011 12:20:44 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads \nSEVERE: The web application [/token-service] appears to have started a thread named [Lift Scheduler] but has failed to stop it. This is very likely to create a memory leak. \n</code></pre>\n\nAccording to http://wiki.apache.org/tomcat/MemoryLeakProtection#cclThreadSpawnedByWebApp adding: <pre><code>thread.setContextClassLoader(null)</code></pre> would take care of the issue. \n\nIn case of Lift that would mean modifying net/liftweb/util/ Schedule.scala: \n<pre><code>\nprivate object TF extends ThreadFactory { \n  val threadFactory = Executors.defaultThreadFactory() \n  def newThread(r: Runnable) : Thread = { \n    val d: Thread = threadFactory.newThread(r) \n    d setName "Lift Scheduler" \n    d setDaemon true \n+   d setContextClassLoader null \n    d \n  } \n} \n</code></pre>\n\nNo idea what impact this change would have in Jetty and other containers. \nAny plans on adding this workaround or rather waiting it out (hoping that Tomcat guys can sort it out)?\n\nSee also: http://groups.google.com/group/liftweb/browse_frm/thread/44f4b42115d666d8'
10,'','deprecate <lift:bind/>\ndeprecate <lift:bind/>\n\nLighthouse #33: http://liftweb.lighthouseapp.com/projects/26102/tickets/33-deprecate-liftbind'
293,'dpp',"New LRU Map\nThe current LRU map is based on a very poorly implemented Apache LRU map.  It's time for a new one that works better."
859,'dpp','LiftScreen.validate ignores shouldDisplay_?\nLiftScreen should not validate Fields that have shouldDisplay_? = false. \n\nThe hasUploadField method ignores shouldDisplay_? as well. Possibly move the shouldDisplay_? filter to the screenFields method.\n\nhttps://groups.google.com/d/topic/liftweb/V-JBOyq07BA/discussion'
1142,'jeppenejsum',"MappedEnum does not keep the order of corresponding Enumeration\nThere seems to be a regression since May 15, 2011 when MappedEnum's buildDisplayList() was updated from\n<pre><code>enum.map(a => (a.id, a.toString)).toList</code></pre>\nto \n<pre><code>enum.values.map(a => (a.id, a.toString)).toList</code></pre>\nwith commit description 'Fix deprecation for 2.9 compliance'.\n\nUnfortunately, values.map does not keep the original order of items in enum, and thus rendering MappedEnum via toForm() (which uses buildDisplayList) will result in a select (drop down control) where items are not ordered like they are ordered in original Enumeration.\n\nSimple fixes could be:\n# <pre><code>enum.values.toSeq.map(a => (a.id, a.toString)).toList</code></pre>\nor\n# <pre><code>enum.values.toList.map(a => (a.id, a.toString))</code></pre>\n\nOriginal thread referencing the commit, related discussion in scala-user list, and example fixes given above:\nhttps://groups.google.com/d/topic/liftweb/DmEof5Zr1v8/discussion"
151,'dpp',"Mapper MySQLSyntaxErrorException (related to issue #145)\nSorry, unfortunately after issue # 145 fix... I think we have a different kind of breakage now...\r\n\r\nMessage: com.mysql.jdbc.exceptions.MySQLSyntaxErrorException: Unknown column 'project_type.val5' in 'field list'\r\n\tcom.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)\r\n\r\n\tcom.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)\r\n\tcom.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)\r\n\tcom.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)\r\n\tcom.mysql.jdbc.Connection.execSQL(Connection.java:3283)\r\n\r\n\tcom.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)\r\n\tcom.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1467)\r\n\tnet.liftweb.mapper.DB$$anonfun$exec$3.apply(DB.scala:323)\r\n\r\n\tnet.liftweb.mapper.DB$$anonfun$exec$3.apply(DB.scala:322)\r\n\tnet.liftweb.util.TimeHelpers$class.calcTime(TimeHelpers.scala:242)\r\n\tnet.liftweb.util.Helpers$.calcTime(Helpers.scala:30)\r\n\tnet.liftweb.mapper.DB$.exec(DB.scala:322)\r\n\r\nnet.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1$$anonfun$apply$9.apply(MetaMapper.scala:334)\r\n\tnet.liftweb.mapper.MetaMapper$$anonfun$findMapFieldDb$1$$anonfun$apply$9.apply(MetaMapper.scala:332)\r\n\tnet.liftweb.mapper.DB$.runPreparedStatement(DB.scala:405)\r\n\r\nI think this happens because my database server (MySQL 5) is case sensitive for column and table names by default, and in this case my table & column name is actually PROJECT_TYPE.val5.\r\n\r\nI think we probably always want to preserve the original case of the overridden dbTableName and dbColumnName in SQL statements that you generate so the user can always override & get the right behavior in the resulting SQL.\r\n\r\nI think your fix is on the right track though.  You probably want to lookup column names using case sensitive search first, then case insensitive search, using an algorithm similar to the following very hackerish pseudo-code (my apologies):\r\n\r\n    colIndex = findColIndex(colName, columns.fieldName for all prepStmt.columns)\r\n            orElse findColIndex(colName.lower, columns.fieldName.lower for all prepStmt.columns)\r\n            orElse -1\r\n    value = columns(colIndex)\r\n\r\nWhich would find an exact case match first (for those databases that allow a user to have MyCol1 and mycol1 both in the same table), and then fallback to a case insensitive match, and if that failed... throw some sort of column not found exception or return a null.\r\n\r\nI may be way off base, and if so feel free to ignore the suggestion if that leads us on another goose chase.\r\n\r\nThanks, Troy\r\n"
434,'dpp','Port TestKit to 2.8.0\nPort TestKit to Scala 2.8.0'
717,'eltimn','Revert to Specs 1.6.2.1\nSpecs 1.6.2.2 is causing a problem with the lift-mongodb-record package, so reverting back to 1.6.2.1.\n\nThis only affects the 2.7 branch.'
1000,'','Update the bundled JQuery to the 1.5 series\nAs described in this discussion thread:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/d8b32077e66e2881#'
9,'','"Getting Started" has string terminators"\n"Getting Started" has string terminators"\n\nLighthouse #35: http://liftweb.lighthouseapp.com/projects/26102/tickets/35-getting-started-has-string-terminators'
292,'indrajitr','Make project both Scala 2.7 and 2.8 friendly\n* Unify package and import style\nIn order to allow for a smooth transition from Scala 2.7 to 2.8 we will use nested packages:\n\n    package net.liftweb {\n    package http {\n    package js {\n\n    object Foo {\n      // good foo\n    }\n\n    class Baz {\n      // bad baz\n    }\n\n    }\n    }\n\nWhile ugly, this style is valid for Scala 2.7 and 2.8. And it allows for relative imports. As soon as Lift is fully migrated to 2.8, the curly braces can be removed:\n\n    package net.liftweb\n    package common\n    ...\n\nThis is new Scala 2.8 syntax for nested packages which allows for relative imports.\n\n* Remove deprecation and fold in scala 2.8 recommendation as much as possible.\n\n* Adjust file headers and indentations\n'
575,'dpp','Better promotion of stuff to RenderOut in Comet\nDeal with Array[Node] and other kinds of stuff to get promoted to RenderOut'
858,'dpp',"Security Vulnerability in Lift's 3DES & Blowfish encryption\nall of the Blowfish/3DES encryption functions use all-zero IVs in CBC mode. This is pretty much unconditionally bad; IVs need to be generated via a cryptographically secure PRNGs (i.e., SecureRandom) or else the scheme is vulnerable to adaptive chosen plaintext attacks[1].\n\n[1] http://www.springerlink.com/content/3bg9hmrd0hndk1fy/\n\n"
1141,'jonifreeman','Improved syntax to create custom JSON serializers\nCurrent syntax to create custom JSON serializers is unnecessary verbose.'
150,'dpp','Connections never take from pool\nhttp://github.com/dpp/liftweb/issues/closed/#issue/124\r\n'
433,'dpp','LiftSession.hasFuncsForOwner is not synchronized\nTitle sez it all'
716,'dpp','Rename setComentActorMessage to sendCometActorMessage\n'
999,'davewhittaker','DB connection issue using Menu.param\nAs described in this discussion thread:\n\n    http://groups.google.com/group/liftweb/browse_thread/thread/6d9ffbaae2c1977e\n\nReproducible test case:\n\n    https://github.com/davegurnell/menuparamtest\n\nAssume this is a bug. Could be user error. At any rate, many thanks for your help.\n\nBest regards,\n\n-- Dave\n'
8,'dchenbecker',"Duplicate repository ids in JPA archetypes' POMs\nDuplicate repository ids in JPA archetypes' POMs\n\nLighthouse #38: http://liftweb.lighthouseapp.com/projects/26102/tickets/38-duplicate-repository-ids-in-jpa-archetypes-poms"
291,'','TextileParser does not support notextile\nThis is a nice feature. This has been brought up before, referencing:\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/d196be672cb16902/7c2827f287f3611c?lnk=gst&q=textile#7c2827f287f3611c'
574,'dchenbecker','Add support for head match in the Menu DSL\nAdd support for specifying head match URL paths with the Menu DSL like\n<pre><code>\nMenu("foo") / "help" / **\n</code></pre>\n'
857,'dchenbecker','Fixes to Menu.item and SiteMap.buildLink\nPer Debilski (http://groups.google.com/group/liftweb/browse_thread/thread/5d6c6733c6a47ff6)\n\n<pre>\nI think I’ve found two issues with Menu.item.\n\nThe first is that currently part of the code is\n\n   case (Full(loc), _, _) if loc.name == name => {\n     if (S.attr("donthide").isEmpty) Text("")\n     if (!text.isEmpty) Group(text)\n     else Group(loc.linkText openOr Text(loc.name))\n   }\n\ni.e. in my opinion, checking for the ‘donthide’ attribute does not\nchange anything.\n\nThe second seems to come from SiteMap.buildLink. When building a link,\nit is checked for nodeseq.text.length > 0 with the effect that\n\n<lift:Menu.item name="home"><img src="logo.png" /></lift:Menu.item>\n\nshows no image but the default text. But, when surrounded with spaces\n\n<lift:Menu.item name="home"> <img src="logo.png" /> </lift:Menu.item>\n\nit shows the logo as it should.\n</pre>\n'
1140,'andreak','Add ListenerManager.onListenersListEmptied() to be able to react when no more listeners are registered\nThis allows for situations where one has a comet-master-server which book-keeps a list of servers (typically in a Map) and one wants to remove the comet-server from the map when no more listeners are present.'
149,'mariusdanciu','Ajax and JSON forms do not work well when submitting from JS ...\nTim ran into this crappy behavior when calling submit() function on a form the onsubmit event doesn\'t actually get called. Apparently this is a known browser behavior. \n\nI propose to have alternative helpers in SHtml calls where we feed say the form ID and the actual Ajax call happens immediately outside of onsubmit context. For instance\n\n1. Assume &lt;form id="login"&gt; ...  &lt;/form&gt;\n\n2. Somewhere in a bind we have \n    &lt;button onclick={submitJsonForm(jsonHandler, "login")}&gt;Press me &lt;/button&gt;\n\ndef submitJsonForm(jsonHandler: JsonHandler, formId: String): JsCmd = {\n  jsonHandler.call("processForm", FormToJSON(formId))\n} \n\na similar concept for ajaxForms ...\n\nhaven\'t compiled it but you get the idea ...\n\nBr\'s,\nMarius'
432,'dpp','properly handle scopes with top level tags in Helpers.bind\n David:  The slightly longer term solution is to add a flag to bind that says "don\'t mess with the scope"\nIn all cases except for the out <html> tag, that\'s the right answer\n me:  ok makes sense\nwill move the <html> out of bind for now\n David:           case s : Elem => Elem(s.prefix, s.label, attrBind(s.attributes), TopScope /*s.scope */, in_bind(s.child) : _*)\nThat\'s the line (472 in BindHelpers) that\'s the issue\nNote the TopScope and commented out s.scope'
715,'dpp','Enhance CSS Selector Transform Implicits in 2.8.0\nTake advantage of the Scala 2.8.0 implicit stuff to support richer DSLs'
998,'indrajitr','Make subproject builds faster\nAs discussed in this thread: https://groups.google.com/d/topic/liftweb/bWDFLT_zGLk/discussion, when locally publishing a subproject like lift-squeryl-record SBT will compile, package, _and test_ each of the that submodules dependencies.  The testing can be especially time consuming and make it difficult to iteratively add small changes for debugging purposes.  Adding a flag of some sort that makes package no longer depend on test seems like it could be a viable work around.\n\nYou may also want to see this thread where I had asked for advice on the SBT list: https://groups.google.com/d/topic/simple-build-tool/PvIJ99MG6Q8/discussion.'
7,'mariusdanciu','Change addToPackages to take a package \n\r\nSee discussion here:\r\n\r\nhttp://groups.google.com/group/l...\r\n\r\nThis was moved from lighthouse .. and I am the assignee.'
290,'dpp','TextileParser molests divs\nThe lift-textile parser seems to totally molest divs - disrespecting them as block elements and surrounding them with <p> tags. This makes microformats (important!) impossible.\n\nFor example:\n\n\n     <div class="vcard">\n       <div class="fn">Joe Doe</div>\n       <div class="org">The Example Company</div>\n       <div class="tel">604-555-1234</div>\n       <a class="url" href="http://example.com/">http://example.com/</a>\n     </div>\n\nThis should pass through completely unmolested. And it does both here:\nhttp://www.textism.com/tools/textile/\nand\nhttp://redcloth.org/\n\nOn lift-textile, the result is:\n\n    <p><div><br></br>  <div>Joe Doe</div><br></br>  <div>The Example    Company</div><br></br>  <div>604-555-1234</div><br></br>  &lt;a class=&quot;url&quot; href=&quot;<a href="http://example.com/">http://example.com/</a>&quot;&gt;<a href="http://example.com/">http://example.com/</a>&lt;/a&gt;</div></p>\n\n\nThank you!'
573,'dpp',"Forced ReRender on AskRender in CometActor\nWe've been running into a 100% reproducible issue with CometActor and page loads using the Lift 1.0 stream.  Steps to reproduce are as follows:\n\n# Load a Comet-enabled page (and wait for it to completely load and initialize all of its JavaScripty nature)\n# Load the same page in a new tab (same session)\n\nThe first tab will receive a Comet push which rerenders the contents a moment after it goes into short-poll mode.  This is a big problem for us because we do a lot of initialization and setup using JavaScript (particularly for our richtext editor component).  The end result is that the page is corrupted from the user's standpoint.\n\nOddly enough, this also sometimes happens when refreshing the page in a single tab, you just have to look really carefully to see the results before the page redraws itself completely from the refresh.  After quite a bit of investigation and dredging through CometActor, I found this tidbit:\n\n    case AskRender =>\n      askingWho match {\n        case Full(who) => who forward AskRender\n        case _ => if (!deltas.isEmpty || devMode) performReRender(false);\n          reply(AnswerRender(new XmlOrJsCmd(spanId, lastRendering, buildSpan _, notices toList),\n                             whosAsking openOr this, lastRenderTime, true))\n          clearNotices\n      }\n\nThe problem is that if deltas is non-empty, we will perform a rerender when the second tab is opened up.  This is fine for the second tab, but the performReRender function also pushes out the newly rendered markup to all currently attached Comet listeners.  This is where the problem sneaks in.\n\nMy solution is to overload performReRender with another Boolean flag indicating whether or not the results of the rerender should be pushed to listeners:\n\n  private def performReRender(sendAll: Boolean) {\n    performReRender(sendAll, true)\n  }\n\n  private def performReRender(sendAll: Boolean, push: Boolean) {\n    lastRenderTime = Helpers.nextNum\n    wasLastFullRender = sendAll & hasOuter\n    deltas = Nil\n\n    lastRendering = render ++ jsonInCode\n    theSession.updateFunctionMap(S.functionMap, spanId, lastRenderTime)\n\n    val rendered: AnswerRender =\n    AnswerRender(new XmlOrJsCmd(spanId, lastRendering, buildSpan _, notices toList),\n                 this, lastRenderTime, sendAll)\n\n    clearNotices\n\n    if (push) {\n      listeners.foreach(_._2(rendered))\n      listeners = Nil\n    }\n  }\n\nI then change the AskRender handler to call the overloaded version of the function, passing `false` for the `push` parameter."
856,'dpp','Methods to handle error box in Loggable trait\nBaed on the thread here: [[url:https://groups.google.com/d/topic/liftweb/BGCoA9K0mUM/discussion|https://groups.google.com/d/topic/liftweb/BGCoA9K0mUM/discussion]]\n\nIt would be nice it logging methods in trait Loggable were aware of the Failure object, as it is a common citizen in Lift based application - in my code, more than exception. \n\nThe pattern I met commonly is something looking like:\n\n\n<pre><code>\nclass MyClass extends Loggable {\n  (for { .... sequence of Box }) match {\n    case Empty => ...\n    case Full(x) => ...\n    case f:Failure =>\n      logger.error("Error when processing action. Error message: " + f.messageChain)\n      f.exception.foreach { e => logger.debug("Exception leading to that error", e)\n  }\n}\n</code></pre>\n\n\nOf course, it seems that there is a lot of not generic part here (message text, logging level, etc), and so there is a lot of open question about the implementation details. \n\nMoreover, in a lot of my use-cases, Empty is a Failure without message (and not a "no response" one), and in fact, what I am doing is more something like:\n\n\n<pre><code>\nclass MyClass extends Loggable {\n  (for { .... sequence of Box }) match {\n    case Full(x) => ...\n    case e:EmptyBox =>  //because we don\'t want to be able to miss an Empty, even if each previous steps of the for loop use "?~!" - it\'s hard to debug otherwise\n      val error = (e ?~! "Error when processing action.") \n      logger.error(  error.messageChain )\n      error.exception.foreach { ex => logger.debug("Exception leading to that error", ex)\n  }\n}\n</code></pre>\n\n\n'
148,'','SHtml.ajaxForm should take an optional postSubmit JsCmd\nThis would allow client-side processing or updates after the form is submitted.'
431,'jeppenejsum','S.logQuery has wrong signature for use with DB.addLogFunc\nShould be (DBLog, Long) => Any not (String, Long) => Any\n'
714,'dpp','Add a magic HTML 5 flag that sets all the HTML 5 stuff the right way\nMake it super simple to flag all output as HTML 5 rather than XHTML'
997,'eltimn','Remove deprecated DB code from Record\nThis is the second step that started in ticket 994 - Remove Mapper dependency from Record.\n\nThis entails removing DBRecord, DBMetaRecord, and JDBCFieldFlavor. Also, the db dependency can be removed from record.'
6,'dpp','Add a /static directory in the default sitemap\nSo people can put static content there'
289,'','Make Lift OSGi depend on a ScalaModules release\n'
572,'dchenbecker','Add a Menu.currentChildren snippet\nAdd a Menu.currentChildren snippet and an "expandNone" option to the current builder to suppress child menus.\n\nSee the thread: \nhttp://groups.google.com/group/liftweb/browse_thread/thread/947d7df928bbe04d'
1138,'andreak','Make JQueryArtifacts use jQuery.html() instead of innerHTML\nhttps://groups.google.com/forum/#!topic/liftweb/lMTeUBIXqtU\n\nShort version: It prevents strange things from happening using IE'
147,'dpp','S.setSnippetForClass does not survive subsequent requests (at least not called from user code)\nS.setSnippetForClass does not survive subsequent requests (at least not called from user code) when the same page is reloaded, even via an SHtml.submit button, even if registerThisSnippet is called. Calling setSnippetForClass("name", this) in the submit function works.\r\n\r\nTo reproduce:\r\n\r\nPut in some template:\r\n<lift:MyTestSnippet />\r\n\r\nPut in some other screen:\r\ndef test = {\r\n  class Test extends StatefulSnippet {\r\n    println("Test is now being instantiated!")\r\n\r\n    def dispatch = { case _ => render _ }\r\n    def render(xhtml: NodeSeq) = SHtml.submit("Submit test", () => {} )\r\n  }\r\n}\r\nand\r\nSHtml.link("pathToFirstTemplate", () => S.setSnippetForClass("MyTestSnippet", new Test), Text("A link") )\r\n'
430,'','Add Avro-style schema support to Lift JSON for long-term JSON serialization\nLift JSON provides a quick means to translate between case classes and JSON. However, the technique is very fragile and not suitable for many applications, such as long-lived and publicly documented APIs. Lift JSON should support some means of long-term, stable JSON serialization that is suitable for exposing in publicly documented APIs. The approach I suggest taking is modeled on Avro (http://hadoop.apache.org/avro/docs/current/spec.html), but only for JSON and with a somewhat richer set of primitives (including option and collection types other than set).\n\nDeliverables will include JSON-based schema definition, parsing of schemas to/from JSON, and code generation for Scala.'
713,'dpp',"Lift sessions can't be destroyed more than 10 per second\nDestroying Lift sessions is serialized and there are cases where needing to destroy 10 requests per second causes problems.  See http://groups.google.com/group/liftweb/browse_thread/thread/f66150bd3cda8e77"
5,'dpp','When in dev mode, flag SiteMap failures\nWhen running in development mode (and upcoming Bespin mode), flag pages that are not served because they are not in SiteMap as such in the error message (404)'
288,'indrajitr',"Add top level pom.xml for convenience\nPut a pom.xml file in the top of the current hierarchy such that developers can do a complete build in a single step before pushing the code to GitHub.\r\n\r\nAt the moment, this would be solely for developers' convenience.\r\n"
571,'dpp','Allows to have properties configuration files outside of the war\nFor now, the root directory where properties files are search by Props is not configurable and is in the classpath (at root level or under /props/ directory).\n\nWe need to be able to specify file system directory, for example to put application configuration files under a usual path for admin sys, for example under /etc/MyApp/ on unix. \n\nThe path could be configured via a JVM parameter, for example: -Dlift.props.path=/foo/bar/baz\nBUT this would be problematic with several Lift application running in the same container. \n\nMore information in mailing list thread: http://groups.google.com/group/liftweb/browse_frm/thread/69c7fa887905a5c5'
854,'dpp','When converting HTML to JavaScript, turn <script> tags into JsRaw\nWhen converting HTML into JavaScript for sending down to the browser as part of an Ajax response or part of a Comet response, turn the <script> tags into JsRaw that executes when the page is loaded.'
1137,'andreak','Expose RenderVersion as read-only from S\nRef this discussion: http://groups.google.com/group/liftweb/browse_frm/thread/709af9f248fbb24e?hl=en#'
146,'indrajitr',"mvn scala:doc fails on master\nReference: http://groups.google.com/group/liftweb/browse_thread/thread/e5937eae509ca0ff\n\nCause: Build plugin settings aren't picked up from reporting plugin \nsettings unless that appears in \\<build\\>\\<plugin/\\>\\</build\\>."
429,'Dridus',"Automatic titlecase of snippet class names broken\nFrom the list:\n\nHello,\nI have set a new project using:\nmvn archetype:generate -U -DarchetypeGroupId=net.liftweb -\nDarchetypeArtifactId=lift-archetype-blank -DarchetypeVersion=2.0-\nscala280-SNAPSHOT -DgroupId=demo.helloworld -DartifactId=helloworld -\nDversion=2.0-scala280-SNAPSHOT -DarchetypeRepository=http://scala-\ntools.org/repo-snapshots -DremoteRepositories=http://scala-tools.org/\nrepo-snapshots\n\nThen into the helloworld folder, running mvn jetty:run,\nbrowsing to localhost:8080 received:\n\nException occured while processing/\nMessage: java.lang.NoClassDefFoundError: demo/helloworld/snippet/\nhelloWorld (wrong name: demo/helloworld/snippet/HelloWorld)\n\tjava.lang.ClassLoader.defineClass1(Native Method)\n....\n\nOn index.html, modified\n<lift:helloWorld.howdy>\nto\n<lift:HelloWorld.howdy>\n\nAnd the application worked.\n\nShouldn't the application have worked with\n<lift:helloWorld.howdy>?"
712,'dpp','Mails from ProtoUser are HTML only\nAs discussed in the list, there should be some easier way to add plain text parts (or other content) to mails from ProtoUser.\n\nsee: http://groups.google.com/group/liftweb/browse_thread/thread/cbe52ec9decb483 \n'
995,'dpp',"Can't have multiple (Ajax-enabled) LiftScreen snippets on one page\nWhen multiple (Ajax-enabled) LiftScreen snippets are added to a single page, they share the *Vars created in LiftScreen.  This effectively means that only the first LiftScreen snippet works (and then only kind of).\n\nThread here http://groups.google.com/group/liftweb/browse_thread/thread/5b3ba8ac388b4411\n\nPatch (which is working fine for me) here https://github.com/pbrant/framework/commit/1d7e56718d397e643be689ee55692e10effb23e7"
4,'','MappedBinary may not handle BLOBs correctly\nJust looking at the source, we have:\r\n\r\n    def buildSetActualValue(accessor: Method, inst: AnyRef, columnName: String): (T, AnyRef) => Unit =\r\n    (inst, v) => doField(inst, accessor, {case f: MappedBinary[T] =>\r\n      val toSet = v match {\r\n        case null => null\r\n        case ba: Array[Byte] => ba\r\n        case other => other.toString.getBytes("UTF-8")\r\n      }\r\n      f.data() = toSet\r\n      f.orgData() = toSet\r\n    })\r\n\r\nBut the toSet doesn\'t have a case for getting a java.sql.Blob instance. I think that converting a BLOB to a String and then back to bytes is much less efficient than just doing:\r\n\r\n      val toSet = v match {\r\n        case null => null\r\n        case ba: Array[Byte] => ba\r\n        case blob : Blob => blob.getBytes(1, blob.length)\r\n        case other => other.toString.getBytes("UTF-8")\r\n      }\r\n'
287,'mariusdanciu','Javascript DSL inconsistencies\nTwo little inconsistencies in the Javascript DSL:\r\n1/ It seems that it misses "JsAnd", "JsOr" and "JsNot\r\n\r\n2/ JsNotEQ capitalization seems inconsistant with JsEq/JsLtEq/JsGtEq. Perhaps it should be correct before 2.0, as it would be an API change.\r\n'
570,'dchenbecker','DBLog dynamic proxy -- calling toString fails\nI see that there is a toString defined in LoggedStatementHandler, but since one doesn\'t use it directly, only via the proxy object, I\'m not sure what it\'s purpose is.\nSo either add\ncase "toString" => toString\n\nor move the definition of toString into the pattern match and remove it, if I\'m not missing something.'
853,'dpp','Make Html5Writer aware of LiftRules.convertToEntity\nCurrently, Html5Writer will always try to convert as many characters to entities as possible. Html5Writer should adjust to the setting of convertToEntity to skip conversion when requested.\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/3a610d9f20e1b26\n'
1136,'jonifreeman','JArray has an incorrect equals method\nJArray(List(JInt(1),JInt(2))) must not equal JArray(List(JInt(2),JInt(1))) \n'
145,'dpp','dbColumnName problem in Mapper, schemify, CRUDify in 1.1-M6 and 1.1-SHAPSHOT\n--- META-QUESTION: How do I attach my project file to this issue?\n\nI created a new scaled down project against 1.1-SNAPSHOT and an embedded Derby database, and it exhibits the following problems for fields with dbColumnName overridden:\n\n1. Mapper returns the default value all the time both in the CRUDify screen and my own custom screen (click Proj Type List menu item in supplied sample app).\n\n2. schemify tries to ALTER TABLE to add the columns that override dbColumnName a second time, and of course fails with duplicate column name exception.\n\n3. CRUDify gets confused when I use a \'  def primaryKeyField = projectTypeId\' and when projectTypeId uses \'override def dbColumnName = \'PROJECT_TYPE_ID" (see complete DDL below) where it creates all the links in the "List" page with \'-1\' for the ID such as /PROJECT_TYPE/view/-1 or /PROJECT_TYPE/edit/-1 instead of the proper PROJECT_TYPE_ID such as .../view/1 or .../edit/1.  I think it\'s because these are all coming back as -1 from the Mapper.\n\nBelow is schemify\'s DDL output and stack trace.\n\nINFO - CREATE TABLE todo (priority INTEGER , id BIGINT NOT NULL AUTO_INCREMENT ,\n desc_c VARCHAR(128) , done BOOLEAN , owner BIGINT)\nINFO - ALTER TABLE todo ADD CONSTRAINT todo_PK PRIMARY KEY(id)\nINFO - CREATE TABLE PROJECT_TYPE (ACTIVE BOOLEAN , val4 VARCHAR(128) , val3 VARC\nHAR(128) , val2 INTEGER , val1 BIGINT , LAST_MODIFIED_BY VARCHAR(30) , GUI_PROJE\nCT_LIST_VISIBLE BOOLEAN , GUI_TREE_VISIBLE BOOLEAN , GUI_NAME VARCHAR(25) , type\n_name VARCHAR(25) , create_date TIMESTAMP , PROJECT_TYPE_ID BIGINT NOT NULL AUTO\n_INCREMENT)\nINFO - ALTER TABLE PROJECT_TYPE ADD CONSTRAINT PROJECT_TYPE_PK PRIMARY KEY(PROJE\nCT_TYPE_ID)\nINFO - ALTER TABLE PROJECT_TYPE ADD COLUMN ACTIVE BOOLEAN\nERROR - Failed to Boot\norg.h2.jdbc.JdbcSQLException: Duplicate column name ACTIVE; SQL statement:\n\n---> ALTER TABLE PROJECT_TYPE ADD COLUMN ACTIVE BOOLEAN [42121-121]\n\n        at org.h2.message.Message.getSQLException(Message.java:106)\n        at org.h2.message.Message.getSQLException(Message.java:117)\n        at org.h2.message.Message.getSQLException(Message.java:76)\n        at org.h2.table.Table.setColumns(Table.java:336)\n        at org.h2.table.TableData.<init>(TableData.java:82)\n        at org.h2.schema.Schema.createTable(Schema.java:492)\n        at org.h2.command.ddl.AlterTableAlterColumn.copyData(AlterTableAlterColu\nmn.java:256)\n        at org.h2.command.ddl.AlterTableAlterColumn.update(AlterTableAlterColumn\n.java:162)\n        at org.h2.command.CommandContainer.update(CommandContainer.java:72)\n        at org.h2.command.Command.executeUpdate(Command.java:208)\n        at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:162)\n        at net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$maybeWr\nite(Schemifier.scala:151)\n        at net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$10.apply(Sche\nmifier.scala:207)\n        at net.liftweb.mapper.Schemifier$$anonfun$6$$anonfun$apply$10.apply(Sche\nmifier.scala:206)\n        at scala.List.foreach(List.scala:841)\n        at net.liftweb.mapper.Schemifier$$anonfun$6.apply(Schemifier.scala:205)\n        at net.liftweb.mapper.Schemifier$$anonfun$6.apply(Schemifier.scala:187)\n        at scala.List.flatMap(List.scala:1132)\n        at net.liftweb.mapper.Schemifier$.net$liftweb$mapper$Schemifier$$ensureC\nolumns(Schemifier.scala:186)\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$2.apply(Sc\nhemifier.scala:62)\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1$$anonfun$2.apply(Sc\nhemifier.scala:62)\n        at scala.List.foldLeft(List.scala:1066)\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.sc\nala:62)\n        at net.liftweb.mapper.Schemifier$$anonfun$schemify$1.apply(Schemifier.sc\nala:55)\n        at net.liftweb.mapper.DB$.use(DB.scala:419)\n        at net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:54)\n        at net.liftweb.mapper.Schemifier$.schemify(Schemifier.scala:37)\n        at bootstrap.liftweb.Boot.boot(Boot.scala:29)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\njava:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHel\npers.scala:409)\n        at net.liftweb.util.ClassHelpers$$anonfun$createInvoker$1.apply(ClassHel\npers.scala:407)\n        at net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.sca\nla:1188)\n        at net.liftweb.http.DefaultBootstrap$$anonfun$boot$1.apply(LiftRules.sca\nla:1188)\n        at net.liftweb.common.Full.map(Box.scala:330)\n        at net.liftweb.http.DefaultBootstrap$.boot(LiftRules.scala:1188)\n        at net.liftweb.http.provider.HTTPProvider$class.bootLift(HTTPProvider.sc\nala:70)\n        at net.liftweb.http.LiftFilter.bootLift(LiftServlet.scala:516)\n        at net.liftweb.http.provider.servlet.ServletFilterProvider$class.init(Se\nrvletFilterProvider.scala:20)\n        at net.liftweb.http.LiftFilter.init(LiftServlet.scala:516)\n        at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)\n'
428,'jonifreeman','XML is converted to invalid JSON when array has attributes\n<pre><code>\n<root>\n  <n id="10" x="abc" />\n  <n id="11" x="bcd" />\n</root>\n</code></pre>\n\nXml.toJson creates invalid JSON:\n<pre><code>\n {"root": {"n": ["n":"","x":"abc","id":"10","n":"","x":"bcd","id":"11"}]}}\n</code></pre>\nshould be:\n<pre><code>\n {"root": {"n": [{"n":"","x":"abc","id":"10"}, {"n":"","x":"bcd","id":"11"} ]}}\n</code></pre>\n\n'
711,'dchenbecker','Attribute title in error message box not a NodeSeq\nAccording to this discussion:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/0c10d75fc1678d1d/4eb4f878014fd727#4eb4f878014fd727\n'
994,'eltimn','Remove Mapper dependency from Record\nThis requires moving Safe to util and deprecating the DB related code in Record: DBMetaRecord, DBRecord, and JDBCFieldFlavor.'
3,'','DerbyDriver should use BLOB instead of LONG VARCHAR\nSee this thread:\r\n\r\nhttp://groups.google.com/group/the-lift-book/browse_thread/thread/61bfa890adcdb752\r\n\r\nDerby supports BLOB, so we should probably use it unless there are compelling reasons not to.'
286,'mariusdanciu',"Submitting a form by ID and provide a Scala function\nNeed a way to submit a form (say when clicking a link) and also call a Scala function after the form was processed.\r\n\r\nBr's,\r\nMarius"
569,'','Missing hasChildren parameter in TreeView\nThere is a bug in the Tree object in liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala\n\nobject Tree {\n def apply(text:String, id: String, hasChildren: Boolean) = new Tree(text, Full(id), Empty, false, true, Nil)\n}\n\n The second last parameter on the RHS does not pass through the hasChildren boolean. It should be:\n= new Tree(text, Full(id), Empty, false, hasChildren, Nil)\n'
852,'dchenbecker',"Automate build process for releases\nPer the discussion on the committer's list, the build should (with prompting):\n\nhttps://docs.google.com/document/d/1kWGFbdoPouWC2lHG0n20vS3W2Ww1TijXZBAj5wJSRKU/edit?hl=en&authkey=CJ6hqKIP"
144,'dpp','Problem splitting last "." when parsing path.\nHere is a post in the groups regarding the issue.\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/fc7244ce54f1768e\r\n\r\nI need to parse a path in the following format.\r\nhttp://domain.com/api/package/my.company.package%3Akey%3Dvalue\r\n\r\nThe following should extract "my.company.package:key=value" into my packageName var\r\n\r\ncase Req(List("api","package", packageName), _, GetRequest)\r\n\r\nIt doesn\'t; only "my" is extracted.\r\n\r\n-Andy'
427,'hoffrocket','MappedDate and MappedDateTime setFromAny should handle Number\n'
710,'dpp','css selectors: support wildcard and element name matching\nTo avoid unnecessary id or css class pollution in generated html, it would be helpful if css selectors supported:\n\n"*" to match the entire NodeSeq \n"<element>" to match all elements with that label, so "li" would match all <li /> elements\n\nThese should support the usual subnode selections, so "* *" matches all children of the current NodeSeq and "li *" matches the children of all li elements. \n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/834fb23d95efe31b'
993,'dpp','SiteMap redirects not consistently redirecting\nIt looks like Loc is being too eager about caching its params.\n\nThe following code _should_ cause all requests to redirect to the login screen until the user logs in.  Instead it redirects only the first page accessed.  Any other URL does not redirect.  That first page is stuck redirecting, even after the user has logged in.  And it only prints "Redirecting to login" on the very first login.\n\n<pre><code>\n    def isLoggedIn = User.loggedIn_?\n\n    LiftRules.setSiteMap(new SiteMap(List({\n      case Full(Req(path, _, _)) if !isLoggedIn && path != List("user_mgt", "login") =>\n        logger.debug("Redirecting to login")\n        Loc.EarlyResponse(() => Full(RedirectResponse("/user_mgt/login")))\n    }), entries:_*))\n</code></pre>\n\nIf I use setSiteMapFunc instead of setSiteMap, and set my run.mode to debug, then I get the behavior I expect.\n\nPlease see [[url:http://groups.google.com/group/liftweb/browse_thread/thread/095e1615a1e04fb9/9fc458ed2e85a31a|this thread]] on the mailing list.'
2,'',"I want catfood\nI'm a cat and I want catfood"
285,'timperrett','Integrate Image manipulation code to lift\nTake the code ross posted and integrate it into lift modules.'
568,'eltimn','Add full BSON support to lift-mongodb\nAdd support for all BSON types to lift-mongodb, specifically ObjectId, UUID, Pattern, and Date.\n\nLift-Json custom Serializers are used to add support to JObjectParser. These allow for a custom way to represent classes as JValue and therefore can be easily converted to and from DBObjects. The new formats are in net.liftweb.mongodb.Meta and are as follows:\n<pre><code>\ndef objectIdAsJValue(oid: ObjectId): JValue = JObject(JField("$oid", JString(oid.toString)) :: Nil)\ndef patternAsJValue(p: Pattern): JValue = JObject(JField("$regex", JString(p.pattern)) :: JField("$flags", JInt(p.flags)) :: Nil)\ndef uuidAsJValue(u: UUID): JValue = JObject(JField("$uuid", JString(u.toString)) :: Nil)\ndef dateAsJValue(d: Date)(implicit formats: Formats) = JObject(JField("$dt", JString(formats.dateFormat.format(d))) :: Nil)\n</code></pre>\nThere are 2 breaking changes that affect the classes that extend JsonObject, specifically; *MongoDocument*, *JsonObjectField*, *MongoJsonObjectListField*.\n\n*ObjectId Breakage*\nObjectId was previously supported by testing every String to see if it was a valid ObjectId. This has been replaced by the above. This change only breaks code, data stored in MongoDB should be unaffected.\n\nTo migrate, users will need to update members that were defined as String, but were actually ObjectId. E.g.\n<pre><code>\nMyDoc(_id: String, name: String) extends MongoDocument[MyDoc]\n...\nMyObj(_id: String, name: String) extends JsonObject[MyObj]\n...\n\nNeeds to change to:\n\nMyDoc(_id: ObjectId, name: String) extends MongoDocument[MyDoc]\n...\nMyObj(_id: ObjectId, name: String) extends JsonObject[MyObj]\n...\n</code></pre>Any associated queries would need to be updated as well.\n\n*Date Breakage*\nDates were previously stored as String and have also been replaced by the above. This change will affect data stored in MongoDB.\n\nTo migrate users will simply need to load their docs and then save them back to the db. This will change them from a String to Date inside your MongoDB database, assuming you use the same DateFormat as when you saved them initially, which will be the case unless you used a custom DateFormat. This could potentially be a silent breaking change, be sure to double check any queries you do against any Date fields.\n\n*MongoDocument Implications*\nYou must change all members to ObjectId type where relevent and update any queries involving Date and/or ObjectId. You should also write a script to load and save any documents that have Date members. \n\n*MongoRecord Implications*\nThese changes only affect MongoRecord if you\'re using one of the Field types listed above and storing Date or ObjectId in them.\n\n*Other MongoRecord Changes*\n* There are 3 new Field types;  UUIDField, PatternField, and DateField\n* The asJValue method of all fields was updated to use the formats listed above\n* The asJs method of all fields was updated to use lift-json for rendering.\nThe net.liftweb.record.field.DateTimeField renders asJValue and asJs as simple strings that are not compatible with the new formats.\n\n'
851,'jonifreeman','Joda Time support for JSON\nAdd Joda Time support for JSON extraction and serialization:\n\n* Duration\n* Instant\n* DateTime\n* DateMidnight\n* Interval\n* LocalDate\n* LocalTime\n'
143,'dpp','bad interaction between hostname and path based url rewrites\nrewrite generated parameters are incorrectly disappearing\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e2096c889eb32060'
426,'hoffrocket','MappedString.crop should look for null\nCode should be this:\n\nfinal def crop(in: String): String = in match {\n  case null => null\n  case s => s.substring(0, Math.min(s.length, maxLen))  \n}'
709,'hoffrocket',"Small cleanup in MongoMetaRecord \nThere are a couple of locations where records are unnecessarily Boxed\nThere's also lookup of a Field using a fieldByName call where the field could be used directly\n\nalso, would be nice for findAll to be protected so that it can be overriden by users for logging and other possibilities"
992,'dpp','Add support for http only cookies\nSee:\n\nhttp://download.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setHttpOnly(boolean)'
1,'',"General Crankiness\nI'm cranky that I'm not coding enough"
284,'dpp',"Additional tag support for TextileParser\nPlaying around with the TextileParser code, I am using paraFixer.  I noticed that <b>bold</b> yields bold HTML.  Similarly, <em>italic</em> yields italic HTML.  But <strong>bold</strong> does NOT yield bold HTML...  Looks like we need to add some extra tags to the function isValidTag.  I'd like to see tags like <strong>, <i>, and <u> added for consistency.\r\n\r\nSee:  http://groups.google.com/group/liftweb/browse_thread/thread/51e91a56a17802ed/daa602ccb70f24f1#daa602ccb70f24f1\r\n"
567,'dpp','ldap user bind attribute names should be overrideable\nI was using the lift-ldap module to hook into the ldap interface of ActiveDirectory.  Everything worked great, except when binding the attributes for the cn and uid.  ActiveDirectory seems to use something called "sAMAcountName" instead of "uid".  Attached is a patch that extracts the attribute keys'
850,'dpp','LiftScreen validates on cancel\nI\'ve just started looking at LiftScreen, so I may be missing something\nobvious, but it seems field validations are fired when I click cancel?\nIs this WAD?\n\nI have this\n\nclass VehicleScreen extends LiftScreen with Logger {\n   object vehicle extends ScreenVar(Vehicle.create)\n\n   addFields(() => vehicle.is)\n   def finish {\n       debug("Finished")\n\n   }\n}\n\n\nVehicle is Mapper object.\n\nThe form is rendered correctly, validations are fired when pressing\nfinish, but they are also fired when pressing cancel...\n'
1133,'jonifreeman',' json FieldSerializer on class with Option members fails on read\njson serialization with FieldSerializer fails to read a class with option members. Here are two examples to reproduce the error:\n\n---- \n<pre><code>\nimport net.liftweb.json._ \nimport net.liftweb.json.Serialization._ \nclass TestClass{ \n  val field : Option[String] = Some("i am a string") \n} \nimplicit val formats = DefaultFormats  + FieldSerializer[TestClass]() \nread[TestClass](write(new TestClass)) \n</code></pre>\n\nThrows Exception: net.liftweb.json.MappingException: Parsed JSON values do not match with class constructor \n\n---- \n<pre><code>\nimport net.liftweb.json._ \nimport net.liftweb.json.Serialization._ \nclass TestClass{ \n  var field : Option[Int] = None \n} \nval t = new TestClass \nt.field = Some(5) \nimplicit val formats = DefaultFormats  + FieldSerializer[TestClass]() \nread[TestClass](write(t)) \n</code></pre>\nThrows exception: net.liftweb.json.MappingException: unknown error \n\n---- \n\n\nDiscussion Page:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/970d83d942e40270'
142,'dpp','Upgrade Lift to Scala 2.7.7 final\nTitle sez it all'
425,'mariusdanciu','Statefull snippets redirect is broken\nStateful snippets redirectTo ultimately relies on:\n\n<pre>\n private[http] def appendFuncToURL(url: String, funcStr: String): String =\n  splitAtHash(url){to => (if (to.indexOf("?") >= 0) "&" else "?") + funcStr}\n</pre>\nthe problem is that the actual URI is lost and if you try redirectTo("/homepage") it actaully sends you to /?F1089777327057MDT=_\n\nthe fix is:\n<pre>\n private[http] def appendFuncToURL(url: String, funcStr: String): String =\n  splitAtHash(url){to => to + (if (to.indexOf("?") >= 0) "&" else "?") + funcStr}\n</pre>'
708,'dpp','Add serializable ContainerVars\nAdd ContainerVar that are like SessionVar, but that can be serialized and require an implicit seralizer.'
991,'dpp',"Onsubmit and some other stuff doesn't respect formGroup\nmake sure onsubmit and other stuff respects formGroup"
283,'','Schemifier broken for Oracle\nSee thread:  http://groups.google.com/group/liftweb/browse_thread/thread/99bda7e8343aacec\r\n\r\nFor Schemifier.ensureColumns, I would like to see the actualTableNames parameter reverted back to table.dbTableName instead of table._dbTableNameLC because it breaks Oracle compatibility.'
566,'dpp','add base64EncodeURLSafe to SecurityHelpers\ndef base64EncodeURLSafe(in: Array[Byte]): String = new String((new Base64).encodeBase64URLSafe(in))'
849,'jonifreeman','JDouble can be extracted to Int or Long\nJDouble(2.1).extract[Int] mustEqual 2\nJDouble(2.1).extract[Long] mustEqual 2L\n'
1132,'jonifreeman',"Do not force 'jsonClass' field to be the first field of an JSON object\nhttps://groups.google.com/forum/?hl=en#!topic/liftweb/Lmq6vGDzSqQ\n"
141,'dpp','Simplify certain factory signatures in LiftRules\nCertain signatures in LiftRules are like () => XXX (where XXX is Boolean, NodeSeq).  Because vending is lazy, that signature should change to XXX'
424,'dpp','LocGroup without flattening the list\nMake it so that LocGroup does not flatten the result and its nesting is honoured.\n\nMore here: \nhttp://groups.google.com/group/liftweb/browse_thread/thread/eb0f3aefff8c5a10\n'
707,'hoffrocket','MetaRecord inefficiencies\nThere are three major inefficiencies in MetaRecord:\n1) every call to createRecord uses reflection to find Field methods (getMethods is a pretty expensive operation)\n   - this should be cached in the MetaRecord\n2) there are several places which loop over fieldList and then do a fieldByName call instead of using the method stored in the FieldHolder\n3) fieldByName does a linear scan of fieldList\n - should cache a map of name->FieldHolder to get constant time lookups  \n'
990,'davewhittaker',"Incorrect salt used in SHtml.memoize\nFrom this discussion: https://groups.google.com/d/topic/liftweb/K14YPMlWNyY/discussion\n\nI see what the issue is.  SHtml.memoize is using the second stack frame as it's salt assuming that is the caller.  Since SHtml is a singleton object though, there seems to be an extra frame involved.  The stack trace looks like this.\n\njava.lang.Exception\n\tat net.liftweb.http.SHtml$class.memoize(SHtml.scala:267)\n\tat net.liftweb.http.SHtml$.memoize(SHtml.scala:38)\n\tat h2.common.ui.Layout$.menu(Layout.scala:54)\n\nI'll update it to use the following frame and submit on review board."
1231,'indrajitr',"Generated jars doesn't contain minified JS scripts\nThis makes it impossible to run in production"
1230,'dpp','Dpp issue 1193\nhttp://www.assembla.com/spaces/liftweb/tickets/1193'
1229,'dpp','Closes #1173. Allow data-lift-content-id attribute in body tag to identi...\n...fy the id of the actual start of content\r\n\r\nhttp://www.assembla.com/spaces/liftweb/tickets/1173'
1228,'dpp','Addresses #1198. Made certain Box methods call-by-name\nhttp://www.assembla.com/spaces/liftweb/tickets/1198'
1227,'',"Wrap db access in inTrasaction{} blocks.\nEnsures that a new transaction is started if one doesn't already exist.  In the case of rewrites the code seems to execute outside of S.addAround scope.  Addresses http://www.assembla.com/spaces/liftweb/tickets/1168."
1226,'','Fixed a bug where the distance from an empty string causes an exception\n'
1225,'dpp','Levenshtein distance in net.liftweb.util.LD - exception if first parameter is empty.\n[info] Starting scala interpreter...\r\n[info] \r\nWelcome to Scala version 2.9.1.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_26).\r\n\r\nscala> import net.liftweb.util.LD\r\nimport net.liftweb.util.LD\r\n\r\nscala> LD("aa", "bb")\r\nres3: Int = 2\r\n\r\nscala> LD("aa", "")\r\nres4: Int = 2\r\n\r\nscala> LD("", "bb")\r\njava.util.NoSuchElementException\r\n\tat scala.collection.LinearSeqOptimized$class.last(LinearSeqOptimized.scala:135)\r\n\tat scala.collection.immutable.List.last(List.scala:45)\r\n\tat net.liftweb.util.LD$.apply(LD.scala:94)\r\n\tat .<init>(<console>:11)\r\n\tat .<clinit>(<console>)\r\n\tat .<init>(<console>:11)\r\n\tat .<clinit>(<console>)\r\n\tat $print(<console>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)\r\n\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:914)\r\n\tat scala.tools.nsc.interpreter.IMain.loadAndRunReq$1(IMain.scala:546)\r\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:577)\r\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:543)\r\n\tat scala.tools.nsc.interpreter.ILoop.reallyInterpret$1(ILoop.scala:694)\r\n\tat scala.tools.nsc.interpreter.ILoop.interpretStartingWith(ILoop.scala:745)\r\n\tat scala.tools.nsc.interpreter.ILoop.command(ILoop.scala:651)\r\n\tat scala.tools.nsc.interpreter.ILoop.processLine$1(ILoop.scala:542)\r\n\tat scala.tools.nsc.interpreter.ILoop.loop(ILoop.scala:550)\r\n\tat scala.tools.nsc.interpreter.ILoop.process(ILoop.scala:822)\r\n\tat scala.tools.nsc.interpreter.ILoop.main(ILoop.scala:851)\r\n\tat xsbt.ConsoleInterface.run(ConsoleInterface.scala:57)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat sbt.compiler.AnalyzingCompiler.call(AnalyzingCompiler.scala:57)\r\n\tat sbt.compiler.AnalyzingCompiler.console(AnalyzingCompiler.scala:48)\r\n\tat sbt.Console.console0$1(Console.scala:23)\r\n\tat sbt.Console$$anonfun$apply$2$$anonfun$apply$1.apply$mcV$sp(Console.scala:24)\r\n\tat sbt.TrapExit$.executeMain$1(TrapExit.scala:33)\r\n\tat sbt.TrapExit$$anon$1.run(TrapExit.scala:42)'
1224,'','Issue 1179 - Invalidate cached object in MongoRefField upon setting the ...\n...value'
1223,'','Widget conflict with WiringUI\nHi, \r\nHere are two bugs I talked about on the mailing list, identified as bugs by David Pollak:\r\n\r\n- The String -> JsString does not properly escape <tt>]]> </tt> which then leads to premature XML unescaping \r\n- The SetHtml command does not properly move <tt> script </tt> blocks into properly executing JavaScript\r\n\r\nHere is the discussion on the mailing list: \r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/66ee4306a4925b85/45def0dc92effde1?lnk=gst&q=autocomplete+wiring\r\n\r\nHere is the github example code: \r\n\r\nhttps://github.com/ChrisJamesC/Liftweb---WiringUI-and-Autocomplete  '
1222,'','Issue 1155 - LiftRules.noticesToJsCmd returns 2 span tags with the same ...\n...id\r\n\r\nhttp://www.assembla.com/spaces/liftweb/tickets/1155'
1221,'dpp','Update the HTML5 parser\nWe are using version 1.2.1 of the nu.validator parser.  The most recent version is 1.3.1.  Upgrade the build system to use 1.3.1 of the parser.  See http://about.validator.nu/htmlparser/'
1220,'','Small correction on ScalaDoc for MockWeb\nAs discussed on this thread:\r\n\r\nhttp://groups.google.com/group/liftweb/browse_thread/thread/d4faf79900df122d\r\n\r\nHere is the fix and pull request (I hope I did it right).\r\n\r\nThanks\r\n\r\n  Diego'
1219,'','use dynamic "safe_#" instead of random long\nCloses #1196\r\n\r\nRemove instance field  which stored random long in Mapper and Record\r\nin favor of pseudo unique System.identityHashCode at call time for\r\npurpose of runSafe{} blocks'
1218,'indrajitr','Moved logoutMenuLoc to the end of ProtoUser.sitemap.\n'
1217,'','Dpp issue 1177\nhttp://www.assembla.com/spaces/liftweb/tickets/1177?utf8=%E2%9C%93&batch=&tickets_report_id=1&ticket_id=1177&commit=Go+%C2%BB'
1216,'','Dpp issue 1180\nBetter handling of null on primitives see http://www.assembla.com/spaces/liftweb/tickets/1180?utf8=%E2%9C%93&batch=false&tickets_report_id=1&ticket_id=1180&commit=Go+%C2%BB'
1215,'','web: S: appendGlobalJs\nTicket: http://www.assembla.com/spaces/liftweb/tickets/1192-add-s-appendglobaljs-method\r\nDiscussion thread: "appendJs without OnLoad" --- please let me know if there\'s another way.\r\n\r\n'
1214,'','Closes #1070.  Use the Lift-JSON package for client-server JSON calls\n'
1213,'','Removed wrong documentation.\nI just deleted one line of wrong documentation.\r\nNo copyright of anything can be attributed to me based on this.'
1212,'','Correct comments for asDouble and AsDouble.\n'
1211,'','fix typo\n'
1210,'','fix issue 961 from assembla\nissue title:\r\n\r\n"Saving to CouchDB doesn\'t fetch the document "id" property"\r\n\r\nmore details here:\r\n\r\nhttp://www.assembla.com/spaces/liftweb/tickets/961\r\n\r\napplied the proposed change and run the tests to check that it\r\nstill worked, and it did'
1209,'','Fixed a minor comment typo\n'
1208,'','Fix JNDI issue for DB object\nSee https://groups.google.com/forum/?hl=en#!topic/liftweb/RvTWGXoPay4 \r\n\r\nSigned-off-by: Denis Bardadym <denis.bardadym@accenture.com>'
1207,'','Fix for Issue #1083\nApplies the patch provided in Issue [#1083](https://www.assembla.com/spaces/liftweb/tickets/1083-windows-illegalcharsetnameexception-using-liftsh) via github'
1206,'',"I've made an attempt at speeding up JSON Extraction with Optional params & fixed some random compiler warnings\nThe default JSON extraction uses exceptions a lot with Optional params, and this modification does not. Its my first attempt at making a change to lift so feedback would be greatly appreciated."
1205,'','Easy fix to Props.modeName\nmodeName had no case for mode=Development.\r\n'
1204,'','Irc wip 290\nfixes some specs in record. disables one spec, the only one failing.\r\n\r\nAFAIK there are only 2 specs failing for me: JsonBoxSerialization and the Synthetic method spec in RecordSpec'
1203,'','When restoring from JSON, make sure DateMidnight and DateTime are created in the UTC timezone \nHere is the code+test changes proposition.\r\n\r\nregards,\r\nSami'
1202,'','Support for extraction of nested non-polymorphic collections on 2.3\nThings like: \r\n```parse("""{ "a" : [ "b" ] }""").extract[Map[String, List[String]]] mustEqual Map("a" -> List("b"))```\r\nor\r\n```parse("""[ [ "a" ] ]""").extract[List[List[String]]] mustEqual List(List("a"))```\r\n'
1201,'','Fixes JSON deserialization for "read[AnyRef](...)"\nIn Scala, classOf[Array[_]] == classOf[AnyRef], which triggers a bug in the JSON extraction. Now uses Class.isArray() to check if an array is being deserialized.'
1640,'','Fix issues with emailRegexPattern.\nThis resolve issues with `emailRegexPattern` not being up to date w.r.t. new TLDs longer than four characters. While I was in there I also made the matcher case insensitive.\r\n\r\nfixes #1634 '
1639,'','Recting and Reding: Fix ResponseShortcutException issues for AJAX calls\nAllow arbitrary ResponseShortcutExceptions in AJAX calls.\r\n\r\nFixes #1638 .'
1638,'','AJAX handlers can only use redirect shortcut responses\nRight now, if you throw a `ResponseShortcutException` during an AJAX call, you can only use a redirect—anything else will result in a 500 error.'
1634,'fmpwizard','Bug in ProtoRules.emailRegexPattern\nTaking up from: \r\n\r\nhttps://groups.google.com/forum/#!topic/liftweb/7MK7SnqY-V4\r\n\r\nThe current ProtoRules.emailRegexPattern in \r\n\r\nhttps://github.com/lift/framework/blob/master/persistence/proto/src/main/scala/net/liftweb/proto/ProtoRules.scala#L35\r\n\r\nval emailRegexPattern = new FactoryMaker(Pattern.compile("^[a-z0-9._%\\\\-+]+@(?:[a-z0-9\\\\-]+\\\\.)+[a-z]{2,4}")) {}\r\n\r\nis out of date with respect to top level domains that may be more than 4 characters long.\r\n\r\nAlso, I am not sure it should really insist on e-mails being lower-case, as they are allowed to be.\r\n\r\nCheers,\r\n\r\nPanos.\r\n'
1629,'davewhittaker','Remove explicit synchronization from ContainerVar\nSee https://groups.google.com/d/msg/liftweb/hMkeQM2FBT0/6Z0oO7nypGYJ'
1626,'fmpwizard','Add String primary key traits to Mapper\nsee related thread\r\nhttps://groups.google.com/d/topic/liftweb/t02fR1xO8HQ/discussion\r\n'
1624,'fmpwizard','Remove Implicit Unit => JsCmd\nas discussed here \r\nhttps://groups.google.com/d/topic/liftweb/DfQlUbClAyU/discussion\r\n'
1619,'','WIP: Comet fixes\nThis fixes a handful of bugs that when taken together kept things mostly working!\r\n\r\n  - Unify lastListenerTime (which was previously always zero) with\r\n    lastListenTime\r\n  - Make lastRenderTime, delta timestamps, and lastListenerTime\r\n    consistent with each other as they are directly compared\r\n  - More accurately track whether any deltas have been sent\r\n  - Pretend initial render happened at creation time to prevent a second\r\n    render call from running on the initial Listen message\r\n  - Rename devMode to alwaysReRenderOnPageLoad'
1618,'Shadowfiend',"Invalid Javascript is sometimes not reported on console\nFrom this [thread](https://groups.google.com/d/topic/liftweb/b9JLZvHhzoM/discussion)\r\n\r\n>Nope, this is actually a much more pernicious problem that I've seen many times. It is indeed a bit of a pain, but it's also a bit\r\nhard to solve. When the JS hits the client, jQuery attempts to eval it as JavaScript. But, when it goes to do that, the JavaScript\r\nfails to parse, so nothing gets to run! This means that the JS sent down from the server never runs at all. However, the jQuery\r\nAJAX handler does invoke the comet failure function—which is designed to deal with connection errors, not JS parse errors.\r\nThe reaction to a comet request's failure is to try again (I think in 10s?), so we try another comet request. However, it's the JS\r\nthat comes from the server that lets us know what the latest update we've seen from the server is. Since the JS didn't run, our\r\nversion didn't update, which means the comet sees that we're out of date and sends us the original update as well as anything\r\nelse that has happened since then! Net-net, we get the bad JS again, and the cycle starts over.\r\n\r\n>We may be able to update the failure handler to look for what error jQuery tells us it got—but the problem is that our AJAX stuff\r\nis designed to work with jQuery, YUI, and one or two other libraries, which means we'd have to make sure they all reported a JS\r\nparse error the same way, or that we implemented handling for all the different ways in the failure callback. Either way, things get\r\npretty nasty.\r\n\r\n>Hope that sheds some light onto why this is happening, despite not offering an immediate solution. Thanks for bringing it up; this\r\nhas bit me before (though not since we switched to using events+JSON to send things down to the client as a matter of course),\r\nand it can be quite frustrating.\r\n>Thanks,\r\n>Antonio\r\n"
1615,'',"We don't indicate any sort of error if you make an AJAX request to an endpoint requiring JSON with invalid JSON\nWe ran into an annoying edge case in how we handle JSON AJAX requests.\r\n\r\nWe were using `SHtml.jsonCall` to wire up some stuff on the client to the server. This is all fine and dandy until you submit something that doesn't result in proper JSON to the function name. No error whatsoever is generated on the server or the client.\r\n\r\nThat... should probably be fixed."
1609,'','Ball and Chain: toSingleBox now sets up the failure chain properly.\nThe `ParamFailure` that `toSingleBox` returns when there are `Failure`s in the list\r\nnow has a chain of `Failure`s on it that correspond to all of the `Failure`s in the\r\nlist.'
1608,'','[WIP] Extract-o-matic: Extract event handlers to page JS\nThe main functionality here moves event handler attachment from inline attributes to the page JavaScript that Lift 3 now supports. The reason for this is so that, out of the box, Lift will be compatible with very restrictive [Content Security Policy](http://en.wikipedia.org/wiki/Content_Security_Policy) settings even when using built-in Lift features.\r\n\r\nTo do this, we add a `lift.onEvent` function that has both jQuery and vanilla implementations. There are also a couple of fixes to existing JS functionality here.\r\n\r\nStill two things missing that I know of:\r\n - [ ] Extract `javascript://` `href`s from `a` elements into event handlers (these should `preventDefault()`).\r\n - [ ] Extract `javascript://` `action`s from `form` elements into event handlers (these should also `preventDefault()`).\r\n\r\nLooking for some early thoughts/feedback from folks.'
1603,'',"Your data-lift is my data-lift: Reimplement data-lift as a data attribute parser.\nThis PR reimplements data-lift as a data attribute parser. This stemmed from a Lift hack day a few months ago, and I'm just now getting around to wrapping this up...\r\n\r\nFew points of concern:\r\n\r\n* I want to go through at some point and clean up the copy-pasting of helper methods that I did wrt MetaData parsing.\r\n* I'm not entirely sure why I'm having to manually check for the parallel attribute in my parser. My understanding was that if my parser generates a `lift:` node, that should be processed subsequently by the regular SnippetNode parser, which does checks for parallel processing.\r\n* Can someone make sure my implementation of handling parallel is even functional while we're at it? lol\r\n\r\nAll specs are passing, though. So that's something.\r\n\r\ncloses #1582 "
1602,'','Communication between comet actor and snippet via RequestVar\nThere are use cases when one wants to hand over params from CometActor to snippets via RequestVars. One example would be a SHtml.link() within a CometActor where the parameter could be passed by a RequestVar snapshot.\r\n\r\nThis issue is discussed in https://groups.google.com/forum/#!topic/liftweb/N_yNYnaErhQ'
1587,'eltimn',"Call validate on BsonRecordListField elements\n> When validate is called on a Record it recursively calls validate on each field. However, if a field is a list like BsonRecordListField then it does not have any validations registered by default which leads to elements of a list not being validated when validate is called from parent scope.\r\n>\r\n> It's not difficult to override validations on a list field to map over all elements to get truly complete validation. I wonder though if that behaviour is by design or is it a bug? To me it seems more natural to validate all fields and their elements (list elems in this case).\r\n\r\n\r\n\r\nhttps://groups.google.com/d/msg/liftweb/gh2syNeGWyw/OC3y2TLWfAkJ"
1582,'farmdawgnation',"Make data-lift a data attribute parser.\nI've already done some work on this, but I haven't gotten anything substantial working yet."
1580,'eltimn','Remove usage of db.getLastError in mongo tests\n'
1529,'',"Fix misspellings throughout the codebase\nDon't have a full inventory right now, but supplimental is one I know for sure is misspelled in a few places."
1518,'','Inconsistency when querying over JSON lists\nConsider:\r\n\r\n```scala\r\nimport net.liftweb.json._\r\nimport net.liftweb.json.JsonDSL._\r\n\r\nobject JsonTest extends App {\r\n  val json =\r\n    ("people" -> List(\r\n      ("person" ->\r\n        ("name" -> "Joe") ~\r\n        ("age" -> 35)\r\n      ),\r\n      ("person" ->\r\n        ("name" -> "Marilyn") ~\r\n        ("age" -> 33)\r\n      ),\r\n      ("person" ->\r\n        ("name" -> "Erik") ~\r\n        ("age" -> 28)\r\n      )))\r\n\r\n  val names = (json \\\\ "name").children map { case JField(_, JString(name)) => name }\r\n  println(names) // List("Joe", "Marilyn", "Erik")   -- as expected\r\n\r\n  val json2 =\r\n    ("people" -> List(\r\n      ("person" ->\r\n        ("name" -> "Joe") ~\r\n        ("age" -> 35)\r\n      )))\r\n\r\n  val names2 = (json2 \\\\ "name").children map { case JField(_, JString(name)) => name }\r\n  println(names2)  // List()   -- expecting List("Joe")\r\n\r\n  val json3 =\r\n    ("people" -> List[(String, JObject)]())\r\n\r\n  val names3 = (json3 \\\\ "name").children map { case JField(_, JString(name)) => name }\r\n  println(names3)  // List()   -- as expected\r\n}\r\n```\r\n\r\n...is it by design that the `json2` case doesn\'t work as expected?'
1461,'Shadowfiend',"Move context snapshotting to a generic location\nThe code that does RequestVar and related context snapshotting for AJAX should be somewhere a little more generic, rather than being in the `processTemplate` function where it isn't always hit by page processing code.\r\n\r\nSee https://groups.google.com/forum/?fromgroups#!topic/liftweb/B0A1S3JbLyU for the triggering discussion."
1460,'','Feature which optionally times the performance of snippet evaluation\n## This is a ticket for the partial pull request #1377 \r\n\r\n### See the related pull request for a discussion on what is missing before we can merge it to master\r\n\r\n## Original text:\r\n\r\nThis feature optionally times the evaluation of snippets as discussed in this thread.\r\n\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/yy8gxcjH_bs\r\n\r\nI think this is worth writing up a quick wiki as its discoverability is zero and it is quite a useful feature (I used it to track down a performance problem in my app). Where should I be submitting documentation to?\r\n\r\nCheers,\r\n\r\nNoel'
1449,'','Allow configuration of testFuncNames\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/HEUUXxPPkRs\r\n\r\nIn test-mode, an attempt is made to give function names deterministic IDs. With the ID calculation being based on the stacktrace, there are scenarios where the same ID is providing for differing functions, the practical impact of which, can be "User clicks button B, Lift reacts as if user clicked button A".\r\n\r\nCurrently the only way to disable this test feature is to wrap code in `S.disableTestFunc` which can be impractical if required more than a few times. More configuration of this behaviour is desired. (Example, disable completely, disable for particular snippet/request.)'
1437,'davewhittaker',"Add Squeryl transaction LoanWrapper\nIt was [pointed out](https://groups.google.com/d/msg/liftweb/2df8_E47YKU/qGFaXoMmH_AJ) that the LoanWrapper implementation on the Wiki doesn't handle Lift's control flow exceptions properly and will roll back a transaction on S.redirectTo.  We'll need to get a custom LoanWrapper implemented that handles these properly."
1425,'Shadowfiend','Improved checking when deserializing an Option[T]\nDetails https://groups.google.com/d/msg/liftweb/5nMZ9hHv9Uk/Y0odnMGMJUsJ\r\n'
1423,'fmpwizard','addPostPageJavaScript added twice to a page\nAs discussed with [David](https://groups.google.com/d/topic/liftweb/gaQ3s_2n3Po/discussion)\r\n\r\nSample app here:\r\nhttps://github.com/fmpwizard/lift_starter_2.4/tree/comet-fixedRender-issue\r\n\r\n```\r\ngit clone git@github.com:fmpwizard/lift_starter_2.4.git\r\ncd lift_starter_2.4\r\ngit checkout comet-fixedRender-issue\r\nsbt\r\n```\r\n\r\n(note the branch name comet-fixedRender-issue )\r\n\r\nCalling addPostPageJavaScript from fixedRender like this:\r\n\r\n\r\n```scala\r\n  override def fixedRender: Box[NodeSeq] = {\r\n     S.session map { sess =>\r\n      sess.addPostPageJavaScript( () => JsCmds.Alert("hi") )\r\n    }\r\n    logger.info("called fixed render")\r\n    NodeSeq.Empty\r\n  }\r\n```\r\n\r\nresults in the html having the `alert("hi")` twice.\r\n\r\n\r\n'
1381,'','Can\'t remove only class when class merging disabled\nAs [discussed on the mailing list](https://groups.google.com/d/topic/liftweb/qN4VThXAsXw/discussion):\r\n\r\nUsing Lift 2.5-M3, with the example from issue #1312, the following code removes the "removeme" class, as expected:\r\n\r\n    (".removeme !!" #> ("td [class!]" #> "removeme")).apply(<tr><td class="removeme fish">Hi</td></tr>)\r\n\r\nProduces:\r\n\r\n    NodeSeq(<tr><td class="fish">Hi</td></tr>)\r\n\r\nHowever, if the "removeme" class is the only class, it is not removed:\r\n\r\n    (".removeme !!" #> ("td [class!]" #> "removeme")).apply(<tr><td class="removeme">Hi</td></tr>)\r\n\r\nProduces:\r\n\r\n    NodeSeq(<tr><td class="removeme">Hi</td></tr>)\r\n\r\nThe consensus seems to be that this is a bug.\r\n\r\nThanks,\r\nKevin'
1378,'','Incorrect composition of logical expressions in Javascript DSL\n`JsAnd(a, JsNot(JsOr(b, c)))` produces `JsExp(a && !b || c)` instead of something like `JsExp(a && !(b || c))` (with more parentheses for correct logic evaluation).\n\nDiscussion: https://groups.google.com/d/topic/liftweb/W7JwaHe3sdI/discussion'
1370,'dpp','Add an editable_? property to MappedField\nAdd an editable_? property to MappedField and have the MappedField "do the right thing" with the value.'
1368,'dpp','Don\'t covert entities in certain cases\nWhen the "don\'t convert entity" flag is passed to the Html5 writer... don\'t convert entities:\n\n```\n      case er: EntityRef if convertAmp =>\n        HtmlEntities.entMap.get(er.entityName) match {\n          case Some(chr) if chr.toInt >= 128 => writer.append(chr)\n          case _ => {\n            val sb = new StringBuilder()\n            er.buildString(sb)\n            writer.append(sb)\n          }\n        }\n\n\n      case er: EntityRef =>\n        val sb = new StringBuilder()\n        er.buildString(sb)\n        writer.append(sb)\n```\n'
1367,'fmpwizard','ResourceBundle priority\nWhen having translations in an xml-resource and a custom DatabaseResourceBundle it should be possible to tell lift which resources have a higher priority.\n\nsee this thread: https://groups.google.com/forum/?fromgroups#!topic/liftweb/IsS0e95yPOs\n\nsample app: https://github.com/sbradl/lift-resource-bundle-priority'
1355,'Shadowfiend',"Omit size in streamed responses\nThe various streaming response classes can accept a size of -1 to produce an unlimited amount of data, but this isn't immediately obvious. It might make sense to add a default argument of -1, or make the size an Option defaulting to None (None seems more in line with an unknown size than does -1.)\r\n\r\nThanks."
1354,'eltimn','Add test function to Record to filter during copy\n@lkuczera:  "I\'d add a test function that takes field as argument and returns boolean.This way we could filter out which fields should be copied."'
1347,'eltimn','Add updatedAt and createdAt traits to Record\n'
1341,'','StackOverFlow error caused by recursion in newConnection\nIn DB.scala newConnection can fail and recursively call itself until the stack overflows. We have seen this happen using both Oracle and H2-Server when the database becomes unavailable and therefore connections to it fail.'
1329,'Shadowfiend','Add CssSelector transform to match on attribute with given name\nSuggested syntax for matching on the "style"-attribute and setting all styles:\r\n\r\n"[style]" #> "border: 1px solid red"'
1325,'fmpwizard',"WebSpec doesn't work in 2.5-M1\nI tried to use the WebSpec as provided in the lift packages but ran into an issue running it. \nSee : https://groups.google.com/forum/?fromgroups=#!topic/liftweb/wpmSCAy4m9U for details. \n\nIn the mean time use : https://gist.github.com/2235088 if you want to make use of WebSpec for specs2 (as lift 2.5 now does specs2)"
1320,'Shadowfiend','Differ between error states in liftajax.js\nLiftRules.ajaxDefaultFailure does currently not distinguish between different types of errors (i.e. non-redirecting status codes). Therefore an ajax call resulting in a 500 has the same effect as an ajax call timing out.\n\nPlease see:\nhttps://groups.google.com/forum/?fromgroups=#!topic/liftweb/Je7yX6R76LQ'
1316,'','Mapper ManyToMany trait fails to save added and then deleted join\nCode of ManyToMany.save function:\n```scala\n    def save = {\n      _joins = joins.filter { join =>\n        otherFK(join)(f => f.is != f.defaultValue)\n      }\n      _joins foreach { thisFK(_)(_ set ManyToMany.this.primaryKeyField.is) }\n\n      removedJoins.forall {_.delete_!} & ( // continue saving even if deleting fails\n        children.forall(_.save) &&\n          joins.forall(_.save)\n      )\n    }\n```\nif  ```removedJoins``` contains join which returns ```_.delete_! == false``` while calling ```removedJoins.forall {_.delete_!}``` for example because of ```db_can_delete_? ``` of join returns ```false``` (which is the case when we add and remove the join before save), then other removed joins in ```removedJoins```, if they are after the join, will not be deleted. This is because ```forall``` method stops evaluating after first ```false```\n'
1315,'','Reload all or a specific template in production without app restart.\nIn production mode, one has to restart the whole app to reload templates, which seems to be an overkill for minor adjustments. Here is a link to the topic at mailinglist: https://groups.google.com/forum/?fromgroups=#!topic/liftweb/oqFNzoA_vs4\n'
1313,'davewhittaker','UUID field support in squeryl-record\nIn squeryl-record, there should be support for UUID fields including autogenerating primary keys (KeyedRecord[UUID]).  Squeryl has support for native UUID columns, so this issue is to plumb through support for this in squeryl-record and possibly Record itself.'
1305,'','Conversion from XML produces invalid JSON\nWhen converting a flat array from xml, when combined with other elements, the resulting JSON is invalid. for example, \nwhen converting a piece of xml that looks like this: \n&lt;f&gt;1&lt;/f&gt;\n&lt;f&gt;2&lt;/f&gt;\n&lt;f&gt;3&lt;/f&gt;\n, the result is correct : "f" : [1,2,3], however, if we add another node: \n\n&lt;f&gt;1&lt;/f&gt;\n&lt;f&gt;2&lt;/f&gt;\n&lt;f&gt;3&lt;/f&gt;\n&lt;z&gt;foo&lt;/z&gt;, the result is something like this: {  "f": "1",  "f": "2", "f": "3", "z":"foo" }. I believe this is happening because of the array_? definition is checking distinct = 1 for fields of surrounding element. \nAlso, a simple solution would be to first group by the name of the node and then do the array check for each group where an array is the map\'s value where count > 1. that would not drop elements and produce "correct" JSON.\n\nThanks.'
1304,'pbrant','Add doAjaxCallback to (CSSBound) LiftScreen\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/yOcs-6oFpFE%5B1-25%5D'
1303,'pbrant','Problem with multiple FieldTransform per field\nI created this little method to add a class to a Css bound LiftScreen field. The field is mirrored from Record, just adding the key/value tuple doesn\'t work there yet as discussed here: https://groups.google.com/forum/#!topic/liftweb/8m31wwg_60U/discussion\n\ndef cls(clsName: String): FieldTransform = FieldTransform(() => {".value [class+]" #> clsName})\n\nto use like this:\n\nval f: Field{type ValueType = String} = field(record.is.fieldName, cls("mini"), cls("another-class"))\n\nIn the resulting HTML only the first FieldTransform is executed, subsequent ones are not.\n'
1302,'pbrant','Add a CSS class to Css LiftScreen field\nI just tried to add a css class to a mirrored Record field with the result that the CSS is not added to the resulting html.\n\nobject assoc extends ScreenVar(Assoc.createRecord)\n\nval name: Field{type ValueType = String} = field(assoc.is.name, "class" -> "span1" , flagFieldError(name))\n\nI tried with different attributes that do not occur in the screen CSS but that didn\'t help. It works fine for screen fields that do not mirror any Record fields.\n'
1297,'davewhittaker','Squeryl-record crash when field has ignoreField_? = true\nAccording to API documentation, when a Record field is declared as `ignoreField_? = true`, ORM should ignore it.\n\nBut the following code will lead to a exception thrown by squeryl-record.\n\n    object Bookstore extends Schema {\n        val users = table[User]("users")\n    }\n\n    object User extends User with MetaRecord[User]\n    class User extends Record[User] with KeyedRecord[Long] {\n        def meta = User\n    \n        @Column(name="id")\n        val idField = new LongField(this, 1)\n        val email = new EmailField(this, 255)\n        val password = new PasswordField(this)\n        val ignoreString = new StringField(this, "") {\n            override def ignoreField_? = true\n        }\n    }\n\nStack trace when create DDL from Squeryl.\n\n    scala> inTransaction { Bookstore.printDdl }\n    java.lang.RuntimeException: error while reflecting on metadata for (Some(private final net.liftweb.record.field.StringField org.bedone.model.User.ignoreString),Some(public net.liftweb.record.field.StringField org.bedone.model.User.ignoreString()),None,Set()) of class org.bedone.model.User\n            at org.squeryl.internals.PosoMetaData$$anonfun$4.apply(PosoMetaData.scala:115)\n            at org.squeryl.internals.PosoMetaData$$anonfun$4.apply(PosoMetaData.scala:80)\n            at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:178)\n            at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:347)\n            at org.squeryl.internals.PosoMetaData.<init>(PosoMetaData.scala:80)\n            at org.squeryl.View.<init>(View.scala:66)\n            at org.squeryl.Table.<init>(Table.scala:29)\n            at org.squeryl.Schema$class.table(Schema.scala:338)\n            at org.bedone.model.Bookstore$.table(Test.scala:19)\n            at org.bedone.model.Bookstore$.<init>(Test.scala:20)\n            at org.bedone.model.Bookstore$.<clinit>(Test.scala)\n            .............\n    Caused by: java.lang.RuntimeException: failed to find field ignoreString in Record metadata for class org.bedone.model.User\n            at org.squeryl.internals.Utils$.throwError(Utils.scala:95)\n            at net.liftweb.squerylrecord.RecordMetaDataFactory.fieldFrom$1(RecordMetaDataFactory.scala:41)\n            at net.liftweb.squerylrecord.RecordMetaDataFactory.findMetaField(RecordMetaDataFactory.scala:45)\n            at net.liftweb.squerylrecord.RecordMetaDataFactory.build(RecordMetaDataFactory.scala:70)\n            at org.squeryl.internals.PosoMetaData$$anonfun$4.apply(PosoMetaData.scala:112)\n            ... 49 more\n\n'
1293,'dpp','Wizard Form Page Unexpectedly Redirects with 303 Back to Top-Level Site\nCf https://groups.google.com/forum/?fromgroups#!topic/liftweb/aWLdGonXDLg\n\nSymptom: \nYour form page that is using a Wizard will unexpectedly redirect to the top-level index page when you try to access it. Eg, you try to access /test and you end up with a HTTP 303 redirect to /. You have no URL rewrite, HTTP pipeline redirect, or form redirect that would do such a thing.\n\nSolution:\nYou dummy, you tried to make a Screen using the same syntax as the Wizard. Eg:\nobject Foo extends Wizard {\n  object Bar extends Screen {\n    //…\n}}\nTry the correct Screen syntax on for size:\nobject Foo extends Wizard {\n  val Bar = new Screen {\n    //…\n]}'
1289,'','Make uniqueIds more secure\nReference: http://groups.google.com/group/liftweb/browse_thread/thread/194410e1bf38c076\n\n## Problem\n\nSay, someone gets a dump of my users table (doesn\'t need to be Lift\'s fault, can be a bad database configuration), then all the passwords in there are salted and hashed and so the attacker has no realistic chance of recovering any of the passwords therein. Also, some intern who might have read access to the database cannot see the password.\n \n However, the uniqueID allows to silently reset the password by visiting the URL\n \n   http://myurl.com/user_mgt/reset_password/{uniqueID}\n \n That is, even though the passwords cannot be recovered by an attacker, they can be reset to an arbitrary value (which is bad enough for, say, online banking). If I *noticed* that someone got access to my database, I can simply say "UPDATE users SET uniqueId=..." and get rid of that problem, but until I notice, the attacker is free to take over any account in the database.\n\n## Possible solutions\n\n* When sending out links with "secret keys" (e.g., password reset), do not store those keys directly in the database, but only a hashed version. Thus, it is not possible to trigger the action just by knowing the database content, but only by knowing the key.\n* (by dpp) Add a timeout to the uniqueId such that it expired after some time.'
1284,'Shadowfiend',"Date missing in header of ProtoUser emails \nEmails sent by ProtoUser.sendValidationEmail (but also those sent from sendPasswordReset) don't have a Date header in them, which makes them (usually) appear at the very bottom of the email inbox. Also, emails without a Date header are often filtered out by spam filters installed on mail servers.\n\nI suggest to make Mailer.sendMail include the current local time as a default Date header, if not passed in. Otherwise basically everyone needs to override sendValidationEmail etc.\n"
1260,'Shadowfiend','Remove unused settings from LiftRules\nThere are some settings in LiftRules that are not referenced anywhere. They should be removed to avoid confusion'
1258,'dpp','RFE: required HTML5 attribute support on Fields\nUse BaseField.required_? to add the "required" HTML 5 attribute when serializing to HTML 5\r\n\r\nGroup discussion thread: https://groups.google.com/forum/?fromgroups#!topic/liftweb/Vtw0Eib8Avs'
1248,'','mapper DB.runUpdate crashes if question marks in valid strings\nthe following will fail\r\n\r\nDB.runUpdate("insert into myTable (name, comment) values (\'Tim\', \'Why?\'), Nil)\r\n\r\nbecause the code in mapper is incorrectly parsing for ? as a parameter in the entire sql statement not just in parameter positions.\r\n\r\nSee this post for discussion\r\n\r\nhttps://groups.google.com/forum/?hl=en&fromgroups#!topic/liftweb/2wxkFMK-niY\r\n\r\nincluding trace and source code reference\r\n\r\nSuggested short-term workaround:\r\ncreate DB.runUpdate(sql: String)  with no parameters\r\n\r\nand return error instead of crashing and looking for items in empty param list\r\n\r\n\r\n\r\n'
1245,'dpp','Non-ASCII chars should be UTF-8 encoded for headers (where appropriate)\nSee https://groups.google.com/d/topic/liftweb/qs7jyFliumI/discussion\r\n'
1243,'',"ProtoUser passwordReset doesn't show message\nReference discussion:\r\nhttps://groups.google.com/forum/?fromgroups#!topic/liftweb/BtlbZr7SXsY\r\n\r\nAfter receiving email with link to password change and filling in new password, Lift redirects to home page with notice. The notice doesn't show up."
1240,'','Add support for HTTP Range requests\nAs discussed in the thread: https://groups.google.com/forum/?hl=en#!topic/liftweb/v-5nV90fPeI'
1237,'jeppenejsum','LiftRules.localizationLookupFailureNotice is not called on S.loc("xxxxxxxx") \nIn reference of : http://groups.google.com/group/liftweb/browse_thread/thread/0e5f52077ef15395/a31dacb5110656cc#a31dacb5110656cc\r\n\r\n> Hello,\r\n\r\n> So if I overload LiftRules.localizationLookupFailureNotice to log notices\r\n> to error log then errors are generated on S.??("xxxxxxxx") but not on\r\n> S.loc("xxxxxxxx") or <span class="lift:Loc.xxxxxxxx">Not Found</span>.\r\n> Can we improve lift localization to avoid this?\r\n\r\n> Lift version : 2.4\r\n\r\nAt looks like S.loc logs for each resourceBundle that is tried and no\r\nkey found. If there are no resourceBundles, no logging occurs.\r\n\r\nThis does seem a bit odd an in contrast to S.? that only logs once for\r\nthe key even if there are multiple bundles.\r\n\r\nI\'m looking at some other stuff with resources so please open a ticket\r\nand assign it to me (on GitHub)\r\n\r\n/Jeppe \r\n\r\nS.loc code:\r\n<pre><code>\r\ndef loc(str: String): Box[NodeSeq] =\r\n    resourceBundles.flatMap(r => tryo(r.getObject(str) match {\r\n      case null => LiftRules.localizationLookupFailureNotice.foreach(_(str, locale)); Empty\r\n      case s: String => Full(LiftRules.localizeStringToXml(s))\r\n      case g: Group => Full(g)\r\n      case e: Elem => Full(e)\r\n      case n: Node => Full(n)\r\n      case ns: NodeSeq => Full(ns)\r\n      case x => Full(Text(x.toString))\r\n    }).flatMap(s => s)).find(e => true)\r\n</code></pre>\r\n\r\nS.?! code:\r\n<pre><code>\r\nprivate def ?!(str: String, resBundle: List[ResourceBundle]): String = resBundle.flatMap(r => tryo(r.getObject(str) match {\r\n    case s: String => Full(s)\r\n    case n: Node => Full(n.text)\r\n    case ns: NodeSeq => Full(ns.text)\r\n    case _ => Empty\r\n  }).flatMap(s => s)).find(s => true) getOrElse {\r\n    LiftRules.localizationLookupFailureNotice.foreach(_(str, locale));\r\n    str\r\n  }\r\n</code></pre>'
1236,'Shadowfiend','Changing labels with CssSelector\nThis ticket follows the discussion on the mailing list about rewrapping Elem: \nhttps://groups.google.com/d/topic/liftweb/uVW4xOPgnk8/discussion\n\nFor example:\n\n```xml\n    <people version="1" otherProp="prop">\n      <name>foo</name>\n      <friends><name>bar</name></name><name>baz</name></friends>\n    </people>\n```\n\n    Into:\n\n```xml\n    <user version="2" otherProp="prop">\n      <login>foo</login>\n      <knows><name>bar</name></name><name>baz</name></knows>\n    </user>\n```\n\nProposed solution: \n\n\n    "people" #> ((ns: NodeSeq) => <user version="2">{\n      val kids = ns.asInstanceOf[Elem].child\n      ("name" #> ((ns: NodeSeq) => <login>{ns.asInstanceOf[Elem].child}</login>)).apply(kids)\n    }</user>)\n\n\nBut should be simpler. '
982,'Shadowfiend','Cache results of parsing URI parameters\nMenu.param allows you to define a parser and an encoder for a URI parameter. The parser is a good place to retrieve an item from a database and automatically get a 404 if it is not found, but the parsing is performed multiple times per request and the result is not cached. As a workaround, you can manually thread the result through a RequestVar. It would be nice to have a caching Menu.param available in Lift out of the box.'
1122,'dpp','Make it possible to define security constraints on a RestHelper\nDiscussion over here: \n\nhttps://groups.google.com/forum/#!topic/liftweb/NOHtPYd5UdA\n\n'
980,'dpp','RequestVar restore is less than optimal in Ajax calls\nRight now, request var restoration during Ajax calls is a whole lot less than optimal.  Ajax calls should have state restored without any explicit state restoration calls.'
1120,'dpp','Make Msg notices separator configurable.\nThe Msg builtin snippet renders notices with a comma separated string. This would be really helpful to make this separator configurable. \n\nThe specific case which leads to this request is when using phrases as messages (captialized and dot at the end). The current rendering put a comma after the dot, so being able to configure this comma to be a space would be interesting.\n\nlink to the discussion:  https://groups.google.com/forum/#!topic/liftweb/LH2B4h6D8u0'
977,'pbrant',"FormBuilderLocator with generic type can't always be found\nmanifest.toString() in vendForm() can return surprising results depending on the field(...) call in the screen.\n\nSample project here: https://github.com/pbrant/generic_fbl_test / git://github.com/pbrant/generic_fbl_test.git\n\nThe cause appears to be the generic valConversion() validation method\n\nOriginal thread here http://groups.google.com/group/liftweb/browse_thread/thread/af21b61154c2b8c2#"
976,'dpp','Add helpers to URL rewriting so it\'s more DSLy\nSome code that can help us create a better DSL:\n\n\nimport net.liftweb.http._\nimport net.liftweb.http.LiftRules\nimport com.gu.sport.microapp.Endpoints\nimport org.joda.time.format.DateTimeFormat\nimport net.liftweb.util.Helpers._\nimport com.gu.management.{Manifest, Management}\nimport net.liftweb.util.NamedPF\nimport net.liftweb.common.Empty\nimport com.gu.sport.microapp.snippet.Scoped\nimport org.joda.time.{DateTimeZone, DateMidnight, DateTime}\nimport com.gu.sport.microapp.repository.{SportMicroappMatchRepository, SportMicroappCompetitionRepository, SportMicroappMatchSearcher}\nimport com.gu.opta.model.`match`.Match\nimport com.gu.opta.model.competition.{Matches, TeamMatches, Competition}\n\nclass Boot {\n  SportMicroappMatchSearcher.start\n  SportMicroappCompetitionRepository.start\n\n  def boot = {\n\n    DateTimeZone setDefault(DateTimeZone forID ("Europe/London"))\n\n    LiftRules.addToPackages("com.gu.sport.microapp")\n\n    LiftRules.early.append(_.setCharacterEncoding("UTF-8"))\n\n    // Render view templates as HTML5 by default\n    LiftRules.htmlProperties.default.set((r: Req) => new Html5Properties(r.userAgent))\n\n    LiftRules.autoIncludeAjax = _ => false\n    LiftRules.autoIncludeComet = _ => false\n    LiftRules.enableContainerSessions = false\n    LiftRules.getLiftSession = req => new LiftSession(req.contextPath, "dummySession", Empty)\n    LiftRules.sessionCreator = (i1, i2) => error("no sessions here please")\n\n    //all paths are stateless (removes lift_page JS on bottom of page\n    LiftRules.statelessTest.prepend({\n      case _ => true\n    })\n\n    LiftRules.defaultHeaders = {\n     case _ =>\n        List("Date" -> nowAsInternetDate, "Cache-Control" -> "public, max-age=60")\n    }\n\n    object DatedPath {\n      val fmt = DateTimeFormat.forPattern("yyyyMMMdd")\n      def unapply(datedPath: List[String]): Option[DateMidnight] = datedPath match {\n        case year::month::day::postfix::Nil => tryo(fmt.parseDateTime(year+month+day).toDateMidnight)\n        case _ => None\n      }\n    }\n\n    object DatedMatch {\n      val fmt = DateTimeFormat.forPattern("yyyyMMMdd")\n      val IdBased = """(\\d+)""".r\n      val TeamBased = """([\\w|-]+)-v-([\\w|-]+)""".r\n      def unapply(datedPath: List[String]): Option[Match] = datedPath match {\n        case year::month::day::IdBased(matchId)::Nil => tryo {\n          val matchDate = fmt.parseDateTime(year+month+day).toDateMidnight\n          val theMatch = SportMicroappMatchRepository.getMatch(matchId)\n          if (theMatch.dateTime.toDateMidnight != matchDate) throw new IllegalStateException("Url date and match date do not match")\n          theMatch\n        }\n        case year::month::day::TeamBased(homeTeam, awayTeam)::Nil => {\n          tryo {\n            SportMicroappCompetitionRepository.findMatchSummary(fmt.parseDateTime(year+month+day), homeTeam, awayTeam) match {\n              case Some(summary) => SportMicroappMatchRepository.getMatch(summary.id)\n              case _ => throw new IllegalStateException("Url date and match date do not match")\n            }\n          }\n        }\n        case _ => None\n      }\n    }\n\n    object MatchesFromWordsForUrl {\n      def unapply(wordsForUrl: String): Option[Matches] = SportMicroappCompetitionRepository.getMatchesFor(wordsForUrl)\n    }\n\n    object MatchId {\n      def unapply(matchId: String): Option[Match] = tryo{SportMicroappMatchRepository.getMatch(matchId)}\n    }\n\n    //TODO see if this can sensibly be moved to its own file\n    LiftRules.statelessRewrite.prepend(NamedPF("resources") {\n\n      // /resource/football/2011/jan/01/matches\n      case RewriteRequest(ParsePath("resource" :: "football" :: DatedPath(date), _, _, _), _, _) => {\n        Scoped.date.set(date)\n        RewriteResponse("resource" :: "football" :: "matches-on-date" :: Nil, Map.empty[String, String])\n      }\n\n      // /resource/football/matches\n      case RewriteRequest(ParsePath("resource" :: "football" :: "matches" :: Nil, _, _, _), _, _) =>\n        RewriteResponse("resource" :: "football" :: "matches-on-date" :: Nil, Map.empty[String, String])\n\n      // /resource/football/match/2011/jan/02/1234/popup\n      // /resource/football/match/2011/jan/02/everton-chelsea/popup\n      case RewriteRequest(ParsePath("resource" :: "football" :: "match-popup" :: DatedMatch(theMatch), _, _, _), _, _) => {\n        Scoped.theMatch.set(theMatch)\n        RewriteResponse("resource" :: "football" :: "match-stats-popup" :: Nil, Map.empty[String, String])\n      }\n\n      // /resource/football/match/2011/jan/02/1234\n      // /resource/football/match/2011/jan/02/everton-v-chelsea\n      case RewriteRequest(ParsePath("resource" :: "football" :: "match" :: DatedMatch(theMatch), _, _, _), _, _) => {\n        Scoped.theMatch.set(theMatch)\n        RewriteResponse("resource" :: "football" :: "match-stats" :: Nil, Map.empty[String, String])\n      }\n\n      // /resource/football/premierleague/fixtures\n      // /resource/football/everton/fixtures\n      case RewriteRequest(ParsePath("resource" :: "football" :: MatchesFromWordsForUrl(matches) :: "fixtures" :: Nil, _, _, _), _, _) => {\n        Scoped.matches.set(matches)\n        RewriteResponse("resource" :: "football" :: "fixtures" :: Nil, Map.empty[String, String])\n      }\n\n      // /resource/football/premierleague/results\n      // /resource/football/everton/results\n      case RewriteRequest(ParsePath("resource" :: "football" :: MatchesFromWordsForUrl(matches) :: "results" :: Nil, _, _, _), _, _) => {\n        Scoped.matches.set(matches)\n        RewriteResponse("resource" :: "football" :: "results" :: Nil, Map.empty[String, String])\n      }\n\n\n      //TODO make me work\n      // /resource/football/premierleague/tables\n      case RewriteRequest(ParsePath("resource" :: "football" :: standings :: "tables" :: Nil, _, _, _), _, _) => {\n        RewriteResponse("resource" :: "football" :: "tables" :: Nil, Map("optaId" -> standings))\n      }\n\n    })\n\n\n    object CompetitionId {\n      val CompetitionRegex = """(\\d+)/(\\d+)""".r\n      def unapply(id: List[String]): Option[Competition] = id.mkString("/") match {\n        case CompetitionRegex(id, season) => tryo{SportMicroappCompetitionRepository.getCompetition(id, season)}\n        case _ => None\n      }\n    }\n\n    object TeamId {\n      val TeamRegex = """(\\d+)""".r\n      def unapply(id: String): Option[TeamMatches] = id match {\n        case TeamRegex(id) => tryo{\n          val fromDate = new DateTime().minusMonths(6)\n          SportMicroappCompetitionRepository.getMatchesForTeam(id, Some(fromDate), None)\n        }\n        case _ => None\n      }\n    }\n\n    LiftRules.statelessRewrite.prepend(NamedPF("components") {\n\n      // /component/football/tournament-fixtures/1234\n      case RewriteRequest(ParsePath("component" :: "football" :: "competition-summary" ::CompetitionId(competition), _, _, _), _, _) =>\n        Scoped.competition.set(competition)\n        RewriteResponse("component" :: "football" :: "competition-summary" :: Nil, Map.empty[String, String])\n\n      case RewriteRequest(ParsePath("component" :: "football" :: "team-summary" ::TeamId(team):: Nil, _, _, _), _, _) =>\n        Scoped.team.set(team)\n        RewriteResponse("component" :: "football" :: "team-summary" :: Nil, Map.empty[String, String])\n\n      // /component/football/tabs-and-score/1234\n      case RewriteRequest(ParsePath("component" :: "football" :: "tabs-and-score" :: MatchId(theMatch) :: Nil, _, _, _), _, _) => {\n        Scoped.theMatch.set(theMatch)\n        RewriteResponse("component" :: "football" :: "tabs-and-score" :: Nil, Map.empty[String, String])\n      }\n      // /component/football/calendar\n      //probably does not need a rewrite\n    })\n\n    LiftRules.statelessDispatchTable\n      .append(Endpoints)\n      .append(Management.publishWithIndex(Manifest))\n\n  }\n}'
692,'dchenbecker','Add support for using ROW_NUMBER with Oracle to achieve LIMIT/OFFSET\nSee this thread for discussion:\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/4e2df84fb14275f2'
832,'dchenbecker',"Fix HideIfNoKids so that it works\nFor some reason HideIfNoKids doesn't appear to be working as advertised.\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/1e900bfa2a2eaff7#"
1114,'Shadowfiend','CSS selector transforms duplicate attributes when wrapping elements\nSee thread at http://groups.google.com/group/liftweb/browse_thread/thread/184b7eb51d461b30\r\n\r\nI\'ve found what looks like another CSS selector bug.  The selector is \r\nappending the attributes of the input element to the attributes of the \r\nroot output element.  This is especially problematic when on of those \r\nattributes is id :-) \r\n\r\nThis is with lift-2.4-M4 and scala-2.9.1.  From a console: \r\n\r\n```\r\n    scala> import net.liftweb.util.Helpers._ \r\n    import net.liftweb.util.Helpers._ \r\n    scala> val input = <div id="foo">content</div> \r\n    input: scala.xml.Elem = <div id="foo">content</div> \r\n    scala> val selector = \r\n         |   "#foo" #> ((ns: xml.NodeSeq) => <wrapper>{ns}</wrapper>) \r\n    selector: net.liftweb.util.CssSel = // snip \r\n    scala> println(selector(input)) \r\n    <wrapper id="foo"><div id="foo">content</div></wrapper> \r\n```\r\n\r\nYou can see that wrapper is mistakenly getting an id attribute.  The \r\nfinal output should be:\r\n\r\n```html\r\n<wrapper><div id="foo">content</div></wrapper> \r\n```\r\n'
829,'dpp',"New Enumeration & associated support in Mapper & Record\nScala's Enumeration is limited.\n\nCreate a new Enumeration that support subclassing Values, case classes/case objects, etc."
687,'','Option to return aliased column names from Mapper Raw SQL methods.\nCurrently, the methods DB.performQuery and DB.runQuery return a (List[String], List[List[Any]]) with the first item in the tuple being a List of column names.\nWhen running a query with aliased column names, e.g. \n<pre><code>SELECT FirstName AS GivenName FROM accounts WHERE id = 1\n</code></pre>\n The underlying field name (FirstName) is returned rather than the aliased name (GivenName).\n\nIt would be very useful to have the option of getting the aliased names instead - but obviously keep the existing behaviour as the default to maintain backwards compatibility.  This is especially needed when joining two tables that have a column with the same name.\n\nI believe that the code which does this currently is in the DB.resultSetTo and DB.resultSetToAny methods.  Currently, the line which gets the column names reads:\n\n<pre><code>val colNames = cntList.map(i => md.getColumnName(i))\n</code></pre>\n\nA supplemental version to get the aliased names as an alternative should instead read:\n\n<pre><code>val colNames = cntList.map(i => md.getColumnLabel(i))\n</code></pre>\n\nThis enhancement has been discussed on the mailing list in these threads:\n\n[[url:http://groups.google.com/group/liftweb/browse_thread/thread/1b82ab568d10328c/c43c585f80be38f5|should use getColumnLabel insead of getColumnName in DB.resultSetToXXX ]]\n[[url:http://groups.google.com/group/liftweb/browse_thread/thread/bd699357831dafcd/7a85b4312662ca51#7a85b4312662ca51|Mapper - Column Labels vs Column Names]]'
686,'dpp','MappedLongForeignKey and MappedStringForeignKey do not have equivalent API\nMappedLongForeignKey\nMappedStringForeignKey\n\nthese 2 classes have the same exact meaning except for one is using Long as datatype while the other uses String.\nthey should have the exact same API (maybe differ when need to handle the actually data, after all one is Long and the other is String)\nMappedStringForeignKey has an abstract method "foreignMeta" that needs to be implemented while the MappedLongForeignKey has this method implemented already.\nAnd should have the alias method "foreign" for "obj" which MappedLongForeignKey has.'
1108,'dpp','Make it easier to return files (LiftScreen?)\nDiscussion thread:\nhttps://groups.google.com/forum/#!searchin/liftweb/return$20file/liftweb/uz6EaJ3fWEg/-F5upfvJZM0J'
1107,'jonifreeman','JSON serialization fails with type alias (in Scala 2.9)\nhttp://groups.google.com/group/liftweb/browse_thread/thread/5edabfc77f7e6852#\n'
1103,'dpp','Add "Remember Me?" checkbox for extended sessions\nUsers have asked for a way to add a "remember me" checkbox to enable/disable the setting of the ext_id cookie. Mailing list thread: http://groups.google.com/group/liftweb/browse_frm/thread/82b931d4bf43d10a/473332fda485d038?lnk=gst\n\nI\'d suggest:\n * the ability to add a checkbox with user specified text (e.g., "remember me on this computer?")\n * ability to default the checkbox to checked or not checked\n * if checked, allow ext session code to work as normal.  If not checked, do not set the ext session cookie. \n* presumably this impacts both login screens and registration screens. \n\nIf there are code changes, I\'d be willing to update the wiki page accordingly.\n\nAdditionally, in the UK next year, web sites will need to get permission before setting non-essential cookies, which we believe would include the extended session cookie.  \n\nBackground:\n* Short summary of UK regulation changes: http://www.mablaw.com/2011/07/cookie-law-ico-food-for-thought/\n* Long feedback from the regulator when I asked about "keep me logged in" cookies:  http://richard.dallaway.com/jsessionid-and-the-like-plus-the-privacy-and\n'
1101,'dpp','weird interaction between DataLoc and RequestVar\nSee this thread: https://groups.google.com/forum/#!topic/liftweb/oaaqkUoeUSc'
676,'','Html5 support for fields\nHtml5 introduce new attributes for input tag and allow client side form validations.\n\nCurrently I hacked lift-record source like following (But a more general solution will be better)\n\n<pre><code>\n  //TODO find a better way to support html5 addtional attributes (and a way to transform every type of field)\n  protected def elemAttr: MetaData = {\n    val b = new UnprefixedAttribute("type", "text", Null) // to inject maxLength,...\n    isHtml5 match {\n      case true => {\n        val b2 = regExp.map { x => new UnprefixedAttribute("pattern", x, b) }.getOrElse(b)\n        new UnprefixedAttribute("required", (!optional_?).toString, b2)\n      }\n      case false => b\n    }\n  }\n\n  protected def elem = S.fmapFunc(SFuncHolder(this.setFromAny(_))) { funcName =>\n    val b = <input name={ funcName } value={ valueBox openOr "" } tabindex={ tabIndex toString }/>\n    b % elemAttr\n  }\n</code></pre>\n(full source at\n  * http://github.com/lift/lift/blob/davidb_record_protouser/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/RegExpTypedField.scala\n  * http://github.com/lift/lift/blob/davidb_record_protouser/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala\n)\n\n\nAnd I override localForm method into User( extends MetaMegaProtoUser ) :\n\n<pre><code>\n  override protected def localForm(user: User, ignorePassword: Boolean): NodeSeq = {\n    signupFields.\n    flatMap(fi => user.fieldByName(fi.name)).\n    filter(f => !ignorePassword || (f match {\n          case f: PasswordField[User] => false\n          case _ => true\n        })).\n    flatMap(f =>\n      f.toForm.toList.map(form =>\n        (<p>\n          <label for={form \\\\"@id"}>{f.displayName}{if(f.optional_?) "" else " *"}</label>\n          {form.\n        \t  map{case e : Elem => e % new UnprefixedAttribute("required", (!f.optional_?).toString, Null)}\n          }\n        </p>) ) )\n  }\n</code></pre>\n\n\nAnd to allow isHtml5 to return true I add into Boot.boot (<lift:Html5> tag set the DocType too late):\n<pre><code>\n   S.addAround(new LoanWrapper{\n      def apply[T](f : => T) : T = {\n        S.setDocType(Full(DocType.html5))\n        f\n      }\n    })\n</code></pre>\n\n\n\n\n* html5 specs for form validation : http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html\n* a report about browser support : http://www.findmebyip.com/litmus#html5-forms-inputs\n** javascript lib, used to test browser CSS3/html5 support : http://www.modernizr.com/\n\n* the page I used to know possible input\'s attributes : http://miketaylr.com/code/input-type-attr.html\n* the javacsript lib (jQuery based) I used with html5 to provide form validation : http://flowplayer.org/tools/release-notes/index.html#form\n\n* HTML5/CSS/JS template  : http://html5boilerplate.com/\n'
959,'Shadowfiend','Htmlize ChoiceHolder with <label>\nI suggest changing default behaviour of ChoiceHolder.htmlize so that there is no <br/> tag and radios and checkboxes are surrounded by <label> instead of <span>\nAlso it might be a good idea to update ScalaDoc for that method, so that it informs, that this is the place to plug in a custom behaviour by changing it in Boot class.\n\nDiscussion thread: https://groups.google.com/forum/?pli=1#!topic/liftweb/Ar8EOCaUnbE'
534,'jonifreeman','Default parameter support for JSON extraction (Scala 2.8)\ncase class Bike(make: String = "Trek", price: Int) \nparse("""{"price": 350}""" ).extract[Bike]\n\nshould give: Bike("Trek", 350)\n'
1098,'Shadowfiend','LazyLoad: Add params for timeout period and timed-out template\nIt would be nice to have two more snippet params added to LazyLoad: one to specify the CometActor timeout and another to specify a second template to use in the case of a timeout.'
1097,'lkuczera','Add ElemAttr* to ajaxForm/jsonForm\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b801f1219bdc410b'
669,'ssuravarapu','Add support to REST helpers for weighting of response types\nRight now, response types are considered in the order that they are encountered.  However, the Accepts header (and others) can choose a response type based on a weight.  Add support to choosing by weight when calculating which handler to use.\n'
526,'Shadowfiend','Remove deprecated JS stuff\nRemove the following deprecations:\n\n1. JQueryLeft, JQueryRight\n2. JSRules.fadeTime,  JsRules.prefadeDuration as we have the generic auto fadeout mechanism\n3. Remove JqSHtml as all things are deprecated here.'
1092,'dpp',"Creating API for taking a NodeSeq and listing the snippet invocations in the NodeSeq\nFor testing snippets it's very useful to be able to list all snippet-invocations in a NodeSeq\nRef this thread: http://groups.google.com/group/liftweb/browse_thread/thread/1bac9b77a0886639"
798,'Shadowfiend','Make code that walks the templates accessible without a session\nThis is from our discussion on the ML with the title Lift-lint. \n\n"Yeah... you\'re probably going to need the code that walks the templates split out so you can access it without a session so you can walk all the templates and find the referenced snippets. "\n\nContact me when it\'s ready \n\nMerry Christmas,\nMads'
1078,'Shadowfiend',"Parsing error in LiftRules.fixCSS when some CSS selector contains 'url' string\nIf CSS file contains some CSS selector which contains 'url' string in it\nexample:\n\n<pre><code>#fUrlName{width:470px;}</code></pre>\n\nfunction fixCSS ends up with parsing error.\n\nevery another details are described here: https://groups.google.com/d/topic/liftweb/dZXAEO-LIqc/discussion"
934,'','Referential actions for foreign keys in Mapper\nIt\'d be nice, if one could define referential actions for Mapper\'s foreign key, so that Schemifier will create such FKs and one wouldn\'t have to redefine FKs manually afterwards. By referential actions I mean what should be done if referenced row in parent table is updated or deleted (CASCADE, NO ACTION, RESTRICT, SET NULL, SET DEFAULT). Currently all FKs are defined as "ON UPDATE NO ACTION ON DELETE NO ACTION".\n\nGoogleGroups thread: http://groups.google.com/group/liftweb/browse_thread/thread/67e00c37772dea91#'
791,'dpp','Support for Knockout JS\nThe http://knockoutjs.com/ library is a natural fit with Wiring.  Create a module or some other form of support for KnockoutJS'
366,'','cannot use lift-util in OSGi environment w/out log4j\nHi,\n\nI\'d like to use lift-utils in an OSGi environment with LogBack (SLF4J) used for logging.\n\nUnfortunately lift-utils *requires* log4j:\n\n<pre><code>\nosgi> ss\n\nFramework is launched.\n\nid\tState       Bundle\n0\tACTIVE      org.eclipse.osgi_3.5.1.R35x_v20090827\n1\tACTIVE      slf4j.api_1.5.10\n2\tACTIVE      ch.qos.logback.core_0.9.18\n3\tACTIVE      ch.qos.logback.classic_0.9.18\n4\tACTIVE      org.scala-lang-osgi.scala-library_2.7.7\n5\tACTIVE      com.springsource.org.apache.commons.codec_1.4.0\n6\tACTIVE      com.springsource.javax.mail_1.4.1\n7\tINSTALLED   net.liftweb.lift-util_2.0.0.M2\n8\tACTIVE      net.liftweb.lift-actor_2.0.0.M2\n9\tACTIVE      net.liftweb.lift-common_2.0.0.M2\n\nosgi> diag 7\ninitial@reference:file:../bundles/net.liftweb.lift-util_2.0.0.M2.jar/ [7]\n  Direct constraints which are unresolved:\n    Missing imported package net.liftweb.util_[2.0.0.M2,2.1.0).\n    Missing imported package org.apache.log4j_0.0.0.\n    Missing imported package org.apache.log4j.spi_0.0.0.\n    Missing imported package org.apache.log4j.xml_0.0.0.\n</code></pre>\n\nNow if one adds the log4j bridge from SLF4J ( [[url:http://www.slf4j.org/legacy.html|Bridging legacy APIs]] ) one still has errors:\n\n<pre><code>\nosgi> ss\n\nFramework is launched.\n\nid\tState       Bundle\n0\tACTIVE      org.eclipse.osgi_3.5.1.R35x_v20090827\n1\tACTIVE      slf4j.api_1.5.10\n2\tACTIVE      log4j.over.slf4j_1.5.10\n3\tACTIVE      ch.qos.logback.core_0.9.18\n4\tACTIVE      ch.qos.logback.classic_0.9.18\n5\tACTIVE      org.scala-lang-osgi.scala-library_2.7.7\n6\tACTIVE      com.springsource.org.apache.commons.codec_1.4.0\n7\tACTIVE      com.springsource.javax.mail_1.4.1\n8\tINSTALLED   net.liftweb.lift-util_2.0.0.M2\n9\tACTIVE      net.liftweb.lift-actor_2.0.0.M2\n10\tACTIVE      net.liftweb.lift-common_2.0.0.M2\n\nosgi> diag 8\ninitial@reference:file:../bundles/net.liftweb.lift-util_2.0.0.M2.jar/ [8]\n  Direct constraints which are unresolved:\n    Missing imported package net.liftweb.util_[2.0.0.M2,2.1.0).\n    Missing imported package org.apache.log4j.spi_0.0.0.\n    Missing imported package org.apache.log4j.xml_0.0.0.\n\nosgi> packages 2\norg.apache.log4j; version="0.0.0"<log4j.over.slf4j_1.5.10 [2]>\n\n</code></pre>\n\nSo one\'s stuck and cannot use LogBack or any other SLF4J backend.\n\n@@@@\n\nFor a quick test do the following:\n\nDownload/install Pax-Construct ( http://www.ops4j.org/projects/pax/construct/ )\n\nThen issue the following commands:\n\n\n<pre><code>\npax-create-project -g test -a test -v 1.0-SNAPSHOT\n\ncd test\n\nsed -i -e "s/--platform=felix/--platform=equinox/g" pom.xml\nrm pom.xml-e\n\npax-add-repository -i com.springsource.repository.bundles.release -u http://repository.springsource.com/maven/bundles/release\npax-add-repository -i scala-tools.org -u http://scala-tools.org/repo-releases\n\npax-import-bundle -g org.scala-lang-osgi -a scala-library -v 2.7.7\npax-import-bundle -g org.slf4j -a slf4j-api -v 1.5.10\npax-import-bundle -g ch.qos.logback -a logback-core -v 0.9.18\npax-import-bundle -g ch.qos.logback -a logback-classic -v 0.9.18\npax-import-bundle -g org.apache.commons -a com.springsource.org.apache.commons.codec -v 1.4.0\npax-import-bundle -g javax.mail -a com.springsource.javax.mail -v 1.4.1\npax-import-bundle -g net.liftweb -a lift-common -v 2.0-M2\npax-import-bundle -g net.liftweb -a lift-actor -v 2.0-M2\npax-import-bundle -g net.liftweb -a lift-util -v 2.0-M2\n</code></pre>\n\nStart OSGi framework:\n\n<pre><code>\npax-provision\n</code></pre>\n\nInstall log4j bridge:\n\n<pre><code>\npax-import-bundle -g org.slf4j -a log4j-over-slf4j -v 1.5.10\n</code></pre>\n\nStart OSGi framework again:\n\n<pre><code>\npax-provision\n</code></pre>\n\n'
789,'dpp','Enhance LiftActors to support finite length mailboxes\nLift Actors need more documentation, perhaps a !!? futures method not to mention finite length mailboxes, stuff like that.'
930,'',"Use @scala.annotation.implicitNotFound in CssSelectors etc.\nI noticed a tweet from Josh Seureth that there's an annotation (at least in 2.8.1) that lets you customize the error message when the compiler cannot find an implicit of a given type. It's possible this would make a better developer experience where implicits are used, such as in the css selectors (anywhere else?). Indrajit agreed and told me to file a ticket, so here it is. :)"
1071,'jonifreeman','lift-json flattens option types unexpectedly\nWhen parsing case classes with a List of Option[String], the option \nclasses get flatten out. \nFor case class Library(name:String, docs:List[Option[String]]) \nwhen I parse and extract it, i get: \n\n<pre><code>Library(test,List(1, 2))</code></pre>\nbut I expect: \n<pre><code>Library(test,List(Some(1), Some(2))) </code></pre>\n\nThe test unit is at [[url:https://gist.github.com/1077437|https://gist.github.com/1077437]] \nIs this the expected behavior or a bug in lift-json 2.4M1? \n\nJoni Freeman states: " extracted type must be the same type as given to  the extract function"\nhttp://groups.google.com/group/liftweb/browse_thread/thread/fb40cea9ebecbf49#'
643,'dchenbecker','Mapper, enhanced functionality: Inform user about conversion failure\nWhen a form is submitted and for example a date field contains letters, the conversion in the respective field fails silently.\nCurrently there is no built-in way to inform the user of that event. \nThe normal validation occurs after the (un)successful conversion.\n\nA "work-around" trait was suggested [[url:http://groups.google.com/group/liftweb/browse_thread/thread/1b8b50be264b5848#|here]] as well as the desire for an feature enhancement ticket.\n'
781,'dpp','Optionally Terminate ProtoUser sessions on IP change\nSupport for terminating ProtoUser sessions on IP address change'
780,'dpp','Screen/Wizard support for generic case classes\nUse functionality similar to Squeryl and Lift JSON to inspect case classes and build forms out of case classes\n'
1063,'dpp'," LiftRules.throwOnOutOfScopeVarAccess broken? \nCopied from http://groups.google.com/group/liftweb/browse_thread/thread/54e059516001a518\n\n>>  For example, trying to use\n>> a SessionVar before the session has been created shouldn't just refuse to be set.  It\n>> would be nice to have an exception reporting the problem.\n>\n> I think your points are valid to a certain degree, but for this\n> specific problem there's a solution in LiftRules:\n>\n> /**\n>   * Should an exception be thrown on out of scope Session and RequestVar\n>   * access.  By default, no.\n>   */\n>  @volatile var throwOnOutOfScopeVarAccess: Boolean = false\n>\n> /Jeppe\n\nThanks for the pointer, but I don't think it's working.  After messing around with it in my own project, I did the following:\n\n1. downloaded the examples from https://github.com/lift/lift_23_sbt.git\n\n2. Compiled and ran fine using sbt\n\n3. Added\n\n   // Find out if we access SessionVars or RequestVars inappropriately..\n   LiftRules.throwOnOutOfScopeVarAccess = true\n\n  as the last line in Boot.boot\n\n\n4. Ran again and it threw an exception:\n\n[info] == jetty-run ==\n[success] Successful.\n[info]\n[info] Total time: 2 s, completed Jun 30, 2011 11:48:02 AM\n> 11:48:04.848 [1193485506@qtp-1743791445-0] ERROR net.liftweb.http.LiftRules$$anon$1 - Exception being returned to browser when processing /: Message: java.lang.IllegalAccessException: Access to SessionVar outside a request or comet actor scope\n       net.liftweb.http.SessionVar.findFunc(Vars.scala:71)\n       net.liftweb.util.AnyVarTrait$$anonfun$is$1.apply(AnyVar.scala:137)\n       net.liftweb.http.SessionVar.doSync(Vars.scala:125)\n       net.liftweb.util.AnyVarTrait$class.is(AnyVar.scala:136)\n       net.liftweb.util.AnyVar.is(AnyVar.scala:89)\n       net.liftweb.util.AnyVarTrait$class.get(AnyVar.scala:161)\n       net.liftweb.util.AnyVar.get(AnyVar.scala:89)\n       net.liftweb.util.StackableMaker$class.find(Maker.scala:150)\n       net.liftweb.http.Factory$FactoryMaker.find(Factory.scala:37)\n       net.liftweb.http.Factory$FactoryMaker$$anonfun$make$1.apply(Factory.scala:87)\n       net.liftweb.http.Factory$FactoryMaker$$anonfun$make$1.apply(Factory.scala:87)\n       net.liftweb.common.EmptyBox.or(Box.scala:563)\n       net.liftweb.http.Factory$FactoryMaker.make(Factory.scala:87)\n       net.liftweb.http.Factory$FactoryMaker.vend(Factory.scala:82)\n       net.liftweb.http.S$class.statelessInit(S.scala:1186)\n       net.liftweb.http.LiftServlet.doService(LiftServlet.scala:244)\n       net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:122)\n       net.liftweb.http.LiftServlet$$anonfun$doIt$1$1.apply(LiftServlet.scala:121)\n\n(lots omitted)\n"
775,'dpp',"LiftSession.notices is a race condition waiting to happen\nSpelunking in the notices code, I see that there's a wacky var in LiftSession that is a temporary keeper of notices.  That's going to break massively if you've got more than 1 thread doing requests at once.\n"
349,'dpp','Make SHtml.[input] return Elem with AnswerHolder[T]\nIt would be useful for the SHtml methods that generate form elements to return an object which supports a method to return the data captured during the submission of that form element. This would allow a use pattern that avoids potential timing issues related to setting the values of vars via a closure, as is currently the common use pattern for the SHtml form elements.\n\nSee http://groups.google.com/group/liftweb/browse_thread/thread/5ae6ad3aae7ea453/3532e3555a869d02?#3532e3555a869d02 and http://groups.google.com/group/liftweb/msg/014d2d00745f268d for details.\n\nAs an alternative to naming this "AnswerHolder" it occurs to me that the common name for this sort of interface in mocking frameworks is Capture[T].\n\nKris'
1195,'dpp','add convenience method for performing a "named" ajax request\nDiscussion @ [[url:https://groups.google.com/d/topic/liftweb/eCv7FnJwt8A/discussion]]\nAnother @ [[url:https://groups.google.com/d/topic/liftweb/ZDSsDMj-KRk/discussion]]'
911,'','Add user actions logging\nThere is common requirement to log user actions, it would be very neat to add it to Mapper or Record.'
1194,'dpp','HtmlProperties setDoctype has no effect as htmlOutputHeader calls the original doctype\nas discussed on http://groups.google.com/group/liftweb/browse_thread/thread/6a0701b47e2200bc/80f0199bae1391c3#80f0199bae1391c3\n\nI cooked up a proposed solution,  see the trait "BaseType".  \n\nIt only needs specs2\n\nThis pattern should work with the current way HtmlProperties works.\n\n<pre><code>\n\nimport org.specs2.mutable._\n\ntrait OldBaseType {\n\n  def First: String\n\n  def setFirst(newFirst: () => String) = {\n    val old = this\n    new OldBaseType {\n      def First = newFirst()\n\n      def Second = old.Second\n\n      def Third = old.Third\n    }\n  }\n\n  def Second: String\n\n  def setSecond(newSecond: () => String) = {\n    val old = this\n    new OldBaseType {\n      def First = old.First\n\n      def Second = newSecond()\n\n      def Third = old.Third\n    }\n  }\n\n  def Third: String\n\n  def setThird(newThird: () => String) = {\n    val old = this\n    new OldBaseType {\n      def First = old.First\n\n      def Second = old.Second\n\n      def Third = newThird()\n    }\n  }\n}\n\ncase class OldTestType(param: String) extends OldBaseType {\n  def First =\n    "HELLO"\n\n  def Second =\n    this.First + " WORLD"\n\n  def Third =\n    this.First + " " + this.Second + "!!!"\n}\n\ntrait BaseType {\n\n  def First(me:BaseType): String\n  \n  def First: String = First(this)\n\n  def setFirst(newFirst: () => String) = {\n    val old = this\n    new BaseType {\n      def First(me:BaseType) = old.First(me)\n      \n      override def First = newFirst()\n\n      def Second(me:BaseType) = old.Second(me)\n\n      def Third(me:BaseType) = old.Third(me)\n    }\n  }\n\n  def Second(me:BaseType): String\n\n  def Second: String = Second(this)\n\n  def setSecond(newSecond: () => String) = {\n    val old = this\n    new BaseType {\n      def First(me:BaseType) = old.First(me)\n\n      def Second(me:BaseType) = old.Second(me)\n\n      override def Second = newSecond()\n\n      def Third(me:BaseType) =\n        old.Third(me)\n    }\n  }\n\n\n  def Third(me:BaseType): String\n\n  def Third: String = Third(this)\n\n  def setThird(newThird: () => String) = {\n    val old = this\n    new BaseType {\n      def First(me:BaseType) = old.First(me)\n\n      def Second(me:BaseType) = old.Second(me)\n\n      def Third(me:BaseType) = old.Third(me)\n\n      override def Third = newThird()\n    }\n  }\n}\n\ncase class TestType(param: String) extends BaseType {\n  def First(me:BaseType) =\n    "HELLO"\n\n  def Second(me:BaseType) =\n    me.First + " WORLD"\n  \n  def Third(me:BaseType) =\n    me.First + " " + me.Second + "!!!"\n}\n\nclass TestProposed extends Specification {\n\n  val t1 = TestType("")\n\n  val t4 = TestType("").setFirst(()=>"GOODBYE")\n\n  val t5 = t4.setSecond(()=>"YAY")\n\n  val t6 = TestType("").setSecond(()=>"YOO")\n\n\n  "test new" should {\n\n    // specs wierdness (ambiguious overload) when i try to do\n    // t1.Third must beEqualTo("HELLO HELLOW WORLD!!!")\n    val basicString:String = t1.Third\n\n    "nothing" in {\n      basicString must beEqualTo("HELLO HELLO WORLD!!!")\n    }\n\n    "simple test" in {\n      t4.Second must beEqualTo("GOODBYE WORLD")\n    }\n\n    "harder test" in {\n      t4.Third must beEqualTo("GOODBYE GOODBYE WORLD!!!")\n    }\n\n    "another test" in {\n      t5.Third must beEqualTo("HELLO YAY!!!")\n    }\n\n    "yet another test" in {\n      t6.Third must beEqualTo("HELLO YOO!!!")\n    }\n\n  }\n\n}\n\nclass TestOld extends Specification {\n\n  val t1 = OldTestType("")\n\n  val t4 = OldTestType("").setFirst(()=>"GOODBYE")\n\n  val t5 = t4.setSecond(()=>"YAY")\n\n  val t6 = OldTestType("").setSecond(()=>"YOO")\n\n\n  "test old" should {\n\n    // specs wierdness (ambiguious overload) when i try to do\n    // t1.Third must beEqualTo("HELLO HELLOW WORLD!!!")\n    val basicString:String = t1.Third\n\n    "nothing" in {\n      basicString must beEqualTo("HELLO HELLO WORLD!!!")\n    }\n\n    "simple test" in {\n      t4.Second must beEqualTo("GOODBYE WORLD")\n    }\n\n    "harder test" in {\n      t4.Third must beEqualTo("GOODBYE GOODBYE WORLD!!!")\n    }\n\n    "another test" in {\n      t5.Third must beEqualTo("HELLO YAY!!!")\n    }\n\n    "yet another test" in {\n      t6.Third must beEqualTo("HELLO YOO!!!")\n    }\n\n  }\n\n}\n\n</code></pre>\n'
1189,'dpp','MappedText - check that value is dirty in real_i_set_! method\nThe real_i_set_! method of MappedText does not check that the value is dirty before assigning it to data.\n[[url:https://groups.google.com/d/topic/liftweb/i2v9eqOQ6eg/discussion|Mailing List Thread]]'
1187,'dpp','general before/after JavaScript mechanism\n"Lunching with JavaScript returns:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/b3469ab5eb55c7f5/32a6b3f8f482a8b7\n\nI think we need a general before/after JavaScript mechanism... and I have an idea of how it can be done with only 2 API calls:\n\nSHtml.beforeAjax(jsCmd) {\n  SHtml.afterAjax(jsCmd) {\n  code that creates an AjaxCall\n}\n}\n\nThose two calls will wrap the pre and post execution of the Ajax call and will work across all the Ajax call mechanisms.  Further, they answer the need for an "in call" spinny control located near the item that\'s doing the Ajax call rather than the global spinny thing for Ajax calls."\n\nSee related thread\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c0fa111d87a8beac\n'
1186,'dpp','acceptsStarStar broken for weighted accept entries\nI have a simple feed that uses serveJx to select the return type (json\nor xml) based on the request Accept header and the extension (.json\nor .xml). This generally works fine except in one case I\'ve found. If\nthe extension is .xml, I get back json. I have traced this back to a\nbug in Req.acceptsStarStar in version 2.4-M4, which looks like this:\n\n lazy val acceptsStarStar : Boolean = accepts.map(_ == "*/*") openOr\nfalse\n\nIn my case accepts = Full(text/html,application/xhtml+xml,application/\nxml;q=0.9,*/*;q=0.8). Note that the last entry is weighted. Thus, the\nabove comparison to "*/*" fails and acceptsStarStar returns false,\nwhen in fact it should be true because "*/*" is present, just with a\nweight, which is a valid format (see weightedAccepts in Req).\n\nThe full call stack is:\n\nserveJx\njxSel\njsonResponse_?\nacceptsStarStar\n\nWeighted accept is  List(ContentType(text,html,0,Empty,List()),\nContentType(application,xhtml+xml,1,Empty,List()),\nContentType(application,xml,2,Full(0.9),List()), ContentType(*,*,\n3,Full(0.8),List()))\n\n\n\nThanks. '
902,'davewhittaker',"ProtoUser for Squeryl-record\nIt's not possible to use Record's ProtoUser with squeryl-record because of 'id' field conflict between ProtoUser's id and KeyedRecord's id. If one doesn't mixin KeyedRecord, it's not possible to use such user class in relationships."
1184,'dpp','Or-ing two Failures should somehow combine them\nTwo failures that are or-ed should return a failure that somehow combines both causes.\n\nExample:\n\n<pre><code>\n$ def getFromProperties = Failure("Property not set")\n$ def getFromFilesystem = Failure("File doesn\'t exist")\n$ def getFromDb = Failure("DB not configured")\n$ def getSomething : Box[Something] = getFromProperties or getFromFilesystem or getFromDb\n</code></pre>\nCurrently:\n<pre><code>\n$ getSomething\nFailure("DB not configured")\n</code></pre>\nDesired behaviour:\nSomething that can give all 3 messages/exceptions if all of them failed because current behaviour swallows exceptions and return only the last one, that might be not the one that the user is interested in.\nOr-ing Failure and Empty can return the one Failure or maybe some combined Failure that has both?\nJust chaining might be not enough, because it\'s not clear how or() result can chain two Failures that have chains themselves. Maybe it would be useful to have MultiFailure class extending Failure just as there is ParamFailure?  Or maybe Failure.chain should be List[Failure] not Box[Failure]?\n'
476,'','Add Constraints To Mapper\nfrom the mailing-list\n"You could have a a Constraint trait, which has some method to get the\nrelevant SQL, as well as an optional function to define the constraint\nname.\nThere would be classes that implement that-Eg: UniqueConstraint,\nCheckConstraint, (to be able to do something like CHECK (column > 0)),\nNotNullConstraint, PrimaryKeyConstraint, ForeignKeyConstraint (the\nlast two are already implemented in Mapper in a different Mapper)\n\nThen each Mapped field would have a List[Constraint] of constraints.\nIn the Schemifier, ensureConstraints would then iterate over each\nfield (as it does now) and then construct the ALTER TABLE syntax.\nThe user would of course be able to define their own Application/\nDatabase-specific constraints easily as well. "'
1042,'dpp','Unify LiftScreen field declaration API with type parameters\nSome of field declaration methods have type parameters (like *select[T](...)*, *multiselect[T](...)* ) and others don′t (like *radio(...)* ).\nIt would be great all methods have type parameters for consistency.\nAlso *radio(...)* is documented with _“@param f a PairStringPromoter (a wrapper around a function) that converts T => display String”_ which is not used in the method declaration.\n\nDiscussion: https://groups.google.com/d/topic/liftweb/VbFjuuRPuv0/discussion'
758,'','ByList with IN instead of concatenated ORs\nCurrent discussion:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/c6e03492e59c0b0b\n\nOld discussions:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/1cf5c0e153e98b47/5b60451a961ad78d\nhttp://groups.google.com/group/liftweb/browse_thread/thread/9d68ee4182f82ef/9d3d5ffd04e3a9b3'
1178,'dpp','Add per-thread allocation stats to Lift\nSee http://blog.jruby.org/2011/12/monitoring-memory_allocation-per-thread/'
1035,'',"Custom rendering of menu-items with custom event-handlers per menu-item\nRef this thread: http://groups.google.com/group/liftweb/browse_thread/thread/91e663dd5ccd92f6/d6ef9177210b8e1d\n\nIt would be nice to be able to have complete control over how menu-items are rendered. Today's Menu.builder is less optimal as it's impossible to generate customized events on the generated anchor-tag for each menu-item. Sometimes one wants to have some other markup (div, span etc.) for special menu-items so it would be nice to have that option too."
1175,'rusho',"Use explicit return types in RecordTypeMode implicits\nImplicits in RecordTypeMode don't have explicit return types. We should be explicit about return types in implicits, otherwise less than optimal things happen in the compiler"
1174,'rusho','Left join problem on none numeric data type for SquerylRecord\nWhen doing left join on none numeric data type there will be type miss match error\n\nclass Fund private() extends Record[Fund] with KeyedRecord[String] { \n    ...\n    val id = new StringField(this, 8) \n    val lcc = new OptionalStringField(this, 8) \n  } \n  \n  class Lc private() extends Record[Lc] with KeyedRecord[String] { \n    ...\n    val lcc = new StringField(this, 8) \n    val name = new StringField(this, 8) \n  } \n\n  val d = join(fund, lc.leftOuter)((f, l) => \n    where(f.id === "xxx") \n    select(f, l) \n    on(f.lcc === l.map(_.lcc))) \n\nError mismatch on last line  "on(f.lcc === l.map(_.lcc))"\nDue to f.lcc is converted to some sort of  StringExpression[String] instead of StringExpression[Option[String]]\n\ncurrent work arrount is "on(Some(f.lcc) === l.map(_.lcc))"\n\nmore discussion in\n[[url:https://groups.google.com/group/liftweb/browse_thread/thread/eb88859a2ca51f9b/e9b97b357c06be1c|ExampleName]]'
1172,'',"User with MetaMegaProtoUser and CRUDify do not compile\nIn Lift version 2.9.0 when using MetaMegaProtoUser and Crudify  together in an user object it doesn't compile.\r\n\r\nThere are conflicts with same def/val names used by both Traits.\r\n\r\n*User definition:*\r\n```\r\n...\r\nline 136:  object User extends User with MetaMegaProtoUser[User] with CRUDify[Long, User] {_ \r\n...\r\n```\r\n\r\n*Error:*\r\n```\r\n.../model/User.scala:136: overriding type FieldPointerType in trait MetaMegaProtoUser, which equals net.liftweb.mapper.MappedField[_, ingo.model.User.TheUserType];\r\n[error]  type FieldPointerType in trait CRUDify, which equals net.liftweb.mapper.MappedField[_, ingo.model.User] needs `override' modifier;\r\n[error]  other members with override errors are: computeFieldFromPointer, buildFieldBridge, editPath, menus\r\n[error] object User extends User with MetaMegaProtoUser[User] with CRUDify[Long, User]{\r\n[error]        ^\r\n[error] one error found\r\n```"
887,'',"drop setFromAny from record API\nIt's a pretty bad/annoying API that was developed a looooong time ago and has outlived it's usefulness.  Will require a deprecation cycle.\n\nPossibly should be dropped from Mapper API as well (though I personally care less about that)."
745,'Shadowfiend','Add ajax file upload\nAdd Ajax file upload capabilities to SHtml, preferably using http://valums.com/ajax-upload/  as a front-end "working use case".\n\nSHtml calling interface could be:\ndef ajaxFileUpload(func: (FileParamHolder) => Unit, jsFunc : Call, func : (String) => JsCmd, attrs : (String, String)*)\n\nThis would be consistent with other ajax interfaces and with file upload (non-Ajax). '
1167,'','enum.values no longer returns values in the order they were defined\nThe MongoDB EnumField display on LiftScreen is not sorting correctly.\n\nNaftoli mentioned in the email that the enum.values no longer returns values in the order they were defined.\n\nThe following is the solution quote from Naftoli in the email. \n"we\'ll add a step to sort the values from the enum by the Int value so that they have a better chance of being what you want."\n\nThe tracker is related to the discussion topic : Questions on the MongoDB and LiftScreen integration'
1165,'Shadowfiend','Improved error message for InvocationTarget/NullPointerExceptions related to terminated requests\nInvestigations with different servlet containers under load indicate that suspended continuations may be awoken with terminated requests. This yields either null server names/ports (typically in Jetty 6) or InvocationTargetExceptions (in Jetty 7/8 and Tomcat) with underlying IllegalStateExceptions.\n\nSample stack trace from Tomcat:\n\njava.lang.reflect.InvocationTargetException: null\n        at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source) ~[na:na]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) ~[na:1.6.0_26]\n        at java.lang.reflect.Method.invoke(Method.java:597) ~[na:1.6.0_26]\n        at net.liftweb.http.provider.servlet.containers.Servlet30AsyncProvider.resume(Servlet30AsyncProvider.scala:102) ~[lift-webkit_2.8.1-2.4-M4.jar:2.4-M4]\n[…]\nCaused by: java.lang.IllegalStateException: The request associated with the AsyncContext has already completed processing.\n        at org.apache.catalina.core.AsyncContextImpl.check(AsyncContextImpl.java:438) ~[catalina.jar:7.0.23]\n        at org.apache.catalina.core.AsyncContextImpl.getResponse(AsyncContextImpl.java:196) ~[catalina.jar:7.0.23]\n        ... 22 common frames omitted\n\nFrom Jetty 7/8:\n\njava.lang.reflect.InvocationTargetException: null\n        at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source) ~[na:na]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) ~[na:1.6.0_26]\n        at java.lang.reflect.Method.invoke(Method.java:597) ~[na:1.6.0_26]\n        at net.liftweb.http.provider.servlet.containers.Servlet30AsyncProvider.resume(Servlet30AsyncProvider.scala:106) ~[lift-webkit_2.8.1-2.4-M4.jar:2.4-M4]\n        at net.liftweb.http.provider.servlet.HTTPRequestServlet.resume(HTTPRequestServlet.scala:163) ~[lift-webkit_2.8.1-2.4-M4.jar:2.4-M4]\n[…]\nCaused by: java.lang.IllegalStateException: IDLE,initial\n        at org.eclipse.jetty.server.AsyncContinuation.complete(AsyncContinuation.java:534) ~[na:na]\n        ... 22 common frames omitted\n\nFrom Jetty 6:\n\njava.lang.NullPointerException: null\n        at org.eclipse.jetty.server.Request.getServerName(Request.java:1008) ~[na:na]\n        at org.eclipse.jetty.server.Request.getServerPort(Request.java:1071) ~[na:na]\n        at net.liftweb.http.provider.servlet.HTTPRequestServlet.serverPort(HTTPRequestServlet.scala:92) ~[lift-webkit_2.9.0-1-2.4-M3.jar:2.4-M3]\n        at net.liftweb.http.Req$$anonfun$hostAndPath$1.apply(Req.scala:968) ~[lift-webkit_2.9.0-1-2.4-M3.jar:2.4-M3]\n        at net.liftweb.http.Req$$anonfun$hostAndPath$1.apply(Req.scala:968) ~[lift-webkit_2.9.0-1-2.4-M3.jar:2.4-M3]\n        at net.liftweb.common.Full.map(Box.scala:491) ~[lift-common_2.9.0-1-2.4-M3.jar:2.4-M3]\n        at net.liftweb.http.Req.hostAndPath(Req.scala:968) ~[lift-webkit_2.9.0-1-2.4-M3.jar:2.4-M3]\n\nAgain, the underlying cause for this seems to be continuations that are awoken with requests that were terminated before the continuation was restored.'
1023,'',"MappedXml field\n\nPer https://groups.google.com/group/liftweb/browse_thread/thread/83955de9798f4d0c?pli=1\n\nIt would be useful to have the ability to map an xmltype column from oracle (also supported by postgres).\n\nAdditionally, the ability to search by xpath taking advantage of the xmlexists('xpath' passing <column>) syntax would be even more useful.\n\nThis is a broad tutorial of using the feature and most importantly the xmlindex that comes with 11gR2 (which indexes all xpaths in all documents). \nhttp://www.oracle.com/technetwork/testcontent/xmldb-086889.html\nhttp://download.oracle.com/docs/cd/B10501_01/appdev.920/a96620/xdb04cre.htm\n\npostgres - http://developer.postgresql.org/pgdocs/postgres/datatype-xml.html\nderby - http://db.apache.org/derby/docs/10.2/ref/rrefsqljtypexml.html\n\nI haven't personally used derby or postgres, but the concept seems similar.\n"
1022,'','Use jQuery selectors in JqJsCmds \nin JqJsCmd \n def toJsCmd = "jQuery(\'#"+id+"\')"\n\nhttp://groups.google.com/group/liftweb/browse_thread/thread/16f3e3bddec5cc70/e32c4c02b927b43f?lnk=gst&q=jquery+selector+ticket#e32c4c02b927b43f\n\n'
1163,'Shadowfiend','Improve reacting to comet-actor timeouts (#1162)\nImprove #1162 so we can have an improved and structured fix, ref. https://groups.google.com/d/msg/liftweb/AzemLRepDco/c0dbeNvlcjkJ'
1020,'',"create MappedPasswordHash field to replace MappedPassword\nhttp://groups.google.com/group/liftweb/browse_thread/thread/cbe05606847e922/\n\nMappedPassword fails silently when you set it programmatically in a way that is inconsistent with validation. It's also more complicated than it needs to be.\n\nThe discussion above lists a couple of other desiderata."
1160,'Shadowfiend',"RequestVar cleanup not being called when request ends\nHi David,\n\nAm reporting bug [[url:https://groups.google.com/forum/#!searchin/liftweb/noel/liftweb/1_7JAJwAfto/Ktjn_W_kDtAJ|as requested]].\n\nMy problem is that RequestVar cleanupFunc doesn't run at the end of each http request, which is resulting in a memory leak for my usage:\n\nI'm using a RequestVar to provide a service which needs to be disposed of correctly when it is no longer needed, ie it is not advised to leave it to the garbage collector to tidy up.  Therefore I registered the RequestVar to clean up after use via the registerCleanupFunc .\nHowever, the behaviour I'm seeing is that for the first use only (1st http request) the service is shutdown correctly.  Any usages after this don't seem to be clean up properly, ie the lambda I passed to registerCleanupFunc isnt being called again.\n\nHere is my code:\n\nobject HttpDispatchConnection extends RequestVar[Http](new Http()) {\n  registerCleanupFunc(ignore => is.shutdown())\n}\n"
1159,'Shadowfiend','Localization of attribute values\nAccording to this [[url:https://groups.google.com/d/topic/liftweb/d_zquJE6wGo/discussion|thread]]'
1015,'Shadowfiend','Enter in a field does not always submit a LiftScreen form\nThread here http://groups.google.com/group/liftweb/browse_thread/thread/74412a2fca848787'
1154,'dpp','Browser back button clears fields in Wizard\nThe browser back button clears all fields in a multi-page wizard. Tested in Firefox 3.6 and Chrome.\n\nTo reproduce:\n1. Go to [[url:http://demo.liftweb.net/wiz2|http://demo.liftweb.net/wiz2]]\n2. Enter "hello" in the text field and click next\n3. Click the browser back button\nActual result: the text field is empty\nExpected result: the text field is populated with "hello"\n\nSee mailing list thread started Nov 22 2011 titled "Back button clears form fields in wizard and plain forms", http://groups.google.com/group/liftweb/browse_thread/thread/5dcd7fc84c144ebe/782cc7d4e242ffab?show_docid=782cc7d4e242ffab'
446,'dlouwers','Extract the javascript framework specifics into their own modules\nExtract the javascript framework specifics (jQuery, YUI, Ext-Core) out of the Lift-Webkit project into their own modules.\n\nMarius suggested the following structure:\n<pre><code>/lift-base\n  /lift-js\n    /lift-jquery\n    /lift-yui\n    /lift-ext\n</code></pre>\n\nBoth the javascript resources and the JsArtifacts implementations will be moved to their own module. This includes the jQuery specific JsJqCmds.scala and JqSHtml.scala. Package names will be preserved so that nothing breaks. '
868,'dchenbecker','Add caching to Paginator\nOriginal email:\n\n\n<pre><code>\nWhile I was testing for #616 I ran into some really awful performance with pagination. The root cause is that H2 is taking a long time on queries, but the fact that the "count" and "page" members in Paginator are defs means that I was hitting the slow query multiple times for each render (8 times for "count" in my read of the code). I was wondering if we should go optionally cache the result of "page" in a RequestVar and base "count" on that to avoid hitting the database so many times. Yes, DBs have query caches and other things that should mitigate this, but still that\'s at least 8 round trips to the database for every page view.\n</code></pre>\n\nPer DPP this should use a TransientRequestVar\n'
1008,'dpp',"Adding LocParams dynamically to Groups\nIt'll be great if you can allow for functions that add LocParams to a all items of a group.  In ddp's words:\n\n> I'll noodle on some partial functions that might allow adding \n> additional LocParams to Locs that have particular matching LocParams (like \n> Group or something else). \n\nRelavent thread: http://groups.google.com/group/liftweb/browse_thread/thread/770ad4b5c90fe1fc/5fe726fbee152a22"
1146,'Shadowfiend','LiftSession.sendCometActorMessage to send to all actors by type regardless of name\nCurrently LiftSession.sendCometActorMessage lets you send to a single actor of a given type, either one with no name or one with a specified name. It would be nice to have a version that sends to *all* actors by type. This is slightly different from LiftSession.findComet("Type").foreach(_ ! <message>), because sendCometActorMessage also sends messages to any comet actors _created during this request cycle_. It is this latter functionality that we are looking for, combined with sending existing actors of the type a message.\n\nSee https://groups.google.com/d/topic/liftweb/TfbhOCVdq34/discussion for more.'
1145,'Shadowfiend','NullPointerException when trying to run LiftSession.destroySession with mock req instance in comet\nLift throws a NullPointerException when attempting to run destroySession from a mock req instance with a LiftSession stub, as when trying to run:\n\nfor (liftSession <- S.session) {\n  liftSession.destroySession\n}\n\nSee https://groups.google.com/d/msg/liftweb/-/xOauoxgBzmUJ for discussion.'
1144,'','Add a hook around LiftServlet#doService() to enable custom service time measurement\nDiscussion thread including ticket request: https://groups.google.com/d/topic/liftweb/zw2SJv7Ms2s/discussion\n\nIt would be nice if user code could hook in at the same place that "logTime" does in the code below (from LiftServlet#doService()):\n\n\n<pre><code>  def service(req: Req, resp: HTTPResponse): Boolean = {\n    try {\n      def doIt: Boolean = {\n        if (LiftRules.logServiceRequestTiming) {\n          logTime {\n            val ret = doService(req, resp)\n            val msg = "Service request (" + req.request.method + ") " + req.request.uri + " returned " + resp.getStatus + ","\n            (msg, ret)\n          }\n        } else {\n          doService(req, resp)\n        }\n      }\n      ...\n</code></pre>\n\n\nThanks!\n'
1139,'dpp','Cannot clear out multiselect\nAs long as the user selects something in the multiselect, it works fine.  But if the user de-selects all of the items in a multiselect, instead of clearing the selection, the selection remains unchanged. \n\nI have a sample app demonstrating the problem in the empty-multiselect-bug branch on git://github.com/leedm777/lift-sample-app.git. \n\n  git clone git://github.com/leedm777/lift-sample-app.git -b empty-multiselect-bug\n\nSee related ML threads:\nhttp://groups.google.com/group/liftweb/browse_thread/thread/9f8e460b8d57a741/eaa06d46106a134a\nhttp://groups.google.com/group/liftweb/browse_thread/thread/e8c9fec7c3512fc7/91bba42ebcaa2941\nhttp://groups.google.com/group/liftweb/browse_thread/thread/46e70d3130e52c18/8365d375163af9bb'
855,'Shadowfiend','Non-scoped localized strings\nAs requested in this e-mail:\n\nhttp://www.mail-archive.com/esme-dev@incubator.apache.org/msg02243.html'
996,'','Block Double Submit in Ajax Screen/Wizard\nThere should be a way to block duplicate submits when using an ajax LiftScreen. Possibly disable the "next" button once submitted and/or wrap finish in callOnce.\n\nhttps://groups.google.com/d/topic/liftweb/lnLvJNTgISE/discussion'
1135,'dpp','Allow multiple ajax-loader images per page\nCurrently it is only possible to display one element (mostly called "ajax-loader") that is shown during an ajax call.\n\nThere are use cases where it\'s desirable to have multiple elements per page and choose the "right" ajax-loader per ajax call.\n\nFor instance if I have a page with two subwindows, each of the pages showing content that can be separately reloaded from the server I\'d like to see the ajax-loader images next to the "Load More" button I just clicked.'
1134,'davewhittaker',"squeryl-record doesn't honor StringFields as objects\nsqueryl-record doesn't work with StringFields created as so:\n\nobject f extends StringField(this, 36)\n\ninstead requiring:\n\nval f = new StringField(this, 36)"
